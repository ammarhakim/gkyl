load("/Users/ahakim/research/gkyl-project/gkyl/cas-scripts/modal-basis.mac")$
load("/Users/ahakim/research/gkyl-project/gkyl/cas-scripts/out-scripts.mac")$
fpprec : 24$

var : [z1, z2, z3]$

fh : openw("~/max-out/ModalMaxOrderBasisSurfToVol3d.cpp");

for i : 1 thru 4 do (
  basis : gsOrthoNorm(var, makeMaxOrderBasis(var, i)),
  printf(fh, "/* Polyorder ~d */ ~%", i),
  for d : 1 thru length(var) do (
    varSurf : delete(var[d], var),
    basisSurf : gsOrthoNorm(varSurf, makeMaxOrderBasis(varSurf, i)),
    in : transpose( makelist(f[i], i, 0, length(basisSurf)-1) ),
    cmm : calcCrossMassMatrix(varSurf, subst(var[d]=1, basis), varSurf, basisSurf, 1),
    printf(fh, "void ModalMax3DP~d_SurfToVol~d_Left(int meqn, int mbasis, int msurf, double sfact, const double *surfIn, double *volOut) ~%{ ~%", i, d),
    printf(fh, "  for (unsigned m=0; m<meqn; ++m) ~%"),
    printf(fh, "  {~%"),
    printf(fh, "  const double *f = &surfIn[msurf*m]; ~%"),
    printf(fh, "  double *out = &volOut[mbasis*m]; ~%"),
    writeCIncrExprs(colVecToList(sfact*cmm . in)),
    printf(fh, "  }~%"),
    printf(fh, "}~%"),
    cmm : calcCrossMassMatrix(varSurf, subst(var[d]=-1, basis), varSurf, basisSurf, 1),
    printf(fh, "void ModalMax3DP~d_SurfToVol~d_Right(int meqn, int mbasis, int msurf, double sfact, const double *surfIn, double *volOut) ~%{ ~%", i, d),
    printf(fh, "  for (unsigned m=0; m<meqn; ++m) ~%"),
    printf(fh, "  {~%"),
    printf(fh, "  const double *f = &surfIn[msurf*m]; ~%"),
    printf(fh, "  double *out = &volOut[mbasis*m]; ~%"),
    writeCIncrExprs(colVecToList(sfact*cmm . in)),
    printf(fh, "  }~%"),
    printf(fh, "}~%") 
  )
)$

close(fh)$
