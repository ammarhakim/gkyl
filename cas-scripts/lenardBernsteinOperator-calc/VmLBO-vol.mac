load("lenardBernsteinOperator-calc/VmLBOconstNu-vol")$
load("lenardBernsteinOperator-calc/VmLBOvarNu-vol")$
load(stringproc)$
/* This script calls the functions which calculate the
   updates from the volume term contributions. */

/* ...... USER INPUTS........ */

/* Serendipity basis. */
maxPolyOrder_Ser : 3$
minCdim_Ser : 1$
minVdim_Ser : 1$    /* see beginning of v loop below though. */
maxCdim_Ser : 2$
maxVdim_Ser : 2$

/* Maximal order basis. */
maxPolyOrder_Max : 3$
minCdim_Max : 1$
minVdim_Max : 1$    /* see begining of v loop below though. */
maxCdim_Max : 2$
maxVdim_Max : 2$

/* Tensor product basis. */
maxPolyOrder_Tensor : 3$
minCdim_Tensor : 1$
minVdim_Tensor : 1$    /* see begining of v loop below though. */
maxCdim_Tensor : 2$
maxVdim_Tensor : 2$

/* ...... END OF USER INPUTS........ */

bName        : ["Ser","Max","Tensor"]$
maxPolyOrder : [maxPolyOrder_Ser, maxPolyOrder_Max, maxPolyOrder_Tensor]$
minCdim      : [minCdim_Ser, minCdim_Max, minCdim_Tensor]$
minVdim      : [minVdim_Ser, minVdim_Max, minVdim_Tensor]$
maxCdim      : [maxCdim_Ser, maxCdim_Max, maxCdim_Tensor]$
maxVdim      : [maxVdim_Ser, maxVdim_Max, maxVdim_Tensor]$

for bInd : 1 thru length(bName) do (
  for c : minCdim[bInd] thru maxCdim[bInd] do (
    for v : c thru maxVdim[bInd] do (
      disp(printf(false,sconcat("Creating volume VmLBOconstNu",bName[bInd]," ~ax~av"),c,v)),
      fname : sconcat("~/max-out/VmLBOconstNu", bName[bInd], c, "x", v, "v", ".cpp"),
      fh : openw(fname),
      funcName : sconcat("VmLBOconstNuVol", c, "x", v, "v", bName[bInd]),
      calcVmLBOconstNuVolUpdater(fh, funcName, c, v, bName[bInd], maxPolyOrder[bInd]),
      close(fh) 

/*
      disp(printf(false,sconcat("Creating volume VmLBOvarNu",bName[bInd]," ~ax~av"),c,v)),
      fname    : sconcat("~/max-out/VmLBOvarNu", bName[bInd], c, "x", v, "v", ".cpp"),
      fh       : openw(fname),
      funcName : sconcat("VmLBOvarNuVol", c, "x", v, "v", bName[bInd]),
      calcVmLBOvarNuVolUpdater(fh, funcName, c, v, bName[bInd], maxPolyOrder[bInd]),
      close(fh)
*/
    )
  )
);


