load("lenardBernsteinOperator-calc/VmLBOconstNu-surf")$
load(stringproc)$

polyOrderMax : 3$

for c : 1 thru 2 do (
  for v : c thru 3 do (
   disp(printf(false,"Creating surface VmLBOconstNu ~ax~av",c,v)),
   fname : sconcat("~/max-out/VmLBOconstNuSurfSer", c, "x", v, "v", ".cpp"),
   fh : openw(fname),
   funcName : sconcat("VmLBOconstNuSurf", c, "x", v, "v", "Ser"),
   calcVmLBOconstNuSurfUpdater(fh, funcName, c, v, "Ser", polyOrderMax),
   close(fh)
  )
);

/* boundarySurf kernels compute surface contribution that we
   do not want to zero-out at the boundary of velocity domain. */

for c : 1 thru 2 do (
  for v : c thru 3 do (
   disp(printf(false,"Creating boundary surface VmLBOconstNu ~ax~av",c,v)),
   fname : sconcat("~/max-out/VmLBOconstNuBoundarySurfSer", c, "x", v, "v", ".cpp"),
   fh : openw(fname),
   funcName : sconcat("VmLBOconstNuBoundarySurf", c, "x", v, "v", "Ser"),
   calcVmLBOconstNuBoundarySurfUpdater(fh, funcName, c, v, "Ser", polyOrderMax),
   close(fh)
  )
);

