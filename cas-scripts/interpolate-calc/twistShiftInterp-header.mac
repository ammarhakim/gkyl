/* Create header file for CartFieldInterpolate updater. */

fh : openw("~/max-out/TwistShiftInterpModDecl.h")$

polyOrderMax : 2$

bName        : ["Ser"]$


VarsC : [X, Y, Z]$
pVars : [X, Y, Z, VX, VY, VZ]$

printf(fh, "#ifndef TWIST_SHIFT_INTERP_MOD_DECL_H ~%")$
printf(fh, "#define TWIST_SHIFT_INTERP_MOD_DECL_H ~%")$
printf(fh, " ~%")$

printf(fh, "#include <cmath>~%")$
printf(fh, "#include <algorithm>~%")$
printf(fh, " ~%")$

printf(fh, "extern \"C\" { ~%")$
printf(fh, " ~%")$

for bInd : 1 thru length(bName) do (

  for polyOrder : 1 thru polyOrderMax do (
    for ci : 2 thru 2 do (

      /* Twist-shift BC interpolation kernels. */
      printf(fh, "void TwistShiftInterp_xLimDG~ax~a_P~a(const double *xLimLo, const double *xLimUp, const double yLimLo, const double yLimUp, const double dyLim, const double ycLim, const double dyDo, const double yOff, const double *ySh, const double *fldSrc, double *fldDest);~%", ci, bName[bInd], polyOrder),
      printf(fh, "void TwistShiftInterp_yLimDG~ax~a_P~a(const double xLimLo, const double xLimUp, const double *yLimLo, const double *yLimUp, const double dxLim, const double xcLim, const double dyDo, const double yOff, const double *ySh, const double *fldSrc, double *fldDest);~%", ci, bName[bInd], polyOrder),
      printf(fh, "void TwistShiftInterp_mTwoCorners~ax~a_P~a(const double *xLimLoL, const double *xLimUpL, const double yLimLoL, const double yLimUpL, const double dyLimL, const double ycLimL, const double *xLimLoR, const double *xLimUpR, const double yLimLoR, const double yLimUpR, const double dyLimR, const double ycLimR, const double dyDo, const double yOff, const double *ySh, const double *fldSrc, double *fldDest);~%", ci, bName[bInd], polyOrder),
      printf(fh, "~%")

    ),
    printf(fh, "~%")

  )

);

printf(fh, "} ~%")$

printf(fh, "#endif ~%")$

close(fh)$
