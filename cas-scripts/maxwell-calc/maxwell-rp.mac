/** Perfectly-Hyperbolic Maxwell equations. Eigensystem and other stuff */

assume(c>0);
assume(chi>0);
assume(gamma>0);

VL : [ExL, EyL, EzL, BxL, ByL, BzL, phiL, psiL]$
VR : [ExR, EyR, EzR, BxR, ByR, BzR, phiR, psiR]$

/* Compute upwinded flux */
calcNumFlux(V, flx) := block([Aij, A, vals, vects, Rev, Lev, Evs, vlSub, vrSub],
  A : genmatrix(lambda ([i,j], diff(flx[i],V[j])), 8, 8),

  [vals, vects] : eigenvectors(A),
  Rev : (Rev : matrix([]), for i from 1 thru length(vals[1])
          do (for j from 1 thru vals[2][i]
	    do (Rev : addcol(Rev, transpose(matrix(vects[i][j]))))), Rev),
  Lev : invert (Rev),
  Evs : (Evs : [], for i from 1 thru length(vals[1])
          do (for j from 1 thru vals[2][i]
            do (Evs : append(Evs, [vals[1][i]]))), Evs),

  vlSub : makelist(V[i]=VL[i], i, 1, 8),
  vrSub : makelist(V[i]=VR[i], i, 1, 8),

   W : Lev . V,
   Wup : transpose(makelist(if Evs[i] > 0 then subst(vlSub, W[i][1]) else subst(vrSub, W[i][1]), i, 1, 8)),
   Vup : fullratsimp(Rev . Wup),
   return (A.Vup)
)$