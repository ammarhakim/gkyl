fh : openw("~/max-out/PrimMomentsModDecl.h")$

polyOrderMax : 4$

printf(fh, "#ifndef PRIM_MOMENTS_MOD_DECL_H ~%")$
printf(fh, "#define PRIM_MOMENTS_MOD_DECL_H ~%")$

printf(fh, " ~%")$
printf(fh, "// Eigen include statements. ~%")$
printf(fh, "#include <Eigen/Dense> ~%")$
printf(fh, " ~%")$

printf(fh, "extern \"C\" { ~%")$

for ci : 1 thru 3 do (
  for vi : ci thru 3 do (
    for pi : 1 thru polyOrderMax do (

      /* Primitive moments for self-collision terms. */
      printf(fh, "void SelfPrimMoments~ax~avSer_P~a(const double *m0, const double *m1, const double *m2, const double *fvmin, const double *fvmax, const double *vmin, const double *vmax, double *u, double *vtSq); ~%", ci, vi, pi),
      printf(fh, "~%"), 

      /* Primitive moments for cross-collision Vlasov LBO terms. */
      printf(fh, "void LBOCrossPrimMoments_Vmei_~ax~avSer_P~a(const double mRat, const double *ne, const double *ue, const double *vtSqe, const double *ni, const double *ui, const double *vtSqi, double *uie, double *vtSqie); ~%", ci, vi, pi),
      printf(fh, "void LBOCrossPrimMoments_Vmie_~ax~avSer_P~a(const double mRat, const double *ne, const double *ue, const double *vtSqe, const double *ni, const double *ui, const double *vtSqi, double *uie, double *vtSqie); ~%", ci, vi, pi),
      printf(fh, "~%") 

    )
  ),
  printf(fh, "~%")
)$

printf(fh, "} ~%")$

printf(fh, "#endif ~%")$

close(fh)$
