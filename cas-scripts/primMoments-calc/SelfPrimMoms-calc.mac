load("primMoments-calc/SelfPrimMoms")$
load(stringproc)$

/* ...... USER INPUTS........ */

/* Serendipity basis. */
maxPolyOrder_Ser : 2$
minCdim_Ser : 1$
minVdim_Ser : 1$    /* but see v loop below. */
maxCdim_Ser : 3$
maxVdim_Ser : 3$

/* Maximal order basis. */
maxPolyOrder_Max : 2$
minCdim_Max : 1$
minVdim_Max : 1$    /* but see v loop below. */
maxCdim_Max : 0$
maxVdim_Max : 0$

/* Tensor order basis. */
maxPolyOrder_Tensor : 2$
minCdim_Tensor : 1$
minVdim_Tensor : 1$
maxCdim_Tensor : 0$
maxVdim_Tensor : 0$

gkVdims      : [[1,2], [2], [2]]$

/* ...... END OF USER INPUTS........ */

/* To generate other bases, just add corresponding column to arrays below. */
bName        : ["Ser", "Max", "Tensor"]$
maxPolyOrder : [maxPolyOrder_Ser, maxPolyOrder_Max, maxPolyOrder_Tensor]$
minCdim      : [minCdim_Ser, minCdim_Max, minCdim_Tensor]$
minVdim      : [minVdim_Ser, minVdim_Max, minVdim_Tensor]$
maxCdim      : [maxCdim_Ser, maxCdim_Max, maxCdim_Tensor]$
maxVdim      : [maxVdim_Ser, maxVdim_Max, maxVdim_Tensor]$

for bInd : 1 thru length(bName) do (
  for c : minCdim[bInd] thru maxCdim[bInd] do (

    /* Vlasov primitive moments. */
    for v : max(c,minVdim[bInd]) thru maxVdim[bInd] do (
      maxPolyOrderB : maxPolyOrder[bInd],
      if (c+v>4 and maxPolyOrderB > 2) then maxPolyOrderB : 2,

      for polyOrder : 1 thru maxPolyOrderB do (
    
        disp(printf(false,sconcat("Creating VmSelfPrimMoments ~ax~av ", bName[bInd], " P~a"),c,v, polyOrder)),
        fname : sconcat("~/max-out/VmSelfPrimMoments", bName[bInd], c, "x", v, "vP", polyOrder, ".cpp"),
        fh : openw(fname),
  
        printf(fh, "#include <PrimMomentsModDecl.h> ~%"),
        printf(fh, " ~%"),

        printf(fh, "using namespace Eigen; ~%"),
        printf(fh, " ~%"),
  
        kinSpec : "Vm",
        funcName : sconcat("VmSelfPrimMoments", c, "x", v, "v", bName[bInd]),
        calcSelfPrimMoms(fh, funcName, c, v, bName[bInd], polyOrder),
  
        close(fh)
      )
    ),

    /* For gyrokinetic need 1x1v, 1x2v, 2x2v and 3x2v. However each
       of these effectively solve a weak linear system of 2 equations.
       For now assume that gyrokinetics is never run in 2x1v or 3x1v. */
    for gkV : 1 thru length(gkVdims[c]) do (
      v : max(minVdim[bInd],gkVdims[c][gkV]),

      maxPolyOrderB : maxPolyOrder[bInd],
      if (c+v>4 and maxPolyOrderB > 2) then maxPolyOrderB : 2,

      for polyOrder : 1 thru maxPolyOrderB do (

        disp(printf(false,sconcat("Creating GkSelfPrimMoments ~ax~av ", bName[bInd], " P~a"),c,v, polyOrder)),
        fname : sconcat("~/max-out/GkSelfPrimMoments", bName[bInd], c, "x", v, "vP", polyOrder, ".cpp"),
        fh : openw(fname),
    
        printf(fh, "#include <PrimMomentsModDecl.h> ~%"),
        printf(fh, " ~%"),
        printf(fh, "using namespace Eigen; ~%"),
        printf(fh, " ~%"),
    
        kinSpec : "Gk",
  
        funcName : sconcat("GkSelfPrimMoments", c, "x", v, "v", bName[bInd]),
        calcSelfPrimMoms(fh, funcName, c, v, bName[bInd], polyOrder),
  
        close(fh)
      )
    )
  )
);

