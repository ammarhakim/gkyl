load("primMoments-calc/SelfPrimMoms")$
load("primMoments-calc/BoundaryEval")$
load(stringproc)$

/* ...... USER INPUTS........ */

/* Serendipity basis. */
maxPolyOrder_Ser : 2$
minCdim_Ser : 1$
minVdim_Ser : 1$    /* but see v loop below. */
maxCdim_Ser : 2$
maxVdim_Ser : 0$

/* Maximal order basis. */
maxPolyOrder_Max : 2$
minCdim_Max : 1$
minVdim_Max : 1$    /* but see v loop below. */
maxCdim_Max : 2$
maxVdim_Max : 0$

/* ...... END OF USER INPUTS........ */

bName        : ["Ser","Max"]$
maxPolyOrder : [maxPolyOrder_Ser, maxPolyOrder_Max]$
minCdim      : [minCdim_Ser, minCdim_Max]$
minVdim      : [minVdim_Ser, minVdim_Max]$
maxCdim      : [maxCdim_Ser, maxCdim_Max]$
maxVdim      : [maxVdim_Ser, maxVdim_Max]$


for bInd : 1 thru length(bName) do (
  for c : minCdim[bInd] thru maxCdim[bInd] do (
    for v : c thru maxVdim[bInd] do (
      disp(printf(false,sconcat("Creating SelfPrimMoments ~ax~av", bName[bInd]),c,v)),
      fname : sconcat("~/max-out/SelfPrimMoments", bName[bInd], c, "x", v, "v", ".cpp"),
      fh : openw(fname),
  
      printf(fh, "#include <math.h> ~%"),
      printf(fh, "#include <PrimMomentsModDecl.h> ~%"),
      printf(fh, " ~%"),
      printf(fh, "using namespace Eigen; ~%"),
      printf(fh, " ~%"),
  
      funcName : sconcat("SelfPrimMoments", c, "x", v, "v", bName[bInd]),
      calcSelfPrimMoms(fh, funcName, c, v, bName[bInd], maxPolyOrder[bInd]),
  
      funcName : sconcat("BoundaryIntegral", c, "x", v, "v", bName[bInd]),
      calcSurfIntegralCorrections(fh, funcName, c, v, bName[bInd], maxPolyOrder[bInd]),
  
      close(fh)
    )
  )
);

/* For gyrokinetic 2x2v and 3x2v effectively solve a linear system
   equivalent to the Vlasov 2x1v and 3x1v, respectively. For now assume
   that gyrokinetics is never run in 2x1v or 3x1v. */

for bInd : 1 thru length(bName) do (
  for c : 3 thru 3 do (
    v : 1,
    disp(printf(false,sconcat("Creating SelfPrimMoments ~ax~av", bName[bInd]),c,v)),
    fname : sconcat("~/max-out/SelfPrimMoments", bName[bInd], c, "x", v, "v", ".cpp"),
    fh : openw(fname),
  
    printf(fh, "#include <math.h> ~%"),
    printf(fh, "#include <PrimMomentsModDecl.h> ~%"),
    printf(fh, " ~%"),
    printf(fh, "using namespace Eigen; ~%"),
    printf(fh, " ~%"),
  
    funcName : sconcat("SelfPrimMoments", c, "x", v, "v", bName[bInd]),
    calcSelfPrimMoms(fh, funcName, c, v, bName[bInd], maxPolyOrder[bInd]),

    /* IMPORTANT: Don't include this in the 2x1v file. Conflict otherwise. */
    if (c = 3) then (
      v : 2,
      funcName : sconcat("BoundaryIntegral", c, "x", v, "v", bName[bInd]),
      calcSurfIntegralCorrections(fh, funcName, c, v, bName[bInd], maxPolyOrder[bInd])
    ),
  
    close(fh)
  )
);






