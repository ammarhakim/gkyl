load("modal-basis")$
load("basis-precalc/basisSer1x")$

eta(xc,dx,b) := subst(x=(z-xc)/(dx/2), b)$

/* Reconstruction across two cells of size dx each */
bCC : basisC[1]$

pL : eta(-dx/2,dx,bCC)$
pR : eta(dx/2,dx,bCC)$

N : length(bCC)$
h : doExpand1(hn, makelist(z^i,i,0,2*N-1))$
eqL : calcInnerProdListGen([z], [[-dx,0]], 1, pL, h-doExpand(hL,pL))$
eqR : calcInnerProdListGen([z], [[0,dx]],  1, pR, h-doExpand(hR,pR))$
eqList : append(eqL,eqR)$
hsol : linsolve(eqList, makelist(hn[i], i, 0, 2*N-1))$
h1d : fullratsimp(subst(hsol, h))$

/* Three-cell reconstruction: match slope and moments */
bC : eta(0, dx, bCC)$
fh : sum(f(j,i)*bC[i], i, 1, N)$

dh : subst(z=0,diff(h1d,z))$

/* Slope on right cell edge */
subListR : append(
  makelist(hL[i]=f(j,i), i, 1,N), makelist(hR[i]=f(j+1,i), i, 1,N)
  )$
dhR : subst(subListR, dh)$

/* Slope on left cell edge */
subListL : append(
  makelist(hL[i]=f(j-1,i), i, 1,N), makelist(hR[i]=f(j,i), i, 1,N)
  )$
dhL : subst(subListL, dh)$

/* Reconstruct in the middle cell */
rh : sum(r[i]*z^i, i, 0, N+1)$

/* Match slopes */
eq1 : dhR = subst(z=dx/2,diff(rh,z))$
eq2 : dhL = subst(z=-dx/2,diff(rh,z))$
/* Match moments */
eqN : calcInnerProdListGen([z], [[-dx/2,dx/2]], 1, bC, rh-fh)$
eqList : append([eq1, eq2], eqN)$

/* Solve system and construct expansion */
rsol : linsolve(eqList, makelist(r[i],i,0,N+1))$
r1d : subst(rsol, rh)$

/* Taylor series analysis */
taylorExpand(df,N,z) := df[0] + sum(df[i]*z^i/factorial(i), i, 1, N)$

ft : taylorExpand(df, 6, z)$

/* Project Taylor expansion on each of three cells */
bCL : eta(-dx,dx,bCC)$
bCI : eta(0,dx,bCC)$
bCR : eta(dx,dx,bCC)$

ftL : calcInnerProdListGen([z], [[-3*dx/2,-dx/2]], 1, bCL, ft)*2/dx$
ftI : calcInnerProdListGen([z], [[-dx/2,dx/2]], 1, bCI, ft)*2/dx$
ftR : calcInnerProdListGen([z], [[dx/2,3*dx/2]], 1, bCR, ft)*2/dx$

/* Substitute expansion in three-cell reconstruction */
subList : append(
  makelist(f(j-1,i)=ftL[i],i,1,N),
  makelist(f(j,i)=ftI[i],i,1,N),
  makelist(f(j+1,i)=ftR[i],i,1,N))$

ft1d : expand(
  fullratsimp(
    subst(subList, r1d)))$

/* Project Taylor series on basis functions */
ft1d_xx_h : expand(calcInnerProdListGen([z], [[-dx/2,dx/2]], 1, bC, diff(ft1d,z,2))*2/dx)$

/* For testing */

g : (z-1/2)^2$
gL : calcInnerProdListGen([z], [[-3,-1]], 1, bCL, g)$
gI : calcInnerProdListGen([z], [[-1,1]], 1, bCI, g)$
gR : calcInnerProdListGen([z], [[1,3]], 1, bCR, g)$

subList : append(
  makelist(f(j-1,i)=gL[i],i,1,N),
  makelist(f(j,i)=gI[i],i,1,N),
  makelist(f(j+1,i)=gR[i],i,1,N))$

r1g : subst(subList, r1d)$

/* Plot stuff */
ge : explicit(g, z, -3, 3)$
r1ge : explicit(r1g, x, -1, 1)$

gLe : explicit(gL.bCL, z, -3, -1)$
gIe : explicit(gI.bCI, z, -1, 1)$
gRe : explicit(gR.bCR, z, 1, 3)$

draw2d(
  grid=true,
  color=blue, ge,
  color=black, line_type=dots,gLe,
  color=black, line_type=dots,gIe,
  color=black, line_type=dots,gRe,
  color=red, r1ge
  )$
