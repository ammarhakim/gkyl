calcRecovFaceGen(basisNm, recDirs, dirs, numDer, face, polyOrder, C, lo, ce, up) := block(
  [
  perpDirs, ba,
  rLo, rCe, rUp,
  rLoCoef, rCeCoef, rUpCoef, r,
  lo2, ce2, up2,
  wx, wy,
  numDims,
  baVars
  ],

  numDims : length(dirs),
  perpDirs : delete(recDirs[1], dirs),
  ba : getBasis(basisNm, numDims-1, polyOrder),
  baVars : listofvars(ba),
  ba : psubst(makelist(baVars[i]=perpDirs[i],i,1,numDims-1), ba),  

  if is(op(lo)=dg) then (
    rLo : calcRecov2CellGen(basisNm, recDirs[1], dirs, polyOrder,
      args(lo)[1], args(lo)[2]),
    rLo : diff(rLo, recDirs[1], numDer),
    rLoCoef : calcInnerProdList(perpDirs, 1, ba, subst(recDirs[1]=face, rLo)),
    lo2 : dg(rLoCoef)
  ) elseif is(op(lo)=bc) then (
    lo2 : lo
  ),
  
  /* Center input cannot be a BC */
  rCe : calcRecov2CellGen(basisNm, recDirs[1], dirs, polyOrder,
    args(ce)[1], args(ce)[2]),
  rCe : diff(rCe, recDirs[1], numDer),
  rCeCoef : calcInnerProdList(perpDirs, 1, ba, subst(recDirs[1]=face, rCe)),
  ce2 : dg(rCeCoef),

  if is(op(up)=dg) then (
    rUp : calcRecov2CellGen(basisNm, recDirs[1], dirs, polyOrder,
      args(up)[1], args(up)[2]),
    rUp : diff(rUp, recDirs[1], numDer),
    rUpCoef : calcInnerProdList(perpDirs, 1, ba, subst(recDirs[1]=face, rUp)),
    up2 : dg(rUpCoef)
  ) elseif is(op(up)=bc) then (
    up2 : up
  ),

  r : calcRecov1CellGen(basisNm, recDirs[2], perpDirs, polyOrder, C,
    lo2, ce2, up2),
  return(r)
) $
