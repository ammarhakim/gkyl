getName(bn, xi, vi, po) := sconcat("void lagrangeFix", bn, xi, "x", vi, "v", po, "p(double *dm0, double *dm1, double *dm2, double *L, double *Nv, double *vc, double *f);~%~%")$
basis : ["Ser","Max"]$

fhh : openw("~/max-out/lagrangeFixDecl.h")$
fhl : openw("~/max-out/_lagrangeFixCdef.lua")$

printf(fhh, "#ifndef LAGRANGE_FIX_H ~%")$
printf(fhh, "#define LAGRANGE_FIX_H ~%~%")$
printf(fhh, "extern \"C\" { ~%~%")$
printf(fhh, "double gkyl_ipow(double base, int exp);~%~%")$
printf(fhl, "local ffi  = require \"ffi\"~%")$
printf(fhl, "ffi.cdef [[~%~%")$

for bIdx : 1 thru length(basis) do (
  for cDim : 1 thru 2 do (
    for vDim : cDim thru 3 do (
      for polyOrder : 1 thru 3 do (  
        printf(fhh, getName(basis[bIdx], cDim, vDim, polyOrder)),
        printf(fhl, getName(basis[bIdx], cDim, vDim, polyOrder))
      )
    )
  )
);

printf(fhh, "} ~%")$
printf(fhh, "#endif")$
close(fhh)$
printf(fhl, "]]")$
close(fhl)$
