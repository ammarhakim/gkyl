load("/Users/ahakim/research/gkyl-project/gkyl/cas-scripts/modal-basis.mac");
load("/Users/ahakim/research/gkyl-project/gkyl/cas-scripts/out-scripts.mac");
fpprec : 24$

varsV : [vx, vy, vz]$
cvars : [X, Y, Z]$
vvars : [VX, VY, VZ]$

doExpand(f, basis) := sum(f[i-1]*basis[i], i, 1, length(basis))$
calcInnerProdList(vars, w, funcList, f) := fullratsimp(makelist(innerProd(vars, w, funcList[i], f), i, 1, length(funcList)))$

cidx(cdim) := makelist(i,i,0,cdim-1)$
vidx(cdim,vdim) := makelist(i,i,cdim,cdim+vdim-1)$

calcUpdateInDir(dir, fh, funcNm, cdim, vdim, varsP, basisFun) :=
for i : 1 thru 2 do (
  basisP : gsOrthoNorm(varsP, basisFun(varsP, i)),
  printf(fh, "void ~a_~a_P~a(const double *w, const double *dxv, const double *fl, const double *fr, double *outl, double *outr) ~%{ ~%", funcNm, cvars[dir], i),
  printf(fh, "// w[NDIM]: Cell-center coordinates. dxv[NDIM]: Cell spacing. fl/fr: Distribution function in left/right cells ~%"),
  printf(fh, "// outl/outr: Incremented distribution function in left/right cells ~%"),
  cid : cidx(cdim),
  vid : vidx(cdim,vdim),
  printf(fh, "  double dvx = dxv[~a]/dxv[~a]; ~%", vid[dir], cid[dir]),
  printf(fh, "  double wx = w[~a]*2/dxv[~a]; ~%~%", vid[dir], cid[dir]),
  cv : varsP[dir],
  vv : varsV[dir],
  surfVars : delete(cv,varsP),
  fl_L : doExpand(fl, basisP),
  fl_R : doExpand(fr, basisP),
  printf(fh, "  if (wx>0) { ~%"),
  fhat : subst(cv=1, fl_L),
  t1 : wx*calcInnerProdList(surfVars, 1, subst(cv=-1, basisP), fhat),
  t2 : dvx*calcInnerProdList(surfVars, vv, subst(cv=-1, basisP), fhat),
  writeCIncrExprs1(outr, t1+t2),
  printf(fh, "~%"),
  t1 : wx*calcInnerProdList(surfVars, 1, subst(cv=1, basisP), fhat),
  t2 : dvx/2*calcInnerProdList(surfVars, vv, subst(cv=1, basisP), fhat),
  writeCIncrExprs1(outl, -(t1+t2)),
  printf(fh, "  } else { ~%"),
  fhat : subst(cv=-1, fl_R),
  t1 : wx*calcInnerProdList(surfVars, 1, subst(cv=-1, basisP), fhat),
  t2 : dvx/2*calcInnerProdList(surfVars, vv, subst(cv=-1, basisP), fhat),
  writeCIncrExprs1(outr, t1+t2),
  printf(fh, "~%"),
  t1 : wx*calcInnerProdList(surfVars, 1, subst(cv=1, basisP), fhat),
  t2 : dvx/2*calcInnerProdList(surfVars, vv, subst(cv=1, basisP), fhat),
  writeCIncrExprs1(outl, -(t1+t2)),
  printf(fh, "  } ~%"),
  printf(fh, "} ~%")
);

calcVlasovSurfUpdater(fh, funcNm, cdim, vdim, varsP, basisFun) := block([],
  printf(fh, "#include <VlasovModDecl.h> ~%"),
  for dir : 1 thru cdim do ( calcUpdateInDir(dir, fh, funcNm, cdim, vdim, varsP, basisFun) )
)$

