load("/Users/ahakim/research/gkyl-project/gkyl/cas-scripts/modal-basis.mac");
load("/Users/ahakim/research/gkyl-project/gkyl/cas-scripts/out-scripts.mac");
fpprec : 24$

varsV : [vx, vy, vz]$
cvars : [X, Y, Z]$
vvars : [VX, VY, VZ]$

dvdx : [dv0dx0, dv1dx1, dv2dx2]$
wdx : [w0dx0, w1dx1, w2dx2]$
dv1 : [dv10, dv11, dv12]$

doExpand(f, basis) := sum(f[i-1]*basis[i], i, 1, length(basis))$
calcInnerProdList(vars, w, funcList, f) := fullratsimp(makelist(innerProd(vars, w, funcList[i], f), i, 1, length(funcList)))$
slcn(lst, n) := makelist(lst[i], i, 1, n)$

cidx(cdim) := makelist(i,i,0,cdim-1)$
vidx(cdim,vdim) := makelist(i,i,cdim,cdim+vdim-1)$

calcVlasovVolUpdater(fh, funcNm, cdim, vdim, varsP, basisFun) := block([],
printf(fh, "#include <VlasovModDecl.h> ~%"),
for i : 1 thru 2 do (
  basisP : gsOrthoNorm(varsP, basisFun(varsP, i)),
  varsC : slcn(varsP, cdim),
  basisC : gsOrthoNorm(varsC, basisFun(varsC, i)),
  printf(fh, "void ~aP~a(const double *w, const double *dxv, const double *E, const double *f, double *out) ~%{ ~%", funcNm, i),
  printf(fh, "// w[NDIM]: Cell-center coordinates. dxv[NDIM]: Cell spacing. E/f: Input electric-field/distribution function. out: Incremented output ~%"),
  cid : cidx(cdim),
  vid : vidx(cdim,vdim),
  for dir : 1 thru cdim do (
    printf(fh, "  double dv1~a = 2/dxv[~a]; ~%", dir-1, vid[dir])
  ),
  fl : doExpand(f, basisP),
  El : doExpand(E, basisC),
  t : (t : 0, for dir : 1 thru cdim do (
     t : t + dv1[dir]*calcInnerProdList(varsP, El, diff(basisP,varsV[dir]), fl)
     ),
  t),
  writeCIncrExprs(t),
  printf(fh, "} ~%")
));