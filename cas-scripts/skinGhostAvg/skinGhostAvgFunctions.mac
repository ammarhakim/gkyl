/*
   Modify a configuration-space field at the boundary
   by averaging the skin and ghost values on the boundary.
*/

load("out-scripts")$
load("modal-basis")$
load("nodalOperations/nodalFunctions")$
fpprec : 24$


genModSmootherKer(fh, cdim, basisNm, polyOrder) := block(
  [vars,basis,numB,nodes,numNodes,dimIn,basisNodal,skinField_c,skinField_e,skinField_n,
   ghostField_c,ghostField_e,ghostField_n,edge,boundaryVal,zVar, bNodeIdx,skinFieldOut_c],

  /* Define bases, vars, lengths. */
  kill(varsC, varsP, basisC, basisP),
  load(sconcat("basis-precalc/basis", basisNm, cdim, "x")),
  [vars,basis] : [varsC, basisC[polyOrder]],
  numB : length(basis),

  nodes : args(getNodes(basisNm, cdim, polyOrder)),
  numNodes : length(nodes),

  basisNodal : getVarsNodalBasisWithNodes(basisNm, cdim, polyOrder, vars, nodes),

  /* Instantiate array of coefficients and expansions for skinField and ghostField. */
  skinField_c : makelist(skinField[i-1], i, 1, numB),
  skinField_e : doExpand(skinField_c, basis),
  skinField_n : makelist(skinField[i-1], i, 1, numB),

  ghostField_c : makelist(ghostField[i-1], i, 1, numB),
  ghostField_e : doExpand(ghostField_c, basis),
  ghostField_n : makelist(ghostField[i-1], i, 1, numB),

  /* Generate separate kernels for lower/upper boundaries. */
  edge : ["lower", "upper"],
  boundaryVal : [-1, 1],
  zVar : vars[cdim],

  for sI : 1 thru length(edge) do (
    printf(fh, "~%"),
    printf(fh, "void skin_ghost_avg_~a_~ax_~a_p~a(double *skinField, const double *ghostField) ~%{ ~%", edge[sI], cdim, basisNm, polyOrder),
    printf(fh, "  // skinField: configuration space field in skin cell.~%"),
    printf(fh, "  // ghostField: configuration space field in ghost cell.~%"),
    printf(fh, "~%"),

    /* Based on upper or lower boundary select nodal coeffs to modify and which
       edge of ghost cell to draw from. */
    bNodeIdx      : sublist_indices(nodes, lambda([x], x[cdim]=boundaryVal[sI])),
    bNodeIdxGhost : sublist_indices(nodes, lambda([x], x[cdim]=-boundaryVal[sI])),
    skinField_n   : evAtNodes(skinField_e, nodes, vars),
    ghostField_n  : evAtNodes(ghostField_e, nodes, vars),

    /* Adjust the nodal coeffs on the boundary. */
    for bI : 1 thru length(bNodeIdx) do (
      skinField_n[bNodeIdx[bI]] : (skinField_n[bNodeIdx[bI]] + ghostField_n[bNodeIdxGhost[bI]])/2.0
    ),

    /* Write out nodal values. */
    printf(fh, "  double skinFieldNod[~a] = {0.};~%", numNodes),
    writeCExprs1(skinFieldNod, skinField_n),
    printf(fh, "~%"),

    /*Now convert back to modal coeffs. */
    skinFieldOut_c : calcInnerProdList(vars, 1, basis, doExpand1(skinFieldNod, basisNodal)),
    /* Write modal coeffs. */
    writeCExprs1(skinField, skinFieldOut_c),

    printf(fh, " ~%"),
    printf(fh, "}~%")

  )

)$


