/* Generate kernels that perform binary operations between
   two fields. Currently two operations are supported:
     1) Weak division by a scalar function.
     2) Weak multiplication.
   This script calls the functions calcBinOp for various
   combinations of configuration and velocity space, and
   indicates the maximum polyOrder to generate code for. */
load("binOp-calc-c/binOp-division-calc")$
load("binOp-calc-c/binOp-multiplication-calc")$
load(stringproc)$

/* Maximum polynomial order to generate kernels for. */
inMaxPolyOrder : 2$

for c : 1 thru 3 do (
  fname : sconcat("~/max-out/CartFieldBinOpSer", c, "x", ".cpp"),
  fh : openw(fname),

  disp(printf(false,"Creating ~ax",c)),

  printf(fh, "#include <math.h> ~%"),
  printf(fh, "#include <CartFieldBinOpModDecl.h> ~%"),
  printf(fh, " ~%"),
  printf(fh, "using namespace Eigen; ~%"),
  printf(fh, " ~%"),
  
  funcName : sconcat("CartFieldBinOpMultiply", c, "x", "Ser"),
  calcBinOpMultiplyS(fh, funcName, c, "Ser",inMaxPolyOrder),
  
  funcName : sconcat("CartFieldBinOpDivide", c, "x", "Ser"),
  calcBinOpDivideS(fh, funcName, c, "Ser",inMaxPolyOrder),
 
  close(fh)
)$

for c : 1 thru 2 do (
  for v : c thru 2 do (
    fname : sconcat("~/max-out/CartFieldBinOpSer", c, "x", v, "v",".cpp"),
    fh : openw(fname),

    disp(printf(false,"Creating ~ax~av",c,v)),

    printf(fh, "#include <math.h> ~%"),
    printf(fh, "#include <CartFieldBinOpModDecl.h> ~%"),
    printf(fh, " ~%"),
    printf(fh, "using namespace Eigen; ~%"),
    printf(fh, " ~%"),
   
    funcName : sconcat("CartFieldBinOpMultiply", c, "x", v, "v", "Ser"),
    calcBinOpMultiplyD(fh, funcName, c, v, "Ser",inMaxPolyOrder), 

    funcName : sconcat("CartFieldBinOpDivide", c, "x", v, "v", "Ser"),
    calcBinOpDivideD(fh, funcName, c, v, "Ser",inMaxPolyOrder),

    close(fh)
  )
)$


c : 3$
v : 2$
disp(printf(false,"Creating ~ax~av",c,v)),

fname : sconcat("~/max-out/CartFieldBinOpSer", c, "x", v, "v", ".cpp")$
fh : openw(fname)$

funcName : sconcat("CartFieldBinOpMultiply", c, "x", v, "v", "Ser"),
calcBinOpMultiplyD(fh, funcName, c, v, "Ser",inMaxPolyOrder), 

funcName : sconcat("CartFieldBinOpDivide", c, "x", v, "v", "Ser"),
calcBinOpDivideD(fh, funcName, c, v, "Ser",inMaxPolyOrder),

close(fh)$
