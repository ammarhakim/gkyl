cvars : [X, Y, Z]$

printPrototypes() := block([],
for ci : 1 thru 3 do (
  for vi : ci thru 3 do (
    for pi : 1 thru 3 do (
      printf(fh, "void MomentCalc~ax~avSer_M0_P~a(const double *w, const double *dxv, const double *f, double *out); ~%", ci, vi, pi),
      printf(fh, "void MomentCalc~ax~avSer_M1i_P~a(const double *w, const double *dxv, const double *f, double *out); ~%", ci, vi, pi),
      printf(fh, "void MomentCalc~ax~avSer_M2ij_P~a(const double *w, const double *dxv, const double *f, double *out); ~%", ci, vi, pi),
      printf(fh, "void MomentCalc~ax~avSer_M2_P~a(const double *w, const double *dxv, const double *f, double *out); ~%", ci, vi, pi),
      printf(fh, "void MomentCalc~ax~avSer_M3i_P~a(const double *w, const double *dxv, const double *f, double *out); ~%", ci, vi, pi),
      printf(fh, "void MomentCalc~ax~avSer_FiveMoments_P~a(const double *w, const double *dxv, const double *f, double *outM0, double *outM1i, double *outM2); ~%", ci, vi, pi),
      if vi < 3 and pi < 3 then (
         printf(fh, "void GkMomentCalc~ax~avSer_M0_P~a(const double *w, const double *dxv, const double m_, const double *Bmag, const double *f, double *out); ~%", ci, vi, pi),
         printf(fh, "void GkMomentCalc~ax~avSer_M1_P~a(const double *w, const double *dxv, const double m_, const double *Bmag, const double *f, double *out); ~%", ci, vi, pi),
         printf(fh, "void GkMomentCalc~ax~avSer_M1proj_P~a(const double *w, const double *dxv, const double m_, const double *Bmag, const double *f, double *out); ~%", ci, vi, pi),
         printf(fh, "void GkMomentCalc~ax~avSer_M2_P~a(const double *w, const double *dxv, const double m_, const double *Bmag, const double *f, double *out); ~%", ci, vi, pi),
         printf(fh, "void GkMomentCalc~ax~avSer_M2par_P~a(const double *w, const double *dxv, const double m_, const double *Bmag, const double *f, double *out); ~%", ci, vi, pi),
         if vi > 1 then printf(fh, "void GkMomentCalc~ax~avSer_M2perp_P~a(const double *w, const double *dxv, const double m_, const double *Bmag, const double *f, double *out); ~%", ci, vi, pi),
         printf(fh, "void GkMomentCalc~ax~avSer_M3par_P~a(const double *w, const double *dxv, const double m_, const double *Bmag, const double *f, double *out); ~%", ci, vi, pi),
         if vi > 1 then printf(fh, "void GkMomentCalc~ax~avSer_M3perp_P~a(const double *w, const double *dxv, const double m_, const double *Bmag, const double *f, double *out); ~%", ci, vi, pi),
         printf(fh, "void GkMomentCalc~ax~avSer_ThreeMoments_P~a(const double *w, const double *dxv, const double m_, const double *Bmag, const double *f, double *out1, double *out2, double *out3); ~%", ci, vi, pi)
      ),
      printf(fh, "void IntMomentCalc~ax~avSer_P~a(const double *w, const double *dxv, const double *f, double *out); ~%", ci, vi, pi),            
      printf(fh, "~%") 
    ),
    printf(fh, "~%")
  )
),

ci : 3,
vi : 2,
for pi : 1 thru 2 do (
  if vi < 3 then (
     printf(fh, "void GkMomentCalc~ax~avSer_M0_P~a(const double *w, const double *dxv, const double m_, const double *Bmag, const double *f, double *out); ~%", ci, vi, pi),
     printf(fh, "void GkMomentCalc~ax~avSer_M1_P~a(const double *w, const double *dxv, const double m_, const double *Bmag, const double *f, double *out); ~%", ci, vi, pi),
     printf(fh, "void GkMomentCalc~ax~avSer_M1proj_P~a(const double *w, const double *dxv, const double m_, const double *Bmag, const double *f, double *out); ~%", ci, vi, pi),
     printf(fh, "void GkMomentCalc~ax~avSer_M2_P~a(const double *w, const double *dxv, const double m_, const double *Bmag, const double *f, double *out); ~%", ci, vi, pi),
     printf(fh, "void GkMomentCalc~ax~avSer_M2par_P~a(const double *w, const double *dxv, const double m_, const double *Bmag, const double *f, double *out); ~%", ci, vi, pi),
     if vi > 1 then printf(fh, "void GkMomentCalc~ax~avSer_M2perp_P~a(const double *w, const double *dxv, const double m_, const double *Bmag, const double *f, double *out); ~%", ci, vi, pi),
     printf(fh, "void GkMomentCalc~ax~avSer_M3par_P~a(const double *w, const double *dxv, const double m_, const double *Bmag, const double *f, double *out); ~%", ci, vi, pi),
     if vi > 1 then printf(fh, "void GkMomentCalc~ax~avSer_M3perp_P~a(const double *w, const double *dxv, const double m_, const double *Bmag, const double *f, double *out); ~%", ci, vi, pi),
     printf(fh, "void GkMomentCalc~ax~avSer_ThreeMoments_P~a(const double *w, const double *dxv, const double m_, const double *Bmag, const double *f, double *out1, double *out2, double *out3); ~%", ci, vi, pi)
  ),
  printf(fh, "~%") 
),

for ci : 1 thru 3 do (
  for vi : ci thru 3 do (
    for pi : 1 thru 3 do (
      printf(fh, "void MomentCalc~ax~avMax_M0_P~a(const double *w, const double *dxv, const double *f, double *out); ~%", ci, vi, pi),
      printf(fh, "void MomentCalc~ax~avMax_M1i_P~a(const double *w, const double *dxv, const double *f, double *out); ~%", ci, vi, pi),
      printf(fh, "void MomentCalc~ax~avMax_M2ij_P~a(const double *w, const double *dxv, const double *f, double *out); ~%", ci, vi, pi),
      printf(fh, "void MomentCalc~ax~avMax_M2_P~a(const double *w, const double *dxv, const double *f, double *out); ~%", ci, vi, pi),
      printf(fh, "void MomentCalc~ax~avMax_M3i_P~a(const double *w, const double *dxv, const double *f, double *out); ~%", ci, vi, pi),
      printf(fh, "void MomentCalc~ax~avMax_FiveMoments_P~a(const double *w, const double *dxv, const double *f, double *outM0, double *outM1i, double *outM2); ~%", ci, vi, pi),
      if vi < 3 and pi < 3 then (
         printf(fh, "void GkMomentCalc~ax~avMax_M0_P~a(const double *w, const double *dxv, const double m_, const double *Bmag, const double *f, double *out); ~%", ci, vi, pi),
         printf(fh, "void GkMomentCalc~ax~avMax_M1_P~a(const double *w, const double *dxv, const double m_, const double *Bmag, const double *f, double *out); ~%", ci, vi, pi),
         printf(fh, "void GkMomentCalc~ax~avMax_M1proj_P~a(const double *w, const double *dxv, const double m_, const double *Bmag, const double *f, double *out); ~%", ci, vi, pi),
         printf(fh, "void GkMomentCalc~ax~avMax_M2_P~a(const double *w, const double *dxv, const double m_, const double *Bmag, const double *f, double *out); ~%", ci, vi, pi),
         printf(fh, "void GkMomentCalc~ax~avMax_M2par_P~a(const double *w, const double *dxv, const double m_, const double *Bmag, const double *f, double *out); ~%", ci, vi, pi),
         printf(fh, "void GkMomentCalc~ax~avMax_M2perp_P~a(const double *w, const double *dxv, const double m_, const double *Bmag, const double *f, double *out); ~%", ci, vi, pi),
         printf(fh, "void GkMomentCalc~ax~avMax_M3par_P~a(const double *w, const double *dxv, const double m_, const double *Bmag, const double *f, double *out); ~%", ci, vi, pi),
         printf(fh, "void GkMomentCalc~ax~avMax_M3perp_P~a(const double *w, const double *dxv, const double m_, const double *Bmag, const double *f, double *out); ~%", ci, vi, pi),
         printf(fh, "void GkMomentCalc~ax~avMax_ThreeMoments_P~a(const double *w, const double *dxv, const double m_, const double *Bmag, const double *f, double *out1, double *out2, double *out3); ~%", ci, vi, pi)
      ),
      printf(fh, "void IntMomentCalc~ax~avMax_P~a(const double *w, const double *dxv, const double *f, double *out); ~%", ci, vi, pi),          
      printf(fh, "~%") 
    ),
    printf(fh, "~%")
  )
),

printf(fh, "~% ~%"),
ci : 3,
vi : 2,
for pi : 1 thru 2 do (
  if vi < 3 then (
     printf(fh, "void GkMomentCalc~ax~avMax_M0_P~a(const double *w, const double *dxv, const double m_, const double *Bmag, const double *f, double *out); ~%", ci, vi, pi),
     printf(fh, "void GkMomentCalc~ax~avMax_M1_P~a(const double *w, const double *dxv, const double m_, const double *Bmag, const double *f, double *out); ~%", ci, vi, pi),
     printf(fh, "void GkMomentCalc~ax~avMax_M1proj_P~a(const double *w, const double *dxv, const double m_, const double *Bmag, const double *f, double *out); ~%", ci, vi, pi),
     printf(fh, "void GkMomentCalc~ax~avMax_M2_P~a(const double *w, const double *dxv, const double m_, const double *Bmag, const double *f, double *out); ~%", ci, vi, pi),
     printf(fh, "void GkMomentCalc~ax~avMax_M2par_P~a(const double *w, const double *dxv, const double m_, const double *Bmag, const double *f, double *out); ~%", ci, vi, pi),
     if vi > 1 then printf(fh, "void GkMomentCalc~ax~avMax_M2perp_P~a(const double *w, const double *dxv, const double m_, const double *Bmag, const double *f, double *out); ~%", ci, vi, pi),
     printf(fh, "void GkMomentCalc~ax~avMax_M3par_P~a(const double *w, const double *dxv, const double m_, const double *Bmag, const double *f, double *out); ~%", ci, vi, pi),
     if vi > 1 then printf(fh, "void GkMomentCalc~ax~avMax_M3perp_P~a(const double *w, const double *dxv, const double m_, const double *Bmag, const double *f, double *out); ~%", ci, vi, pi),
     printf(fh, "void GkMomentCalc~ax~avMax_ThreeMoments_P~a(const double *w, const double *dxv, const double m_, const double *Bmag, const double *f, double *out1, double *out2, double *out3); ~%", ci, vi, pi)
  ),
  printf(fh, "~%") 
),

for ci : 1 thru 2 do (
  for vi : ci thru 3 do (
    for pi : 1 thru 3 do (
      printf(fh, "void MomentCalc~ax~avTensor_M0_P~a(const double *w, const double *dxv, const double *f, double *out); ~%", ci, vi, pi),
      printf(fh, "void MomentCalc~ax~avTensor_M1i_P~a(const double *w, const double *dxv, const double *f, double *out); ~%", ci, vi, pi),
      printf(fh, "void MomentCalc~ax~avTensor_M2ij_P~a(const double *w, const double *dxv, const double *f, double *out); ~%", ci, vi, pi),
      printf(fh, "void MomentCalc~ax~avTensor_M2_P~a(const double *w, const double *dxv, const double *f, double *out); ~%", ci, vi, pi),
      printf(fh, "void MomentCalc~ax~avTensor_M3i_P~a(const double *w, const double *dxv, const double *f, double *out); ~%", ci, vi, pi),
      printf(fh, "void MomentCalc~ax~avTensor_FiveMoments_P~a(const double *w, const double *dxv, const double *f, double *outM0, double *outM1i, double *outM2); ~%", ci, vi, pi),
      printf(fh, "void IntMomentCalc~ax~avTensor_P~a(const double *w, const double *dxv, const double *f, double *out); ~%", ci, vi, pi),
      printf(fh, "~%") 
    ),
    printf(fh, "~%")
  )
)
)$

fh : openw("~/max-out/DistFuncMomentCalcModDecl.h")$
printf(fh, "#ifndef DIST_FUNC_MOMENT_CALC_MOD_DELC_H ~%")$
printf(fh, "#define DIST_FUNC_MOMENT_CALC_MOD_DELC_H ~%")$
printf(fh, "extern \"C\" { ~%")$
printPrototypes()$
printf(fh, "} ~%")$
printf(fh, "#endif ~%")$
close(fh)$

fh : openw("~/max-out/_DistFuncCdef.lua")$
printf(fh, "local ffi = require \"ffi\" ~%~%")$
printf(fh, "ffi.cdef [[~%")$
printPrototypes()$
printf(fh, "]]~%")$
close(fh)$
