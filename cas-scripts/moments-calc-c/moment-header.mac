cvars : [X, Y, Z]$

fh : openw("~/max-out/DistFuncMomentCalcModDecl.h")$

printf(fh, "#ifndef DIST_FUNC_MOMENT_CALC_MOD_DELC_H ~%")$
printf(fh, "#define DIST_FUNC_MOMENT_CALC_MOD_DELC_H ~%")$

printf(fh, "extern \"C\" { ~%")$

for ci : 1 thru 3 do (
  for vi : ci thru 3 do (
    for pi : 1 thru 4 do (
      printf(fh, "void MomentCalc~ax~avSer_M0_P~a(const double *w, const double *dxv, const double *f, double *out); ~%", ci, vi, pi),
      printf(fh, "void MomentCalc~ax~avSer_M1i_P~a(const double *w, const double *dxv, const double *f, double *out); ~%", ci, vi, pi),
      printf(fh, "void MomentCalc~ax~avSer_M2ij_P~a(const double *w, const double *dxv, const double *f, double *out); ~%", ci, vi, pi),
      printf(fh, "void MomentCalc~ax~avSer_M2_P~a(const double *w, const double *dxv, const double *f, double *out); ~%", ci, vi, pi),
      printf(fh, "void MomentCalc~ax~avSer_M3i_P~a(const double *w, const double *dxv, const double *f, double *out); ~%", ci, vi, pi),
      if vi < 3 then (
         printf(fh, "void GkMomentCalc~ax~avSer_Dens_P~a(const double *w, const double *dxv, const double *f, double *out); ~%", ci, vi, pi),
         printf(fh, "void GkMomentCalc~ax~avSer_Upar_P~a(const double *w, const double *dxv, const double *f, double *out); ~%", ci, vi, pi),
         printf(fh, "void GkMomentCalc~ax~avSer_Ppar_P~a(const double *w, const double *dxv, const double *f, double *out); ~%", ci, vi, pi),
         if vi > 1 then printf(fh, "void GkMomentCalc~ax~avSer_Pperp_P~a(const double *w, const double *dxv, const double *f, double *out); ~%", ci, vi, pi),
         printf(fh, "void GkMomentCalc~ax~avSer_Qpar_P~a(const double *w, const double *dxv, const double *f, double *out); ~%", ci, vi, pi),
         if vi > 1 then printf(fh, "void GkMomentCalc~ax~avSer_Qperp_P~a(const double *w, const double *dxv, const double *f, double *out); ~%", ci, vi, pi)
      ),
      printf(fh, "void IntMomentCalc~ax~avSer_P~a(const double *w, const double *dxv, const double *f, double *out); ~%", ci, vi, pi),            
      printf(fh, "~%") 
    ),
    printf(fh, "~%")
  )
)$

printf(fh, "~% ~%")$

for ci : 1 thru 3 do (
  for vi : ci thru 3 do (
    for pi : 1 thru 4 do (
      printf(fh, "void MomentCalc~ax~avMax_M0_P~a(const double *w, const double *dxv, const double *f, double *out); ~%", ci, vi, pi),
      printf(fh, "void MomentCalc~ax~avMax_M1i_P~a(const double *w, const double *dxv, const double *f, double *out); ~%", ci, vi, pi),
      printf(fh, "void MomentCalc~ax~avMax_M2ij_P~a(const double *w, const double *dxv, const double *f, double *out); ~%", ci, vi, pi),
      printf(fh, "void MomentCalc~ax~avMax_M2_P~a(const double *w, const double *dxv, const double *f, double *out); ~%", ci, vi, pi),
      printf(fh, "void MomentCalc~ax~avMax_M3i_P~a(const double *w, const double *dxv, const double *f, double *out); ~%", ci, vi, pi),
      if vi < 3 then (
         printf(fh, "void GkMomentCalc~ax~avMax_Dens_P~a(const double *w, const double *dxv, const double *f, double *out); ~%", ci, vi, pi),
         printf(fh, "void GkMomentCalc~ax~avMax_Upar_P~a(const double *w, const double *dxv, const double *f, double *out); ~%", ci, vi, pi),
         printf(fh, "void GkMomentCalc~ax~avMax_Ppar_P~a(const double *w, const double *dxv, const double *f, double *out); ~%", ci, vi, pi),
         printf(fh, "void GkMomentCalc~ax~avMax_Pperp_P~a(const double *w, const double *dxv, const double *f, double *out); ~%", ci, vi, pi),
         printf(fh, "void GkMomentCalc~ax~avMax_Qpar_P~a(const double *w, const double *dxv, const double *f, double *out); ~%", ci, vi, pi),
         printf(fh, "void GkMomentCalc~ax~avMax_Qperp_P~a(const double *w, const double *dxv, const double *f, double *out); ~%", ci, vi, pi)
      ),
      printf(fh, "void IntMomentCalc~ax~avMax_P~a(const double *w, const double *dxv, const double *f, double *out); ~%", ci, vi, pi),          
      printf(fh, "~%") 
    ),
    printf(fh, "~%")
  )
)$


printf(fh, "~% ~%")$

printf(fh, "} ~%")$

printf(fh, "#endif ~%")$

close(fh)$
