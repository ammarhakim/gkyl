/* Location of Serendipity nodes in logical [-1,1]^d space,
   with d the number of dimensions.
   At least up to p=3 there's a basic algorithm that could be coded
   to generate these, but for now we simply type them up by hand. */
nodesSer1xp1 : matrix([-1],[1])$
nodesSer1xp2 : matrix([-1],[0],[1])$
nodesSer1xp3 : matrix([-1],[-1/3],[1/3],[1])$
nodesSer2xp1 : matrix([-1,-1],[1,-1],[-1,1],[1,1])$
nodesSer2xp2 : matrix([-1,-1],[0,-1],[1,-1],[-1,0],[1,0],[-1,1],[0,1],[1,1])$
nodesSer2xp3 : matrix([-1,-1],[-1/3,-1],[1/3,-1],[1,-1],[-1,-1/3],[1,-1/3],[-1,1/3],[1,1/3],[-1,1],[-1/3,1],[1/3,1],[1,1])$
nodesSer3xp1 : matrix([-1,-1,-1],[1,-1,-1],[-1,1,-1],[1,1,-1],[-1,-1,1],[1,-1,1],[-1,1,1],[1,1,1])$
nodesSer3xp2 : matrix([-1,-1,-1],[0,-1,-1],[1,-1,-1],[-1,0,-1],[1,0,-1],[-1,1,-1],[0,1,-1],[1,1,-1],
                      [-1,-1,0],[1,-1,0],[-1,1,0],[1,1,0],
                      [-1,-1,1],[0,-1,1],[1,-1,1],[-1,0,1],[1,0,1],[-1,1,1],[0,1,1],[1,1,1])$
nodesSer3xp3 : matrix([-1,-1,-1],[-1/3,-1,-1],[1/3,-1,-1],[1,-1,-1],[-1,-1/3,-1],[1,-1/3,-1],[-1,1/3,-1],[1,1/3,-1],[-1,1,-1],[-1/3,1,-1],[1/3,1,-1],[1,1,-1],
                      [-1,-1,-1/3],[1,-1,-1/3],[-1,1,-1/3],[1,1,-1/3],
                      [-1,-1,1/3],[1,-1,1/3],[-1,1,1/3],[1,1,1/3],
                      [-1,-1,1],[-1/3,-1,1],[1/3,-1,1],[1,-1,1],[-1,-1/3,1],[1,-1/3,1],[-1,1/3,1],[1,1/3,1],[-1,1,1],[-1/3,1,1],[1/3,1,1],[1,1,1])$
nodesSer4xp1 : matrix([-1,-1,-1,-1],[1,-1,-1,-1],[-1,1,-1,-1],[1,1,-1,-1],[-1,-1,1,-1],[1,-1,1,-1],[-1,1,1,-1],[1,1,1,-1],
                      [-1,-1,-1,1],[1,-1,-1,1],[-1,1,-1,1],[1,1,-1,1],[-1,-1,1,1],[1,-1,1,1],[-1,1,1,1],[1,1,1,1])$
nodesSer4xp2 : matrix([-1,-1,-1,-1],[0,-1,-1,-1],[1,-1,-1,-1],[-1,0,-1,-1],[1,0,-1,-1],[-1,1,-1,-1],[0,1,-1,-1],[1,1,-1,-1],
                      [-1,-1,0,-1],[1,-1,0,-1],[-1,1,0,-1],[1,1,0,-1],
                      [-1,-1,1,-1],[0,-1,1,-1],[1,-1,1,-1],[-1,0,1,-1],[1,0,1,-1],[-1,1,1,-1],[0,1,1,-1],[1,1,1,-1],
                      [-1,-1,-1,0],[1,-1,-1,0],[-1,1,-1,0],[1,1,-1,0],[-1,-1,1,0],[1,-1,1,0],[-1,1,1,0],[1,1,1,0],
                      [-1,-1,-1,1],[0,-1,-1,1],[1,-1,-1,1],[-1,0,-1,1],[1,0,-1,1],[-1,1,-1,1],[0,1,-1,1],[1,1,-1,1],
                      [-1,-1,0,1],[1,-1,0,1],[-1,1,0,1],[1,1,0,1],
                      [-1,-1,1,1],[0,-1,1,1],[1,-1,1,1],[-1,0,1,1],[1,0,1,1],[-1,1,1,1],[0,1,1,1],[1,1,1,1])$
nodesSer4xp3 : matrix([-1,-1,-1,-1],[-1/3,-1,-1,-1],[1/3,-1,-1,-1],[1,-1,-1,-1],[-1,-1/3,-1,-1],[1,-1/3,-1,-1],[-1,1/3,-1,-1],[1,1/3,-1,-1],[-1,1,-1,-1],[-1/3,1,-1,-1],[1/3,1,-1,-1],[1,1,-1,-1],
                      [-1,-1,-1/3,-1],[1,-1,-1/3,-1],[-1,1,-1/3,-1],[1,1,-1/3,-1],
                      [-1,-1,1/3,-1],[1,-1,1/3,-1],[-1,1,1/3,-1],[1,1,1/3,-1],
                      [-1,-1,1,-1],[-1/3,-1,1,-1],[1/3,-1,1,-1],[1,-1,1,-1],[-1,-1/3,1,-1],[1,-1/3,1,-1],[-1,1/3,1,-1],[1,1/3,1,-1],[-1,1,1,-1],[-1/3,1,1,-1],[1/3,1,1,-1],[1,1,1,-1],
                      [-1,-1,-1,-1/3],[1,-1,-1,-1/3],[-1,1,-1,-1/3],[1,1,-1,-1/3],
                      [-1,-1,1,-1/3],[1,-1,1,-1/3],[-1,1,1,-1/3],[1,1,1,-1/3],
                      [-1,-1,-1,1/3],[1,-1,-1,1/3],[-1,1,-1,1/3],[1,1,-1,1/3],
                      [-1,-1,1,1/3],[1,-1,1,1/3],[-1,1,1,1/3],[1,1,1,1/3],
                      [-1,-1,-1,1],[-1/3,-1,-1,1],[1/3,-1,-1,1],[1,-1,-1,1],[-1,-1/3,-1,1],[1,-1/3,-1,1],[-1,1/3,-1,1],[1,1/3,-1,1],[-1,1,-1,1],[-1/3,1,-1,1],[1/3,1,-1,1],[1,1,-1,1],
                      [-1,-1,-1/3,1],[1,-1,-1/3,1],[-1,1,-1/3,1],[1,1,-1/3,1],
                      [-1,-1,1/3,1],[1,-1,1/3,1],[-1,1,1/3,1],[1,1,1/3,1],
                      [-1,-1,1,1],[-1/3,-1,1,1],[1/3,-1,1,1],[1,-1,1,1],[-1,-1/3,1,1],[1,-1/3,1,1],[-1,1/3,1,1],[1,1/3,1,1],[-1,1,1,1],[-1/3,1,1,1],[1/3,1,1,1],[1,1,1,1])$
nodesSer5xp1 : matrix([-1,-1,-1,-1,-1],[1,-1,-1,-1,-1],[-1,1,-1,-1,-1],[1,1,-1,-1,-1],[-1,-1,1,-1,-1],[1,-1,1,-1,-1],[-1,1,1,-1,-1],[1,1,1,-1,-1],
                      [-1,-1,-1,1,-1],[1,-1,-1,1,-1],[-1,1,-1,1,-1],[1,1,-1,1,-1],[-1,-1,1,1,-1],[1,-1,1,1,-1],[-1,1,1,1,-1],[1,1,1,1,-1],
                      [-1,-1,-1,-1,1],[1,-1,-1,-1,1],[-1,1,-1,-1,1],[1,1,-1,-1,1],[-1,-1,1,-1,1],[1,-1,1,-1,1],[-1,1,1,-1,1],[1,1,1,-1,1],
                      [-1,-1,-1,1,1],[1,-1,-1,1,1],[-1,1,-1,1,1],[1,1,-1,1,1],[-1,-1,1,1,1],[1,-1,1,1,1],[-1,1,1,1,1],[1,1,1,1,1])$
nodesSer5xp2 : matrix([-1,-1,-1,-1,-1],[0,-1,-1,-1,-1],[1,-1,-1,-1,-1],[-1,0,-1,-1,-1],[1,0,-1,-1,-1],[-1,1,-1,-1,-1],[0,1,-1,-1,-1],[1,1,-1,-1,-1],
                      [-1,-1,0,-1,-1],[1,-1,0,-1,-1],[-1,1,0,-1,-1],[1,1,0,-1,-1],
                      [-1,-1,1,-1,-1],[0,-1,1,-1,-1],[1,-1,1,-1,-1],[-1,0,1,-1,-1],[1,0,1,-1,-1],[-1,1,1,-1,-1],[0,1,1,-1,-1],[1,1,1,-1,-1],
                      [-1,-1,-1,0,-1],[1,-1,-1,0,-1],[-1,1,-1,0,-1],[1,1,-1,0,-1],[-1,-1,1,0,-1],[1,-1,1,0,-1],[-1,1,1,0,-1],[1,1,1,0,-1],
                      [-1,-1,-1,1,-1],[0,-1,-1,1,-1],[1,-1,-1,1,-1],[-1,0,-1,1,-1],[1,0,-1,1,-1],[-1,1,-1,1,-1],[0,1,-1,1,-1],[1,1,-1,1,-1],
                      [-1,-1,0,1,-1],[1,-1,0,1,-1],[-1,1,0,1,-1],[1,1,0,1,-1],
                      [-1,-1,1,1,-1],[0,-1,1,1,-1],[1,-1,1,1,-1],[-1,0,1,1,-1],[1,0,1,1,-1],[-1,1,1,1,-1],[0,1,1,1,-1],[1,1,1,1,-1],
                      [-1,-1,-1,-1,0],[1,-1,-1,-1,0],[-1,1,-1,-1,0],[1,1,-1,-1,0],[-1,-1,1,-1,0],[1,-1,1,-1,0],[-1,1,1,-1,0],[1,1,1,-1,0],
                      [-1,-1,-1,1,0],[1,-1,-1,1,0],[-1,1,-1,1,0],[1,1,-1,1,0],[-1,-1,1,1,0],[1,-1,1,1,0],[-1,1,1,1,0],[1,1,1,1,0],
                      [-1,-1,-1,-1,1],[0,-1,-1,-1,1],[1,-1,-1,-1,1],[-1,0,-1,-1,1],[1,0,-1,-1,1],[-1,1,-1,-1,1],[0,1,-1,-1,1],[1,1,-1,-1,1],
                      [-1,-1,0,-1,1],[1,-1,0,-1,1],[-1,1,0,-1,1],[1,1,0,-1,1],
                      [-1,-1,1,-1,1],[0,-1,1,-1,1],[1,-1,1,-1,1],[-1,0,1,-1,1],[1,0,1,-1,1],[-1,1,1,-1,1],[0,1,1,-1,1],[1,1,1,-1,1],
                      [-1,-1,-1,0,1],[1,-1,-1,0,1],[-1,1,-1,0,1],[1,1,-1,0,1],[-1,-1,1,0,1],[1,-1,1,0,1],[-1,1,1,0,1],[1,1,1,0,1],
                      [-1,-1,-1,1,1],[0,-1,-1,1,1],[1,-1,-1,1,1],[-1,0,-1,1,1],[1,0,-1,1,1],[-1,1,-1,1,1],[0,1,-1,1,1],[1,1,-1,1,1],
                      [-1,-1,0,1,1],[1,-1,0,1,1],[-1,1,0,1,1],[1,1,0,1,1],
                      [-1,-1,1,1,1],[0,-1,1,1,1],[1,-1,1,1,1],[-1,0,1,1,1],[1,0,1,1,1],[-1,1,1,1,1],[0,1,1,1,1],[1,1,1,1,1])$
nodesSer5xp3 : matrix([-1,-1,-1,-1,-1],[-1/3,-1,-1,-1,-1],[1/3,-1,-1,-1,-1],[1,-1,-1,-1,-1],[-1,-1/3,-1,-1,-1],[1,-1/3,-1,-1,-1],[-1,1/3,-1,-1,-1],[1,1/3,-1,-1,-1],[-1,1,-1,-1,-1],[-1/3,1,-1,-1,-1],[1/3,1,-1,-1,-1],[1,1,-1,-1,-1],
                      [-1,-1,-1/3,-1,-1],[1,-1,-1/3,-1,-1],[-1,1,-1/3,-1,-1],[1,1,-1/3,-1,-1],
                      [-1,-1,1/3,-1,-1],[1,-1,1/3,-1,-1],[-1,1,1/3,-1,-1],[1,1,1/3,-1,-1],
                      [-1,-1,1,-1,-1],[-1/3,-1,1,-1,-1],[1/3,-1,1,-1,-1],[1,-1,1,-1,-1],[-1,-1/3,1,-1,-1],[1,-1/3,1,-1,-1],[-1,1/3,1,-1,-1],[1,1/3,1,-1,-1],[-1,1,1,-1,-1],[-1/3,1,1,-1,-1],[1/3,1,1,-1,-1],[1,1,1,-1,-1],
                      [-1,-1,-1,-1/3,-1],[1,-1,-1,-1/3,-1],[-1,1,-1,-1/3,-1],[1,1,-1,-1/3,-1],
                      [-1,-1,1,-1/3,-1],[1,-1,1,-1/3,-1],[-1,1,1,-1/3,-1],[1,1,1,-1/3,-1],
                      [-1,-1,-1,1/3,-1],[1,-1,-1,1/3,-1],[-1,1,-1,1/3,-1],[1,1,-1,1/3,-1],
                      [-1,-1,1,1/3,-1],[1,-1,1,1/3,-1],[-1,1,1,1/3,-1],[1,1,1,1/3,-1],
                      [-1,-1,-1,1,-1],[-1/3,-1,-1,1,-1],[1/3,-1,-1,1,-1],[1,-1,-1,1,-1],[-1,-1/3,-1,1,-1],[1,-1/3,-1,1,-1],[-1,1/3,-1,1,-1],[1,1/3,-1,1,-1],[-1,1,-1,1,-1],[-1/3,1,-1,1,-1],[1/3,1,-1,1,-1],[1,1,-1,1,-1],
                      [-1,-1,-1/3,1,-1],[1,-1,-1/3,1,-1],[-1,1,-1/3,1,-1],[1,1,-1/3,1,-1],
                      [-1,-1,1/3,1,-1],[1,-1,1/3,1,-1],[-1,1,1/3,1,-1],[1,1,1/3,1,-1],
                      [-1,-1,1,1,-1],[-1/3,-1,1,1,-1],[1/3,-1,1,1,-1],[1,-1,1,1,-1],[-1,-1/3,1,1,-1],[1,-1/3,1,1,-1],[-1,1/3,1,1,-1],[1,1/3,1,1,-1],[-1,1,1,1,-1],[-1/3,1,1,1,-1],[1/3,1,1,1,-1],[1,1,1,1,-1],
                      [-1,-1,-1,-1,-1/3],[1,-1,-1,-1,-1/3],[-1,1,-1,-1,-1/3],[1,1,-1,-1,-1/3],
                      [-1,-1,1,-1,-1/3],[1,-1,1,-1,-1/3],[-1,1,1,-1,-1/3],[1,1,1,-1,-1/3],
                      [-1,-1,-1,1,-1/3],[1,-1,-1,1,-1/3],[-1,1,-1,1,-1/3],[1,1,-1,1,-1/3],
                      [-1,-1,1,1,-1/3],[1,-1,1,1,-1/3],[-1,1,1,1,-1/3],[1,1,1,1,-1/3],
                      [-1,-1,-1,-1,1/3],[1,-1,-1,-1,1/3],[-1,1,-1,-1,1/3],[1,1,-1,-1,1/3],
                      [-1,-1,1,-1,1/3],[1,-1,1,-1,1/3],[-1,1,1,-1,1/3],[1,1,1,-1,1/3],
                      [-1,-1,-1,1,1/3],[1,-1,-1,1,1/3],[-1,1,-1,1,1/3],[1,1,-1,1,1/3],
                      [-1,-1,1,1,1/3],[1,-1,1,1,1/3],[-1,1,1,1,1/3],[1,1,1,1,1/3],
                      [-1,-1,-1,-1,1],[-1/3,-1,-1,-1,1],[1/3,-1,-1,-1,1],[1,-1,-1,-1,1],[-1,-1/3,-1,-1,1],[1,-1/3,-1,-1,1],[-1,1/3,-1,-1,1],[1,1/3,-1,-1,1],[-1,1,-1,-1,1],[-1/3,1,-1,-1,1],[1/3,1,-1,-1,1],[1,1,-1,-1,1],
                      [-1,-1,-1/3,-1,1],[1,-1,-1/3,-1,1],[-1,1,-1/3,-1,1],[1,1,-1/3,-1,1],
                      [-1,-1,1/3,-1,1],[1,-1,1/3,-1,1],[-1,1,1/3,-1,1],[1,1,1/3,-1,1],
                      [-1,-1,1,-1,1],[-1/3,-1,1,-1,1],[1/3,-1,1,-1,1],[1,-1,1,-1,1],[-1,-1/3,1,-1,1],[1,-1/3,1,-1,1],[-1,1/3,1,-1,1],[1,1/3,1,-1,1],[-1,1,1,-1,1],[-1/3,1,1,-1,1],[1/3,1,1,-1,1],[1,1,1,-1,1],
                      [-1,-1,-1,-1/3,1],[1,-1,-1,-1/3,1],[-1,1,-1,-1/3,1],[1,1,-1,-1/3,1],
                      [-1,-1,1,-1/3,1],[1,-1,1,-1/3,1],[-1,1,1,-1/3,1],[1,1,1,-1/3,1],
                      [-1,-1,-1,1/3,1],[1,-1,-1,1/3,1],[-1,1,-1,1/3,1],[1,1,-1,1/3,1],
                      [-1,-1,1,1/3,1],[1,-1,1,1/3,1],[-1,1,1,1/3,1],[1,1,1,1/3,1],
                      [-1,-1,-1,1,1],[-1/3,-1,-1,1,1],[1/3,-1,-1,1,1],[1,-1,-1,1,1],[-1,-1/3,-1,1,1],[1,-1/3,-1,1,1],[-1,1/3,-1,1,1],[1,1/3,-1,1,1],[-1,1,-1,1,1],[-1/3,1,-1,1,1],[1/3,1,-1,1,1],[1,1,-1,1,1],
                      [-1,-1,-1/3,1,1],[1,-1,-1/3,1,1],[-1,1,-1/3,1,1],[1,1,-1/3,1,1],
                      [-1,-1,1/3,1,1],[1,-1,1/3,1,1],[-1,1,1/3,1,1],[1,1,1/3,1,1],
                      [-1,-1,1,1,1],[-1/3,-1,1,1,1],[1/3,-1,1,1,1],[1,-1,1,1,1],[-1,-1/3,1,1,1],[1,-1/3,1,1,1],[-1,1/3,1,1,1],[1,1/3,1,1,1],[-1,1,1,1,1],[-1/3,1,1,1,1],[1/3,1,1,1,1],[1,1,1,1,1])$

/* Function that returns the nodes for given basis,
   dimensionality and polynomial order. */
getNodes(basisType, dim, polyOrder) := block([],
  nodes : 0,
  if (basisType = "Ser") then (
    /* Serendipity basis. */
    nodes : eval_string(sconcat("nodes",basisType,dim,"xp",polyOrder))
  ) elseif(basisType = "Tensor") then (
    /* Tensor product basis. */
    if (dim=1) or (dim=2 and polyOrder=1) then (
      nodes : eval_string(sconcat("nodesSer",dim,"xp",polyOrder))
    ) else (
      nodes1D : eval_string(sconcat("nodesSer1xp",polyOrder)),
      n1D     : length(nodes1D),
      nodes   : nodes1D,
      for d : 2 thru dim do (
        numNodesC : length(nodes),
        numNodes  : n1D^d,
        iR : 0,
        for n : 1 thru ((n1D^d-numNodesC)/n1D) do (
          for i : 1 thru n1D do (
            iR : iR+1,
            nodes : addrow(nodes,nodes[iR])
          )
        ),
        newCoord : [],
        for n : 1 thru n1D do (
          newCoord : append(newCoord,makelist(nodes1D[n][1],i,1,numNodes/n1D))
        ),
        nodes : addcol(nodes,newCoord)
      )
    )
  ) else (
    error(basisType="unknown")
  ),
  return(nodes)
)$
