load("/Users/JunoRavin/gkyl/cas-scripts/modal-basis.mac");
load("/Users/JunoRavin/gkyl/cas-scripts/out-scripts.mac");
fpprec : 24$

varsC : [x]$

fh : openw("/Users/JunoRavin/gkyl/cas-scripts/maxima-out/SerendipMaxwell1x.lua");

basisC : makelist(gsOrthoNorm(varsC, makeSerendipBasis(varsC, i)), i, 1, 4)$

dx : [dx0]$

for i : 1 thru 4 do (
  exOld : transpose(makelist(em[i], i, 1, length(basisC[i]))),
  eyOld : transpose(makelist(em[i], i, length(basisC[i])+1, 2*length(basisC[i]))),
  ezOld : transpose(makelist(em[i], i, 2*length(basisC[i])+1, 3*length(basisC[i]))),
  bxOld : transpose(makelist(em[i], i, 3*length(basisC[i])+1, 4*length(basisC[i]))),
  byOld : transpose(makelist(em[i], i, 4*length(basisC[i])+1, 5*length(basisC[i]))),
  bzOld : transpose(makelist(em[i], i, 5*length(basisC[i])+1, 6*length(basisC[i]))),
  ephiOld : transpose(makelist(em[i], i, 6*length(basisC[i])+1, 7*length(basisC[i]))),
  bpsiOld : transpose(makelist(em[i], i, 7*length(basisC[i])+1, 8*length(basisC[i]))),
  Gx : calcWeightedGradStiffMatrix(x, varsC, 1, basisC[i]),
  ex : (2.0/dx[1]*chi*lightSpeed^2*Gx) . ephiOld,
  ey : (2.0/dx[1]*lightSpeed^2*Gx) . bzOld,
  ez : (-1.0*2.0/dx[1]*lightSpeed^2*Gx) . byOld,
  bx : (2.0/dx[1]*gamma*Gx) . bpsiOld,
  by : (-1.0*2.0/dx[1]*Gx) . ezOld,
  bz : (2.0/dx[1]*Gx) . eyOld,
  ephi: (2.0/dx[1]*chi*Gx) . exOld,
  bpsi: (2.0/dx[1]*gamma*lightSpeed^2*Gx) . bxOld,
  printf(fh, "_M.em[~a] = function (em, out, dx) ~%", i),
  printf(fh, "   local dx0 = dx[1] ~%"),
  writeLuaIncrExprs(append(colVecToList(ex), colVecToList(ey), colVecToList(ez), colVecToList(bx), colVecToList(by), colVecToList(bz), colVecToList(ephi), colVecToList(bpsi))),
  printf(fh, "end ~%")
);

printf(fh, "return _M ~%");
close(fh);

  
