#include <VlasovModDecl.h> 
void VlasovSurfElc2x3vMax_VX_P1(const double *w, const double *dxv, const double *Ein, const double *fl, const double *fr, double *outl, double *outr) 
{ 
// w: Cell-center coordinates. dxv[NDIM]: Cell spacing. E: electric field, fl/fr: Distribution function in left/right cells 
// outl/outr: output distribution function in left/right cells 
  double dv1 = 2/dxv[2]; 
  const double *E = &Ein[0]; 
  double incr[6]; 

  const double Emid = 0.5*E[0]; 
  if (Emid>0) { 
  incr[0] = 0.4330127018922193*E[0]*fl[3]*dv1+0.25*E[2]*fl[2]*dv1+0.25*E[1]*fl[1]*dv1+0.25*E[0]*fl[0]*dv1; 
  incr[1] = 0.4330127018922193*E[1]*fl[3]*dv1+0.25*E[0]*fl[1]*dv1+0.25*fl[0]*E[1]*dv1; 
  incr[2] = 0.4330127018922193*E[2]*fl[3]*dv1+0.25*E[0]*fl[2]*dv1+0.25*fl[0]*E[2]*dv1; 
  incr[3] = (-0.75*E[0]*fl[3]*dv1)-0.4330127018922193*E[2]*fl[2]*dv1-0.4330127018922193*E[1]*fl[1]*dv1-0.4330127018922193*E[0]*fl[0]*dv1; 
  incr[4] = 0.25*E[0]*fl[4]*dv1; 
  incr[5] = 0.25*E[0]*fl[5]*dv1; 

  outr[0] += incr[0]; 
  outr[1] += incr[1]; 
  outr[2] += incr[2]; 
  outr[3] += incr[3]; 
  outr[4] += incr[4]; 
  outr[5] += incr[5]; 

  outl[0] += -1.0*incr[0]; 
  outl[1] += -1.0*incr[1]; 
  outl[2] += -1.0*incr[2]; 
  outl[3] += incr[3]; 
  outl[4] += -1.0*incr[4]; 
  outl[5] += -1.0*incr[5]; 
  } else { 
  incr[0] = (-0.4330127018922193*E[0]*fr[3]*dv1)+0.25*E[2]*fr[2]*dv1+0.25*E[1]*fr[1]*dv1+0.25*E[0]*fr[0]*dv1; 
  incr[1] = (-0.4330127018922193*E[1]*fr[3]*dv1)+0.25*E[0]*fr[1]*dv1+0.25*fr[0]*E[1]*dv1; 
  incr[2] = (-0.4330127018922193*E[2]*fr[3]*dv1)+0.25*E[0]*fr[2]*dv1+0.25*fr[0]*E[2]*dv1; 
  incr[3] = 0.75*E[0]*fr[3]*dv1-0.4330127018922193*E[2]*fr[2]*dv1-0.4330127018922193*E[1]*fr[1]*dv1-0.4330127018922193*E[0]*fr[0]*dv1; 
  incr[4] = 0.25*E[0]*fr[4]*dv1; 
  incr[5] = 0.25*E[0]*fr[5]*dv1; 

  outr[0] += incr[0]; 
  outr[1] += incr[1]; 
  outr[2] += incr[2]; 
  outr[3] += incr[3]; 
  outr[4] += incr[4]; 
  outr[5] += incr[5]; 

  outl[0] += -1.0*incr[0]; 
  outl[1] += -1.0*incr[1]; 
  outl[2] += -1.0*incr[2]; 
  outl[3] += incr[3]; 
  outl[4] += -1.0*incr[4]; 
  outl[5] += -1.0*incr[5]; 
  } 
} 
void VlasovSurfElc2x3vMax_VX_P2(const double *w, const double *dxv, const double *Ein, const double *fl, const double *fr, double *outl, double *outr) 
{ 
// w: Cell-center coordinates. dxv[NDIM]: Cell spacing. E: electric field, fl/fr: Distribution function in left/right cells 
// outl/outr: output distribution function in left/right cells 
  double dv1 = 2/dxv[2]; 
  const double *E = &Ein[0]; 
  double incr[21]; 

  const double Emid = (-0.5590169943749475*E[5])-0.5590169943749475*E[4]+0.5*E[0]; 
  if (Emid>0) { 
  incr[0] = 0.5590169943749475*E[0]*fl[18]*dv1+0.25*E[5]*fl[17]*dv1+0.25*E[4]*fl[16]*dv1+0.4330127018922193*E[2]*fl[8]*dv1+0.4330127018922193*E[1]*fl[7]*dv1+0.25*E[3]*fl[6]*dv1+0.4330127018922193*E[0]*fl[3]*dv1+0.25*E[2]*fl[2]*dv1+0.25*E[1]*fl[1]*dv1+0.25*E[0]*fl[0]*dv1; 
  incr[1] = 0.5590169943749475*E[1]*fl[18]*dv1+0.223606797749979*E[1]*fl[16]*dv1+0.4330127018922193*E[3]*fl[8]*dv1+0.3872983346207416*E[4]*fl[7]*dv1+0.4330127018922193*E[0]*fl[7]*dv1+0.25*E[2]*fl[6]*dv1+0.223606797749979*fl[1]*E[4]*dv1+0.4330127018922193*E[1]*fl[3]*dv1+0.25*fl[2]*E[3]*dv1+0.25*E[0]*fl[1]*dv1+0.25*fl[0]*E[1]*dv1; 
  incr[2] = 0.5590169943749475*E[2]*fl[18]*dv1+0.223606797749979*E[2]*fl[17]*dv1+0.3872983346207416*E[5]*fl[8]*dv1+0.4330127018922193*E[0]*fl[8]*dv1+0.4330127018922193*E[3]*fl[7]*dv1+0.25*E[1]*fl[6]*dv1+0.223606797749979*fl[2]*E[5]*dv1+0.4330127018922193*E[2]*fl[3]*dv1+0.25*fl[1]*E[3]*dv1+0.25*E[0]*fl[2]*dv1+0.25*fl[0]*E[2]*dv1; 
  incr[3] = (-0.9682458365518543*E[0]*fl[18]*dv1)-0.4330127018922193*E[5]*fl[17]*dv1-0.4330127018922193*E[4]*fl[16]*dv1-0.75*E[2]*fl[8]*dv1-0.75*E[1]*fl[7]*dv1-0.4330127018922193*E[3]*fl[6]*dv1-0.75*E[0]*fl[3]*dv1-0.4330127018922193*E[2]*fl[2]*dv1-0.4330127018922193*E[1]*fl[1]*dv1-0.4330127018922193*E[0]*fl[0]*dv1; 
  incr[4] = 0.4330127018922193*E[0]*fl[11]*dv1+0.25*E[2]*fl[10]*dv1+0.25*E[1]*fl[9]*dv1+0.25*E[0]*fl[4]*dv1; 
  incr[5] = 0.4330127018922193*E[0]*fl[14]*dv1+0.25*E[2]*fl[13]*dv1+0.25*E[1]*fl[12]*dv1+0.25*E[0]*fl[5]*dv1; 
  incr[6] = 0.5590169943749475*E[3]*fl[18]*dv1+0.223606797749979*E[3]*fl[17]*dv1+0.223606797749979*E[3]*fl[16]*dv1+0.4330127018922193*E[1]*fl[8]*dv1+0.4330127018922193*E[2]*fl[7]*dv1+0.223606797749979*E[5]*fl[6]*dv1+0.223606797749979*E[4]*fl[6]*dv1+0.25*E[0]*fl[6]*dv1+0.4330127018922193*E[3]*fl[3]*dv1+0.25*fl[0]*E[3]*dv1+0.25*E[1]*fl[2]*dv1+0.25*fl[1]*E[2]*dv1; 
  incr[7] = (-0.9682458365518543*E[1]*fl[18]*dv1)-0.3872983346207416*E[1]*fl[16]*dv1-0.75*E[3]*fl[8]*dv1-0.6708203932499369*E[4]*fl[7]*dv1-0.75*E[0]*fl[7]*dv1-0.4330127018922193*E[2]*fl[6]*dv1-0.3872983346207416*fl[1]*E[4]*dv1-0.75*E[1]*fl[3]*dv1-0.4330127018922193*fl[2]*E[3]*dv1-0.4330127018922193*E[0]*fl[1]*dv1-0.4330127018922193*fl[0]*E[1]*dv1; 
  incr[8] = (-0.9682458365518543*E[2]*fl[18]*dv1)-0.3872983346207416*E[2]*fl[17]*dv1-0.6708203932499369*E[5]*fl[8]*dv1-0.75*E[0]*fl[8]*dv1-0.75*E[3]*fl[7]*dv1-0.4330127018922193*E[1]*fl[6]*dv1-0.3872983346207416*fl[2]*E[5]*dv1-0.75*E[2]*fl[3]*dv1-0.4330127018922193*fl[1]*E[3]*dv1-0.4330127018922193*E[0]*fl[2]*dv1-0.4330127018922193*fl[0]*E[2]*dv1; 
  incr[9] = 0.4330127018922193*E[1]*fl[11]*dv1+0.25*E[3]*fl[10]*dv1+0.223606797749979*E[4]*fl[9]*dv1+0.25*E[0]*fl[9]*dv1+0.25*E[1]*fl[4]*dv1; 
  incr[10] = 0.4330127018922193*E[2]*fl[11]*dv1+0.223606797749979*E[5]*fl[10]*dv1+0.25*E[0]*fl[10]*dv1+0.25*E[3]*fl[9]*dv1+0.25*E[2]*fl[4]*dv1; 
  incr[11] = (-0.75*E[0]*fl[11]*dv1)-0.4330127018922193*E[2]*fl[10]*dv1-0.4330127018922193*E[1]*fl[9]*dv1-0.4330127018922193*E[0]*fl[4]*dv1; 
  incr[12] = 0.4330127018922193*E[1]*fl[14]*dv1+0.25*E[3]*fl[13]*dv1+0.223606797749979*E[4]*fl[12]*dv1+0.25*E[0]*fl[12]*dv1+0.25*E[1]*fl[5]*dv1; 
  incr[13] = 0.4330127018922193*E[2]*fl[14]*dv1+0.223606797749979*E[5]*fl[13]*dv1+0.25*E[0]*fl[13]*dv1+0.25*E[3]*fl[12]*dv1+0.25*E[2]*fl[5]*dv1; 
  incr[14] = (-0.75*E[0]*fl[14]*dv1)-0.4330127018922193*E[2]*fl[13]*dv1-0.4330127018922193*E[1]*fl[12]*dv1-0.4330127018922193*E[0]*fl[5]*dv1; 
  incr[15] = 0.25*E[0]*fl[15]*dv1; 
  incr[16] = 0.5590169943749475*E[4]*fl[18]*dv1+0.159719141249985*E[4]*fl[16]*dv1+0.25*E[0]*fl[16]*dv1+0.3872983346207416*E[1]*fl[7]*dv1+0.223606797749979*E[3]*fl[6]*dv1+0.4330127018922193*fl[3]*E[4]*dv1+0.25*fl[0]*E[4]*dv1+0.223606797749979*E[1]*fl[1]*dv1; 
  incr[17] = 0.5590169943749475*E[5]*fl[18]*dv1+0.159719141249985*E[5]*fl[17]*dv1+0.25*E[0]*fl[17]*dv1+0.3872983346207416*E[2]*fl[8]*dv1+0.223606797749979*E[3]*fl[6]*dv1+0.4330127018922193*fl[3]*E[5]*dv1+0.25*fl[0]*E[5]*dv1+0.223606797749979*E[2]*fl[2]*dv1; 
  incr[18] = 1.25*E[0]*fl[18]*dv1+0.5590169943749475*E[5]*fl[17]*dv1+0.5590169943749475*E[4]*fl[16]*dv1+0.9682458365518543*E[2]*fl[8]*dv1+0.9682458365518543*E[1]*fl[7]*dv1+0.5590169943749475*E[3]*fl[6]*dv1+0.9682458365518543*E[0]*fl[3]*dv1+0.5590169943749475*E[2]*fl[2]*dv1+0.5590169943749475*E[1]*fl[1]*dv1+0.5590169943749475*E[0]*fl[0]*dv1; 
  incr[19] = 0.25*E[0]*fl[19]*dv1; 
  incr[20] = 0.25*E[0]*fl[20]*dv1; 

  outr[0] += incr[0]; 
  outr[1] += incr[1]; 
  outr[2] += incr[2]; 
  outr[3] += incr[3]; 
  outr[4] += incr[4]; 
  outr[5] += incr[5]; 
  outr[6] += incr[6]; 
  outr[7] += incr[7]; 
  outr[8] += incr[8]; 
  outr[9] += incr[9]; 
  outr[10] += incr[10]; 
  outr[11] += incr[11]; 
  outr[12] += incr[12]; 
  outr[13] += incr[13]; 
  outr[14] += incr[14]; 
  outr[15] += incr[15]; 
  outr[16] += incr[16]; 
  outr[17] += incr[17]; 
  outr[18] += incr[18]; 
  outr[19] += incr[19]; 
  outr[20] += incr[20]; 

  outl[0] += -1.0*incr[0]; 
  outl[1] += -1.0*incr[1]; 
  outl[2] += -1.0*incr[2]; 
  outl[3] += incr[3]; 
  outl[4] += -1.0*incr[4]; 
  outl[5] += -1.0*incr[5]; 
  outl[6] += -1.0*incr[6]; 
  outl[7] += incr[7]; 
  outl[8] += incr[8]; 
  outl[9] += -1.0*incr[9]; 
  outl[10] += -1.0*incr[10]; 
  outl[11] += incr[11]; 
  outl[12] += -1.0*incr[12]; 
  outl[13] += -1.0*incr[13]; 
  outl[14] += incr[14]; 
  outl[15] += -1.0*incr[15]; 
  outl[16] += -1.0*incr[16]; 
  outl[17] += -1.0*incr[17]; 
  outl[18] += -1.0*incr[18]; 
  outl[19] += -1.0*incr[19]; 
  outl[20] += -1.0*incr[20]; 
  } else { 
  incr[0] = 0.5590169943749475*E[0]*fr[18]*dv1+0.25*E[5]*fr[17]*dv1+0.25*E[4]*fr[16]*dv1-0.4330127018922193*E[2]*fr[8]*dv1-0.4330127018922193*E[1]*fr[7]*dv1+0.25*E[3]*fr[6]*dv1-0.4330127018922193*E[0]*fr[3]*dv1+0.25*E[2]*fr[2]*dv1+0.25*E[1]*fr[1]*dv1+0.25*E[0]*fr[0]*dv1; 
  incr[1] = 0.5590169943749475*E[1]*fr[18]*dv1+0.223606797749979*E[1]*fr[16]*dv1-0.4330127018922193*E[3]*fr[8]*dv1-0.3872983346207416*E[4]*fr[7]*dv1-0.4330127018922193*E[0]*fr[7]*dv1+0.25*E[2]*fr[6]*dv1+0.223606797749979*fr[1]*E[4]*dv1-0.4330127018922193*E[1]*fr[3]*dv1+0.25*fr[2]*E[3]*dv1+0.25*E[0]*fr[1]*dv1+0.25*fr[0]*E[1]*dv1; 
  incr[2] = 0.5590169943749475*E[2]*fr[18]*dv1+0.223606797749979*E[2]*fr[17]*dv1-0.3872983346207416*E[5]*fr[8]*dv1-0.4330127018922193*E[0]*fr[8]*dv1-0.4330127018922193*E[3]*fr[7]*dv1+0.25*E[1]*fr[6]*dv1+0.223606797749979*fr[2]*E[5]*dv1-0.4330127018922193*E[2]*fr[3]*dv1+0.25*fr[1]*E[3]*dv1+0.25*E[0]*fr[2]*dv1+0.25*fr[0]*E[2]*dv1; 
  incr[3] = (-0.9682458365518543*E[0]*fr[18]*dv1)-0.4330127018922193*E[5]*fr[17]*dv1-0.4330127018922193*E[4]*fr[16]*dv1+0.75*E[2]*fr[8]*dv1+0.75*E[1]*fr[7]*dv1-0.4330127018922193*E[3]*fr[6]*dv1+0.75*E[0]*fr[3]*dv1-0.4330127018922193*E[2]*fr[2]*dv1-0.4330127018922193*E[1]*fr[1]*dv1-0.4330127018922193*E[0]*fr[0]*dv1; 
  incr[4] = (-0.4330127018922193*E[0]*fr[11]*dv1)+0.25*E[2]*fr[10]*dv1+0.25*E[1]*fr[9]*dv1+0.25*E[0]*fr[4]*dv1; 
  incr[5] = (-0.4330127018922193*E[0]*fr[14]*dv1)+0.25*E[2]*fr[13]*dv1+0.25*E[1]*fr[12]*dv1+0.25*E[0]*fr[5]*dv1; 
  incr[6] = 0.5590169943749475*E[3]*fr[18]*dv1+0.223606797749979*E[3]*fr[17]*dv1+0.223606797749979*E[3]*fr[16]*dv1-0.4330127018922193*E[1]*fr[8]*dv1-0.4330127018922193*E[2]*fr[7]*dv1+0.223606797749979*E[5]*fr[6]*dv1+0.223606797749979*E[4]*fr[6]*dv1+0.25*E[0]*fr[6]*dv1-0.4330127018922193*E[3]*fr[3]*dv1+0.25*fr[0]*E[3]*dv1+0.25*E[1]*fr[2]*dv1+0.25*fr[1]*E[2]*dv1; 
  incr[7] = (-0.9682458365518543*E[1]*fr[18]*dv1)-0.3872983346207416*E[1]*fr[16]*dv1+0.75*E[3]*fr[8]*dv1+0.6708203932499369*E[4]*fr[7]*dv1+0.75*E[0]*fr[7]*dv1-0.4330127018922193*E[2]*fr[6]*dv1-0.3872983346207416*fr[1]*E[4]*dv1+0.75*E[1]*fr[3]*dv1-0.4330127018922193*fr[2]*E[3]*dv1-0.4330127018922193*E[0]*fr[1]*dv1-0.4330127018922193*fr[0]*E[1]*dv1; 
  incr[8] = (-0.9682458365518543*E[2]*fr[18]*dv1)-0.3872983346207416*E[2]*fr[17]*dv1+0.6708203932499369*E[5]*fr[8]*dv1+0.75*E[0]*fr[8]*dv1+0.75*E[3]*fr[7]*dv1-0.4330127018922193*E[1]*fr[6]*dv1-0.3872983346207416*fr[2]*E[5]*dv1+0.75*E[2]*fr[3]*dv1-0.4330127018922193*fr[1]*E[3]*dv1-0.4330127018922193*E[0]*fr[2]*dv1-0.4330127018922193*fr[0]*E[2]*dv1; 
  incr[9] = (-0.4330127018922193*E[1]*fr[11]*dv1)+0.25*E[3]*fr[10]*dv1+0.223606797749979*E[4]*fr[9]*dv1+0.25*E[0]*fr[9]*dv1+0.25*E[1]*fr[4]*dv1; 
  incr[10] = (-0.4330127018922193*E[2]*fr[11]*dv1)+0.223606797749979*E[5]*fr[10]*dv1+0.25*E[0]*fr[10]*dv1+0.25*E[3]*fr[9]*dv1+0.25*E[2]*fr[4]*dv1; 
  incr[11] = 0.75*E[0]*fr[11]*dv1-0.4330127018922193*E[2]*fr[10]*dv1-0.4330127018922193*E[1]*fr[9]*dv1-0.4330127018922193*E[0]*fr[4]*dv1; 
  incr[12] = (-0.4330127018922193*E[1]*fr[14]*dv1)+0.25*E[3]*fr[13]*dv1+0.223606797749979*E[4]*fr[12]*dv1+0.25*E[0]*fr[12]*dv1+0.25*E[1]*fr[5]*dv1; 
  incr[13] = (-0.4330127018922193*E[2]*fr[14]*dv1)+0.223606797749979*E[5]*fr[13]*dv1+0.25*E[0]*fr[13]*dv1+0.25*E[3]*fr[12]*dv1+0.25*E[2]*fr[5]*dv1; 
  incr[14] = 0.75*E[0]*fr[14]*dv1-0.4330127018922193*E[2]*fr[13]*dv1-0.4330127018922193*E[1]*fr[12]*dv1-0.4330127018922193*E[0]*fr[5]*dv1; 
  incr[15] = 0.25*E[0]*fr[15]*dv1; 
  incr[16] = 0.5590169943749475*E[4]*fr[18]*dv1+0.159719141249985*E[4]*fr[16]*dv1+0.25*E[0]*fr[16]*dv1-0.3872983346207416*E[1]*fr[7]*dv1+0.223606797749979*E[3]*fr[6]*dv1-0.4330127018922193*fr[3]*E[4]*dv1+0.25*fr[0]*E[4]*dv1+0.223606797749979*E[1]*fr[1]*dv1; 
  incr[17] = 0.5590169943749475*E[5]*fr[18]*dv1+0.159719141249985*E[5]*fr[17]*dv1+0.25*E[0]*fr[17]*dv1-0.3872983346207416*E[2]*fr[8]*dv1+0.223606797749979*E[3]*fr[6]*dv1-0.4330127018922193*fr[3]*E[5]*dv1+0.25*fr[0]*E[5]*dv1+0.223606797749979*E[2]*fr[2]*dv1; 
  incr[18] = 1.25*E[0]*fr[18]*dv1+0.5590169943749475*E[5]*fr[17]*dv1+0.5590169943749475*E[4]*fr[16]*dv1-0.9682458365518543*E[2]*fr[8]*dv1-0.9682458365518543*E[1]*fr[7]*dv1+0.5590169943749475*E[3]*fr[6]*dv1-0.9682458365518543*E[0]*fr[3]*dv1+0.5590169943749475*E[2]*fr[2]*dv1+0.5590169943749475*E[1]*fr[1]*dv1+0.5590169943749475*E[0]*fr[0]*dv1; 
  incr[19] = 0.25*E[0]*fr[19]*dv1; 
  incr[20] = 0.25*E[0]*fr[20]*dv1; 

  outr[0] += incr[0]; 
  outr[1] += incr[1]; 
  outr[2] += incr[2]; 
  outr[3] += incr[3]; 
  outr[4] += incr[4]; 
  outr[5] += incr[5]; 
  outr[6] += incr[6]; 
  outr[7] += incr[7]; 
  outr[8] += incr[8]; 
  outr[9] += incr[9]; 
  outr[10] += incr[10]; 
  outr[11] += incr[11]; 
  outr[12] += incr[12]; 
  outr[13] += incr[13]; 
  outr[14] += incr[14]; 
  outr[15] += incr[15]; 
  outr[16] += incr[16]; 
  outr[17] += incr[17]; 
  outr[18] += incr[18]; 
  outr[19] += incr[19]; 
  outr[20] += incr[20]; 

  outl[0] += -1.0*incr[0]; 
  outl[1] += -1.0*incr[1]; 
  outl[2] += -1.0*incr[2]; 
  outl[3] += incr[3]; 
  outl[4] += -1.0*incr[4]; 
  outl[5] += -1.0*incr[5]; 
  outl[6] += -1.0*incr[6]; 
  outl[7] += incr[7]; 
  outl[8] += incr[8]; 
  outl[9] += -1.0*incr[9]; 
  outl[10] += -1.0*incr[10]; 
  outl[11] += incr[11]; 
  outl[12] += -1.0*incr[12]; 
  outl[13] += -1.0*incr[13]; 
  outl[14] += incr[14]; 
  outl[15] += -1.0*incr[15]; 
  outl[16] += -1.0*incr[16]; 
  outl[17] += -1.0*incr[17]; 
  outl[18] += -1.0*incr[18]; 
  outl[19] += -1.0*incr[19]; 
  outl[20] += -1.0*incr[20]; 
  } 
} 
void VlasovSurfElc2x3vMax_VY_P1(const double *w, const double *dxv, const double *Ein, const double *fl, const double *fr, double *outl, double *outr) 
{ 
// w: Cell-center coordinates. dxv[NDIM]: Cell spacing. E: electric field, fl/fr: Distribution function in left/right cells 
// outl/outr: output distribution function in left/right cells 
  double dv1 = 2/dxv[3]; 
  const double *E = &Ein[3]; 
  double incr[6]; 

  const double Emid = 0.5*E[0]; 
  if (Emid>0) { 
  incr[0] = 0.4330127018922193*E[0]*fl[4]*dv1+0.25*E[2]*fl[2]*dv1+0.25*E[1]*fl[1]*dv1+0.25*E[0]*fl[0]*dv1; 
  incr[1] = 0.4330127018922193*E[1]*fl[4]*dv1+0.25*E[0]*fl[1]*dv1+0.25*fl[0]*E[1]*dv1; 
  incr[2] = 0.4330127018922193*E[2]*fl[4]*dv1+0.25*E[0]*fl[2]*dv1+0.25*fl[0]*E[2]*dv1; 
  incr[3] = 0.25*E[0]*fl[3]*dv1; 
  incr[4] = (-0.75*E[0]*fl[4]*dv1)-0.4330127018922193*E[2]*fl[2]*dv1-0.4330127018922193*E[1]*fl[1]*dv1-0.4330127018922193*E[0]*fl[0]*dv1; 
  incr[5] = 0.25*E[0]*fl[5]*dv1; 

  outr[0] += incr[0]; 
  outr[1] += incr[1]; 
  outr[2] += incr[2]; 
  outr[3] += incr[3]; 
  outr[4] += incr[4]; 
  outr[5] += incr[5]; 

  outl[0] += -1.0*incr[0]; 
  outl[1] += -1.0*incr[1]; 
  outl[2] += -1.0*incr[2]; 
  outl[3] += -1.0*incr[3]; 
  outl[4] += incr[4]; 
  outl[5] += -1.0*incr[5]; 
  } else { 
  incr[0] = (-0.4330127018922193*E[0]*fr[4]*dv1)+0.25*E[2]*fr[2]*dv1+0.25*E[1]*fr[1]*dv1+0.25*E[0]*fr[0]*dv1; 
  incr[1] = (-0.4330127018922193*E[1]*fr[4]*dv1)+0.25*E[0]*fr[1]*dv1+0.25*fr[0]*E[1]*dv1; 
  incr[2] = (-0.4330127018922193*E[2]*fr[4]*dv1)+0.25*E[0]*fr[2]*dv1+0.25*fr[0]*E[2]*dv1; 
  incr[3] = 0.25*E[0]*fr[3]*dv1; 
  incr[4] = 0.75*E[0]*fr[4]*dv1-0.4330127018922193*E[2]*fr[2]*dv1-0.4330127018922193*E[1]*fr[1]*dv1-0.4330127018922193*E[0]*fr[0]*dv1; 
  incr[5] = 0.25*E[0]*fr[5]*dv1; 

  outr[0] += incr[0]; 
  outr[1] += incr[1]; 
  outr[2] += incr[2]; 
  outr[3] += incr[3]; 
  outr[4] += incr[4]; 
  outr[5] += incr[5]; 

  outl[0] += -1.0*incr[0]; 
  outl[1] += -1.0*incr[1]; 
  outl[2] += -1.0*incr[2]; 
  outl[3] += -1.0*incr[3]; 
  outl[4] += incr[4]; 
  outl[5] += -1.0*incr[5]; 
  } 
} 
void VlasovSurfElc2x3vMax_VY_P2(const double *w, const double *dxv, const double *Ein, const double *fl, const double *fr, double *outl, double *outr) 
{ 
// w: Cell-center coordinates. dxv[NDIM]: Cell spacing. E: electric field, fl/fr: Distribution function in left/right cells 
// outl/outr: output distribution function in left/right cells 
  double dv1 = 2/dxv[3]; 
  const double *E = &Ein[6]; 
  double incr[21]; 

  const double Emid = (-0.5590169943749475*E[5])-0.5590169943749475*E[4]+0.5*E[0]; 
  if (Emid>0) { 
  incr[0] = 0.5590169943749475*E[0]*fl[19]*dv1+0.25*E[5]*fl[17]*dv1+0.25*E[4]*fl[16]*dv1+0.4330127018922193*E[2]*fl[10]*dv1+0.4330127018922193*E[1]*fl[9]*dv1+0.25*E[3]*fl[6]*dv1+0.4330127018922193*E[0]*fl[4]*dv1+0.25*E[2]*fl[2]*dv1+0.25*E[1]*fl[1]*dv1+0.25*E[0]*fl[0]*dv1; 
  incr[1] = 0.5590169943749475*E[1]*fl[19]*dv1+0.223606797749979*E[1]*fl[16]*dv1+0.4330127018922193*E[3]*fl[10]*dv1+0.3872983346207416*E[4]*fl[9]*dv1+0.4330127018922193*E[0]*fl[9]*dv1+0.25*E[2]*fl[6]*dv1+0.4330127018922193*E[1]*fl[4]*dv1+0.223606797749979*fl[1]*E[4]*dv1+0.25*fl[2]*E[3]*dv1+0.25*E[0]*fl[1]*dv1+0.25*fl[0]*E[1]*dv1; 
  incr[2] = 0.5590169943749475*E[2]*fl[19]*dv1+0.223606797749979*E[2]*fl[17]*dv1+0.3872983346207416*E[5]*fl[10]*dv1+0.4330127018922193*E[0]*fl[10]*dv1+0.4330127018922193*E[3]*fl[9]*dv1+0.25*E[1]*fl[6]*dv1+0.223606797749979*fl[2]*E[5]*dv1+0.4330127018922193*E[2]*fl[4]*dv1+0.25*fl[1]*E[3]*dv1+0.25*E[0]*fl[2]*dv1+0.25*fl[0]*E[2]*dv1; 
  incr[3] = 0.4330127018922193*E[0]*fl[11]*dv1+0.25*E[2]*fl[8]*dv1+0.25*E[1]*fl[7]*dv1+0.25*E[0]*fl[3]*dv1; 
  incr[4] = (-0.9682458365518543*E[0]*fl[19]*dv1)-0.4330127018922193*E[5]*fl[17]*dv1-0.4330127018922193*E[4]*fl[16]*dv1-0.75*E[2]*fl[10]*dv1-0.75*E[1]*fl[9]*dv1-0.4330127018922193*E[3]*fl[6]*dv1-0.75*E[0]*fl[4]*dv1-0.4330127018922193*E[2]*fl[2]*dv1-0.4330127018922193*E[1]*fl[1]*dv1-0.4330127018922193*E[0]*fl[0]*dv1; 
  incr[5] = 0.4330127018922193*E[0]*fl[15]*dv1+0.25*E[2]*fl[13]*dv1+0.25*E[1]*fl[12]*dv1+0.25*E[0]*fl[5]*dv1; 
  incr[6] = 0.5590169943749475*E[3]*fl[19]*dv1+0.223606797749979*E[3]*fl[17]*dv1+0.223606797749979*E[3]*fl[16]*dv1+0.4330127018922193*E[1]*fl[10]*dv1+0.4330127018922193*E[2]*fl[9]*dv1+0.223606797749979*E[5]*fl[6]*dv1+0.223606797749979*E[4]*fl[6]*dv1+0.25*E[0]*fl[6]*dv1+0.4330127018922193*E[3]*fl[4]*dv1+0.25*fl[0]*E[3]*dv1+0.25*E[1]*fl[2]*dv1+0.25*fl[1]*E[2]*dv1; 
  incr[7] = 0.4330127018922193*E[1]*fl[11]*dv1+0.25*E[3]*fl[8]*dv1+0.223606797749979*E[4]*fl[7]*dv1+0.25*E[0]*fl[7]*dv1+0.25*E[1]*fl[3]*dv1; 
  incr[8] = 0.4330127018922193*E[2]*fl[11]*dv1+0.223606797749979*E[5]*fl[8]*dv1+0.25*E[0]*fl[8]*dv1+0.25*E[3]*fl[7]*dv1+0.25*E[2]*fl[3]*dv1; 
  incr[9] = (-0.9682458365518543*E[1]*fl[19]*dv1)-0.3872983346207416*E[1]*fl[16]*dv1-0.75*E[3]*fl[10]*dv1-0.6708203932499369*E[4]*fl[9]*dv1-0.75*E[0]*fl[9]*dv1-0.4330127018922193*E[2]*fl[6]*dv1-0.75*E[1]*fl[4]*dv1-0.3872983346207416*fl[1]*E[4]*dv1-0.4330127018922193*fl[2]*E[3]*dv1-0.4330127018922193*E[0]*fl[1]*dv1-0.4330127018922193*fl[0]*E[1]*dv1; 
  incr[10] = (-0.9682458365518543*E[2]*fl[19]*dv1)-0.3872983346207416*E[2]*fl[17]*dv1-0.6708203932499369*E[5]*fl[10]*dv1-0.75*E[0]*fl[10]*dv1-0.75*E[3]*fl[9]*dv1-0.4330127018922193*E[1]*fl[6]*dv1-0.3872983346207416*fl[2]*E[5]*dv1-0.75*E[2]*fl[4]*dv1-0.4330127018922193*fl[1]*E[3]*dv1-0.4330127018922193*E[0]*fl[2]*dv1-0.4330127018922193*fl[0]*E[2]*dv1; 
  incr[11] = (-0.75*E[0]*fl[11]*dv1)-0.4330127018922193*E[2]*fl[8]*dv1-0.4330127018922193*E[1]*fl[7]*dv1-0.4330127018922193*E[0]*fl[3]*dv1; 
  incr[12] = 0.4330127018922193*E[1]*fl[15]*dv1+0.25*E[3]*fl[13]*dv1+0.223606797749979*E[4]*fl[12]*dv1+0.25*E[0]*fl[12]*dv1+0.25*E[1]*fl[5]*dv1; 
  incr[13] = 0.4330127018922193*E[2]*fl[15]*dv1+0.223606797749979*E[5]*fl[13]*dv1+0.25*E[0]*fl[13]*dv1+0.25*E[3]*fl[12]*dv1+0.25*E[2]*fl[5]*dv1; 
  incr[14] = 0.25*E[0]*fl[14]*dv1; 
  incr[15] = (-0.75*E[0]*fl[15]*dv1)-0.4330127018922193*E[2]*fl[13]*dv1-0.4330127018922193*E[1]*fl[12]*dv1-0.4330127018922193*E[0]*fl[5]*dv1; 
  incr[16] = 0.5590169943749475*E[4]*fl[19]*dv1+0.159719141249985*E[4]*fl[16]*dv1+0.25*E[0]*fl[16]*dv1+0.3872983346207416*E[1]*fl[9]*dv1+0.223606797749979*E[3]*fl[6]*dv1+0.4330127018922193*E[4]*fl[4]*dv1+0.25*fl[0]*E[4]*dv1+0.223606797749979*E[1]*fl[1]*dv1; 
  incr[17] = 0.5590169943749475*E[5]*fl[19]*dv1+0.159719141249985*E[5]*fl[17]*dv1+0.25*E[0]*fl[17]*dv1+0.3872983346207416*E[2]*fl[10]*dv1+0.223606797749979*E[3]*fl[6]*dv1+0.4330127018922193*fl[4]*E[5]*dv1+0.25*fl[0]*E[5]*dv1+0.223606797749979*E[2]*fl[2]*dv1; 
  incr[18] = 0.25*E[0]*fl[18]*dv1; 
  incr[19] = 1.25*E[0]*fl[19]*dv1+0.5590169943749475*E[5]*fl[17]*dv1+0.5590169943749475*E[4]*fl[16]*dv1+0.9682458365518543*E[2]*fl[10]*dv1+0.9682458365518543*E[1]*fl[9]*dv1+0.5590169943749475*E[3]*fl[6]*dv1+0.9682458365518543*E[0]*fl[4]*dv1+0.5590169943749475*E[2]*fl[2]*dv1+0.5590169943749475*E[1]*fl[1]*dv1+0.5590169943749475*E[0]*fl[0]*dv1; 
  incr[20] = 0.25*E[0]*fl[20]*dv1; 

  outr[0] += incr[0]; 
  outr[1] += incr[1]; 
  outr[2] += incr[2]; 
  outr[3] += incr[3]; 
  outr[4] += incr[4]; 
  outr[5] += incr[5]; 
  outr[6] += incr[6]; 
  outr[7] += incr[7]; 
  outr[8] += incr[8]; 
  outr[9] += incr[9]; 
  outr[10] += incr[10]; 
  outr[11] += incr[11]; 
  outr[12] += incr[12]; 
  outr[13] += incr[13]; 
  outr[14] += incr[14]; 
  outr[15] += incr[15]; 
  outr[16] += incr[16]; 
  outr[17] += incr[17]; 
  outr[18] += incr[18]; 
  outr[19] += incr[19]; 
  outr[20] += incr[20]; 

  outl[0] += -1.0*incr[0]; 
  outl[1] += -1.0*incr[1]; 
  outl[2] += -1.0*incr[2]; 
  outl[3] += -1.0*incr[3]; 
  outl[4] += incr[4]; 
  outl[5] += -1.0*incr[5]; 
  outl[6] += -1.0*incr[6]; 
  outl[7] += -1.0*incr[7]; 
  outl[8] += -1.0*incr[8]; 
  outl[9] += incr[9]; 
  outl[10] += incr[10]; 
  outl[11] += incr[11]; 
  outl[12] += -1.0*incr[12]; 
  outl[13] += -1.0*incr[13]; 
  outl[14] += -1.0*incr[14]; 
  outl[15] += incr[15]; 
  outl[16] += -1.0*incr[16]; 
  outl[17] += -1.0*incr[17]; 
  outl[18] += -1.0*incr[18]; 
  outl[19] += -1.0*incr[19]; 
  outl[20] += -1.0*incr[20]; 
  } else { 
  incr[0] = 0.5590169943749475*E[0]*fr[19]*dv1+0.25*E[5]*fr[17]*dv1+0.25*E[4]*fr[16]*dv1-0.4330127018922193*E[2]*fr[10]*dv1-0.4330127018922193*E[1]*fr[9]*dv1+0.25*E[3]*fr[6]*dv1-0.4330127018922193*E[0]*fr[4]*dv1+0.25*E[2]*fr[2]*dv1+0.25*E[1]*fr[1]*dv1+0.25*E[0]*fr[0]*dv1; 
  incr[1] = 0.5590169943749475*E[1]*fr[19]*dv1+0.223606797749979*E[1]*fr[16]*dv1-0.4330127018922193*E[3]*fr[10]*dv1-0.3872983346207416*E[4]*fr[9]*dv1-0.4330127018922193*E[0]*fr[9]*dv1+0.25*E[2]*fr[6]*dv1-0.4330127018922193*E[1]*fr[4]*dv1+0.223606797749979*fr[1]*E[4]*dv1+0.25*fr[2]*E[3]*dv1+0.25*E[0]*fr[1]*dv1+0.25*fr[0]*E[1]*dv1; 
  incr[2] = 0.5590169943749475*E[2]*fr[19]*dv1+0.223606797749979*E[2]*fr[17]*dv1-0.3872983346207416*E[5]*fr[10]*dv1-0.4330127018922193*E[0]*fr[10]*dv1-0.4330127018922193*E[3]*fr[9]*dv1+0.25*E[1]*fr[6]*dv1+0.223606797749979*fr[2]*E[5]*dv1-0.4330127018922193*E[2]*fr[4]*dv1+0.25*fr[1]*E[3]*dv1+0.25*E[0]*fr[2]*dv1+0.25*fr[0]*E[2]*dv1; 
  incr[3] = (-0.4330127018922193*E[0]*fr[11]*dv1)+0.25*E[2]*fr[8]*dv1+0.25*E[1]*fr[7]*dv1+0.25*E[0]*fr[3]*dv1; 
  incr[4] = (-0.9682458365518543*E[0]*fr[19]*dv1)-0.4330127018922193*E[5]*fr[17]*dv1-0.4330127018922193*E[4]*fr[16]*dv1+0.75*E[2]*fr[10]*dv1+0.75*E[1]*fr[9]*dv1-0.4330127018922193*E[3]*fr[6]*dv1+0.75*E[0]*fr[4]*dv1-0.4330127018922193*E[2]*fr[2]*dv1-0.4330127018922193*E[1]*fr[1]*dv1-0.4330127018922193*E[0]*fr[0]*dv1; 
  incr[5] = (-0.4330127018922193*E[0]*fr[15]*dv1)+0.25*E[2]*fr[13]*dv1+0.25*E[1]*fr[12]*dv1+0.25*E[0]*fr[5]*dv1; 
  incr[6] = 0.5590169943749475*E[3]*fr[19]*dv1+0.223606797749979*E[3]*fr[17]*dv1+0.223606797749979*E[3]*fr[16]*dv1-0.4330127018922193*E[1]*fr[10]*dv1-0.4330127018922193*E[2]*fr[9]*dv1+0.223606797749979*E[5]*fr[6]*dv1+0.223606797749979*E[4]*fr[6]*dv1+0.25*E[0]*fr[6]*dv1-0.4330127018922193*E[3]*fr[4]*dv1+0.25*fr[0]*E[3]*dv1+0.25*E[1]*fr[2]*dv1+0.25*fr[1]*E[2]*dv1; 
  incr[7] = (-0.4330127018922193*E[1]*fr[11]*dv1)+0.25*E[3]*fr[8]*dv1+0.223606797749979*E[4]*fr[7]*dv1+0.25*E[0]*fr[7]*dv1+0.25*E[1]*fr[3]*dv1; 
  incr[8] = (-0.4330127018922193*E[2]*fr[11]*dv1)+0.223606797749979*E[5]*fr[8]*dv1+0.25*E[0]*fr[8]*dv1+0.25*E[3]*fr[7]*dv1+0.25*E[2]*fr[3]*dv1; 
  incr[9] = (-0.9682458365518543*E[1]*fr[19]*dv1)-0.3872983346207416*E[1]*fr[16]*dv1+0.75*E[3]*fr[10]*dv1+0.6708203932499369*E[4]*fr[9]*dv1+0.75*E[0]*fr[9]*dv1-0.4330127018922193*E[2]*fr[6]*dv1+0.75*E[1]*fr[4]*dv1-0.3872983346207416*fr[1]*E[4]*dv1-0.4330127018922193*fr[2]*E[3]*dv1-0.4330127018922193*E[0]*fr[1]*dv1-0.4330127018922193*fr[0]*E[1]*dv1; 
  incr[10] = (-0.9682458365518543*E[2]*fr[19]*dv1)-0.3872983346207416*E[2]*fr[17]*dv1+0.6708203932499369*E[5]*fr[10]*dv1+0.75*E[0]*fr[10]*dv1+0.75*E[3]*fr[9]*dv1-0.4330127018922193*E[1]*fr[6]*dv1-0.3872983346207416*fr[2]*E[5]*dv1+0.75*E[2]*fr[4]*dv1-0.4330127018922193*fr[1]*E[3]*dv1-0.4330127018922193*E[0]*fr[2]*dv1-0.4330127018922193*fr[0]*E[2]*dv1; 
  incr[11] = 0.75*E[0]*fr[11]*dv1-0.4330127018922193*E[2]*fr[8]*dv1-0.4330127018922193*E[1]*fr[7]*dv1-0.4330127018922193*E[0]*fr[3]*dv1; 
  incr[12] = (-0.4330127018922193*E[1]*fr[15]*dv1)+0.25*E[3]*fr[13]*dv1+0.223606797749979*E[4]*fr[12]*dv1+0.25*E[0]*fr[12]*dv1+0.25*E[1]*fr[5]*dv1; 
  incr[13] = (-0.4330127018922193*E[2]*fr[15]*dv1)+0.223606797749979*E[5]*fr[13]*dv1+0.25*E[0]*fr[13]*dv1+0.25*E[3]*fr[12]*dv1+0.25*E[2]*fr[5]*dv1; 
  incr[14] = 0.25*E[0]*fr[14]*dv1; 
  incr[15] = 0.75*E[0]*fr[15]*dv1-0.4330127018922193*E[2]*fr[13]*dv1-0.4330127018922193*E[1]*fr[12]*dv1-0.4330127018922193*E[0]*fr[5]*dv1; 
  incr[16] = 0.5590169943749475*E[4]*fr[19]*dv1+0.159719141249985*E[4]*fr[16]*dv1+0.25*E[0]*fr[16]*dv1-0.3872983346207416*E[1]*fr[9]*dv1+0.223606797749979*E[3]*fr[6]*dv1-0.4330127018922193*E[4]*fr[4]*dv1+0.25*fr[0]*E[4]*dv1+0.223606797749979*E[1]*fr[1]*dv1; 
  incr[17] = 0.5590169943749475*E[5]*fr[19]*dv1+0.159719141249985*E[5]*fr[17]*dv1+0.25*E[0]*fr[17]*dv1-0.3872983346207416*E[2]*fr[10]*dv1+0.223606797749979*E[3]*fr[6]*dv1-0.4330127018922193*fr[4]*E[5]*dv1+0.25*fr[0]*E[5]*dv1+0.223606797749979*E[2]*fr[2]*dv1; 
  incr[18] = 0.25*E[0]*fr[18]*dv1; 
  incr[19] = 1.25*E[0]*fr[19]*dv1+0.5590169943749475*E[5]*fr[17]*dv1+0.5590169943749475*E[4]*fr[16]*dv1-0.9682458365518543*E[2]*fr[10]*dv1-0.9682458365518543*E[1]*fr[9]*dv1+0.5590169943749475*E[3]*fr[6]*dv1-0.9682458365518543*E[0]*fr[4]*dv1+0.5590169943749475*E[2]*fr[2]*dv1+0.5590169943749475*E[1]*fr[1]*dv1+0.5590169943749475*E[0]*fr[0]*dv1; 
  incr[20] = 0.25*E[0]*fr[20]*dv1; 

  outr[0] += incr[0]; 
  outr[1] += incr[1]; 
  outr[2] += incr[2]; 
  outr[3] += incr[3]; 
  outr[4] += incr[4]; 
  outr[5] += incr[5]; 
  outr[6] += incr[6]; 
  outr[7] += incr[7]; 
  outr[8] += incr[8]; 
  outr[9] += incr[9]; 
  outr[10] += incr[10]; 
  outr[11] += incr[11]; 
  outr[12] += incr[12]; 
  outr[13] += incr[13]; 
  outr[14] += incr[14]; 
  outr[15] += incr[15]; 
  outr[16] += incr[16]; 
  outr[17] += incr[17]; 
  outr[18] += incr[18]; 
  outr[19] += incr[19]; 
  outr[20] += incr[20]; 

  outl[0] += -1.0*incr[0]; 
  outl[1] += -1.0*incr[1]; 
  outl[2] += -1.0*incr[2]; 
  outl[3] += -1.0*incr[3]; 
  outl[4] += incr[4]; 
  outl[5] += -1.0*incr[5]; 
  outl[6] += -1.0*incr[6]; 
  outl[7] += -1.0*incr[7]; 
  outl[8] += -1.0*incr[8]; 
  outl[9] += incr[9]; 
  outl[10] += incr[10]; 
  outl[11] += incr[11]; 
  outl[12] += -1.0*incr[12]; 
  outl[13] += -1.0*incr[13]; 
  outl[14] += -1.0*incr[14]; 
  outl[15] += incr[15]; 
  outl[16] += -1.0*incr[16]; 
  outl[17] += -1.0*incr[17]; 
  outl[18] += -1.0*incr[18]; 
  outl[19] += -1.0*incr[19]; 
  outl[20] += -1.0*incr[20]; 
  } 
} 
