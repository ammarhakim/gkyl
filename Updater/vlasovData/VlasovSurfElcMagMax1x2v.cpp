#include <VlasovModDecl.h> 
void VlasovSurfElcMag1x2vMax_VX_P1(const double *w, const double *dxv, const double dt, const double cfl, const double *EM, const double *fl, const double *fr, double *outl, double *outr) 
{ 
// w: Cell-center coordinates. dxv[NDIM]: Cell spacing. dt/cfl: dt and cfl for amax in global lax flux. E: EM field. fl/fr: Distribution function in left/right cells 
// outl/outr: output distribution function in left/right cells 
  double dv10 = 2/dxv[1]; 
  double amax10 = cfl*dxv[1]/dt; 
  const double *E0 = &EM[0]; 

  const double dv1 = dxv[1], wv1 = w[1]; 
  const double dv2 = dxv[2], wv2 = w[2]; 

  const double *B0 = &EM[6]; 
  const double *B1 = &EM[8]; 
  const double *B2 = &EM[10]; 

  double incr[4]; 

  incr[0] = (-0.3061862178478971*B2[0]*fr[2]*dv10*wv2)+0.3061862178478971*B2[0]*fl[2]*dv10*wv2+0.1767766952966368*fr[1]*B2[1]*dv10*wv2+0.1767766952966368*fl[1]*B2[1]*dv10*wv2+0.1767766952966368*fr[0]*B2[0]*dv10*wv2+0.1767766952966368*fl[0]*B2[0]*dv10*wv2+0.05103103630798285*B2[0]*fr[3]*dv10*dv2+0.05103103630798285*B2[0]*fl[3]*dv10*dv2+0.4330127018922193*fr[2]*amax10*dv10+0.4330127018922193*fl[2]*amax10*dv10-0.25*fr[0]*amax10*dv10+0.25*fl[0]*amax10*dv10-0.3061862178478971*E0[0]*fr[2]*dv10+0.3061862178478971*E0[0]*fl[2]*dv10+0.1767766952966368*fr[1]*E0[1]*dv10+0.1767766952966368*fl[1]*E0[1]*dv10+0.1767766952966368*fr[0]*E0[0]*dv10+0.1767766952966368*fl[0]*E0[0]*dv10; 
  incr[1] = (-0.3061862178478971*B2[1]*fr[2]*dv10*wv2)+0.3061862178478971*B2[1]*fl[2]*dv10*wv2+0.1767766952966368*fr[0]*B2[1]*dv10*wv2+0.1767766952966368*fl[0]*B2[1]*dv10*wv2+0.1767766952966368*B2[0]*fr[1]*dv10*wv2+0.1767766952966368*B2[0]*fl[1]*dv10*wv2+0.05103103630798285*B2[1]*fr[3]*dv10*dv2+0.05103103630798285*B2[1]*fl[3]*dv10*dv2-0.25*fr[1]*amax10*dv10+0.25*fl[1]*amax10*dv10-0.3061862178478971*E0[1]*fr[2]*dv10+0.3061862178478971*E0[1]*fl[2]*dv10+0.1767766952966368*fr[0]*E0[1]*dv10+0.1767766952966368*fl[0]*E0[1]*dv10+0.1767766952966368*E0[0]*fr[1]*dv10+0.1767766952966368*E0[0]*fl[1]*dv10; 
  incr[2] = 0.5303300858899105*B2[0]*fr[2]*dv10*wv2-0.5303300858899105*B2[0]*fl[2]*dv10*wv2-0.3061862178478971*fr[1]*B2[1]*dv10*wv2-0.3061862178478971*fl[1]*B2[1]*dv10*wv2-0.3061862178478971*fr[0]*B2[0]*dv10*wv2-0.3061862178478971*fl[0]*B2[0]*dv10*wv2-0.0883883476483184*B2[0]*fr[3]*dv10*dv2-0.0883883476483184*B2[0]*fl[3]*dv10*dv2-0.75*fr[2]*amax10*dv10-0.75*fl[2]*amax10*dv10+0.4330127018922193*fr[0]*amax10*dv10-0.4330127018922193*fl[0]*amax10*dv10+0.5303300858899105*E0[0]*fr[2]*dv10-0.5303300858899105*E0[0]*fl[2]*dv10-0.3061862178478971*fr[1]*E0[1]*dv10-0.3061862178478971*fl[1]*E0[1]*dv10-0.3061862178478971*fr[0]*E0[0]*dv10-0.3061862178478971*fl[0]*E0[0]*dv10; 
  incr[3] = 0.1767766952966368*B2[0]*fr[3]*dv10*wv2+0.1767766952966368*B2[0]*fl[3]*dv10*wv2-0.0883883476483184*B2[0]*fr[2]*dv10*dv2+0.0883883476483184*B2[0]*fl[2]*dv10*dv2+0.05103103630798285*fr[1]*B2[1]*dv10*dv2+0.05103103630798285*fl[1]*B2[1]*dv10*dv2+0.05103103630798285*fr[0]*B2[0]*dv10*dv2+0.05103103630798285*fl[0]*B2[0]*dv10*dv2-0.25*fr[3]*amax10*dv10+0.25*fl[3]*amax10*dv10+0.1767766952966368*E0[0]*fr[3]*dv10+0.1767766952966368*E0[0]*fl[3]*dv10; 

  outr[0] += incr[0]; 
  outr[1] += incr[1]; 
  outr[2] += incr[2]; 
  outr[3] += incr[3]; 

  outl[0] += -1.0*incr[0]; 
  outl[1] += -1.0*incr[1]; 
  outl[2] += incr[2]; 
  outl[3] += -1.0*incr[3]; 
} 
void VlasovSurfElcMag1x2vMax_VX_P2(const double *w, const double *dxv, const double dt, const double cfl, const double *EM, const double *fl, const double *fr, double *outl, double *outr) 
{ 
// w: Cell-center coordinates. dxv[NDIM]: Cell spacing. dt/cfl: dt and cfl for amax in global lax flux. E: EM field. fl/fr: Distribution function in left/right cells 
// outl/outr: output distribution function in left/right cells 
  double dv10 = 2/dxv[1]; 
  double amax10 = cfl*dxv[1]/dt; 
  const double *E0 = &EM[0]; 

  const double dv1 = dxv[1], wv1 = w[1]; 
  const double dv2 = dxv[2], wv2 = w[2]; 

  const double *B0 = &EM[9]; 
  const double *B1 = &EM[12]; 
  const double *B2 = &EM[15]; 

  double incr[10]; 

  incr[0] = 0.3952847075210473*B2[0]*fr[8]*dv10*wv2+0.3952847075210473*B2[0]*fl[8]*dv10*wv2+0.1767766952966368*B2[2]*fr[7]*dv10*wv2+0.1767766952966368*B2[2]*fl[7]*dv10*wv2-0.3061862178478971*B2[1]*fr[4]*dv10*wv2+0.3061862178478971*B2[1]*fl[4]*dv10*wv2-0.3061862178478971*B2[0]*fr[2]*dv10*wv2+0.3061862178478971*B2[0]*fl[2]*dv10*wv2+0.1767766952966368*fr[1]*B2[1]*dv10*wv2+0.1767766952966368*fl[1]*B2[1]*dv10*wv2+0.1767766952966368*fr[0]*B2[0]*dv10*wv2+0.1767766952966368*fl[0]*B2[0]*dv10*wv2-0.0883883476483184*B2[0]*fr[6]*dv10*dv2+0.0883883476483184*B2[0]*fl[6]*dv10*dv2+0.05103103630798285*B2[1]*fr[5]*dv10*dv2+0.05103103630798285*B2[1]*fl[5]*dv10*dv2+0.05103103630798285*B2[0]*fr[3]*dv10*dv2+0.05103103630798285*B2[0]*fl[3]*dv10*dv2-0.5590169943749475*fr[8]*amax10*dv10+0.5590169943749475*fl[8]*amax10*dv10+0.4330127018922193*fr[2]*amax10*dv10+0.4330127018922193*fl[2]*amax10*dv10-0.25*fr[0]*amax10*dv10+0.25*fl[0]*amax10*dv10+0.3952847075210473*E0[0]*fr[8]*dv10+0.3952847075210473*E0[0]*fl[8]*dv10+0.1767766952966368*E0[2]*fr[7]*dv10+0.1767766952966368*E0[2]*fl[7]*dv10-0.3061862178478971*E0[1]*fr[4]*dv10+0.3061862178478971*E0[1]*fl[4]*dv10-0.3061862178478971*E0[0]*fr[2]*dv10+0.3061862178478971*E0[0]*fl[2]*dv10+0.1767766952966368*fr[1]*E0[1]*dv10+0.1767766952966368*fl[1]*E0[1]*dv10+0.1767766952966368*fr[0]*E0[0]*dv10+0.1767766952966368*fl[0]*E0[0]*dv10; 
  incr[1] = 0.3952847075210473*B2[1]*fr[8]*dv10*wv2+0.3952847075210473*B2[1]*fl[8]*dv10*wv2+0.1581138830084189*B2[1]*fr[7]*dv10*wv2+0.1581138830084189*B2[1]*fl[7]*dv10*wv2-0.2738612787525829*B2[2]*fr[4]*dv10*wv2-0.3061862178478971*B2[0]*fr[4]*dv10*wv2+0.2738612787525829*B2[2]*fl[4]*dv10*wv2+0.3061862178478971*B2[0]*fl[4]*dv10*wv2+0.1581138830084189*fr[1]*B2[2]*dv10*wv2+0.1581138830084189*fl[1]*B2[2]*dv10*wv2-0.3061862178478971*B2[1]*fr[2]*dv10*wv2+0.3061862178478971*B2[1]*fl[2]*dv10*wv2+0.1767766952966368*fr[0]*B2[1]*dv10*wv2+0.1767766952966368*fl[0]*B2[1]*dv10*wv2+0.1767766952966368*B2[0]*fr[1]*dv10*wv2+0.1767766952966368*B2[0]*fl[1]*dv10*wv2-0.0883883476483184*B2[1]*fr[6]*dv10*dv2+0.0883883476483184*B2[1]*fl[6]*dv10*dv2+0.04564354645876383*B2[2]*fr[5]*dv10*dv2+0.05103103630798285*B2[0]*fr[5]*dv10*dv2+0.04564354645876383*B2[2]*fl[5]*dv10*dv2+0.05103103630798285*B2[0]*fl[5]*dv10*dv2+0.05103103630798285*B2[1]*fr[3]*dv10*dv2+0.05103103630798285*B2[1]*fl[3]*dv10*dv2+0.4330127018922193*fr[4]*amax10*dv10+0.4330127018922193*fl[4]*amax10*dv10-0.25*fr[1]*amax10*dv10+0.25*fl[1]*amax10*dv10+0.3952847075210473*E0[1]*fr[8]*dv10+0.3952847075210473*E0[1]*fl[8]*dv10+0.1581138830084189*E0[1]*fr[7]*dv10+0.1581138830084189*E0[1]*fl[7]*dv10-0.2738612787525829*E0[2]*fr[4]*dv10-0.3061862178478971*E0[0]*fr[4]*dv10+0.2738612787525829*E0[2]*fl[4]*dv10+0.3061862178478971*E0[0]*fl[4]*dv10+0.1581138830084189*fr[1]*E0[2]*dv10+0.1581138830084189*fl[1]*E0[2]*dv10-0.3061862178478971*E0[1]*fr[2]*dv10+0.3061862178478971*E0[1]*fl[2]*dv10+0.1767766952966368*fr[0]*E0[1]*dv10+0.1767766952966368*fl[0]*E0[1]*dv10+0.1767766952966368*E0[0]*fr[1]*dv10+0.1767766952966368*E0[0]*fl[1]*dv10; 
  incr[2] = (-0.6846531968814573*B2[0]*fr[8]*dv10*wv2)-0.6846531968814573*B2[0]*fl[8]*dv10*wv2-0.3061862178478971*B2[2]*fr[7]*dv10*wv2-0.3061862178478971*B2[2]*fl[7]*dv10*wv2+0.5303300858899105*B2[1]*fr[4]*dv10*wv2-0.5303300858899105*B2[1]*fl[4]*dv10*wv2+0.5303300858899105*B2[0]*fr[2]*dv10*wv2-0.5303300858899105*B2[0]*fl[2]*dv10*wv2-0.3061862178478971*fr[1]*B2[1]*dv10*wv2-0.3061862178478971*fl[1]*B2[1]*dv10*wv2-0.3061862178478971*fr[0]*B2[0]*dv10*wv2-0.3061862178478971*fl[0]*B2[0]*dv10*wv2+0.1530931089239486*B2[0]*fr[6]*dv10*dv2-0.1530931089239486*B2[0]*fl[6]*dv10*dv2-0.0883883476483184*B2[1]*fr[5]*dv10*dv2-0.0883883476483184*B2[1]*fl[5]*dv10*dv2-0.0883883476483184*B2[0]*fr[3]*dv10*dv2-0.0883883476483184*B2[0]*fl[3]*dv10*dv2+0.9682458365518543*fr[8]*amax10*dv10-0.9682458365518543*fl[8]*amax10*dv10-0.75*fr[2]*amax10*dv10-0.75*fl[2]*amax10*dv10+0.4330127018922193*fr[0]*amax10*dv10-0.4330127018922193*fl[0]*amax10*dv10-0.6846531968814573*E0[0]*fr[8]*dv10-0.6846531968814573*E0[0]*fl[8]*dv10-0.3061862178478971*E0[2]*fr[7]*dv10-0.3061862178478971*E0[2]*fl[7]*dv10+0.5303300858899105*E0[1]*fr[4]*dv10-0.5303300858899105*E0[1]*fl[4]*dv10+0.5303300858899105*E0[0]*fr[2]*dv10-0.5303300858899105*E0[0]*fl[2]*dv10-0.3061862178478971*fr[1]*E0[1]*dv10-0.3061862178478971*fl[1]*E0[1]*dv10-0.3061862178478971*fr[0]*E0[0]*dv10-0.3061862178478971*fl[0]*E0[0]*dv10; 
  incr[3] = (-0.3061862178478971*B2[0]*fr[6]*dv10*wv2)+0.3061862178478971*B2[0]*fl[6]*dv10*wv2+0.1767766952966368*B2[1]*fr[5]*dv10*wv2+0.1767766952966368*B2[1]*fl[5]*dv10*wv2+0.1767766952966368*B2[0]*fr[3]*dv10*wv2+0.1767766952966368*B2[0]*fl[3]*dv10*wv2+0.04564354645876383*B2[0]*fr[9]*dv10*dv2+0.04564354645876383*B2[0]*fl[9]*dv10*dv2+0.1141088661469096*B2[0]*fr[8]*dv10*dv2+0.1141088661469096*B2[0]*fl[8]*dv10*dv2+0.05103103630798285*B2[2]*fr[7]*dv10*dv2+0.05103103630798285*B2[2]*fl[7]*dv10*dv2-0.0883883476483184*B2[1]*fr[4]*dv10*dv2+0.0883883476483184*B2[1]*fl[4]*dv10*dv2-0.0883883476483184*B2[0]*fr[2]*dv10*dv2+0.0883883476483184*B2[0]*fl[2]*dv10*dv2+0.05103103630798285*fr[1]*B2[1]*dv10*dv2+0.05103103630798285*fl[1]*B2[1]*dv10*dv2+0.05103103630798285*fr[0]*B2[0]*dv10*dv2+0.05103103630798285*fl[0]*B2[0]*dv10*dv2+0.4330127018922193*fr[6]*amax10*dv10+0.4330127018922193*fl[6]*amax10*dv10-0.25*fr[3]*amax10*dv10+0.25*fl[3]*amax10*dv10-0.3061862178478971*E0[0]*fr[6]*dv10+0.3061862178478971*E0[0]*fl[6]*dv10+0.1767766952966368*E0[1]*fr[5]*dv10+0.1767766952966368*E0[1]*fl[5]*dv10+0.1767766952966368*E0[0]*fr[3]*dv10+0.1767766952966368*E0[0]*fl[3]*dv10; 
  incr[4] = (-0.6846531968814574*B2[1]*fr[8]*dv10*wv2)-0.6846531968814574*B2[1]*fl[8]*dv10*wv2-0.2738612787525829*B2[1]*fr[7]*dv10*wv2-0.2738612787525829*B2[1]*fl[7]*dv10*wv2+0.4743416490252568*B2[2]*fr[4]*dv10*wv2+0.5303300858899105*B2[0]*fr[4]*dv10*wv2-0.4743416490252568*B2[2]*fl[4]*dv10*wv2-0.5303300858899105*B2[0]*fl[4]*dv10*wv2-0.2738612787525829*fr[1]*B2[2]*dv10*wv2-0.2738612787525829*fl[1]*B2[2]*dv10*wv2+0.5303300858899105*B2[1]*fr[2]*dv10*wv2-0.5303300858899105*B2[1]*fl[2]*dv10*wv2-0.3061862178478971*fr[0]*B2[1]*dv10*wv2-0.3061862178478971*fl[0]*B2[1]*dv10*wv2-0.3061862178478971*B2[0]*fr[1]*dv10*wv2-0.3061862178478971*B2[0]*fl[1]*dv10*wv2+0.1530931089239486*B2[1]*fr[6]*dv10*dv2-0.1530931089239486*B2[1]*fl[6]*dv10*dv2-0.07905694150420946*B2[2]*fr[5]*dv10*dv2-0.0883883476483184*B2[0]*fr[5]*dv10*dv2-0.07905694150420946*B2[2]*fl[5]*dv10*dv2-0.0883883476483184*B2[0]*fl[5]*dv10*dv2-0.0883883476483184*B2[1]*fr[3]*dv10*dv2-0.0883883476483184*B2[1]*fl[3]*dv10*dv2-0.75*fr[4]*amax10*dv10-0.75*fl[4]*amax10*dv10+0.4330127018922193*fr[1]*amax10*dv10-0.4330127018922193*fl[1]*amax10*dv10-0.6846531968814574*E0[1]*fr[8]*dv10-0.6846531968814574*E0[1]*fl[8]*dv10-0.2738612787525829*E0[1]*fr[7]*dv10-0.2738612787525829*E0[1]*fl[7]*dv10+0.4743416490252568*E0[2]*fr[4]*dv10+0.5303300858899105*E0[0]*fr[4]*dv10-0.4743416490252568*E0[2]*fl[4]*dv10-0.5303300858899105*E0[0]*fl[4]*dv10-0.2738612787525829*fr[1]*E0[2]*dv10-0.2738612787525829*fl[1]*E0[2]*dv10+0.5303300858899105*E0[1]*fr[2]*dv10-0.5303300858899105*E0[1]*fl[2]*dv10-0.3061862178478971*fr[0]*E0[1]*dv10-0.3061862178478971*fl[0]*E0[1]*dv10-0.3061862178478971*E0[0]*fr[1]*dv10-0.3061862178478971*E0[0]*fl[1]*dv10; 
  incr[5] = (-0.3061862178478971*B2[1]*fr[6]*dv10*wv2)+0.3061862178478971*B2[1]*fl[6]*dv10*wv2+0.1581138830084189*B2[2]*fr[5]*dv10*wv2+0.1767766952966368*B2[0]*fr[5]*dv10*wv2+0.1581138830084189*B2[2]*fl[5]*dv10*wv2+0.1767766952966368*B2[0]*fl[5]*dv10*wv2+0.1767766952966368*B2[1]*fr[3]*dv10*wv2+0.1767766952966368*B2[1]*fl[3]*dv10*wv2+0.04564354645876383*B2[1]*fr[9]*dv10*dv2+0.04564354645876383*B2[1]*fl[9]*dv10*dv2+0.1141088661469096*B2[1]*fr[8]*dv10*dv2+0.1141088661469096*B2[1]*fl[8]*dv10*dv2+0.04564354645876383*B2[1]*fr[7]*dv10*dv2+0.04564354645876383*B2[1]*fl[7]*dv10*dv2-0.07905694150420946*B2[2]*fr[4]*dv10*dv2-0.0883883476483184*B2[0]*fr[4]*dv10*dv2+0.07905694150420946*B2[2]*fl[4]*dv10*dv2+0.0883883476483184*B2[0]*fl[4]*dv10*dv2+0.04564354645876383*fr[1]*B2[2]*dv10*dv2+0.04564354645876383*fl[1]*B2[2]*dv10*dv2-0.0883883476483184*B2[1]*fr[2]*dv10*dv2+0.0883883476483184*B2[1]*fl[2]*dv10*dv2+0.05103103630798285*fr[0]*B2[1]*dv10*dv2+0.05103103630798285*fl[0]*B2[1]*dv10*dv2+0.05103103630798285*B2[0]*fr[1]*dv10*dv2+0.05103103630798285*B2[0]*fl[1]*dv10*dv2-0.25*fr[5]*amax10*dv10+0.25*fl[5]*amax10*dv10-0.3061862178478971*E0[1]*fr[6]*dv10+0.3061862178478971*E0[1]*fl[6]*dv10+0.1581138830084189*E0[2]*fr[5]*dv10+0.1767766952966368*E0[0]*fr[5]*dv10+0.1581138830084189*E0[2]*fl[5]*dv10+0.1767766952966368*E0[0]*fl[5]*dv10+0.1767766952966368*E0[1]*fr[3]*dv10+0.1767766952966368*E0[1]*fl[3]*dv10; 
  incr[6] = 0.5303300858899105*B2[0]*fr[6]*dv10*wv2-0.5303300858899105*B2[0]*fl[6]*dv10*wv2-0.3061862178478971*B2[1]*fr[5]*dv10*wv2-0.3061862178478971*B2[1]*fl[5]*dv10*wv2-0.3061862178478971*B2[0]*fr[3]*dv10*wv2-0.3061862178478971*B2[0]*fl[3]*dv10*wv2-0.07905694150420946*B2[0]*fr[9]*dv10*dv2-0.07905694150420946*B2[0]*fl[9]*dv10*dv2-0.1976423537605237*B2[0]*fr[8]*dv10*dv2-0.1976423537605237*B2[0]*fl[8]*dv10*dv2-0.0883883476483184*B2[2]*fr[7]*dv10*dv2-0.0883883476483184*B2[2]*fl[7]*dv10*dv2+0.1530931089239486*B2[1]*fr[4]*dv10*dv2-0.1530931089239486*B2[1]*fl[4]*dv10*dv2+0.1530931089239486*B2[0]*fr[2]*dv10*dv2-0.1530931089239486*B2[0]*fl[2]*dv10*dv2-0.0883883476483184*fr[1]*B2[1]*dv10*dv2-0.0883883476483184*fl[1]*B2[1]*dv10*dv2-0.0883883476483184*fr[0]*B2[0]*dv10*dv2-0.0883883476483184*fl[0]*B2[0]*dv10*dv2-0.75*fr[6]*amax10*dv10-0.75*fl[6]*amax10*dv10+0.4330127018922193*fr[3]*amax10*dv10-0.4330127018922193*fl[3]*amax10*dv10+0.5303300858899105*E0[0]*fr[6]*dv10-0.5303300858899105*E0[0]*fl[6]*dv10-0.3061862178478971*E0[1]*fr[5]*dv10-0.3061862178478971*E0[1]*fl[5]*dv10-0.3061862178478971*E0[0]*fr[3]*dv10-0.3061862178478971*E0[0]*fl[3]*dv10; 
  incr[7] = 0.3952847075210473*B2[2]*fr[8]*dv10*wv2+0.3952847075210473*B2[2]*fl[8]*dv10*wv2+0.1129384878631564*B2[2]*fr[7]*dv10*wv2+0.1767766952966368*B2[0]*fr[7]*dv10*wv2+0.1129384878631564*B2[2]*fl[7]*dv10*wv2+0.1767766952966368*B2[0]*fl[7]*dv10*wv2-0.273861278752583*B2[1]*fr[4]*dv10*wv2+0.273861278752583*B2[1]*fl[4]*dv10*wv2-0.3061862178478971*fr[2]*B2[2]*dv10*wv2+0.3061862178478971*fl[2]*B2[2]*dv10*wv2+0.1767766952966368*fr[0]*B2[2]*dv10*wv2+0.1767766952966368*fl[0]*B2[2]*dv10*wv2+0.1581138830084189*fr[1]*B2[1]*dv10*wv2+0.1581138830084189*fl[1]*B2[1]*dv10*wv2-0.0883883476483184*B2[2]*fr[6]*dv10*dv2+0.0883883476483184*B2[2]*fl[6]*dv10*dv2+0.04564354645876383*B2[1]*fr[5]*dv10*dv2+0.04564354645876383*B2[1]*fl[5]*dv10*dv2+0.05103103630798286*B2[2]*fr[3]*dv10*dv2+0.05103103630798286*B2[2]*fl[3]*dv10*dv2-0.25*fr[7]*amax10*dv10+0.25*fl[7]*amax10*dv10+0.3952847075210473*E0[2]*fr[8]*dv10+0.3952847075210473*E0[2]*fl[8]*dv10+0.1129384878631564*E0[2]*fr[7]*dv10+0.1767766952966368*E0[0]*fr[7]*dv10+0.1129384878631564*E0[2]*fl[7]*dv10+0.1767766952966368*E0[0]*fl[7]*dv10-0.273861278752583*E0[1]*fr[4]*dv10+0.273861278752583*E0[1]*fl[4]*dv10-0.3061862178478971*fr[2]*E0[2]*dv10+0.3061862178478971*fl[2]*E0[2]*dv10+0.1767766952966368*fr[0]*E0[2]*dv10+0.1767766952966368*fl[0]*E0[2]*dv10+0.1581138830084189*fr[1]*E0[1]*dv10+0.1581138830084189*fl[1]*E0[1]*dv10; 
  incr[8] = 0.883883476483184*B2[0]*fr[8]*dv10*wv2+0.883883476483184*B2[0]*fl[8]*dv10*wv2+0.3952847075210473*B2[2]*fr[7]*dv10*wv2+0.3952847075210473*B2[2]*fl[7]*dv10*wv2-0.6846531968814572*B2[1]*fr[4]*dv10*wv2+0.6846531968814572*B2[1]*fl[4]*dv10*wv2-0.6846531968814572*B2[0]*fr[2]*dv10*wv2+0.6846531968814572*B2[0]*fl[2]*dv10*wv2+0.3952847075210473*fr[1]*B2[1]*dv10*wv2+0.3952847075210473*fl[1]*B2[1]*dv10*wv2+0.3952847075210473*fr[0]*B2[0]*dv10*wv2+0.3952847075210473*fl[0]*B2[0]*dv10*wv2-0.1976423537605236*B2[0]*fr[6]*dv10*dv2+0.1976423537605236*B2[0]*fl[6]*dv10*dv2+0.1141088661469096*B2[1]*fr[5]*dv10*dv2+0.1141088661469096*B2[1]*fl[5]*dv10*dv2+0.1141088661469096*B2[0]*fr[3]*dv10*dv2+0.1141088661469096*B2[0]*fl[3]*dv10*dv2-1.25*fr[8]*amax10*dv10+1.25*fl[8]*amax10*dv10+0.9682458365518543*fr[2]*amax10*dv10+0.9682458365518543*fl[2]*amax10*dv10-0.5590169943749475*fr[0]*amax10*dv10+0.5590169943749475*fl[0]*amax10*dv10+0.883883476483184*E0[0]*fr[8]*dv10+0.883883476483184*E0[0]*fl[8]*dv10+0.3952847075210473*E0[2]*fr[7]*dv10+0.3952847075210473*E0[2]*fl[7]*dv10-0.6846531968814572*E0[1]*fr[4]*dv10+0.6846531968814572*E0[1]*fl[4]*dv10-0.6846531968814572*E0[0]*fr[2]*dv10+0.6846531968814572*E0[0]*fl[2]*dv10+0.3952847075210473*fr[1]*E0[1]*dv10+0.3952847075210473*fl[1]*E0[1]*dv10+0.3952847075210473*fr[0]*E0[0]*dv10+0.3952847075210473*fl[0]*E0[0]*dv10; 
  incr[9] = 0.1767766952966368*B2[0]*fr[9]*dv10*wv2+0.1767766952966368*B2[0]*fl[9]*dv10*wv2-0.07905694150420947*B2[0]*fr[6]*dv10*dv2+0.07905694150420947*B2[0]*fl[6]*dv10*dv2+0.04564354645876383*B2[1]*fr[5]*dv10*dv2+0.04564354645876383*B2[1]*fl[5]*dv10*dv2+0.04564354645876383*B2[0]*fr[3]*dv10*dv2+0.04564354645876383*B2[0]*fl[3]*dv10*dv2-0.25*fr[9]*amax10*dv10+0.25*fl[9]*amax10*dv10+0.1767766952966368*E0[0]*fr[9]*dv10+0.1767766952966368*E0[0]*fl[9]*dv10; 

  outr[0] += incr[0]; 
  outr[1] += incr[1]; 
  outr[2] += incr[2]; 
  outr[3] += incr[3]; 
  outr[4] += incr[4]; 
  outr[5] += incr[5]; 
  outr[6] += incr[6]; 
  outr[7] += incr[7]; 
  outr[8] += incr[8]; 
  outr[9] += incr[9]; 

  outl[0] += -1.0*incr[0]; 
  outl[1] += -1.0*incr[1]; 
  outl[2] += incr[2]; 
  outl[3] += -1.0*incr[3]; 
  outl[4] += incr[4]; 
  outl[5] += -1.0*incr[5]; 
  outl[6] += incr[6]; 
  outl[7] += -1.0*incr[7]; 
  outl[8] += -1.0*incr[8]; 
  outl[9] += -1.0*incr[9]; 
} 
void VlasovSurfElcMag1x2vMax_VY_P1(const double *w, const double *dxv, const double dt, const double cfl, const double *EM, const double *fl, const double *fr, double *outl, double *outr) 
{ 
// w: Cell-center coordinates. dxv[NDIM]: Cell spacing. dt/cfl: dt and cfl for amax in global lax flux. E: EM field. fl/fr: Distribution function in left/right cells 
// outl/outr: output distribution function in left/right cells 
  double dv11 = 2/dxv[2]; 
  double amax11 = cfl*dxv[2]/dt; 
  const double *E1 = &EM[2]; 

  const double dv1 = dxv[1], wv1 = w[1]; 
  const double dv2 = dxv[2], wv2 = w[2]; 

  const double *B0 = &EM[6]; 
  const double *B1 = &EM[8]; 
  const double *B2 = &EM[10]; 

  double incr[4]; 

  incr[0] = 0.3061862178478971*B2[0]*fr[3]*dv11*wv1-0.3061862178478971*B2[0]*fl[3]*dv11*wv1-0.1767766952966368*fr[1]*B2[1]*dv11*wv1-0.1767766952966368*fl[1]*B2[1]*dv11*wv1-0.1767766952966368*fr[0]*B2[0]*dv11*wv1-0.1767766952966368*fl[0]*B2[0]*dv11*wv1-0.05103103630798285*B2[0]*fr[2]*dv1*dv11-0.05103103630798285*B2[0]*fl[2]*dv1*dv11+0.4330127018922193*fr[3]*amax11*dv11+0.4330127018922193*fl[3]*amax11*dv11-0.25*fr[0]*amax11*dv11+0.25*fl[0]*amax11*dv11-0.3061862178478971*E1[0]*fr[3]*dv11+0.3061862178478971*E1[0]*fl[3]*dv11+0.1767766952966368*fr[1]*E1[1]*dv11+0.1767766952966368*fl[1]*E1[1]*dv11+0.1767766952966368*fr[0]*E1[0]*dv11+0.1767766952966368*fl[0]*E1[0]*dv11; 
  incr[1] = 0.3061862178478971*B2[1]*fr[3]*dv11*wv1-0.3061862178478971*B2[1]*fl[3]*dv11*wv1-0.1767766952966368*fr[0]*B2[1]*dv11*wv1-0.1767766952966368*fl[0]*B2[1]*dv11*wv1-0.1767766952966368*B2[0]*fr[1]*dv11*wv1-0.1767766952966368*B2[0]*fl[1]*dv11*wv1-0.05103103630798285*B2[1]*fr[2]*dv1*dv11-0.05103103630798285*B2[1]*fl[2]*dv1*dv11-0.25*fr[1]*amax11*dv11+0.25*fl[1]*amax11*dv11-0.3061862178478971*E1[1]*fr[3]*dv11+0.3061862178478971*E1[1]*fl[3]*dv11+0.1767766952966368*fr[0]*E1[1]*dv11+0.1767766952966368*fl[0]*E1[1]*dv11+0.1767766952966368*E1[0]*fr[1]*dv11+0.1767766952966368*E1[0]*fl[1]*dv11; 
  incr[2] = (-0.1767766952966368*B2[0]*fr[2]*dv11*wv1)-0.1767766952966368*B2[0]*fl[2]*dv11*wv1+0.0883883476483184*B2[0]*fr[3]*dv1*dv11-0.0883883476483184*B2[0]*fl[3]*dv1*dv11-0.05103103630798285*fr[1]*B2[1]*dv1*dv11-0.05103103630798285*fl[1]*B2[1]*dv1*dv11-0.05103103630798285*fr[0]*B2[0]*dv1*dv11-0.05103103630798285*fl[0]*B2[0]*dv1*dv11-0.25*fr[2]*amax11*dv11+0.25*fl[2]*amax11*dv11+0.1767766952966368*E1[0]*fr[2]*dv11+0.1767766952966368*E1[0]*fl[2]*dv11; 
  incr[3] = (-0.5303300858899105*B2[0]*fr[3]*dv11*wv1)+0.5303300858899105*B2[0]*fl[3]*dv11*wv1+0.3061862178478971*fr[1]*B2[1]*dv11*wv1+0.3061862178478971*fl[1]*B2[1]*dv11*wv1+0.3061862178478971*fr[0]*B2[0]*dv11*wv1+0.3061862178478971*fl[0]*B2[0]*dv11*wv1+0.0883883476483184*B2[0]*fr[2]*dv1*dv11+0.0883883476483184*B2[0]*fl[2]*dv1*dv11-0.75*fr[3]*amax11*dv11-0.75*fl[3]*amax11*dv11+0.4330127018922193*fr[0]*amax11*dv11-0.4330127018922193*fl[0]*amax11*dv11+0.5303300858899105*E1[0]*fr[3]*dv11-0.5303300858899105*E1[0]*fl[3]*dv11-0.3061862178478971*fr[1]*E1[1]*dv11-0.3061862178478971*fl[1]*E1[1]*dv11-0.3061862178478971*fr[0]*E1[0]*dv11-0.3061862178478971*fl[0]*E1[0]*dv11; 

  outr[0] += incr[0]; 
  outr[1] += incr[1]; 
  outr[2] += incr[2]; 
  outr[3] += incr[3]; 

  outl[0] += -1.0*incr[0]; 
  outl[1] += -1.0*incr[1]; 
  outl[2] += -1.0*incr[2]; 
  outl[3] += incr[3]; 
} 
void VlasovSurfElcMag1x2vMax_VY_P2(const double *w, const double *dxv, const double dt, const double cfl, const double *EM, const double *fl, const double *fr, double *outl, double *outr) 
{ 
// w: Cell-center coordinates. dxv[NDIM]: Cell spacing. dt/cfl: dt and cfl for amax in global lax flux. E: EM field. fl/fr: Distribution function in left/right cells 
// outl/outr: output distribution function in left/right cells 
  double dv11 = 2/dxv[2]; 
  double amax11 = cfl*dxv[2]/dt; 
  const double *E1 = &EM[3]; 

  const double dv1 = dxv[1], wv1 = w[1]; 
  const double dv2 = dxv[2], wv2 = w[2]; 

  const double *B0 = &EM[9]; 
  const double *B1 = &EM[12]; 
  const double *B2 = &EM[15]; 

  double incr[10]; 

  incr[0] = (-0.3952847075210473*B2[0]*fr[9]*dv11*wv1)-0.3952847075210473*B2[0]*fl[9]*dv11*wv1-0.1767766952966368*B2[2]*fr[7]*dv11*wv1-0.1767766952966368*B2[2]*fl[7]*dv11*wv1+0.3061862178478971*B2[1]*fr[5]*dv11*wv1-0.3061862178478971*B2[1]*fl[5]*dv11*wv1+0.3061862178478971*B2[0]*fr[3]*dv11*wv1-0.3061862178478971*B2[0]*fl[3]*dv11*wv1-0.1767766952966368*fr[1]*B2[1]*dv11*wv1-0.1767766952966368*fl[1]*B2[1]*dv11*wv1-0.1767766952966368*fr[0]*B2[0]*dv11*wv1-0.1767766952966368*fl[0]*B2[0]*dv11*wv1+0.0883883476483184*B2[0]*fr[6]*dv1*dv11-0.0883883476483184*B2[0]*fl[6]*dv1*dv11-0.05103103630798285*B2[1]*fr[4]*dv1*dv11-0.05103103630798285*B2[1]*fl[4]*dv1*dv11-0.05103103630798285*B2[0]*fr[2]*dv1*dv11-0.05103103630798285*B2[0]*fl[2]*dv1*dv11-0.5590169943749475*fr[9]*amax11*dv11+0.5590169943749475*fl[9]*amax11*dv11+0.4330127018922193*fr[3]*amax11*dv11+0.4330127018922193*fl[3]*amax11*dv11-0.25*fr[0]*amax11*dv11+0.25*fl[0]*amax11*dv11+0.3952847075210473*E1[0]*fr[9]*dv11+0.3952847075210473*E1[0]*fl[9]*dv11+0.1767766952966368*E1[2]*fr[7]*dv11+0.1767766952966368*E1[2]*fl[7]*dv11-0.3061862178478971*E1[1]*fr[5]*dv11+0.3061862178478971*E1[1]*fl[5]*dv11-0.3061862178478971*E1[0]*fr[3]*dv11+0.3061862178478971*E1[0]*fl[3]*dv11+0.1767766952966368*fr[1]*E1[1]*dv11+0.1767766952966368*fl[1]*E1[1]*dv11+0.1767766952966368*fr[0]*E1[0]*dv11+0.1767766952966368*fl[0]*E1[0]*dv11; 
  incr[1] = (-0.3952847075210473*B2[1]*fr[9]*dv11*wv1)-0.3952847075210473*B2[1]*fl[9]*dv11*wv1-0.1581138830084189*B2[1]*fr[7]*dv11*wv1-0.1581138830084189*B2[1]*fl[7]*dv11*wv1+0.2738612787525829*B2[2]*fr[5]*dv11*wv1+0.3061862178478971*B2[0]*fr[5]*dv11*wv1-0.2738612787525829*B2[2]*fl[5]*dv11*wv1-0.3061862178478971*B2[0]*fl[5]*dv11*wv1+0.3061862178478971*B2[1]*fr[3]*dv11*wv1-0.3061862178478971*B2[1]*fl[3]*dv11*wv1-0.1581138830084189*fr[1]*B2[2]*dv11*wv1-0.1581138830084189*fl[1]*B2[2]*dv11*wv1-0.1767766952966368*fr[0]*B2[1]*dv11*wv1-0.1767766952966368*fl[0]*B2[1]*dv11*wv1-0.1767766952966368*B2[0]*fr[1]*dv11*wv1-0.1767766952966368*B2[0]*fl[1]*dv11*wv1+0.0883883476483184*B2[1]*fr[6]*dv1*dv11-0.0883883476483184*B2[1]*fl[6]*dv1*dv11-0.04564354645876383*B2[2]*fr[4]*dv1*dv11-0.05103103630798285*B2[0]*fr[4]*dv1*dv11-0.04564354645876383*B2[2]*fl[4]*dv1*dv11-0.05103103630798285*B2[0]*fl[4]*dv1*dv11-0.05103103630798285*B2[1]*fr[2]*dv1*dv11-0.05103103630798285*B2[1]*fl[2]*dv1*dv11+0.4330127018922193*fr[5]*amax11*dv11+0.4330127018922193*fl[5]*amax11*dv11-0.25*fr[1]*amax11*dv11+0.25*fl[1]*amax11*dv11+0.3952847075210473*E1[1]*fr[9]*dv11+0.3952847075210473*E1[1]*fl[9]*dv11+0.1581138830084189*E1[1]*fr[7]*dv11+0.1581138830084189*E1[1]*fl[7]*dv11-0.2738612787525829*E1[2]*fr[5]*dv11-0.3061862178478971*E1[0]*fr[5]*dv11+0.2738612787525829*E1[2]*fl[5]*dv11+0.3061862178478971*E1[0]*fl[5]*dv11-0.3061862178478971*E1[1]*fr[3]*dv11+0.3061862178478971*E1[1]*fl[3]*dv11+0.1581138830084189*fr[1]*E1[2]*dv11+0.1581138830084189*fl[1]*E1[2]*dv11+0.1767766952966368*fr[0]*E1[1]*dv11+0.1767766952966368*fl[0]*E1[1]*dv11+0.1767766952966368*E1[0]*fr[1]*dv11+0.1767766952966368*E1[0]*fl[1]*dv11; 
  incr[2] = 0.3061862178478971*B2[0]*fr[6]*dv11*wv1-0.3061862178478971*B2[0]*fl[6]*dv11*wv1-0.1767766952966368*B2[1]*fr[4]*dv11*wv1-0.1767766952966368*B2[1]*fl[4]*dv11*wv1-0.1767766952966368*B2[0]*fr[2]*dv11*wv1-0.1767766952966368*B2[0]*fl[2]*dv11*wv1-0.1141088661469096*B2[0]*fr[9]*dv1*dv11-0.1141088661469096*B2[0]*fl[9]*dv1*dv11-0.04564354645876383*B2[0]*fr[8]*dv1*dv11-0.04564354645876383*B2[0]*fl[8]*dv1*dv11-0.05103103630798285*B2[2]*fr[7]*dv1*dv11-0.05103103630798285*B2[2]*fl[7]*dv1*dv11+0.0883883476483184*B2[1]*fr[5]*dv1*dv11-0.0883883476483184*B2[1]*fl[5]*dv1*dv11+0.0883883476483184*B2[0]*fr[3]*dv1*dv11-0.0883883476483184*B2[0]*fl[3]*dv1*dv11-0.05103103630798285*fr[1]*B2[1]*dv1*dv11-0.05103103630798285*fl[1]*B2[1]*dv1*dv11-0.05103103630798285*fr[0]*B2[0]*dv1*dv11-0.05103103630798285*fl[0]*B2[0]*dv1*dv11+0.4330127018922193*fr[6]*amax11*dv11+0.4330127018922193*fl[6]*amax11*dv11-0.25*fr[2]*amax11*dv11+0.25*fl[2]*amax11*dv11-0.3061862178478971*E1[0]*fr[6]*dv11+0.3061862178478971*E1[0]*fl[6]*dv11+0.1767766952966368*E1[1]*fr[4]*dv11+0.1767766952966368*E1[1]*fl[4]*dv11+0.1767766952966368*E1[0]*fr[2]*dv11+0.1767766952966368*E1[0]*fl[2]*dv11; 
  incr[3] = 0.6846531968814573*B2[0]*fr[9]*dv11*wv1+0.6846531968814573*B2[0]*fl[9]*dv11*wv1+0.3061862178478971*B2[2]*fr[7]*dv11*wv1+0.3061862178478971*B2[2]*fl[7]*dv11*wv1-0.5303300858899105*B2[1]*fr[5]*dv11*wv1+0.5303300858899105*B2[1]*fl[5]*dv11*wv1-0.5303300858899105*B2[0]*fr[3]*dv11*wv1+0.5303300858899105*B2[0]*fl[3]*dv11*wv1+0.3061862178478971*fr[1]*B2[1]*dv11*wv1+0.3061862178478971*fl[1]*B2[1]*dv11*wv1+0.3061862178478971*fr[0]*B2[0]*dv11*wv1+0.3061862178478971*fl[0]*B2[0]*dv11*wv1-0.1530931089239486*B2[0]*fr[6]*dv1*dv11+0.1530931089239486*B2[0]*fl[6]*dv1*dv11+0.0883883476483184*B2[1]*fr[4]*dv1*dv11+0.0883883476483184*B2[1]*fl[4]*dv1*dv11+0.0883883476483184*B2[0]*fr[2]*dv1*dv11+0.0883883476483184*B2[0]*fl[2]*dv1*dv11+0.9682458365518543*fr[9]*amax11*dv11-0.9682458365518543*fl[9]*amax11*dv11-0.75*fr[3]*amax11*dv11-0.75*fl[3]*amax11*dv11+0.4330127018922193*fr[0]*amax11*dv11-0.4330127018922193*fl[0]*amax11*dv11-0.6846531968814573*E1[0]*fr[9]*dv11-0.6846531968814573*E1[0]*fl[9]*dv11-0.3061862178478971*E1[2]*fr[7]*dv11-0.3061862178478971*E1[2]*fl[7]*dv11+0.5303300858899105*E1[1]*fr[5]*dv11-0.5303300858899105*E1[1]*fl[5]*dv11+0.5303300858899105*E1[0]*fr[3]*dv11-0.5303300858899105*E1[0]*fl[3]*dv11-0.3061862178478971*fr[1]*E1[1]*dv11-0.3061862178478971*fl[1]*E1[1]*dv11-0.3061862178478971*fr[0]*E1[0]*dv11-0.3061862178478971*fl[0]*E1[0]*dv11; 
  incr[4] = 0.3061862178478971*B2[1]*fr[6]*dv11*wv1-0.3061862178478971*B2[1]*fl[6]*dv11*wv1-0.1581138830084189*B2[2]*fr[4]*dv11*wv1-0.1767766952966368*B2[0]*fr[4]*dv11*wv1-0.1581138830084189*B2[2]*fl[4]*dv11*wv1-0.1767766952966368*B2[0]*fl[4]*dv11*wv1-0.1767766952966368*B2[1]*fr[2]*dv11*wv1-0.1767766952966368*B2[1]*fl[2]*dv11*wv1-0.1141088661469096*B2[1]*fr[9]*dv1*dv11-0.1141088661469096*B2[1]*fl[9]*dv1*dv11-0.04564354645876383*B2[1]*fr[8]*dv1*dv11-0.04564354645876383*B2[1]*fl[8]*dv1*dv11-0.04564354645876383*B2[1]*fr[7]*dv1*dv11-0.04564354645876383*B2[1]*fl[7]*dv1*dv11+0.07905694150420946*B2[2]*fr[5]*dv1*dv11+0.0883883476483184*B2[0]*fr[5]*dv1*dv11-0.07905694150420946*B2[2]*fl[5]*dv1*dv11-0.0883883476483184*B2[0]*fl[5]*dv1*dv11+0.0883883476483184*B2[1]*fr[3]*dv1*dv11-0.0883883476483184*B2[1]*fl[3]*dv1*dv11-0.04564354645876383*fr[1]*B2[2]*dv1*dv11-0.04564354645876383*fl[1]*B2[2]*dv1*dv11-0.05103103630798285*fr[0]*B2[1]*dv1*dv11-0.05103103630798285*fl[0]*B2[1]*dv1*dv11-0.05103103630798285*B2[0]*fr[1]*dv1*dv11-0.05103103630798285*B2[0]*fl[1]*dv1*dv11-0.25*fr[4]*amax11*dv11+0.25*fl[4]*amax11*dv11-0.3061862178478971*E1[1]*fr[6]*dv11+0.3061862178478971*E1[1]*fl[6]*dv11+0.1581138830084189*E1[2]*fr[4]*dv11+0.1767766952966368*E1[0]*fr[4]*dv11+0.1581138830084189*E1[2]*fl[4]*dv11+0.1767766952966368*E1[0]*fl[4]*dv11+0.1767766952966368*E1[1]*fr[2]*dv11+0.1767766952966368*E1[1]*fl[2]*dv11; 
  incr[5] = 0.6846531968814574*B2[1]*fr[9]*dv11*wv1+0.6846531968814574*B2[1]*fl[9]*dv11*wv1+0.2738612787525829*B2[1]*fr[7]*dv11*wv1+0.2738612787525829*B2[1]*fl[7]*dv11*wv1-0.4743416490252568*B2[2]*fr[5]*dv11*wv1-0.5303300858899105*B2[0]*fr[5]*dv11*wv1+0.4743416490252568*B2[2]*fl[5]*dv11*wv1+0.5303300858899105*B2[0]*fl[5]*dv11*wv1-0.5303300858899105*B2[1]*fr[3]*dv11*wv1+0.5303300858899105*B2[1]*fl[3]*dv11*wv1+0.2738612787525829*fr[1]*B2[2]*dv11*wv1+0.2738612787525829*fl[1]*B2[2]*dv11*wv1+0.3061862178478971*fr[0]*B2[1]*dv11*wv1+0.3061862178478971*fl[0]*B2[1]*dv11*wv1+0.3061862178478971*B2[0]*fr[1]*dv11*wv1+0.3061862178478971*B2[0]*fl[1]*dv11*wv1-0.1530931089239486*B2[1]*fr[6]*dv1*dv11+0.1530931089239486*B2[1]*fl[6]*dv1*dv11+0.07905694150420946*B2[2]*fr[4]*dv1*dv11+0.0883883476483184*B2[0]*fr[4]*dv1*dv11+0.07905694150420946*B2[2]*fl[4]*dv1*dv11+0.0883883476483184*B2[0]*fl[4]*dv1*dv11+0.0883883476483184*B2[1]*fr[2]*dv1*dv11+0.0883883476483184*B2[1]*fl[2]*dv1*dv11-0.75*fr[5]*amax11*dv11-0.75*fl[5]*amax11*dv11+0.4330127018922193*fr[1]*amax11*dv11-0.4330127018922193*fl[1]*amax11*dv11-0.6846531968814574*E1[1]*fr[9]*dv11-0.6846531968814574*E1[1]*fl[9]*dv11-0.2738612787525829*E1[1]*fr[7]*dv11-0.2738612787525829*E1[1]*fl[7]*dv11+0.4743416490252568*E1[2]*fr[5]*dv11+0.5303300858899105*E1[0]*fr[5]*dv11-0.4743416490252568*E1[2]*fl[5]*dv11-0.5303300858899105*E1[0]*fl[5]*dv11+0.5303300858899105*E1[1]*fr[3]*dv11-0.5303300858899105*E1[1]*fl[3]*dv11-0.2738612787525829*fr[1]*E1[2]*dv11-0.2738612787525829*fl[1]*E1[2]*dv11-0.3061862178478971*fr[0]*E1[1]*dv11-0.3061862178478971*fl[0]*E1[1]*dv11-0.3061862178478971*E1[0]*fr[1]*dv11-0.3061862178478971*E1[0]*fl[1]*dv11; 
  incr[6] = (-0.5303300858899105*B2[0]*fr[6]*dv11*wv1)+0.5303300858899105*B2[0]*fl[6]*dv11*wv1+0.3061862178478971*B2[1]*fr[4]*dv11*wv1+0.3061862178478971*B2[1]*fl[4]*dv11*wv1+0.3061862178478971*B2[0]*fr[2]*dv11*wv1+0.3061862178478971*B2[0]*fl[2]*dv11*wv1+0.1976423537605237*B2[0]*fr[9]*dv1*dv11+0.1976423537605237*B2[0]*fl[9]*dv1*dv11+0.07905694150420946*B2[0]*fr[8]*dv1*dv11+0.07905694150420946*B2[0]*fl[8]*dv1*dv11+0.0883883476483184*B2[2]*fr[7]*dv1*dv11+0.0883883476483184*B2[2]*fl[7]*dv1*dv11-0.1530931089239486*B2[1]*fr[5]*dv1*dv11+0.1530931089239486*B2[1]*fl[5]*dv1*dv11-0.1530931089239486*B2[0]*fr[3]*dv1*dv11+0.1530931089239486*B2[0]*fl[3]*dv1*dv11+0.0883883476483184*fr[1]*B2[1]*dv1*dv11+0.0883883476483184*fl[1]*B2[1]*dv1*dv11+0.0883883476483184*fr[0]*B2[0]*dv1*dv11+0.0883883476483184*fl[0]*B2[0]*dv1*dv11-0.75*fr[6]*amax11*dv11-0.75*fl[6]*amax11*dv11+0.4330127018922193*fr[2]*amax11*dv11-0.4330127018922193*fl[2]*amax11*dv11+0.5303300858899105*E1[0]*fr[6]*dv11-0.5303300858899105*E1[0]*fl[6]*dv11-0.3061862178478971*E1[1]*fr[4]*dv11-0.3061862178478971*E1[1]*fl[4]*dv11-0.3061862178478971*E1[0]*fr[2]*dv11-0.3061862178478971*E1[0]*fl[2]*dv11; 
  incr[7] = (-0.3952847075210473*B2[2]*fr[9]*dv11*wv1)-0.3952847075210473*B2[2]*fl[9]*dv11*wv1-0.1129384878631564*B2[2]*fr[7]*dv11*wv1-0.1767766952966368*B2[0]*fr[7]*dv11*wv1-0.1129384878631564*B2[2]*fl[7]*dv11*wv1-0.1767766952966368*B2[0]*fl[7]*dv11*wv1+0.273861278752583*B2[1]*fr[5]*dv11*wv1-0.273861278752583*B2[1]*fl[5]*dv11*wv1+0.3061862178478971*B2[2]*fr[3]*dv11*wv1-0.3061862178478971*B2[2]*fl[3]*dv11*wv1-0.1767766952966368*fr[0]*B2[2]*dv11*wv1-0.1767766952966368*fl[0]*B2[2]*dv11*wv1-0.1581138830084189*fr[1]*B2[1]*dv11*wv1-0.1581138830084189*fl[1]*B2[1]*dv11*wv1+0.0883883476483184*B2[2]*fr[6]*dv1*dv11-0.0883883476483184*B2[2]*fl[6]*dv1*dv11-0.04564354645876383*B2[1]*fr[4]*dv1*dv11-0.04564354645876383*B2[1]*fl[4]*dv1*dv11-0.05103103630798286*fr[2]*B2[2]*dv1*dv11-0.05103103630798286*fl[2]*B2[2]*dv1*dv11-0.25*fr[7]*amax11*dv11+0.25*fl[7]*amax11*dv11+0.3952847075210473*E1[2]*fr[9]*dv11+0.3952847075210473*E1[2]*fl[9]*dv11+0.1129384878631564*E1[2]*fr[7]*dv11+0.1767766952966368*E1[0]*fr[7]*dv11+0.1129384878631564*E1[2]*fl[7]*dv11+0.1767766952966368*E1[0]*fl[7]*dv11-0.273861278752583*E1[1]*fr[5]*dv11+0.273861278752583*E1[1]*fl[5]*dv11-0.3061862178478971*E1[2]*fr[3]*dv11+0.3061862178478971*E1[2]*fl[3]*dv11+0.1767766952966368*fr[0]*E1[2]*dv11+0.1767766952966368*fl[0]*E1[2]*dv11+0.1581138830084189*fr[1]*E1[1]*dv11+0.1581138830084189*fl[1]*E1[1]*dv11; 
  incr[8] = (-0.1767766952966368*B2[0]*fr[8]*dv11*wv1)-0.1767766952966368*B2[0]*fl[8]*dv11*wv1+0.07905694150420947*B2[0]*fr[6]*dv1*dv11-0.07905694150420947*B2[0]*fl[6]*dv1*dv11-0.04564354645876383*B2[1]*fr[4]*dv1*dv11-0.04564354645876383*B2[1]*fl[4]*dv1*dv11-0.04564354645876383*B2[0]*fr[2]*dv1*dv11-0.04564354645876383*B2[0]*fl[2]*dv1*dv11-0.25*fr[8]*amax11*dv11+0.25*fl[8]*amax11*dv11+0.1767766952966368*E1[0]*fr[8]*dv11+0.1767766952966368*E1[0]*fl[8]*dv11; 
  incr[9] = (-0.883883476483184*B2[0]*fr[9]*dv11*wv1)-0.883883476483184*B2[0]*fl[9]*dv11*wv1-0.3952847075210473*B2[2]*fr[7]*dv11*wv1-0.3952847075210473*B2[2]*fl[7]*dv11*wv1+0.6846531968814572*B2[1]*fr[5]*dv11*wv1-0.6846531968814572*B2[1]*fl[5]*dv11*wv1+0.6846531968814572*B2[0]*fr[3]*dv11*wv1-0.6846531968814572*B2[0]*fl[3]*dv11*wv1-0.3952847075210473*fr[1]*B2[1]*dv11*wv1-0.3952847075210473*fl[1]*B2[1]*dv11*wv1-0.3952847075210473*fr[0]*B2[0]*dv11*wv1-0.3952847075210473*fl[0]*B2[0]*dv11*wv1+0.1976423537605236*B2[0]*fr[6]*dv1*dv11-0.1976423537605236*B2[0]*fl[6]*dv1*dv11-0.1141088661469096*B2[1]*fr[4]*dv1*dv11-0.1141088661469096*B2[1]*fl[4]*dv1*dv11-0.1141088661469096*B2[0]*fr[2]*dv1*dv11-0.1141088661469096*B2[0]*fl[2]*dv1*dv11-1.25*fr[9]*amax11*dv11+1.25*fl[9]*amax11*dv11+0.9682458365518543*fr[3]*amax11*dv11+0.9682458365518543*fl[3]*amax11*dv11-0.5590169943749475*fr[0]*amax11*dv11+0.5590169943749475*fl[0]*amax11*dv11+0.883883476483184*E1[0]*fr[9]*dv11+0.883883476483184*E1[0]*fl[9]*dv11+0.3952847075210473*E1[2]*fr[7]*dv11+0.3952847075210473*E1[2]*fl[7]*dv11-0.6846531968814572*E1[1]*fr[5]*dv11+0.6846531968814572*E1[1]*fl[5]*dv11-0.6846531968814572*E1[0]*fr[3]*dv11+0.6846531968814572*E1[0]*fl[3]*dv11+0.3952847075210473*fr[1]*E1[1]*dv11+0.3952847075210473*fl[1]*E1[1]*dv11+0.3952847075210473*fr[0]*E1[0]*dv11+0.3952847075210473*fl[0]*E1[0]*dv11; 

  outr[0] += incr[0]; 
  outr[1] += incr[1]; 
  outr[2] += incr[2]; 
  outr[3] += incr[3]; 
  outr[4] += incr[4]; 
  outr[5] += incr[5]; 
  outr[6] += incr[6]; 
  outr[7] += incr[7]; 
  outr[8] += incr[8]; 
  outr[9] += incr[9]; 

  outl[0] += -1.0*incr[0]; 
  outl[1] += -1.0*incr[1]; 
  outl[2] += -1.0*incr[2]; 
  outl[3] += incr[3]; 
  outl[4] += -1.0*incr[4]; 
  outl[5] += incr[5]; 
  outl[6] += incr[6]; 
  outl[7] += -1.0*incr[7]; 
  outl[8] += -1.0*incr[8]; 
  outl[9] += -1.0*incr[9]; 
} 
