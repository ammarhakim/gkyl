#include <math.h> 
#include <CartFieldBinOpModDecl.h> 
 
using namespace Eigen; 
 
void CartFieldBinOpMultiply3x2vMax_P1(const double *A, const double *B, const short int Ncomp, const short int eqNcomp, double *out) 
{ 
  // A:       scalar/vector field in configuration space. 
  // B:       scalar field in phase space. 
  // Ncomp:   number of components of B (should =1 here). 
  // eqNcomp: =1 if A:numComponents=B:numComponents, =0 else (should=1 here). 
  // out:     output field A*B (same number of components as B). 
 
  double tmp[6]; 
  tmp[0] = 0.3535533905932737*A[3]*B[3]+0.3535533905932737*A[2]*B[2]+0.3535533905932737*A[1]*B[1]+0.3535533905932737*A[0]*B[0]; 
  tmp[1] = 0.3535533905932737*A[0]*B[1]+0.3535533905932737*B[0]*A[1]; 
  tmp[2] = 0.3535533905932737*A[0]*B[2]+0.3535533905932737*B[0]*A[2]; 
  tmp[3] = 0.3535533905932737*A[0]*B[3]+0.3535533905932737*B[0]*A[3]; 
  tmp[4] = 0.3535533905932737*A[0]*B[4]; 
  tmp[5] = 0.3535533905932737*A[0]*B[5]; 
 
  // This tmp allows for in-place multiplication. 
  for (unsigned short int i=0; i<6; i++) 
  { 
    out[i] = tmp[i]; 
  } 
 
} 
 
void CartFieldBinOpMultiply3x2vMax_P2(const double *A, const double *B, const short int Ncomp, const short int eqNcomp, double *out) 
{ 
  // A:       scalar/vector field in configuration space. 
  // B:       scalar field in phase space. 
  // Ncomp:   number of components of B (should =1 here). 
  // eqNcomp: =1 if A:numComponents=B:numComponents, =0 else (should=1 here). 
  // out:     output field A*B (same number of components as B). 
 
  double tmp[21]; 
  tmp[0] = 0.3535533905932737*A[9]*B[18]+0.3535533905932737*A[8]*B[17]+0.3535533905932737*A[7]*B[16]+0.3535533905932737*A[6]*B[8]+0.3535533905932737*A[5]*B[7]+0.3535533905932737*A[4]*B[6]+0.3535533905932737*A[3]*B[3]+0.3535533905932737*A[2]*B[2]+0.3535533905932737*A[1]*B[1]+0.3535533905932737*A[0]*B[0]; 
  tmp[1] = 0.3162277660168379*A[1]*B[16]+0.3535533905932737*A[3]*B[7]+0.3162277660168379*B[1]*A[7]+0.3535533905932737*A[2]*B[6]+0.3535533905932737*B[3]*A[5]+0.3535533905932737*B[2]*A[4]+0.3535533905932737*A[0]*B[1]+0.3535533905932737*B[0]*A[1]; 
  tmp[2] = 0.3162277660168379*A[2]*B[17]+0.3535533905932737*A[3]*B[8]+0.3162277660168379*B[2]*A[8]+0.3535533905932737*A[1]*B[6]+0.3535533905932737*B[3]*A[6]+0.3535533905932737*B[1]*A[4]+0.3535533905932737*A[0]*B[2]+0.3535533905932737*B[0]*A[2]; 
  tmp[3] = 0.3162277660168379*A[3]*B[18]+0.3162277660168379*B[3]*A[9]+0.3535533905932737*A[2]*B[8]+0.3535533905932737*A[1]*B[7]+0.3535533905932737*B[2]*A[6]+0.3535533905932737*B[1]*A[5]+0.3535533905932737*A[0]*B[3]+0.3535533905932737*B[0]*A[3]; 
  tmp[4] = 0.3535533905932737*A[3]*B[11]+0.3535533905932737*A[2]*B[10]+0.3535533905932737*A[1]*B[9]+0.3535533905932737*A[0]*B[4]; 
  tmp[5] = 0.3535533905932737*A[3]*B[14]+0.3535533905932737*A[2]*B[13]+0.3535533905932737*A[1]*B[12]+0.3535533905932737*A[0]*B[5]; 
  tmp[6] = 0.3162277660168379*A[4]*B[17]+0.3162277660168379*A[4]*B[16]+0.3535533905932737*A[5]*B[8]+0.3162277660168379*B[6]*A[8]+0.3535533905932737*A[6]*B[7]+0.3162277660168379*B[6]*A[7]+0.3535533905932737*A[0]*B[6]+0.3535533905932737*B[0]*A[4]+0.3535533905932737*A[1]*B[2]+0.3535533905932737*B[1]*A[2]; 
  tmp[7] = 0.3162277660168379*A[5]*B[18]+0.3162277660168379*A[5]*B[16]+0.3162277660168379*B[7]*A[9]+0.3535533905932737*A[4]*B[8]+0.3162277660168379*A[7]*B[7]+0.3535533905932737*A[0]*B[7]+0.3535533905932737*A[6]*B[6]+0.3535533905932737*B[0]*A[5]+0.3535533905932737*A[1]*B[3]+0.3535533905932737*B[1]*A[3]; 
  tmp[8] = 0.3162277660168379*A[6]*B[18]+0.3162277660168379*A[6]*B[17]+0.3162277660168379*B[8]*A[9]+0.3162277660168379*A[8]*B[8]+0.3535533905932737*A[0]*B[8]+0.3535533905932737*A[4]*B[7]+0.3535533905932737*A[5]*B[6]+0.3535533905932737*B[0]*A[6]+0.3535533905932737*A[2]*B[3]+0.3535533905932737*B[2]*A[3]; 
  tmp[9] = 0.3535533905932737*A[5]*B[11]+0.3535533905932737*A[4]*B[10]+0.3162277660168379*A[7]*B[9]+0.3535533905932737*A[0]*B[9]+0.3535533905932737*A[1]*B[4]; 
  tmp[10] = 0.3535533905932737*A[6]*B[11]+0.3162277660168379*A[8]*B[10]+0.3535533905932737*A[0]*B[10]+0.3535533905932737*A[4]*B[9]+0.3535533905932737*A[2]*B[4]; 
  tmp[11] = 0.3162277660168379*A[9]*B[11]+0.3535533905932737*A[0]*B[11]+0.3535533905932737*A[6]*B[10]+0.3535533905932737*A[5]*B[9]+0.3535533905932737*A[3]*B[4]; 
  tmp[12] = 0.3535533905932737*A[5]*B[14]+0.3535533905932737*A[4]*B[13]+0.3162277660168379*A[7]*B[12]+0.3535533905932737*A[0]*B[12]+0.3535533905932737*A[1]*B[5]; 
  tmp[13] = 0.3535533905932737*A[6]*B[14]+0.3162277660168379*A[8]*B[13]+0.3535533905932737*A[0]*B[13]+0.3535533905932737*A[4]*B[12]+0.3535533905932737*A[2]*B[5]; 
  tmp[14] = 0.3162277660168379*A[9]*B[14]+0.3535533905932737*A[0]*B[14]+0.3535533905932737*A[6]*B[13]+0.3535533905932737*A[5]*B[12]+0.3535533905932737*A[3]*B[5]; 
  tmp[15] = 0.3535533905932737*A[0]*B[15]; 
  tmp[16] = 0.2258769757263128*A[7]*B[16]+0.3535533905932737*A[0]*B[16]+0.3162277660168379*A[5]*B[7]+0.3535533905932737*B[0]*A[7]+0.3162277660168379*A[4]*B[6]+0.3162277660168379*A[1]*B[1]; 
  tmp[17] = 0.2258769757263128*A[8]*B[17]+0.3535533905932737*A[0]*B[17]+0.3162277660168379*A[6]*B[8]+0.3535533905932737*B[0]*A[8]+0.3162277660168379*A[4]*B[6]+0.3162277660168379*A[2]*B[2]; 
  tmp[18] = 0.2258769757263128*A[9]*B[18]+0.3535533905932737*A[0]*B[18]+0.3535533905932737*B[0]*A[9]+0.3162277660168379*A[6]*B[8]+0.3162277660168379*A[5]*B[7]+0.3162277660168379*A[3]*B[3]; 
  tmp[19] = 0.3535533905932737*A[0]*B[19]; 
  tmp[20] = 0.3535533905932737*A[0]*B[20]; 
 
  // This tmp allows for in-place multiplication. 
  for (unsigned short int i=0; i<21; i++) 
  { 
    out[i] = tmp[i]; 
  } 
 
} 
 
void CartFieldBinOpMultiply3x2vMax_P3(const double *A, const double *B, const short int Ncomp, const short int eqNcomp, double *out) 
{ 
  // A:       scalar/vector field in configuration space. 
  // B:       scalar field in phase space. 
  // Ncomp:   number of components of B (should =1 here). 
  // eqNcomp: =1 if A:numComponents=B:numComponents, =0 else (should=1 here). 
  // out:     output field A*B (same number of components as B). 
 
  double tmp[56]; 
  tmp[0] = 0.3535533905932737*A[19]*B[53]+0.3535533905932737*A[18]*B[52]+0.3535533905932737*A[17]*B[51]+0.3535533905932737*A[16]*B[36]+0.3535533905932737*A[15]*B[35]+0.3535533905932737*A[14]*B[34]+0.3535533905932737*A[13]*B[33]+0.3535533905932737*A[12]*B[32]+0.3535533905932737*A[11]*B[31]+0.3535533905932737*A[10]*B[21]+0.3535533905932737*A[9]*B[18]+0.3535533905932737*A[8]*B[17]+0.3535533905932737*A[7]*B[16]+0.3535533905932737*A[6]*B[8]+0.3535533905932737*A[5]*B[7]+0.3535533905932737*A[4]*B[6]+0.3535533905932737*A[3]*B[3]+0.3535533905932737*A[2]*B[2]+0.3535533905932737*A[1]*B[1]+0.3535533905932737*A[0]*B[0]; 
  tmp[1] = 0.3105295017040592*A[7]*B[51]+0.3535533905932737*A[9]*B[35]+0.3162277660168379*A[5]*B[33]+0.3535533905932737*A[8]*B[32]+0.3162277660168379*A[4]*B[31]+0.3535533905932737*A[6]*B[21]+0.3535533905932737*A[15]*B[18]+0.3535533905932737*A[12]*B[17]+0.3105295017040592*B[16]*A[17]+0.3162277660168379*A[1]*B[16]+0.3162277660168379*B[7]*A[13]+0.3162277660168379*B[6]*A[11]+0.3535533905932737*B[8]*A[10]+0.3535533905932737*A[3]*B[7]+0.3162277660168379*B[1]*A[7]+0.3535533905932737*A[2]*B[6]+0.3535533905932737*B[3]*A[5]+0.3535533905932737*B[2]*A[4]+0.3535533905932737*A[0]*B[1]+0.3535533905932737*B[0]*A[1]; 
  tmp[2] = 0.3105295017040592*A[8]*B[52]+0.3535533905932737*A[9]*B[36]+0.3162277660168379*A[6]*B[34]+0.3162277660168379*A[4]*B[32]+0.3535533905932737*A[7]*B[31]+0.3535533905932737*A[5]*B[21]+0.3535533905932737*A[16]*B[18]+0.3105295017040592*B[17]*A[18]+0.3162277660168379*A[2]*B[17]+0.3535533905932737*A[11]*B[16]+0.3162277660168379*B[8]*A[14]+0.3162277660168379*B[6]*A[12]+0.3535533905932737*B[7]*A[10]+0.3535533905932737*A[3]*B[8]+0.3162277660168379*B[2]*A[8]+0.3535533905932737*A[1]*B[6]+0.3535533905932737*B[3]*A[6]+0.3535533905932737*B[1]*A[4]+0.3535533905932737*A[0]*B[2]+0.3535533905932737*B[0]*A[2]; 
  tmp[3] = 0.3105295017040592*A[9]*B[53]+0.3162277660168379*A[6]*B[36]+0.3162277660168379*A[5]*B[35]+0.3535533905932737*A[8]*B[34]+0.3535533905932737*A[7]*B[33]+0.3535533905932737*A[4]*B[21]+0.3105295017040592*B[18]*A[19]+0.3162277660168379*A[3]*B[18]+0.3535533905932737*A[14]*B[17]+0.3535533905932737*A[13]*B[16]+0.3162277660168379*B[8]*A[16]+0.3162277660168379*B[7]*A[15]+0.3535533905932737*B[6]*A[10]+0.3162277660168379*B[3]*A[9]+0.3535533905932737*A[2]*B[8]+0.3535533905932737*A[1]*B[7]+0.3535533905932737*B[2]*A[6]+0.3535533905932737*B[1]*A[5]+0.3535533905932737*A[0]*B[3]+0.3535533905932737*B[0]*A[3]; 
  tmp[4] = 0.3535533905932737*A[9]*B[39]+0.3535533905932737*A[8]*B[38]+0.3535533905932737*A[7]*B[37]+0.3535533905932737*A[6]*B[24]+0.3535533905932737*A[5]*B[23]+0.3535533905932737*A[4]*B[22]+0.3535533905932737*A[3]*B[11]+0.3535533905932737*A[2]*B[10]+0.3535533905932737*A[1]*B[9]+0.3535533905932737*A[0]*B[4]; 
  tmp[5] = 0.3535533905932737*A[9]*B[45]+0.3535533905932737*A[8]*B[44]+0.3535533905932737*A[7]*B[43]+0.3535533905932737*A[6]*B[27]+0.3535533905932737*A[5]*B[26]+0.3535533905932737*A[4]*B[25]+0.3535533905932737*A[3]*B[14]+0.3535533905932737*A[2]*B[13]+0.3535533905932737*A[1]*B[12]+0.3535533905932737*A[0]*B[5]; 
  tmp[6] = 0.3105295017040593*A[12]*B[52]+0.3105295017040593*A[11]*B[51]+0.3535533905932737*A[15]*B[36]+0.3535533905932737*A[16]*B[35]+0.3162277660168379*A[10]*B[34]+0.3162277660168379*A[10]*B[33]+0.3105295017040593*A[18]*B[32]+0.2828427124746191*A[11]*B[32]+0.3162277660168379*A[2]*B[32]+0.3105295017040593*A[17]*B[31]+0.2828427124746191*A[12]*B[31]+0.3162277660168379*A[1]*B[31]+0.3162277660168379*A[14]*B[21]+0.3162277660168379*A[13]*B[21]+0.3535533905932737*A[3]*B[21]+0.3162277660168379*A[4]*B[17]+0.3162277660168379*A[4]*B[16]+0.3162277660168379*B[2]*A[12]+0.3162277660168379*B[1]*A[11]+0.3535533905932737*B[3]*A[10]+0.3535533905932737*A[5]*B[8]+0.3162277660168379*B[6]*A[8]+0.3535533905932737*A[6]*B[7]+0.3162277660168379*B[6]*A[7]+0.3535533905932737*A[0]*B[6]+0.3535533905932737*B[0]*A[4]+0.3535533905932737*A[1]*B[2]+0.3535533905932737*B[1]*A[2]; 
  tmp[7] = 0.3105295017040593*A[15]*B[53]+0.3105295017040593*A[13]*B[51]+0.3162277660168379*A[10]*B[36]+0.3105295017040593*A[19]*B[35]+0.2828427124746191*A[13]*B[35]+0.3162277660168379*A[3]*B[35]+0.3535533905932737*A[12]*B[34]+0.3105295017040593*A[17]*B[33]+0.2828427124746191*A[15]*B[33]+0.3162277660168379*A[1]*B[33]+0.3535533905932737*A[14]*B[32]+0.3162277660168379*A[10]*B[31]+0.3162277660168379*A[16]*B[21]+0.3162277660168379*A[11]*B[21]+0.3535533905932737*A[2]*B[21]+0.3162277660168379*A[5]*B[18]+0.3162277660168379*A[5]*B[16]+0.3162277660168379*B[3]*A[15]+0.3162277660168379*B[1]*A[13]+0.3535533905932737*B[2]*A[10]+0.3162277660168379*B[7]*A[9]+0.3535533905932737*A[4]*B[8]+0.3162277660168379*A[7]*B[7]+0.3535533905932737*A[0]*B[7]+0.3535533905932737*A[6]*B[6]+0.3535533905932737*B[0]*A[5]+0.3535533905932737*A[1]*B[3]+0.3535533905932737*B[1]*A[3]; 
  tmp[8] = 0.3105295017040593*A[16]*B[53]+0.3105295017040593*A[14]*B[52]+0.3105295017040593*A[19]*B[36]+0.2828427124746191*A[14]*B[36]+0.3162277660168379*A[3]*B[36]+0.3162277660168379*A[10]*B[35]+0.3105295017040593*A[18]*B[34]+0.2828427124746191*A[16]*B[34]+0.3162277660168379*A[2]*B[34]+0.3535533905932737*A[11]*B[33]+0.3162277660168379*A[10]*B[32]+0.3535533905932737*A[13]*B[31]+0.3162277660168379*A[15]*B[21]+0.3162277660168379*A[12]*B[21]+0.3535533905932737*A[1]*B[21]+0.3162277660168379*A[6]*B[18]+0.3162277660168379*A[6]*B[17]+0.3162277660168379*B[3]*A[16]+0.3162277660168379*B[2]*A[14]+0.3535533905932737*B[1]*A[10]+0.3162277660168379*B[8]*A[9]+0.3162277660168379*A[8]*B[8]+0.3535533905932737*A[0]*B[8]+0.3535533905932737*A[4]*B[7]+0.3535533905932737*A[5]*B[6]+0.3535533905932737*B[0]*A[6]+0.3535533905932737*A[2]*B[3]+0.3535533905932737*B[2]*A[3]; 
  tmp[9] = 0.3535533905932737*A[15]*B[39]+0.3535533905932737*A[12]*B[38]+0.3105295017040593*A[17]*B[37]+0.3162277660168379*A[1]*B[37]+0.3535533905932737*A[10]*B[24]+0.3162277660168379*A[13]*B[23]+0.3535533905932737*A[3]*B[23]+0.3162277660168379*A[11]*B[22]+0.3535533905932737*A[2]*B[22]+0.3535533905932737*A[5]*B[11]+0.3535533905932737*A[4]*B[10]+0.3162277660168379*A[7]*B[9]+0.3535533905932737*A[0]*B[9]+0.3535533905932737*A[1]*B[4]; 
  tmp[10] = 0.3535533905932737*A[16]*B[39]+0.3105295017040593*A[18]*B[38]+0.3162277660168379*A[2]*B[38]+0.3535533905932737*A[11]*B[37]+0.3162277660168379*A[14]*B[24]+0.3535533905932737*A[3]*B[24]+0.3535533905932737*A[10]*B[23]+0.3162277660168379*A[12]*B[22]+0.3535533905932737*A[1]*B[22]+0.3535533905932737*A[6]*B[11]+0.3162277660168379*A[8]*B[10]+0.3535533905932737*A[0]*B[10]+0.3535533905932737*A[4]*B[9]+0.3535533905932737*A[2]*B[4]; 
  tmp[11] = 0.3105295017040593*A[19]*B[39]+0.3162277660168379*A[3]*B[39]+0.3535533905932737*A[14]*B[38]+0.3535533905932737*A[13]*B[37]+0.3162277660168379*A[16]*B[24]+0.3535533905932737*A[2]*B[24]+0.3162277660168379*A[15]*B[23]+0.3535533905932737*A[1]*B[23]+0.3535533905932737*A[10]*B[22]+0.3162277660168379*A[9]*B[11]+0.3535533905932737*A[0]*B[11]+0.3535533905932737*A[6]*B[10]+0.3535533905932737*A[5]*B[9]+0.3535533905932737*A[3]*B[4]; 
  tmp[12] = 0.3535533905932737*A[15]*B[45]+0.3535533905932737*A[12]*B[44]+0.3105295017040593*A[17]*B[43]+0.3162277660168379*A[1]*B[43]+0.3535533905932737*A[10]*B[27]+0.3162277660168379*A[13]*B[26]+0.3535533905932737*A[3]*B[26]+0.3162277660168379*A[11]*B[25]+0.3535533905932737*A[2]*B[25]+0.3535533905932737*A[5]*B[14]+0.3535533905932737*A[4]*B[13]+0.3162277660168379*A[7]*B[12]+0.3535533905932737*A[0]*B[12]+0.3535533905932737*A[1]*B[5]; 
  tmp[13] = 0.3535533905932737*A[16]*B[45]+0.3105295017040593*A[18]*B[44]+0.3162277660168379*A[2]*B[44]+0.3535533905932737*A[11]*B[43]+0.3162277660168379*A[14]*B[27]+0.3535533905932737*A[3]*B[27]+0.3535533905932737*A[10]*B[26]+0.3162277660168379*A[12]*B[25]+0.3535533905932737*A[1]*B[25]+0.3535533905932737*A[6]*B[14]+0.3162277660168379*A[8]*B[13]+0.3535533905932737*A[0]*B[13]+0.3535533905932737*A[4]*B[12]+0.3535533905932737*A[2]*B[5]; 
  tmp[14] = 0.3105295017040593*A[19]*B[45]+0.3162277660168379*A[3]*B[45]+0.3535533905932737*A[14]*B[44]+0.3535533905932737*A[13]*B[43]+0.3162277660168379*A[16]*B[27]+0.3535533905932737*A[2]*B[27]+0.3162277660168379*A[15]*B[26]+0.3535533905932737*A[1]*B[26]+0.3535533905932737*A[10]*B[25]+0.3162277660168379*A[9]*B[14]+0.3535533905932737*A[0]*B[14]+0.3535533905932737*A[6]*B[13]+0.3535533905932737*A[5]*B[12]+0.3535533905932737*A[3]*B[5]; 
  tmp[15] = 0.3535533905932737*A[3]*B[30]+0.3535533905932737*A[2]*B[29]+0.3535533905932737*A[1]*B[28]+0.3535533905932737*A[0]*B[15]; 
  tmp[16] = 0.210818510677892*A[17]*B[51]+0.3105295017040592*A[1]*B[51]+0.3162277660168379*A[15]*B[35]+0.2258769757263128*A[13]*B[33]+0.3535533905932737*A[3]*B[33]+0.3162277660168379*A[12]*B[32]+0.2258769757263128*A[11]*B[31]+0.3535533905932737*A[2]*B[31]+0.3162277660168379*A[10]*B[21]+0.3105295017040592*B[1]*A[17]+0.2258769757263128*A[7]*B[16]+0.3535533905932737*A[0]*B[16]+0.3535533905932737*B[3]*A[13]+0.3535533905932737*B[2]*A[11]+0.3162277660168379*A[5]*B[7]+0.3535533905932737*B[0]*A[7]+0.3162277660168379*A[4]*B[6]+0.3162277660168379*A[1]*B[1]; 
  tmp[17] = 0.210818510677892*A[18]*B[52]+0.3105295017040592*A[2]*B[52]+0.3162277660168379*A[16]*B[36]+0.2258769757263128*A[14]*B[34]+0.3535533905932737*A[3]*B[34]+0.2258769757263128*A[12]*B[32]+0.3535533905932737*A[1]*B[32]+0.3162277660168379*A[11]*B[31]+0.3162277660168379*A[10]*B[21]+0.3105295017040592*B[2]*A[18]+0.2258769757263128*A[8]*B[17]+0.3535533905932737*A[0]*B[17]+0.3535533905932737*B[3]*A[14]+0.3535533905932737*B[1]*A[12]+0.3162277660168379*A[6]*B[8]+0.3535533905932737*B[0]*A[8]+0.3162277660168379*A[4]*B[6]+0.3162277660168379*A[2]*B[2]; 
  tmp[18] = 0.210818510677892*A[19]*B[53]+0.3105295017040592*A[3]*B[53]+0.2258769757263128*A[16]*B[36]+0.3535533905932737*A[2]*B[36]+0.2258769757263128*A[15]*B[35]+0.3535533905932737*A[1]*B[35]+0.3162277660168379*A[14]*B[34]+0.3162277660168379*A[13]*B[33]+0.3162277660168379*A[10]*B[21]+0.3105295017040592*B[3]*A[19]+0.2258769757263128*A[9]*B[18]+0.3535533905932737*A[0]*B[18]+0.3535533905932737*B[2]*A[16]+0.3535533905932737*B[1]*A[15]+0.3535533905932737*B[0]*A[9]+0.3162277660168379*A[6]*B[8]+0.3162277660168379*A[5]*B[7]+0.3162277660168379*A[3]*B[3]; 
  tmp[19] = 0.3535533905932737*A[3]*B[42]+0.3535533905932737*A[2]*B[41]+0.3535533905932737*A[1]*B[40]+0.3535533905932737*A[0]*B[19]; 
  tmp[20] = 0.3535533905932737*A[3]*B[49]+0.3535533905932737*A[2]*B[48]+0.3535533905932737*A[1]*B[47]+0.3535533905932737*A[0]*B[20]; 
  tmp[21] = 0.3162277660168379*A[5]*B[36]+0.3162277660168379*A[6]*B[35]+0.3162277660168379*A[4]*B[34]+0.3162277660168379*A[4]*B[33]+0.3162277660168379*A[6]*B[32]+0.3162277660168379*A[5]*B[31]+0.3162277660168379*A[9]*B[21]+0.3162277660168379*A[8]*B[21]+0.3162277660168379*A[7]*B[21]+0.3535533905932737*A[0]*B[21]+0.3162277660168379*A[10]*B[18]+0.3162277660168379*A[10]*B[17]+0.3162277660168379*A[10]*B[16]+0.3162277660168379*B[7]*A[16]+0.3162277660168379*B[8]*A[15]+0.3162277660168379*B[6]*A[14]+0.3162277660168379*B[6]*A[13]+0.3162277660168379*B[8]*A[12]+0.3162277660168379*B[7]*A[11]+0.3535533905932737*B[0]*A[10]+0.3535533905932737*A[1]*B[8]+0.3535533905932737*A[2]*B[7]+0.3535533905932737*A[3]*B[6]+0.3535533905932737*B[1]*A[6]+0.3535533905932737*B[2]*A[5]+0.3535533905932737*B[3]*A[4]; 
  tmp[22] = 0.3162277660168379*A[4]*B[38]+0.3162277660168379*A[4]*B[37]+0.3535533905932737*A[5]*B[24]+0.3535533905932737*A[6]*B[23]+0.3162277660168379*A[8]*B[22]+0.3162277660168379*A[7]*B[22]+0.3535533905932737*A[0]*B[22]+0.3162277660168379*B[10]*A[12]+0.3535533905932737*A[10]*B[11]+0.3162277660168379*B[9]*A[11]+0.3535533905932737*A[1]*B[10]+0.3535533905932737*A[2]*B[9]+0.3535533905932737*A[4]*B[4]; 
  tmp[23] = 0.3162277660168379*A[5]*B[39]+0.3162277660168379*A[5]*B[37]+0.3535533905932737*A[4]*B[24]+0.3162277660168379*A[9]*B[23]+0.3162277660168379*A[7]*B[23]+0.3535533905932737*A[0]*B[23]+0.3535533905932737*A[6]*B[22]+0.3162277660168379*B[11]*A[15]+0.3162277660168379*B[9]*A[13]+0.3535533905932737*A[1]*B[11]+0.3535533905932737*A[10]*B[10]+0.3535533905932737*A[3]*B[9]+0.3535533905932737*B[4]*A[5]; 
  tmp[24] = 0.3162277660168379*A[6]*B[39]+0.3162277660168379*A[6]*B[38]+0.3162277660168379*A[9]*B[24]+0.3162277660168379*A[8]*B[24]+0.3535533905932737*A[0]*B[24]+0.3535533905932737*A[4]*B[23]+0.3535533905932737*A[5]*B[22]+0.3162277660168379*B[11]*A[16]+0.3162277660168379*B[10]*A[14]+0.3535533905932737*A[2]*B[11]+0.3535533905932737*A[3]*B[10]+0.3535533905932737*B[9]*A[10]+0.3535533905932737*B[4]*A[6]; 
  tmp[25] = 0.3162277660168379*A[4]*B[44]+0.3162277660168379*A[4]*B[43]+0.3535533905932737*A[5]*B[27]+0.3535533905932737*A[6]*B[26]+0.3162277660168379*A[8]*B[25]+0.3162277660168379*A[7]*B[25]+0.3535533905932737*A[0]*B[25]+0.3535533905932737*A[10]*B[14]+0.3162277660168379*A[12]*B[13]+0.3535533905932737*A[1]*B[13]+0.3162277660168379*A[11]*B[12]+0.3535533905932737*A[2]*B[12]+0.3535533905932737*A[4]*B[5]; 
  tmp[26] = 0.3162277660168379*A[5]*B[45]+0.3162277660168379*A[5]*B[43]+0.3535533905932737*A[4]*B[27]+0.3162277660168379*A[9]*B[26]+0.3162277660168379*A[7]*B[26]+0.3535533905932737*A[0]*B[26]+0.3535533905932737*A[6]*B[25]+0.3162277660168379*B[14]*A[15]+0.3535533905932737*A[1]*B[14]+0.3535533905932737*A[10]*B[13]+0.3162277660168379*B[12]*A[13]+0.3535533905932737*A[3]*B[12]+0.3535533905932737*A[5]*B[5]; 
  tmp[27] = 0.3162277660168379*A[6]*B[45]+0.3162277660168379*A[6]*B[44]+0.3162277660168379*A[9]*B[27]+0.3162277660168379*A[8]*B[27]+0.3535533905932737*A[0]*B[27]+0.3535533905932737*A[4]*B[26]+0.3535533905932737*A[5]*B[25]+0.3162277660168379*B[14]*A[16]+0.3535533905932737*A[2]*B[14]+0.3162277660168379*B[13]*A[14]+0.3535533905932737*A[3]*B[13]+0.3535533905932737*A[10]*B[12]+0.3535533905932737*B[5]*A[6]; 
  tmp[28] = 0.3535533905932737*A[5]*B[30]+0.3535533905932737*A[4]*B[29]+0.3162277660168379*A[7]*B[28]+0.3535533905932737*A[0]*B[28]+0.3535533905932737*A[1]*B[15]; 
  tmp[29] = 0.3535533905932737*A[6]*B[30]+0.3162277660168379*A[8]*B[29]+0.3535533905932737*A[0]*B[29]+0.3535533905932737*A[4]*B[28]+0.3535533905932737*A[2]*B[15]; 
  tmp[30] = 0.3162277660168379*A[9]*B[30]+0.3535533905932737*A[0]*B[30]+0.3535533905932737*A[6]*B[29]+0.3535533905932737*A[5]*B[28]+0.3535533905932737*A[3]*B[15]; 
  tmp[31] = 0.3105295017040593*A[4]*B[51]+0.3535533905932737*A[6]*B[33]+0.2828427124746191*A[4]*B[32]+0.3162277660168379*A[8]*B[31]+0.2258769757263128*A[7]*B[31]+0.3535533905932737*A[0]*B[31]+0.3162277660168379*A[5]*B[21]+0.3162277660168379*A[11]*B[17]+0.3105295017040593*B[6]*A[17]+0.2258769757263128*A[11]*B[16]+0.3535533905932737*A[2]*B[16]+0.3535533905932737*B[8]*A[13]+0.2828427124746191*B[6]*A[12]+0.3535533905932737*B[0]*A[11]+0.3162277660168379*B[7]*A[10]+0.3535533905932737*B[2]*A[7]+0.3162277660168379*A[1]*B[6]+0.3162277660168379*B[1]*A[4]; 
  tmp[32] = 0.3105295017040593*A[4]*B[52]+0.3535533905932737*A[5]*B[34]+0.2258769757263128*A[8]*B[32]+0.3162277660168379*A[7]*B[32]+0.3535533905932737*A[0]*B[32]+0.2828427124746191*A[4]*B[31]+0.3162277660168379*A[6]*B[21]+0.3105295017040593*B[6]*A[18]+0.2258769757263128*A[12]*B[17]+0.3535533905932737*A[1]*B[17]+0.3162277660168379*A[12]*B[16]+0.3535533905932737*B[7]*A[14]+0.3535533905932737*B[0]*A[12]+0.2828427124746191*B[6]*A[11]+0.3162277660168379*B[8]*A[10]+0.3535533905932737*B[1]*A[8]+0.3162277660168379*A[2]*B[6]+0.3162277660168379*B[2]*A[4]; 
  tmp[33] = 0.3105295017040593*A[5]*B[51]+0.2828427124746191*A[5]*B[35]+0.3162277660168379*A[9]*B[33]+0.2258769757263128*A[7]*B[33]+0.3535533905932737*A[0]*B[33]+0.3535533905932737*A[6]*B[31]+0.3162277660168379*A[4]*B[21]+0.3162277660168379*A[13]*B[18]+0.3105295017040593*B[7]*A[17]+0.2258769757263128*A[13]*B[16]+0.3535533905932737*A[3]*B[16]+0.2828427124746191*B[7]*A[15]+0.3535533905932737*B[0]*A[13]+0.3535533905932737*B[8]*A[11]+0.3162277660168379*B[6]*A[10]+0.3162277660168379*A[1]*B[7]+0.3535533905932737*B[3]*A[7]+0.3162277660168379*B[1]*A[5]; 
  tmp[34] = 0.3105295017040593*A[6]*B[52]+0.2828427124746191*A[6]*B[36]+0.3162277660168379*A[9]*B[34]+0.2258769757263128*A[8]*B[34]+0.3535533905932737*A[0]*B[34]+0.3535533905932737*A[5]*B[32]+0.3162277660168379*A[4]*B[21]+0.3162277660168379*A[14]*B[18]+0.3105295017040593*B[8]*A[18]+0.2258769757263128*A[14]*B[17]+0.3535533905932737*A[3]*B[17]+0.2828427124746191*B[8]*A[16]+0.3535533905932737*B[0]*A[14]+0.3535533905932737*B[7]*A[12]+0.3162277660168379*B[6]*A[10]+0.3162277660168379*A[2]*B[8]+0.3535533905932737*B[3]*A[8]+0.3162277660168379*B[2]*A[6]; 
  tmp[35] = 0.3105295017040593*A[5]*B[53]+0.3535533905932737*A[4]*B[36]+0.2258769757263128*A[9]*B[35]+0.3162277660168379*A[7]*B[35]+0.3535533905932737*A[0]*B[35]+0.2828427124746191*A[5]*B[33]+0.3162277660168379*A[6]*B[21]+0.3105295017040593*B[7]*A[19]+0.2258769757263128*A[15]*B[18]+0.3535533905932737*A[1]*B[18]+0.3162277660168379*A[15]*B[16]+0.3535533905932737*B[6]*A[16]+0.3535533905932737*B[0]*A[15]+0.2828427124746191*B[7]*A[13]+0.3162277660168379*B[8]*A[10]+0.3535533905932737*B[1]*A[9]+0.3162277660168379*A[3]*B[7]+0.3162277660168379*B[3]*A[5]; 
  tmp[36] = 0.3105295017040593*A[6]*B[53]+0.2258769757263128*A[9]*B[36]+0.3162277660168379*A[8]*B[36]+0.3535533905932737*A[0]*B[36]+0.3535533905932737*A[4]*B[35]+0.2828427124746191*A[6]*B[34]+0.3162277660168379*A[5]*B[21]+0.3105295017040593*B[8]*A[19]+0.2258769757263128*A[16]*B[18]+0.3535533905932737*A[2]*B[18]+0.3162277660168379*A[16]*B[17]+0.3535533905932737*B[0]*A[16]+0.3535533905932737*B[6]*A[15]+0.2828427124746191*B[8]*A[14]+0.3162277660168379*B[7]*A[10]+0.3535533905932737*B[2]*A[9]+0.3162277660168379*A[3]*B[8]+0.3162277660168379*B[3]*A[6]; 
  tmp[37] = 0.2258769757263128*A[7]*B[37]+0.3535533905932737*A[0]*B[37]+0.3162277660168379*A[5]*B[23]+0.3162277660168379*A[4]*B[22]+0.3105295017040593*B[9]*A[17]+0.3535533905932737*B[11]*A[13]+0.3535533905932737*B[10]*A[11]+0.3162277660168379*A[1]*B[9]+0.3535533905932737*B[4]*A[7]; 
  tmp[38] = 0.2258769757263128*A[8]*B[38]+0.3535533905932737*A[0]*B[38]+0.3162277660168379*A[6]*B[24]+0.3162277660168379*A[4]*B[22]+0.3105295017040593*B[10]*A[18]+0.3535533905932737*B[11]*A[14]+0.3535533905932737*B[9]*A[12]+0.3162277660168379*A[2]*B[10]+0.3535533905932737*B[4]*A[8]; 
  tmp[39] = 0.2258769757263128*A[9]*B[39]+0.3535533905932737*A[0]*B[39]+0.3162277660168379*A[6]*B[24]+0.3162277660168379*A[5]*B[23]+0.3105295017040593*B[11]*A[19]+0.3535533905932737*B[10]*A[16]+0.3535533905932737*B[9]*A[15]+0.3162277660168379*A[3]*B[11]+0.3535533905932737*B[4]*A[9]; 
  tmp[40] = 0.3535533905932737*A[5]*B[42]+0.3535533905932737*A[4]*B[41]+0.3162277660168379*A[7]*B[40]+0.3535533905932737*A[0]*B[40]+0.3535533905932737*A[1]*B[19]; 
  tmp[41] = 0.3535533905932737*A[6]*B[42]+0.3162277660168379*A[8]*B[41]+0.3535533905932737*A[0]*B[41]+0.3535533905932737*A[4]*B[40]+0.3535533905932737*A[2]*B[19]; 
  tmp[42] = 0.3162277660168379*A[9]*B[42]+0.3535533905932737*A[0]*B[42]+0.3535533905932737*A[6]*B[41]+0.3535533905932737*A[5]*B[40]+0.3535533905932737*A[3]*B[19]; 
  tmp[43] = 0.2258769757263128*A[7]*B[43]+0.3535533905932737*A[0]*B[43]+0.3162277660168379*A[5]*B[26]+0.3162277660168379*A[4]*B[25]+0.3105295017040593*B[12]*A[17]+0.3535533905932737*A[13]*B[14]+0.3535533905932737*A[11]*B[13]+0.3162277660168379*A[1]*B[12]+0.3535533905932737*B[5]*A[7]; 
  tmp[44] = 0.2258769757263128*A[8]*B[44]+0.3535533905932737*A[0]*B[44]+0.3162277660168379*A[6]*B[27]+0.3162277660168379*A[4]*B[25]+0.3105295017040593*B[13]*A[18]+0.3535533905932737*A[14]*B[14]+0.3162277660168379*A[2]*B[13]+0.3535533905932737*A[12]*B[12]+0.3535533905932737*B[5]*A[8]; 
  tmp[45] = 0.2258769757263128*A[9]*B[45]+0.3535533905932737*A[0]*B[45]+0.3162277660168379*A[6]*B[27]+0.3162277660168379*A[5]*B[26]+0.3105295017040593*B[14]*A[19]+0.3535533905932737*B[13]*A[16]+0.3535533905932737*B[12]*A[15]+0.3162277660168379*A[3]*B[14]+0.3535533905932737*B[5]*A[9]; 
  tmp[46] = 0.3535533905932737*A[0]*B[46]; 
  tmp[47] = 0.3535533905932737*A[5]*B[49]+0.3535533905932737*A[4]*B[48]+0.3162277660168379*A[7]*B[47]+0.3535533905932737*A[0]*B[47]+0.3535533905932737*A[1]*B[20]; 
  tmp[48] = 0.3535533905932737*A[6]*B[49]+0.3162277660168379*A[8]*B[48]+0.3535533905932737*A[0]*B[48]+0.3535533905932737*A[4]*B[47]+0.3535533905932737*A[2]*B[20]; 
  tmp[49] = 0.3162277660168379*A[9]*B[49]+0.3535533905932737*A[0]*B[49]+0.3535533905932737*A[6]*B[48]+0.3535533905932737*A[5]*B[47]+0.3535533905932737*A[3]*B[20]; 
  tmp[50] = 0.3535533905932737*A[0]*B[50]; 
  tmp[51] = 0.210818510677892*A[7]*B[51]+0.3535533905932737*A[0]*B[51]+0.3105295017040593*A[5]*B[33]+0.3105295017040593*A[4]*B[31]+0.210818510677892*B[16]*A[17]+0.3535533905932737*B[0]*A[17]+0.3105295017040592*A[1]*B[16]+0.3105295017040593*B[7]*A[13]+0.3105295017040593*B[6]*A[11]+0.3105295017040592*B[1]*A[7]; 
  tmp[52] = 0.210818510677892*A[8]*B[52]+0.3535533905932737*A[0]*B[52]+0.3105295017040593*A[6]*B[34]+0.3105295017040593*A[4]*B[32]+0.210818510677892*B[17]*A[18]+0.3535533905932737*B[0]*A[18]+0.3105295017040592*A[2]*B[17]+0.3105295017040593*B[8]*A[14]+0.3105295017040593*B[6]*A[12]+0.3105295017040592*B[2]*A[8]; 
  tmp[53] = 0.210818510677892*A[9]*B[53]+0.3535533905932737*A[0]*B[53]+0.3105295017040593*A[6]*B[36]+0.3105295017040593*A[5]*B[35]+0.210818510677892*B[18]*A[19]+0.3535533905932737*B[0]*A[19]+0.3105295017040592*A[3]*B[18]+0.3105295017040593*B[8]*A[16]+0.3105295017040593*B[7]*A[15]+0.3105295017040592*B[3]*A[9]; 
  tmp[54] = 0.3535533905932737*A[0]*B[54]; 
  tmp[55] = 0.3535533905932737*A[0]*B[55]; 
 
  // This tmp allows for in-place multiplication. 
  for (unsigned short int i=0; i<56; i++) 
  { 
    out[i] = tmp[i]; 
  } 
 
} 
 
void CartFieldBinOpDivide3x2vMax_P1(const double *A, const double *B, const short int Ncomp, const short int eqNcomp, double *out) 
{ 
  // A:       configuration space denominator field (must be a scalar field). 
  // B:       phase space numerator field (must be a scalar field). 
  // Ncomp:   number of components of B (=1 here). 
  // eqNcomp: =1 if A:numComponents=B:numComponents, =0 else (=1 here). 
  // out:     output field (same number of components as B). 
 
  // Declare Eigen Matrix with triple basis tensor dotted with B vector. 
  Eigen::MatrixXd AEM(6,6); 
  // Declare Eigen Vector with coefficients of B. 
  Eigen::VectorXd BEV(6); 
  // Declare vector with solution to system of equations. 
  Eigen::VectorXd u(6); 
 
  // Fill AEM matrix. 
  AEM(0,0) = 0.3535533905932737*A[0]; 
  AEM(0,1) = 0.3535533905932737*A[1]; 
  AEM(0,2) = 0.3535533905932737*A[2]; 
  AEM(0,3) = 0.3535533905932737*A[3]; 
  AEM(1,0) = 0.3535533905932737*A[1]; 
  AEM(1,1) = 0.3535533905932737*A[0]; 
  AEM(2,0) = 0.3535533905932737*A[2]; 
  AEM(2,2) = 0.3535533905932737*A[0]; 
  AEM(3,0) = 0.3535533905932737*A[3]; 
  AEM(3,3) = 0.3535533905932737*A[0]; 
  AEM(4,4) = 0.3535533905932737*A[0]; 
  AEM(5,5) = 0.3535533905932737*A[0]; 
 
  // Fill BEV. 
  BEV << B[0],B[1],B[2],B[3],B[4],B[5]; 
 
  // Solve the system of equations. 
  u = AEM.colPivHouseholderQr().solve(BEV); 
 
  // Copy data from Eigen vector. 
  Eigen::Map<VectorXd>(out,6,1) = u; 
 
} 
 
void CartFieldBinOpDivide3x2vMax_P2(const double *A, const double *B, const short int Ncomp, const short int eqNcomp, double *out) 
{ 
  // A:       configuration space denominator field (must be a scalar field). 
  // B:       phase space numerator field (must be a scalar field). 
  // Ncomp:   number of components of B (=1 here). 
  // eqNcomp: =1 if A:numComponents=B:numComponents, =0 else (=1 here). 
  // out:     output field (same number of components as B). 
 
  // Declare Eigen Matrix with triple basis tensor dotted with B vector. 
  Eigen::MatrixXd AEM(21,21); 
  // Declare Eigen Vector with coefficients of B. 
  Eigen::VectorXd BEV(21); 
  // Declare vector with solution to system of equations. 
  Eigen::VectorXd u(21); 
 
  // Fill AEM matrix. 
  AEM(0,0) = 0.3535533905932737*A[0]; 
  AEM(0,1) = 0.3535533905932737*A[1]; 
  AEM(0,2) = 0.3535533905932737*A[2]; 
  AEM(0,3) = 0.3535533905932737*A[3]; 
  AEM(0,6) = 0.3535533905932737*A[4]; 
  AEM(0,7) = 0.3535533905932737*A[5]; 
  AEM(0,8) = 0.3535533905932737*A[6]; 
  AEM(0,16) = 0.3535533905932737*A[7]; 
  AEM(0,17) = 0.3535533905932737*A[8]; 
  AEM(0,18) = 0.3535533905932737*A[9]; 
  AEM(1,0) = 0.3535533905932737*A[1]; 
  AEM(1,1) = 0.3162277660168379*A[7]+0.3535533905932737*A[0]; 
  AEM(1,2) = 0.3535533905932737*A[4]; 
  AEM(1,3) = 0.3535533905932737*A[5]; 
  AEM(1,6) = 0.3535533905932737*A[2]; 
  AEM(1,7) = 0.3535533905932737*A[3]; 
  AEM(1,16) = 0.3162277660168379*A[1]; 
  AEM(2,0) = 0.3535533905932737*A[2]; 
  AEM(2,1) = 0.3535533905932737*A[4]; 
  AEM(2,2) = 0.3162277660168379*A[8]+0.3535533905932737*A[0]; 
  AEM(2,3) = 0.3535533905932737*A[6]; 
  AEM(2,6) = 0.3535533905932737*A[1]; 
  AEM(2,8) = 0.3535533905932737*A[3]; 
  AEM(2,17) = 0.3162277660168379*A[2]; 
  AEM(3,0) = 0.3535533905932737*A[3]; 
  AEM(3,1) = 0.3535533905932737*A[5]; 
  AEM(3,2) = 0.3535533905932737*A[6]; 
  AEM(3,3) = 0.3162277660168379*A[9]+0.3535533905932737*A[0]; 
  AEM(3,7) = 0.3535533905932737*A[1]; 
  AEM(3,8) = 0.3535533905932737*A[2]; 
  AEM(3,18) = 0.3162277660168379*A[3]; 
  AEM(4,4) = 0.3535533905932737*A[0]; 
  AEM(4,9) = 0.3535533905932737*A[1]; 
  AEM(4,10) = 0.3535533905932737*A[2]; 
  AEM(4,11) = 0.3535533905932737*A[3]; 
  AEM(5,5) = 0.3535533905932737*A[0]; 
  AEM(5,12) = 0.3535533905932737*A[1]; 
  AEM(5,13) = 0.3535533905932737*A[2]; 
  AEM(5,14) = 0.3535533905932737*A[3]; 
  AEM(6,0) = 0.3535533905932737*A[4]; 
  AEM(6,1) = 0.3535533905932737*A[2]; 
  AEM(6,2) = 0.3535533905932737*A[1]; 
  AEM(6,6) = 0.3162277660168379*A[8]+0.3162277660168379*A[7]+0.3535533905932737*A[0]; 
  AEM(6,7) = 0.3535533905932737*A[6]; 
  AEM(6,8) = 0.3535533905932737*A[5]; 
  AEM(6,16) = 0.3162277660168379*A[4]; 
  AEM(6,17) = 0.3162277660168379*A[4]; 
  AEM(7,0) = 0.3535533905932737*A[5]; 
  AEM(7,1) = 0.3535533905932737*A[3]; 
  AEM(7,3) = 0.3535533905932737*A[1]; 
  AEM(7,6) = 0.3535533905932737*A[6]; 
  AEM(7,7) = 0.3162277660168379*A[9]+0.3162277660168379*A[7]+0.3535533905932737*A[0]; 
  AEM(7,8) = 0.3535533905932737*A[4]; 
  AEM(7,16) = 0.3162277660168379*A[5]; 
  AEM(7,18) = 0.3162277660168379*A[5]; 
  AEM(8,0) = 0.3535533905932737*A[6]; 
  AEM(8,2) = 0.3535533905932737*A[3]; 
  AEM(8,3) = 0.3535533905932737*A[2]; 
  AEM(8,6) = 0.3535533905932737*A[5]; 
  AEM(8,7) = 0.3535533905932737*A[4]; 
  AEM(8,8) = 0.3162277660168379*A[9]+0.3162277660168379*A[8]+0.3535533905932737*A[0]; 
  AEM(8,17) = 0.3162277660168379*A[6]; 
  AEM(8,18) = 0.3162277660168379*A[6]; 
  AEM(9,4) = 0.3535533905932737*A[1]; 
  AEM(9,9) = 0.3162277660168379*A[7]+0.3535533905932737*A[0]; 
  AEM(9,10) = 0.3535533905932737*A[4]; 
  AEM(9,11) = 0.3535533905932737*A[5]; 
  AEM(10,4) = 0.3535533905932737*A[2]; 
  AEM(10,9) = 0.3535533905932737*A[4]; 
  AEM(10,10) = 0.3162277660168379*A[8]+0.3535533905932737*A[0]; 
  AEM(10,11) = 0.3535533905932737*A[6]; 
  AEM(11,4) = 0.3535533905932737*A[3]; 
  AEM(11,9) = 0.3535533905932737*A[5]; 
  AEM(11,10) = 0.3535533905932737*A[6]; 
  AEM(11,11) = 0.3162277660168379*A[9]+0.3535533905932737*A[0]; 
  AEM(12,5) = 0.3535533905932737*A[1]; 
  AEM(12,12) = 0.3162277660168379*A[7]+0.3535533905932737*A[0]; 
  AEM(12,13) = 0.3535533905932737*A[4]; 
  AEM(12,14) = 0.3535533905932737*A[5]; 
  AEM(13,5) = 0.3535533905932737*A[2]; 
  AEM(13,12) = 0.3535533905932737*A[4]; 
  AEM(13,13) = 0.3162277660168379*A[8]+0.3535533905932737*A[0]; 
  AEM(13,14) = 0.3535533905932737*A[6]; 
  AEM(14,5) = 0.3535533905932737*A[3]; 
  AEM(14,12) = 0.3535533905932737*A[5]; 
  AEM(14,13) = 0.3535533905932737*A[6]; 
  AEM(14,14) = 0.3162277660168379*A[9]+0.3535533905932737*A[0]; 
  AEM(15,15) = 0.3535533905932737*A[0]; 
  AEM(16,0) = 0.3535533905932737*A[7]; 
  AEM(16,1) = 0.3162277660168379*A[1]; 
  AEM(16,6) = 0.3162277660168379*A[4]; 
  AEM(16,7) = 0.3162277660168379*A[5]; 
  AEM(16,16) = 0.2258769757263128*A[7]+0.3535533905932737*A[0]; 
  AEM(17,0) = 0.3535533905932737*A[8]; 
  AEM(17,2) = 0.3162277660168379*A[2]; 
  AEM(17,6) = 0.3162277660168379*A[4]; 
  AEM(17,8) = 0.3162277660168379*A[6]; 
  AEM(17,17) = 0.2258769757263128*A[8]+0.3535533905932737*A[0]; 
  AEM(18,0) = 0.3535533905932737*A[9]; 
  AEM(18,3) = 0.3162277660168379*A[3]; 
  AEM(18,7) = 0.3162277660168379*A[5]; 
  AEM(18,8) = 0.3162277660168379*A[6]; 
  AEM(18,18) = 0.2258769757263128*A[9]+0.3535533905932737*A[0]; 
  AEM(19,19) = 0.3535533905932737*A[0]; 
  AEM(20,20) = 0.3535533905932737*A[0]; 
 
  // Fill BEV. 
  BEV << B[0],B[1],B[2],B[3],B[4],B[5],B[6],B[7],B[8],B[9],B[10],B[11],B[12],B[13],B[14],B[15],B[16],B[17],B[18],B[19],B[20]; 
 
  // Solve the system of equations. 
  u = AEM.colPivHouseholderQr().solve(BEV); 
 
  // Copy data from Eigen vector. 
  Eigen::Map<VectorXd>(out,21,1) = u; 
 
} 
 
void CartFieldBinOpDivide3x2vMax_P3(const double *A, const double *B, const short int Ncomp, const short int eqNcomp, double *out) 
{ 
  // A:       configuration space denominator field (must be a scalar field). 
  // B:       phase space numerator field (must be a scalar field). 
  // Ncomp:   number of components of B (=1 here). 
  // eqNcomp: =1 if A:numComponents=B:numComponents, =0 else (=1 here). 
  // out:     output field (same number of components as B). 
 
  // Declare Eigen Matrix with triple basis tensor dotted with B vector. 
  Eigen::MatrixXd AEM(56,56); 
  // Declare Eigen Vector with coefficients of B. 
  Eigen::VectorXd BEV(56); 
  // Declare vector with solution to system of equations. 
  Eigen::VectorXd u(56); 
 
  // Fill AEM matrix. 
  AEM(0,0) = 0.3535533905932737*A[0]; 
  AEM(0,1) = 0.3535533905932737*A[1]; 
  AEM(0,2) = 0.3535533905932737*A[2]; 
  AEM(0,3) = 0.3535533905932737*A[3]; 
  AEM(0,6) = 0.3535533905932737*A[4]; 
  AEM(0,7) = 0.3535533905932737*A[5]; 
  AEM(0,8) = 0.3535533905932737*A[6]; 
  AEM(0,16) = 0.3535533905932737*A[7]; 
  AEM(0,17) = 0.3535533905932737*A[8]; 
  AEM(0,18) = 0.3535533905932737*A[9]; 
  AEM(0,21) = 0.3535533905932737*A[10]; 
  AEM(0,31) = 0.3535533905932737*A[11]; 
  AEM(0,32) = 0.3535533905932737*A[12]; 
  AEM(0,33) = 0.3535533905932737*A[13]; 
  AEM(0,34) = 0.3535533905932737*A[14]; 
  AEM(0,35) = 0.3535533905932737*A[15]; 
  AEM(0,36) = 0.3535533905932737*A[16]; 
  AEM(0,51) = 0.3535533905932737*A[17]; 
  AEM(0,52) = 0.3535533905932737*A[18]; 
  AEM(0,53) = 0.3535533905932737*A[19]; 
  AEM(1,0) = 0.3535533905932737*A[1]; 
  AEM(1,1) = 0.3162277660168379*A[7]+0.3535533905932737*A[0]; 
  AEM(1,2) = 0.3535533905932737*A[4]; 
  AEM(1,3) = 0.3535533905932737*A[5]; 
  AEM(1,6) = 0.3162277660168379*A[11]+0.3535533905932737*A[2]; 
  AEM(1,7) = 0.3162277660168379*A[13]+0.3535533905932737*A[3]; 
  AEM(1,8) = 0.3535533905932737*A[10]; 
  AEM(1,16) = 0.3105295017040592*A[17]+0.3162277660168379*A[1]; 
  AEM(1,17) = 0.3535533905932737*A[12]; 
  AEM(1,18) = 0.3535533905932737*A[15]; 
  AEM(1,21) = 0.3535533905932737*A[6]; 
  AEM(1,31) = 0.3162277660168379*A[4]; 
  AEM(1,32) = 0.3535533905932737*A[8]; 
  AEM(1,33) = 0.3162277660168379*A[5]; 
  AEM(1,35) = 0.3535533905932737*A[9]; 
  AEM(1,51) = 0.3105295017040592*A[7]; 
  AEM(2,0) = 0.3535533905932737*A[2]; 
  AEM(2,1) = 0.3535533905932737*A[4]; 
  AEM(2,2) = 0.3162277660168379*A[8]+0.3535533905932737*A[0]; 
  AEM(2,3) = 0.3535533905932737*A[6]; 
  AEM(2,6) = 0.3162277660168379*A[12]+0.3535533905932737*A[1]; 
  AEM(2,7) = 0.3535533905932737*A[10]; 
  AEM(2,8) = 0.3162277660168379*A[14]+0.3535533905932737*A[3]; 
  AEM(2,16) = 0.3535533905932737*A[11]; 
  AEM(2,17) = 0.3105295017040592*A[18]+0.3162277660168379*A[2]; 
  AEM(2,18) = 0.3535533905932737*A[16]; 
  AEM(2,21) = 0.3535533905932737*A[5]; 
  AEM(2,31) = 0.3535533905932737*A[7]; 
  AEM(2,32) = 0.3162277660168379*A[4]; 
  AEM(2,34) = 0.3162277660168379*A[6]; 
  AEM(2,36) = 0.3535533905932737*A[9]; 
  AEM(2,52) = 0.3105295017040592*A[8]; 
  AEM(3,0) = 0.3535533905932737*A[3]; 
  AEM(3,1) = 0.3535533905932737*A[5]; 
  AEM(3,2) = 0.3535533905932737*A[6]; 
  AEM(3,3) = 0.3162277660168379*A[9]+0.3535533905932737*A[0]; 
  AEM(3,6) = 0.3535533905932737*A[10]; 
  AEM(3,7) = 0.3162277660168379*A[15]+0.3535533905932737*A[1]; 
  AEM(3,8) = 0.3162277660168379*A[16]+0.3535533905932737*A[2]; 
  AEM(3,16) = 0.3535533905932737*A[13]; 
  AEM(3,17) = 0.3535533905932737*A[14]; 
  AEM(3,18) = 0.3105295017040592*A[19]+0.3162277660168379*A[3]; 
  AEM(3,21) = 0.3535533905932737*A[4]; 
  AEM(3,33) = 0.3535533905932737*A[7]; 
  AEM(3,34) = 0.3535533905932737*A[8]; 
  AEM(3,35) = 0.3162277660168379*A[5]; 
  AEM(3,36) = 0.3162277660168379*A[6]; 
  AEM(3,53) = 0.3105295017040592*A[9]; 
  AEM(4,4) = 0.3535533905932737*A[0]; 
  AEM(4,9) = 0.3535533905932737*A[1]; 
  AEM(4,10) = 0.3535533905932737*A[2]; 
  AEM(4,11) = 0.3535533905932737*A[3]; 
  AEM(4,22) = 0.3535533905932737*A[4]; 
  AEM(4,23) = 0.3535533905932737*A[5]; 
  AEM(4,24) = 0.3535533905932737*A[6]; 
  AEM(4,37) = 0.3535533905932737*A[7]; 
  AEM(4,38) = 0.3535533905932737*A[8]; 
  AEM(4,39) = 0.3535533905932737*A[9]; 
  AEM(5,5) = 0.3535533905932737*A[0]; 
  AEM(5,12) = 0.3535533905932737*A[1]; 
  AEM(5,13) = 0.3535533905932737*A[2]; 
  AEM(5,14) = 0.3535533905932737*A[3]; 
  AEM(5,25) = 0.3535533905932737*A[4]; 
  AEM(5,26) = 0.3535533905932737*A[5]; 
  AEM(5,27) = 0.3535533905932737*A[6]; 
  AEM(5,43) = 0.3535533905932737*A[7]; 
  AEM(5,44) = 0.3535533905932737*A[8]; 
  AEM(5,45) = 0.3535533905932737*A[9]; 
  AEM(6,0) = 0.3535533905932737*A[4]; 
  AEM(6,1) = 0.3162277660168379*A[11]+0.3535533905932737*A[2]; 
  AEM(6,2) = 0.3162277660168379*A[12]+0.3535533905932737*A[1]; 
  AEM(6,3) = 0.3535533905932737*A[10]; 
  AEM(6,6) = 0.3162277660168379*A[8]+0.3162277660168379*A[7]+0.3535533905932737*A[0]; 
  AEM(6,7) = 0.3535533905932737*A[6]; 
  AEM(6,8) = 0.3535533905932737*A[5]; 
  AEM(6,16) = 0.3162277660168379*A[4]; 
  AEM(6,17) = 0.3162277660168379*A[4]; 
  AEM(6,21) = 0.3162277660168379*A[14]+0.3162277660168379*A[13]+0.3535533905932737*A[3]; 
  AEM(6,31) = 0.3105295017040593*A[17]+0.2828427124746191*A[12]+0.3162277660168379*A[1]; 
  AEM(6,32) = 0.3105295017040593*A[18]+0.2828427124746191*A[11]+0.3162277660168379*A[2]; 
  AEM(6,33) = 0.3162277660168379*A[10]; 
  AEM(6,34) = 0.3162277660168379*A[10]; 
  AEM(6,35) = 0.3535533905932737*A[16]; 
  AEM(6,36) = 0.3535533905932737*A[15]; 
  AEM(6,51) = 0.3105295017040593*A[11]; 
  AEM(6,52) = 0.3105295017040593*A[12]; 
  AEM(7,0) = 0.3535533905932737*A[5]; 
  AEM(7,1) = 0.3162277660168379*A[13]+0.3535533905932737*A[3]; 
  AEM(7,2) = 0.3535533905932737*A[10]; 
  AEM(7,3) = 0.3162277660168379*A[15]+0.3535533905932737*A[1]; 
  AEM(7,6) = 0.3535533905932737*A[6]; 
  AEM(7,7) = 0.3162277660168379*A[9]+0.3162277660168379*A[7]+0.3535533905932737*A[0]; 
  AEM(7,8) = 0.3535533905932737*A[4]; 
  AEM(7,16) = 0.3162277660168379*A[5]; 
  AEM(7,18) = 0.3162277660168379*A[5]; 
  AEM(7,21) = 0.3162277660168379*A[16]+0.3162277660168379*A[11]+0.3535533905932737*A[2]; 
  AEM(7,31) = 0.3162277660168379*A[10]; 
  AEM(7,32) = 0.3535533905932737*A[14]; 
  AEM(7,33) = 0.3105295017040593*A[17]+0.2828427124746191*A[15]+0.3162277660168379*A[1]; 
  AEM(7,34) = 0.3535533905932737*A[12]; 
  AEM(7,35) = 0.3105295017040593*A[19]+0.2828427124746191*A[13]+0.3162277660168379*A[3]; 
  AEM(7,36) = 0.3162277660168379*A[10]; 
  AEM(7,51) = 0.3105295017040593*A[13]; 
  AEM(7,53) = 0.3105295017040593*A[15]; 
  AEM(8,0) = 0.3535533905932737*A[6]; 
  AEM(8,1) = 0.3535533905932737*A[10]; 
  AEM(8,2) = 0.3162277660168379*A[14]+0.3535533905932737*A[3]; 
  AEM(8,3) = 0.3162277660168379*A[16]+0.3535533905932737*A[2]; 
  AEM(8,6) = 0.3535533905932737*A[5]; 
  AEM(8,7) = 0.3535533905932737*A[4]; 
  AEM(8,8) = 0.3162277660168379*A[9]+0.3162277660168379*A[8]+0.3535533905932737*A[0]; 
  AEM(8,17) = 0.3162277660168379*A[6]; 
  AEM(8,18) = 0.3162277660168379*A[6]; 
  AEM(8,21) = 0.3162277660168379*A[15]+0.3162277660168379*A[12]+0.3535533905932737*A[1]; 
  AEM(8,31) = 0.3535533905932737*A[13]; 
  AEM(8,32) = 0.3162277660168379*A[10]; 
  AEM(8,33) = 0.3535533905932737*A[11]; 
  AEM(8,34) = 0.3105295017040593*A[18]+0.2828427124746191*A[16]+0.3162277660168379*A[2]; 
  AEM(8,35) = 0.3162277660168379*A[10]; 
  AEM(8,36) = 0.3105295017040593*A[19]+0.2828427124746191*A[14]+0.3162277660168379*A[3]; 
  AEM(8,52) = 0.3105295017040593*A[14]; 
  AEM(8,53) = 0.3105295017040593*A[16]; 
  AEM(9,4) = 0.3535533905932737*A[1]; 
  AEM(9,9) = 0.3162277660168379*A[7]+0.3535533905932737*A[0]; 
  AEM(9,10) = 0.3535533905932737*A[4]; 
  AEM(9,11) = 0.3535533905932737*A[5]; 
  AEM(9,22) = 0.3162277660168379*A[11]+0.3535533905932737*A[2]; 
  AEM(9,23) = 0.3162277660168379*A[13]+0.3535533905932737*A[3]; 
  AEM(9,24) = 0.3535533905932737*A[10]; 
  AEM(9,37) = 0.3105295017040593*A[17]+0.3162277660168379*A[1]; 
  AEM(9,38) = 0.3535533905932737*A[12]; 
  AEM(9,39) = 0.3535533905932737*A[15]; 
  AEM(10,4) = 0.3535533905932737*A[2]; 
  AEM(10,9) = 0.3535533905932737*A[4]; 
  AEM(10,10) = 0.3162277660168379*A[8]+0.3535533905932737*A[0]; 
  AEM(10,11) = 0.3535533905932737*A[6]; 
  AEM(10,22) = 0.3162277660168379*A[12]+0.3535533905932737*A[1]; 
  AEM(10,23) = 0.3535533905932737*A[10]; 
  AEM(10,24) = 0.3162277660168379*A[14]+0.3535533905932737*A[3]; 
  AEM(10,37) = 0.3535533905932737*A[11]; 
  AEM(10,38) = 0.3105295017040593*A[18]+0.3162277660168379*A[2]; 
  AEM(10,39) = 0.3535533905932737*A[16]; 
  AEM(11,4) = 0.3535533905932737*A[3]; 
  AEM(11,9) = 0.3535533905932737*A[5]; 
  AEM(11,10) = 0.3535533905932737*A[6]; 
  AEM(11,11) = 0.3162277660168379*A[9]+0.3535533905932737*A[0]; 
  AEM(11,22) = 0.3535533905932737*A[10]; 
  AEM(11,23) = 0.3162277660168379*A[15]+0.3535533905932737*A[1]; 
  AEM(11,24) = 0.3162277660168379*A[16]+0.3535533905932737*A[2]; 
  AEM(11,37) = 0.3535533905932737*A[13]; 
  AEM(11,38) = 0.3535533905932737*A[14]; 
  AEM(11,39) = 0.3105295017040593*A[19]+0.3162277660168379*A[3]; 
  AEM(12,5) = 0.3535533905932737*A[1]; 
  AEM(12,12) = 0.3162277660168379*A[7]+0.3535533905932737*A[0]; 
  AEM(12,13) = 0.3535533905932737*A[4]; 
  AEM(12,14) = 0.3535533905932737*A[5]; 
  AEM(12,25) = 0.3162277660168379*A[11]+0.3535533905932737*A[2]; 
  AEM(12,26) = 0.3162277660168379*A[13]+0.3535533905932737*A[3]; 
  AEM(12,27) = 0.3535533905932737*A[10]; 
  AEM(12,43) = 0.3105295017040593*A[17]+0.3162277660168379*A[1]; 
  AEM(12,44) = 0.3535533905932737*A[12]; 
  AEM(12,45) = 0.3535533905932737*A[15]; 
  AEM(13,5) = 0.3535533905932737*A[2]; 
  AEM(13,12) = 0.3535533905932737*A[4]; 
  AEM(13,13) = 0.3162277660168379*A[8]+0.3535533905932737*A[0]; 
  AEM(13,14) = 0.3535533905932737*A[6]; 
  AEM(13,25) = 0.3162277660168379*A[12]+0.3535533905932737*A[1]; 
  AEM(13,26) = 0.3535533905932737*A[10]; 
  AEM(13,27) = 0.3162277660168379*A[14]+0.3535533905932737*A[3]; 
  AEM(13,43) = 0.3535533905932737*A[11]; 
  AEM(13,44) = 0.3105295017040593*A[18]+0.3162277660168379*A[2]; 
  AEM(13,45) = 0.3535533905932737*A[16]; 
  AEM(14,5) = 0.3535533905932737*A[3]; 
  AEM(14,12) = 0.3535533905932737*A[5]; 
  AEM(14,13) = 0.3535533905932737*A[6]; 
  AEM(14,14) = 0.3162277660168379*A[9]+0.3535533905932737*A[0]; 
  AEM(14,25) = 0.3535533905932737*A[10]; 
  AEM(14,26) = 0.3162277660168379*A[15]+0.3535533905932737*A[1]; 
  AEM(14,27) = 0.3162277660168379*A[16]+0.3535533905932737*A[2]; 
  AEM(14,43) = 0.3535533905932737*A[13]; 
  AEM(14,44) = 0.3535533905932737*A[14]; 
  AEM(14,45) = 0.3105295017040593*A[19]+0.3162277660168379*A[3]; 
  AEM(15,15) = 0.3535533905932737*A[0]; 
  AEM(15,28) = 0.3535533905932737*A[1]; 
  AEM(15,29) = 0.3535533905932737*A[2]; 
  AEM(15,30) = 0.3535533905932737*A[3]; 
  AEM(16,0) = 0.3535533905932737*A[7]; 
  AEM(16,1) = 0.3105295017040592*A[17]+0.3162277660168379*A[1]; 
  AEM(16,2) = 0.3535533905932737*A[11]; 
  AEM(16,3) = 0.3535533905932737*A[13]; 
  AEM(16,6) = 0.3162277660168379*A[4]; 
  AEM(16,7) = 0.3162277660168379*A[5]; 
  AEM(16,16) = 0.2258769757263128*A[7]+0.3535533905932737*A[0]; 
  AEM(16,21) = 0.3162277660168379*A[10]; 
  AEM(16,31) = 0.2258769757263128*A[11]+0.3535533905932737*A[2]; 
  AEM(16,32) = 0.3162277660168379*A[12]; 
  AEM(16,33) = 0.2258769757263128*A[13]+0.3535533905932737*A[3]; 
  AEM(16,35) = 0.3162277660168379*A[15]; 
  AEM(16,51) = 0.210818510677892*A[17]+0.3105295017040592*A[1]; 
  AEM(17,0) = 0.3535533905932737*A[8]; 
  AEM(17,1) = 0.3535533905932737*A[12]; 
  AEM(17,2) = 0.3105295017040592*A[18]+0.3162277660168379*A[2]; 
  AEM(17,3) = 0.3535533905932737*A[14]; 
  AEM(17,6) = 0.3162277660168379*A[4]; 
  AEM(17,8) = 0.3162277660168379*A[6]; 
  AEM(17,17) = 0.2258769757263128*A[8]+0.3535533905932737*A[0]; 
  AEM(17,21) = 0.3162277660168379*A[10]; 
  AEM(17,31) = 0.3162277660168379*A[11]; 
  AEM(17,32) = 0.2258769757263128*A[12]+0.3535533905932737*A[1]; 
  AEM(17,34) = 0.2258769757263128*A[14]+0.3535533905932737*A[3]; 
  AEM(17,36) = 0.3162277660168379*A[16]; 
  AEM(17,52) = 0.210818510677892*A[18]+0.3105295017040592*A[2]; 
  AEM(18,0) = 0.3535533905932737*A[9]; 
  AEM(18,1) = 0.3535533905932737*A[15]; 
  AEM(18,2) = 0.3535533905932737*A[16]; 
  AEM(18,3) = 0.3105295017040592*A[19]+0.3162277660168379*A[3]; 
  AEM(18,7) = 0.3162277660168379*A[5]; 
  AEM(18,8) = 0.3162277660168379*A[6]; 
  AEM(18,18) = 0.2258769757263128*A[9]+0.3535533905932737*A[0]; 
  AEM(18,21) = 0.3162277660168379*A[10]; 
  AEM(18,33) = 0.3162277660168379*A[13]; 
  AEM(18,34) = 0.3162277660168379*A[14]; 
  AEM(18,35) = 0.2258769757263128*A[15]+0.3535533905932737*A[1]; 
  AEM(18,36) = 0.2258769757263128*A[16]+0.3535533905932737*A[2]; 
  AEM(18,53) = 0.210818510677892*A[19]+0.3105295017040592*A[3]; 
  AEM(19,19) = 0.3535533905932737*A[0]; 
  AEM(19,40) = 0.3535533905932737*A[1]; 
  AEM(19,41) = 0.3535533905932737*A[2]; 
  AEM(19,42) = 0.3535533905932737*A[3]; 
  AEM(20,20) = 0.3535533905932737*A[0]; 
  AEM(20,47) = 0.3535533905932737*A[1]; 
  AEM(20,48) = 0.3535533905932737*A[2]; 
  AEM(20,49) = 0.3535533905932737*A[3]; 
  AEM(21,0) = 0.3535533905932737*A[10]; 
  AEM(21,1) = 0.3535533905932737*A[6]; 
  AEM(21,2) = 0.3535533905932737*A[5]; 
  AEM(21,3) = 0.3535533905932737*A[4]; 
  AEM(21,6) = 0.3162277660168379*A[14]+0.3162277660168379*A[13]+0.3535533905932737*A[3]; 
  AEM(21,7) = 0.3162277660168379*A[16]+0.3162277660168379*A[11]+0.3535533905932737*A[2]; 
  AEM(21,8) = 0.3162277660168379*A[15]+0.3162277660168379*A[12]+0.3535533905932737*A[1]; 
  AEM(21,16) = 0.3162277660168379*A[10]; 
  AEM(21,17) = 0.3162277660168379*A[10]; 
  AEM(21,18) = 0.3162277660168379*A[10]; 
  AEM(21,21) = 0.3162277660168379*A[9]+0.3162277660168379*A[8]+0.3162277660168379*A[7]+0.3535533905932737*A[0]; 
  AEM(21,31) = 0.3162277660168379*A[5]; 
  AEM(21,32) = 0.3162277660168379*A[6]; 
  AEM(21,33) = 0.3162277660168379*A[4]; 
  AEM(21,34) = 0.3162277660168379*A[4]; 
  AEM(21,35) = 0.3162277660168379*A[6]; 
  AEM(21,36) = 0.3162277660168379*A[5]; 
  AEM(22,4) = 0.3535533905932737*A[4]; 
  AEM(22,9) = 0.3162277660168379*A[11]+0.3535533905932737*A[2]; 
  AEM(22,10) = 0.3162277660168379*A[12]+0.3535533905932737*A[1]; 
  AEM(22,11) = 0.3535533905932737*A[10]; 
  AEM(22,22) = 0.3162277660168379*A[8]+0.3162277660168379*A[7]+0.3535533905932737*A[0]; 
  AEM(22,23) = 0.3535533905932737*A[6]; 
  AEM(22,24) = 0.3535533905932737*A[5]; 
  AEM(22,37) = 0.3162277660168379*A[4]; 
  AEM(22,38) = 0.3162277660168379*A[4]; 
  AEM(23,4) = 0.3535533905932737*A[5]; 
  AEM(23,9) = 0.3162277660168379*A[13]+0.3535533905932737*A[3]; 
  AEM(23,10) = 0.3535533905932737*A[10]; 
  AEM(23,11) = 0.3162277660168379*A[15]+0.3535533905932737*A[1]; 
  AEM(23,22) = 0.3535533905932737*A[6]; 
  AEM(23,23) = 0.3162277660168379*A[9]+0.3162277660168379*A[7]+0.3535533905932737*A[0]; 
  AEM(23,24) = 0.3535533905932737*A[4]; 
  AEM(23,37) = 0.3162277660168379*A[5]; 
  AEM(23,39) = 0.3162277660168379*A[5]; 
  AEM(24,4) = 0.3535533905932737*A[6]; 
  AEM(24,9) = 0.3535533905932737*A[10]; 
  AEM(24,10) = 0.3162277660168379*A[14]+0.3535533905932737*A[3]; 
  AEM(24,11) = 0.3162277660168379*A[16]+0.3535533905932737*A[2]; 
  AEM(24,22) = 0.3535533905932737*A[5]; 
  AEM(24,23) = 0.3535533905932737*A[4]; 
  AEM(24,24) = 0.3162277660168379*A[9]+0.3162277660168379*A[8]+0.3535533905932737*A[0]; 
  AEM(24,38) = 0.3162277660168379*A[6]; 
  AEM(24,39) = 0.3162277660168379*A[6]; 
  AEM(25,5) = 0.3535533905932737*A[4]; 
  AEM(25,12) = 0.3162277660168379*A[11]+0.3535533905932737*A[2]; 
  AEM(25,13) = 0.3162277660168379*A[12]+0.3535533905932737*A[1]; 
  AEM(25,14) = 0.3535533905932737*A[10]; 
  AEM(25,25) = 0.3162277660168379*A[8]+0.3162277660168379*A[7]+0.3535533905932737*A[0]; 
  AEM(25,26) = 0.3535533905932737*A[6]; 
  AEM(25,27) = 0.3535533905932737*A[5]; 
  AEM(25,43) = 0.3162277660168379*A[4]; 
  AEM(25,44) = 0.3162277660168379*A[4]; 
  AEM(26,5) = 0.3535533905932737*A[5]; 
  AEM(26,12) = 0.3162277660168379*A[13]+0.3535533905932737*A[3]; 
  AEM(26,13) = 0.3535533905932737*A[10]; 
  AEM(26,14) = 0.3162277660168379*A[15]+0.3535533905932737*A[1]; 
  AEM(26,25) = 0.3535533905932737*A[6]; 
  AEM(26,26) = 0.3162277660168379*A[9]+0.3162277660168379*A[7]+0.3535533905932737*A[0]; 
  AEM(26,27) = 0.3535533905932737*A[4]; 
  AEM(26,43) = 0.3162277660168379*A[5]; 
  AEM(26,45) = 0.3162277660168379*A[5]; 
  AEM(27,5) = 0.3535533905932737*A[6]; 
  AEM(27,12) = 0.3535533905932737*A[10]; 
  AEM(27,13) = 0.3162277660168379*A[14]+0.3535533905932737*A[3]; 
  AEM(27,14) = 0.3162277660168379*A[16]+0.3535533905932737*A[2]; 
  AEM(27,25) = 0.3535533905932737*A[5]; 
  AEM(27,26) = 0.3535533905932737*A[4]; 
  AEM(27,27) = 0.3162277660168379*A[9]+0.3162277660168379*A[8]+0.3535533905932737*A[0]; 
  AEM(27,44) = 0.3162277660168379*A[6]; 
  AEM(27,45) = 0.3162277660168379*A[6]; 
  AEM(28,15) = 0.3535533905932737*A[1]; 
  AEM(28,28) = 0.3162277660168379*A[7]+0.3535533905932737*A[0]; 
  AEM(28,29) = 0.3535533905932737*A[4]; 
  AEM(28,30) = 0.3535533905932737*A[5]; 
  AEM(29,15) = 0.3535533905932737*A[2]; 
  AEM(29,28) = 0.3535533905932737*A[4]; 
  AEM(29,29) = 0.3162277660168379*A[8]+0.3535533905932737*A[0]; 
  AEM(29,30) = 0.3535533905932737*A[6]; 
  AEM(30,15) = 0.3535533905932737*A[3]; 
  AEM(30,28) = 0.3535533905932737*A[5]; 
  AEM(30,29) = 0.3535533905932737*A[6]; 
  AEM(30,30) = 0.3162277660168379*A[9]+0.3535533905932737*A[0]; 
  AEM(31,0) = 0.3535533905932737*A[11]; 
  AEM(31,1) = 0.3162277660168379*A[4]; 
  AEM(31,2) = 0.3535533905932737*A[7]; 
  AEM(31,6) = 0.3105295017040593*A[17]+0.2828427124746191*A[12]+0.3162277660168379*A[1]; 
  AEM(31,7) = 0.3162277660168379*A[10]; 
  AEM(31,8) = 0.3535533905932737*A[13]; 
  AEM(31,16) = 0.2258769757263128*A[11]+0.3535533905932737*A[2]; 
  AEM(31,17) = 0.3162277660168379*A[11]; 
  AEM(31,21) = 0.3162277660168379*A[5]; 
  AEM(31,31) = 0.3162277660168379*A[8]+0.2258769757263128*A[7]+0.3535533905932737*A[0]; 
  AEM(31,32) = 0.2828427124746191*A[4]; 
  AEM(31,33) = 0.3535533905932737*A[6]; 
  AEM(31,51) = 0.3105295017040593*A[4]; 
  AEM(32,0) = 0.3535533905932737*A[12]; 
  AEM(32,1) = 0.3535533905932737*A[8]; 
  AEM(32,2) = 0.3162277660168379*A[4]; 
  AEM(32,6) = 0.3105295017040593*A[18]+0.2828427124746191*A[11]+0.3162277660168379*A[2]; 
  AEM(32,7) = 0.3535533905932737*A[14]; 
  AEM(32,8) = 0.3162277660168379*A[10]; 
  AEM(32,16) = 0.3162277660168379*A[12]; 
  AEM(32,17) = 0.2258769757263128*A[12]+0.3535533905932737*A[1]; 
  AEM(32,21) = 0.3162277660168379*A[6]; 
  AEM(32,31) = 0.2828427124746191*A[4]; 
  AEM(32,32) = 0.2258769757263128*A[8]+0.3162277660168379*A[7]+0.3535533905932737*A[0]; 
  AEM(32,34) = 0.3535533905932737*A[5]; 
  AEM(32,52) = 0.3105295017040593*A[4]; 
  AEM(33,0) = 0.3535533905932737*A[13]; 
  AEM(33,1) = 0.3162277660168379*A[5]; 
  AEM(33,3) = 0.3535533905932737*A[7]; 
  AEM(33,6) = 0.3162277660168379*A[10]; 
  AEM(33,7) = 0.3105295017040593*A[17]+0.2828427124746191*A[15]+0.3162277660168379*A[1]; 
  AEM(33,8) = 0.3535533905932737*A[11]; 
  AEM(33,16) = 0.2258769757263128*A[13]+0.3535533905932737*A[3]; 
  AEM(33,18) = 0.3162277660168379*A[13]; 
  AEM(33,21) = 0.3162277660168379*A[4]; 
  AEM(33,31) = 0.3535533905932737*A[6]; 
  AEM(33,33) = 0.3162277660168379*A[9]+0.2258769757263128*A[7]+0.3535533905932737*A[0]; 
  AEM(33,35) = 0.2828427124746191*A[5]; 
  AEM(33,51) = 0.3105295017040593*A[5]; 
  AEM(34,0) = 0.3535533905932737*A[14]; 
  AEM(34,2) = 0.3162277660168379*A[6]; 
  AEM(34,3) = 0.3535533905932737*A[8]; 
  AEM(34,6) = 0.3162277660168379*A[10]; 
  AEM(34,7) = 0.3535533905932737*A[12]; 
  AEM(34,8) = 0.3105295017040593*A[18]+0.2828427124746191*A[16]+0.3162277660168379*A[2]; 
  AEM(34,17) = 0.2258769757263128*A[14]+0.3535533905932737*A[3]; 
  AEM(34,18) = 0.3162277660168379*A[14]; 
  AEM(34,21) = 0.3162277660168379*A[4]; 
  AEM(34,32) = 0.3535533905932737*A[5]; 
  AEM(34,34) = 0.3162277660168379*A[9]+0.2258769757263128*A[8]+0.3535533905932737*A[0]; 
  AEM(34,36) = 0.2828427124746191*A[6]; 
  AEM(34,52) = 0.3105295017040593*A[6]; 
  AEM(35,0) = 0.3535533905932737*A[15]; 
  AEM(35,1) = 0.3535533905932737*A[9]; 
  AEM(35,3) = 0.3162277660168379*A[5]; 
  AEM(35,6) = 0.3535533905932737*A[16]; 
  AEM(35,7) = 0.3105295017040593*A[19]+0.2828427124746191*A[13]+0.3162277660168379*A[3]; 
  AEM(35,8) = 0.3162277660168379*A[10]; 
  AEM(35,16) = 0.3162277660168379*A[15]; 
  AEM(35,18) = 0.2258769757263128*A[15]+0.3535533905932737*A[1]; 
  AEM(35,21) = 0.3162277660168379*A[6]; 
  AEM(35,33) = 0.2828427124746191*A[5]; 
  AEM(35,35) = 0.2258769757263128*A[9]+0.3162277660168379*A[7]+0.3535533905932737*A[0]; 
  AEM(35,36) = 0.3535533905932737*A[4]; 
  AEM(35,53) = 0.3105295017040593*A[5]; 
  AEM(36,0) = 0.3535533905932737*A[16]; 
  AEM(36,2) = 0.3535533905932737*A[9]; 
  AEM(36,3) = 0.3162277660168379*A[6]; 
  AEM(36,6) = 0.3535533905932737*A[15]; 
  AEM(36,7) = 0.3162277660168379*A[10]; 
  AEM(36,8) = 0.3105295017040593*A[19]+0.2828427124746191*A[14]+0.3162277660168379*A[3]; 
  AEM(36,17) = 0.3162277660168379*A[16]; 
  AEM(36,18) = 0.2258769757263128*A[16]+0.3535533905932737*A[2]; 
  AEM(36,21) = 0.3162277660168379*A[5]; 
  AEM(36,34) = 0.2828427124746191*A[6]; 
  AEM(36,35) = 0.3535533905932737*A[4]; 
  AEM(36,36) = 0.2258769757263128*A[9]+0.3162277660168379*A[8]+0.3535533905932737*A[0]; 
  AEM(36,53) = 0.3105295017040593*A[6]; 
  AEM(37,4) = 0.3535533905932737*A[7]; 
  AEM(37,9) = 0.3105295017040593*A[17]+0.3162277660168379*A[1]; 
  AEM(37,10) = 0.3535533905932737*A[11]; 
  AEM(37,11) = 0.3535533905932737*A[13]; 
  AEM(37,22) = 0.3162277660168379*A[4]; 
  AEM(37,23) = 0.3162277660168379*A[5]; 
  AEM(37,37) = 0.2258769757263128*A[7]+0.3535533905932737*A[0]; 
  AEM(38,4) = 0.3535533905932737*A[8]; 
  AEM(38,9) = 0.3535533905932737*A[12]; 
  AEM(38,10) = 0.3105295017040593*A[18]+0.3162277660168379*A[2]; 
  AEM(38,11) = 0.3535533905932737*A[14]; 
  AEM(38,22) = 0.3162277660168379*A[4]; 
  AEM(38,24) = 0.3162277660168379*A[6]; 
  AEM(38,38) = 0.2258769757263128*A[8]+0.3535533905932737*A[0]; 
  AEM(39,4) = 0.3535533905932737*A[9]; 
  AEM(39,9) = 0.3535533905932737*A[15]; 
  AEM(39,10) = 0.3535533905932737*A[16]; 
  AEM(39,11) = 0.3105295017040593*A[19]+0.3162277660168379*A[3]; 
  AEM(39,23) = 0.3162277660168379*A[5]; 
  AEM(39,24) = 0.3162277660168379*A[6]; 
  AEM(39,39) = 0.2258769757263128*A[9]+0.3535533905932737*A[0]; 
  AEM(40,19) = 0.3535533905932737*A[1]; 
  AEM(40,40) = 0.3162277660168379*A[7]+0.3535533905932737*A[0]; 
  AEM(40,41) = 0.3535533905932737*A[4]; 
  AEM(40,42) = 0.3535533905932737*A[5]; 
  AEM(41,19) = 0.3535533905932737*A[2]; 
  AEM(41,40) = 0.3535533905932737*A[4]; 
  AEM(41,41) = 0.3162277660168379*A[8]+0.3535533905932737*A[0]; 
  AEM(41,42) = 0.3535533905932737*A[6]; 
  AEM(42,19) = 0.3535533905932737*A[3]; 
  AEM(42,40) = 0.3535533905932737*A[5]; 
  AEM(42,41) = 0.3535533905932737*A[6]; 
  AEM(42,42) = 0.3162277660168379*A[9]+0.3535533905932737*A[0]; 
  AEM(43,5) = 0.3535533905932737*A[7]; 
  AEM(43,12) = 0.3105295017040593*A[17]+0.3162277660168379*A[1]; 
  AEM(43,13) = 0.3535533905932737*A[11]; 
  AEM(43,14) = 0.3535533905932737*A[13]; 
  AEM(43,25) = 0.3162277660168379*A[4]; 
  AEM(43,26) = 0.3162277660168379*A[5]; 
  AEM(43,43) = 0.2258769757263128*A[7]+0.3535533905932737*A[0]; 
  AEM(44,5) = 0.3535533905932737*A[8]; 
  AEM(44,12) = 0.3535533905932737*A[12]; 
  AEM(44,13) = 0.3105295017040593*A[18]+0.3162277660168379*A[2]; 
  AEM(44,14) = 0.3535533905932737*A[14]; 
  AEM(44,25) = 0.3162277660168379*A[4]; 
  AEM(44,27) = 0.3162277660168379*A[6]; 
  AEM(44,44) = 0.2258769757263128*A[8]+0.3535533905932737*A[0]; 
  AEM(45,5) = 0.3535533905932737*A[9]; 
  AEM(45,12) = 0.3535533905932737*A[15]; 
  AEM(45,13) = 0.3535533905932737*A[16]; 
  AEM(45,14) = 0.3105295017040593*A[19]+0.3162277660168379*A[3]; 
  AEM(45,26) = 0.3162277660168379*A[5]; 
  AEM(45,27) = 0.3162277660168379*A[6]; 
  AEM(45,45) = 0.2258769757263128*A[9]+0.3535533905932737*A[0]; 
  AEM(46,46) = 0.3535533905932737*A[0]; 
  AEM(47,20) = 0.3535533905932737*A[1]; 
  AEM(47,47) = 0.3162277660168379*A[7]+0.3535533905932737*A[0]; 
  AEM(47,48) = 0.3535533905932737*A[4]; 
  AEM(47,49) = 0.3535533905932737*A[5]; 
  AEM(48,20) = 0.3535533905932737*A[2]; 
  AEM(48,47) = 0.3535533905932737*A[4]; 
  AEM(48,48) = 0.3162277660168379*A[8]+0.3535533905932737*A[0]; 
  AEM(48,49) = 0.3535533905932737*A[6]; 
  AEM(49,20) = 0.3535533905932737*A[3]; 
  AEM(49,47) = 0.3535533905932737*A[5]; 
  AEM(49,48) = 0.3535533905932737*A[6]; 
  AEM(49,49) = 0.3162277660168379*A[9]+0.3535533905932737*A[0]; 
  AEM(50,50) = 0.3535533905932737*A[0]; 
  AEM(51,0) = 0.3535533905932737*A[17]; 
  AEM(51,1) = 0.3105295017040592*A[7]; 
  AEM(51,6) = 0.3105295017040593*A[11]; 
  AEM(51,7) = 0.3105295017040593*A[13]; 
  AEM(51,16) = 0.210818510677892*A[17]+0.3105295017040592*A[1]; 
  AEM(51,31) = 0.3105295017040593*A[4]; 
  AEM(51,33) = 0.3105295017040593*A[5]; 
  AEM(51,51) = 0.210818510677892*A[7]+0.3535533905932737*A[0]; 
  AEM(52,0) = 0.3535533905932737*A[18]; 
  AEM(52,2) = 0.3105295017040592*A[8]; 
  AEM(52,6) = 0.3105295017040593*A[12]; 
  AEM(52,8) = 0.3105295017040593*A[14]; 
  AEM(52,17) = 0.210818510677892*A[18]+0.3105295017040592*A[2]; 
  AEM(52,32) = 0.3105295017040593*A[4]; 
  AEM(52,34) = 0.3105295017040593*A[6]; 
  AEM(52,52) = 0.210818510677892*A[8]+0.3535533905932737*A[0]; 
  AEM(53,0) = 0.3535533905932737*A[19]; 
  AEM(53,3) = 0.3105295017040592*A[9]; 
  AEM(53,7) = 0.3105295017040593*A[15]; 
  AEM(53,8) = 0.3105295017040593*A[16]; 
  AEM(53,18) = 0.210818510677892*A[19]+0.3105295017040592*A[3]; 
  AEM(53,35) = 0.3105295017040593*A[5]; 
  AEM(53,36) = 0.3105295017040593*A[6]; 
  AEM(53,53) = 0.210818510677892*A[9]+0.3535533905932737*A[0]; 
  AEM(54,54) = 0.3535533905932737*A[0]; 
  AEM(55,55) = 0.3535533905932737*A[0]; 
 
  // Fill BEV. 
  BEV << B[0],B[1],B[2],B[3],B[4],B[5],B[6],B[7],B[8],B[9],B[10],B[11],B[12],B[13],B[14],B[15],B[16],B[17],B[18],B[19],B[20],B[21],B[22],B[23],B[24],B[25],B[26],B[27],B[28],B[29],B[30],B[31],B[32],B[33],B[34],B[35],B[36],B[37],B[38],B[39],B[40],B[41],B[42],B[43],B[44],B[45],B[46],B[47],B[48],B[49],B[50],B[51],B[52],B[53],B[54],B[55]; 
 
  // Solve the system of equations. 
  u = AEM.colPivHouseholderQr().solve(BEV); 
 
  // Copy data from Eigen vector. 
  Eigen::Map<VectorXd>(out,56,1) = u; 
 
} 
 
