#include <math.h> 
#include <PrimMomentsModDecl.h> 
 
using namespace Eigen; 
 
void SelfPrimMoments2x3vSer_P1(const int pVdim, const double *m0, const double *m1, const double *m2, const double *cM, const double *cE, double *u, double *vtSq) 
{ 
  // m0,m1,m2: moments of the distribution function. 
  // cM, cE: vtSq*cM and vtSq*cE are corrections to u and vtSq, respectively. 
  // u:        velocity. 
  // vtSq:     squared thermal speed, sqrt(T/m). 
 
  // Declare Eigen matrix and vectors for weak division. 
  Eigen::MatrixXd BigAEM = Eigen::MatrixXd::Zero(16,16); 
  Eigen::VectorXd bEV = Eigen::VectorXd::Zero(16);  
  Eigen::VectorXd xEV = Eigen::VectorXd::Zero(16);  
 
  // ....... Block from weak multiply of uX and m0  .......... // 
  BigAEM(0,0) = 0.5*m0[0]; 
  BigAEM(0,1) = 0.5*m0[1]; 
  BigAEM(0,2) = 0.5*m0[2]; 
  BigAEM(0,3) = 0.5*m0[3]; 
  BigAEM(1,0) = 0.5*m0[1]; 
  BigAEM(1,1) = 0.5*m0[0]; 
  BigAEM(1,2) = 0.5*m0[3]; 
  BigAEM(1,3) = 0.5*m0[2]; 
  BigAEM(2,0) = 0.5*m0[2]; 
  BigAEM(2,1) = 0.5*m0[3]; 
  BigAEM(2,2) = 0.5*m0[0]; 
  BigAEM(2,3) = 0.5*m0[1]; 
  BigAEM(3,0) = 0.5*m0[3]; 
  BigAEM(3,1) = 0.5*m0[2]; 
  BigAEM(3,2) = 0.5*m0[1]; 
  BigAEM(3,3) = 0.5*m0[0]; 
 
  // ....... Block from correction to uX .......... // 
  BigAEM(0,12) = -0.5*cM[0]; 
  BigAEM(0,13) = -0.5*cM[1]; 
  BigAEM(0,14) = -0.5*cM[2]; 
  BigAEM(0,15) = -0.5*cM[3]; 
  BigAEM(1,12) = -0.5*cM[1]; 
  BigAEM(1,13) = -0.5*cM[0]; 
  BigAEM(1,14) = -0.5*cM[3]; 
  BigAEM(1,15) = -0.5*cM[2]; 
  BigAEM(2,12) = -0.5*cM[2]; 
  BigAEM(2,13) = -0.5*cM[3]; 
  BigAEM(2,14) = -0.5*cM[0]; 
  BigAEM(2,15) = -0.5*cM[1]; 
  BigAEM(3,12) = -0.5*cM[3]; 
  BigAEM(3,13) = -0.5*cM[2]; 
  BigAEM(3,14) = -0.5*cM[1]; 
  BigAEM(3,15) = -0.5*cM[0]; 
 
  // ....... Block from weak multiply of uX and m1X  .......... // 
  BigAEM(12,0) = 0.5*m1[0]; 
  BigAEM(12,1) = 0.5*m1[1]; 
  BigAEM(12,2) = 0.5*m1[2]; 
  BigAEM(12,3) = 0.5*m1[3]; 
  BigAEM(13,0) = 0.5*m1[1]; 
  BigAEM(13,1) = 0.5*m1[0]; 
  BigAEM(13,2) = 0.5*m1[3]; 
  BigAEM(13,3) = 0.5*m1[2]; 
  BigAEM(14,0) = 0.5*m1[2]; 
  BigAEM(14,1) = 0.5*m1[3]; 
  BigAEM(14,2) = 0.5*m1[0]; 
  BigAEM(14,3) = 0.5*m1[1]; 
  BigAEM(15,0) = 0.5*m1[3]; 
  BigAEM(15,1) = 0.5*m1[2]; 
  BigAEM(15,2) = 0.5*m1[1]; 
  BigAEM(15,3) = 0.5*m1[0]; 
 
  // ....... Block from weak multiply of uY and m0  .......... // 
  BigAEM(4,4) = 0.5*m0[0]; 
  BigAEM(4,5) = 0.5*m0[1]; 
  BigAEM(4,6) = 0.5*m0[2]; 
  BigAEM(4,7) = 0.5*m0[3]; 
  BigAEM(5,4) = 0.5*m0[1]; 
  BigAEM(5,5) = 0.5*m0[0]; 
  BigAEM(5,6) = 0.5*m0[3]; 
  BigAEM(5,7) = 0.5*m0[2]; 
  BigAEM(6,4) = 0.5*m0[2]; 
  BigAEM(6,5) = 0.5*m0[3]; 
  BigAEM(6,6) = 0.5*m0[0]; 
  BigAEM(6,7) = 0.5*m0[1]; 
  BigAEM(7,4) = 0.5*m0[3]; 
  BigAEM(7,5) = 0.5*m0[2]; 
  BigAEM(7,6) = 0.5*m0[1]; 
  BigAEM(7,7) = 0.5*m0[0]; 
 
  // ....... Block from correction to uY .......... // 
  BigAEM(4,12) = -0.5*cM[4]; 
  BigAEM(4,13) = -0.5*cM[5]; 
  BigAEM(4,14) = -0.5*cM[6]; 
  BigAEM(4,15) = -0.5*cM[7]; 
  BigAEM(5,12) = -0.5*cM[5]; 
  BigAEM(5,13) = -0.5*cM[4]; 
  BigAEM(5,14) = -0.5*cM[7]; 
  BigAEM(5,15) = -0.5*cM[6]; 
  BigAEM(6,12) = -0.5*cM[6]; 
  BigAEM(6,13) = -0.5*cM[7]; 
  BigAEM(6,14) = -0.5*cM[4]; 
  BigAEM(6,15) = -0.5*cM[5]; 
  BigAEM(7,12) = -0.5*cM[7]; 
  BigAEM(7,13) = -0.5*cM[6]; 
  BigAEM(7,14) = -0.5*cM[5]; 
  BigAEM(7,15) = -0.5*cM[4]; 
 
  // ....... Block from weak multiply of uY and m1Y  .......... // 
  BigAEM(12,4) = 0.5*m1[4]; 
  BigAEM(12,5) = 0.5*m1[5]; 
  BigAEM(12,6) = 0.5*m1[6]; 
  BigAEM(12,7) = 0.5*m1[7]; 
  BigAEM(13,4) = 0.5*m1[5]; 
  BigAEM(13,5) = 0.5*m1[4]; 
  BigAEM(13,6) = 0.5*m1[7]; 
  BigAEM(13,7) = 0.5*m1[6]; 
  BigAEM(14,4) = 0.5*m1[6]; 
  BigAEM(14,5) = 0.5*m1[7]; 
  BigAEM(14,6) = 0.5*m1[4]; 
  BigAEM(14,7) = 0.5*m1[5]; 
  BigAEM(15,4) = 0.5*m1[7]; 
  BigAEM(15,5) = 0.5*m1[6]; 
  BigAEM(15,6) = 0.5*m1[5]; 
  BigAEM(15,7) = 0.5*m1[4]; 
 
  // ....... Block from weak multiply of uZ and m0  .......... // 
  BigAEM(8,8) = 0.5*m0[0]; 
  BigAEM(8,9) = 0.5*m0[1]; 
  BigAEM(8,10) = 0.5*m0[2]; 
  BigAEM(8,11) = 0.5*m0[3]; 
  BigAEM(9,8) = 0.5*m0[1]; 
  BigAEM(9,9) = 0.5*m0[0]; 
  BigAEM(9,10) = 0.5*m0[3]; 
  BigAEM(9,11) = 0.5*m0[2]; 
  BigAEM(10,8) = 0.5*m0[2]; 
  BigAEM(10,9) = 0.5*m0[3]; 
  BigAEM(10,10) = 0.5*m0[0]; 
  BigAEM(10,11) = 0.5*m0[1]; 
  BigAEM(11,8) = 0.5*m0[3]; 
  BigAEM(11,9) = 0.5*m0[2]; 
  BigAEM(11,10) = 0.5*m0[1]; 
  BigAEM(11,11) = 0.5*m0[0]; 
 
  // ....... Block from correction to uZ .......... // 
  BigAEM(8,12) = -0.5*cM[8]; 
  BigAEM(8,13) = -0.5*cM[9]; 
  BigAEM(8,14) = -0.5*cM[10]; 
  BigAEM(8,15) = -0.5*cM[11]; 
  BigAEM(9,12) = -0.5*cM[9]; 
  BigAEM(9,13) = -0.5*cM[8]; 
  BigAEM(9,14) = -0.5*cM[11]; 
  BigAEM(9,15) = -0.5*cM[10]; 
  BigAEM(10,12) = -0.5*cM[10]; 
  BigAEM(10,13) = -0.5*cM[11]; 
  BigAEM(10,14) = -0.5*cM[8]; 
  BigAEM(10,15) = -0.5*cM[9]; 
  BigAEM(11,12) = -0.5*cM[11]; 
  BigAEM(11,13) = -0.5*cM[10]; 
  BigAEM(11,14) = -0.5*cM[9]; 
  BigAEM(11,15) = -0.5*cM[8]; 
 
  // ....... Block from weak multiply of uZ and m1Z  .......... // 
  BigAEM(12,8) = 0.5*m1[8]; 
  BigAEM(12,9) = 0.5*m1[9]; 
  BigAEM(12,10) = 0.5*m1[10]; 
  BigAEM(12,11) = 0.5*m1[11]; 
  BigAEM(13,8) = 0.5*m1[9]; 
  BigAEM(13,9) = 0.5*m1[8]; 
  BigAEM(13,10) = 0.5*m1[11]; 
  BigAEM(13,11) = 0.5*m1[10]; 
  BigAEM(14,8) = 0.5*m1[10]; 
  BigAEM(14,9) = 0.5*m1[11]; 
  BigAEM(14,10) = 0.5*m1[8]; 
  BigAEM(14,11) = 0.5*m1[9]; 
  BigAEM(15,8) = 0.5*m1[11]; 
  BigAEM(15,9) = 0.5*m1[10]; 
  BigAEM(15,10) = 0.5*m1[9]; 
  BigAEM(15,11) = 0.5*m1[8]; 
 
  // ....... Block from correction to vtSq .......... // 
  BigAEM(12,12) = 0.5*m0[0]*pVdim-0.5*cE[0]; 
  BigAEM(12,13) = 0.5*m0[1]*pVdim-0.5*cE[1]; 
  BigAEM(12,14) = 0.5*m0[2]*pVdim-0.5*cE[2]; 
  BigAEM(12,15) = 0.5*m0[3]*pVdim-0.5*cE[3]; 
  BigAEM(13,12) = 0.5*m0[1]*pVdim-0.5*cE[1]; 
  BigAEM(13,13) = 0.5*m0[0]*pVdim-0.5*cE[0]; 
  BigAEM(13,14) = 0.5*m0[3]*pVdim-0.5*cE[3]; 
  BigAEM(13,15) = 0.5*m0[2]*pVdim-0.5*cE[2]; 
  BigAEM(14,12) = 0.5*m0[2]*pVdim-0.5*cE[2]; 
  BigAEM(14,13) = 0.5*m0[3]*pVdim-0.5*cE[3]; 
  BigAEM(14,14) = 0.5*m0[0]*pVdim-0.5*cE[0]; 
  BigAEM(14,15) = 0.5*m0[1]*pVdim-0.5*cE[1]; 
  BigAEM(15,12) = 0.5*m0[3]*pVdim-0.5*cE[3]; 
  BigAEM(15,13) = 0.5*m0[2]*pVdim-0.5*cE[2]; 
  BigAEM(15,14) = 0.5*m0[1]*pVdim-0.5*cE[1]; 
  BigAEM(15,15) = 0.5*m0[0]*pVdim-0.5*cE[0]; 
 
  // Set other entries to 0. // 
  BigAEM.block<4,8>(0,4).setZero(); 
  BigAEM.block<8,4>(4,0).setZero(); 
  BigAEM.block<4,4>(4,8).setZero(); 
  BigAEM.block<4,4>(8,4).setZero(); 
 
  // ....... RHS vector is composed of m1 and m2 .......... // 
  bEV << m1[0],m1[1],m1[2],m1[3],m1[4],m1[5],m1[6],m1[7],m1[8],m1[9],m1[10],m1[11],m2[0],m2[1],m2[2],m2[3]; 
 
  xEV = BigAEM.colPivHouseholderQr().solve(bEV); 
 
  Eigen::Map<VectorXd>(u,12,1) = xEV.segment<12>(0); 
 
  Eigen::Map<VectorXd>(vtSq,4,1) = xEV.segment<4>(12); 
 
} 
 
void SelfPrimMoments2x3vSer_P2(const int pVdim, const double *m0, const double *m1, const double *m2, const double *cM, const double *cE, double *u, double *vtSq) 
{ 
  // m0,m1,m2: moments of the distribution function. 
  // cM, cE: vtSq*cM and vtSq*cE are corrections to u and vtSq, respectively. 
  // u:        velocity. 
  // vtSq:     squared thermal speed, sqrt(T/m). 
 
  // Declare Eigen matrix and vectors for weak division. 
  Eigen::MatrixXd BigAEM = Eigen::MatrixXd::Zero(32,32); 
  Eigen::VectorXd bEV = Eigen::VectorXd::Zero(32);  
  Eigen::VectorXd xEV = Eigen::VectorXd::Zero(32);  
 
  // ....... Block from weak multiply of uX and m0  .......... // 
  BigAEM(0,0) = 0.5*m0[0]; 
  BigAEM(0,1) = 0.5*m0[1]; 
  BigAEM(0,2) = 0.5*m0[2]; 
  BigAEM(0,3) = 0.5*m0[3]; 
  BigAEM(0,4) = 0.5*m0[4]; 
  BigAEM(0,5) = 0.5*m0[5]; 
  BigAEM(0,6) = 0.5*m0[6]; 
  BigAEM(0,7) = 0.5*m0[7]; 
  BigAEM(1,0) = 0.5*m0[1]; 
  BigAEM(1,1) = 0.4472135954999579*m0[4]+0.5*m0[0]; 
  BigAEM(1,2) = 0.5*m0[3]; 
  BigAEM(1,3) = 0.447213595499958*m0[6]+0.5*m0[2]; 
  BigAEM(1,4) = 0.4472135954999579*m0[1]; 
  BigAEM(1,5) = 0.5000000000000001*m0[7]; 
  BigAEM(1,6) = 0.447213595499958*m0[3]; 
  BigAEM(1,7) = 0.5000000000000001*m0[5]; 
  BigAEM(2,0) = 0.5*m0[2]; 
  BigAEM(2,1) = 0.5*m0[3]; 
  BigAEM(2,2) = 0.4472135954999579*m0[5]+0.5*m0[0]; 
  BigAEM(2,3) = 0.447213595499958*m0[7]+0.5*m0[1]; 
  BigAEM(2,4) = 0.5000000000000001*m0[6]; 
  BigAEM(2,5) = 0.4472135954999579*m0[2]; 
  BigAEM(2,6) = 0.5000000000000001*m0[4]; 
  BigAEM(2,7) = 0.447213595499958*m0[3]; 
  BigAEM(3,0) = 0.5*m0[3]; 
  BigAEM(3,1) = 0.447213595499958*m0[6]+0.5*m0[2]; 
  BigAEM(3,2) = 0.447213595499958*m0[7]+0.5*m0[1]; 
  BigAEM(3,3) = 0.4472135954999579*m0[5]+0.4472135954999579*m0[4]+0.5*m0[0]; 
  BigAEM(3,4) = 0.4472135954999579*m0[3]; 
  BigAEM(3,5) = 0.4472135954999579*m0[3]; 
  BigAEM(3,6) = 0.4*m0[7]+0.447213595499958*m0[1]; 
  BigAEM(3,7) = 0.4*m0[6]+0.447213595499958*m0[2]; 
  BigAEM(4,0) = 0.5*m0[4]; 
  BigAEM(4,1) = 0.4472135954999579*m0[1]; 
  BigAEM(4,2) = 0.5000000000000001*m0[6]; 
  BigAEM(4,3) = 0.4472135954999579*m0[3]; 
  BigAEM(4,4) = 0.31943828249997*m0[4]+0.5*m0[0]; 
  BigAEM(4,6) = 0.31943828249997*m0[6]+0.5000000000000001*m0[2]; 
  BigAEM(4,7) = 0.4472135954999579*m0[7]; 
  BigAEM(5,0) = 0.5*m0[5]; 
  BigAEM(5,1) = 0.5000000000000001*m0[7]; 
  BigAEM(5,2) = 0.4472135954999579*m0[2]; 
  BigAEM(5,3) = 0.4472135954999579*m0[3]; 
  BigAEM(5,5) = 0.31943828249997*m0[5]+0.5*m0[0]; 
  BigAEM(5,6) = 0.4472135954999579*m0[6]; 
  BigAEM(5,7) = 0.31943828249997*m0[7]+0.5000000000000001*m0[1]; 
  BigAEM(6,0) = 0.5*m0[6]; 
  BigAEM(6,1) = 0.447213595499958*m0[3]; 
  BigAEM(6,2) = 0.5000000000000001*m0[4]; 
  BigAEM(6,3) = 0.4*m0[7]+0.447213595499958*m0[1]; 
  BigAEM(6,4) = 0.31943828249997*m0[6]+0.5000000000000001*m0[2]; 
  BigAEM(6,5) = 0.4472135954999579*m0[6]; 
  BigAEM(6,6) = 0.4472135954999579*m0[5]+0.31943828249997*m0[4]+0.5*m0[0]; 
  BigAEM(6,7) = 0.4*m0[3]; 
  BigAEM(7,0) = 0.5*m0[7]; 
  BigAEM(7,1) = 0.5000000000000001*m0[5]; 
  BigAEM(7,2) = 0.447213595499958*m0[3]; 
  BigAEM(7,3) = 0.4*m0[6]+0.447213595499958*m0[2]; 
  BigAEM(7,4) = 0.4472135954999579*m0[7]; 
  BigAEM(7,5) = 0.31943828249997*m0[7]+0.5000000000000001*m0[1]; 
  BigAEM(7,6) = 0.4*m0[3]; 
  BigAEM(7,7) = 0.31943828249997*m0[5]+0.4472135954999579*m0[4]+0.5*m0[0]; 
 
  // ....... Block from correction to uX .......... // 
  BigAEM(0,24) = -0.5*cM[0]; 
  BigAEM(0,25) = -0.5*cM[1]; 
  BigAEM(0,26) = -0.5*cM[2]; 
  BigAEM(0,27) = -0.5*cM[3]; 
  BigAEM(0,28) = -0.5*cM[4]; 
  BigAEM(0,29) = -0.5*cM[5]; 
  BigAEM(0,30) = -0.5*cM[6]; 
  BigAEM(0,31) = -0.5*cM[7]; 
  BigAEM(1,24) = -0.5*cM[1]; 
  BigAEM(1,25) = (-0.4472135954999579*cM[4])-0.5*cM[0]; 
  BigAEM(1,26) = -0.5*cM[3]; 
  BigAEM(1,27) = (-0.447213595499958*cM[6])-0.5*cM[2]; 
  BigAEM(1,28) = -0.4472135954999579*cM[1]; 
  BigAEM(1,29) = -0.5000000000000001*cM[7]; 
  BigAEM(1,30) = -0.447213595499958*cM[3]; 
  BigAEM(1,31) = -0.5000000000000001*cM[5]; 
  BigAEM(2,24) = -0.5*cM[2]; 
  BigAEM(2,25) = -0.5*cM[3]; 
  BigAEM(2,26) = (-0.4472135954999579*cM[5])-0.5*cM[0]; 
  BigAEM(2,27) = (-0.447213595499958*cM[7])-0.5*cM[1]; 
  BigAEM(2,28) = -0.5000000000000001*cM[6]; 
  BigAEM(2,29) = -0.4472135954999579*cM[2]; 
  BigAEM(2,30) = -0.5000000000000001*cM[4]; 
  BigAEM(2,31) = -0.447213595499958*cM[3]; 
  BigAEM(3,24) = -0.5*cM[3]; 
  BigAEM(3,25) = (-0.447213595499958*cM[6])-0.5*cM[2]; 
  BigAEM(3,26) = (-0.447213595499958*cM[7])-0.5*cM[1]; 
  BigAEM(3,27) = (-0.4472135954999579*cM[5])-0.4472135954999579*cM[4]-0.5*cM[0]; 
  BigAEM(3,28) = -0.4472135954999579*cM[3]; 
  BigAEM(3,29) = -0.4472135954999579*cM[3]; 
  BigAEM(3,30) = (-0.4*cM[7])-0.447213595499958*cM[1]; 
  BigAEM(3,31) = (-0.4*cM[6])-0.447213595499958*cM[2]; 
  BigAEM(4,24) = -0.5*cM[4]; 
  BigAEM(4,25) = -0.4472135954999579*cM[1]; 
  BigAEM(4,26) = -0.5000000000000001*cM[6]; 
  BigAEM(4,27) = -0.4472135954999579*cM[3]; 
  BigAEM(4,28) = (-0.31943828249997*cM[4])-0.5*cM[0]; 
  BigAEM(4,30) = (-0.31943828249997*cM[6])-0.5000000000000001*cM[2]; 
  BigAEM(4,31) = -0.4472135954999579*cM[7]; 
  BigAEM(5,24) = -0.5*cM[5]; 
  BigAEM(5,25) = -0.5000000000000001*cM[7]; 
  BigAEM(5,26) = -0.4472135954999579*cM[2]; 
  BigAEM(5,27) = -0.4472135954999579*cM[3]; 
  BigAEM(5,29) = (-0.31943828249997*cM[5])-0.5*cM[0]; 
  BigAEM(5,30) = -0.4472135954999579*cM[6]; 
  BigAEM(5,31) = (-0.31943828249997*cM[7])-0.5000000000000001*cM[1]; 
  BigAEM(6,24) = -0.5*cM[6]; 
  BigAEM(6,25) = -0.447213595499958*cM[3]; 
  BigAEM(6,26) = -0.5000000000000001*cM[4]; 
  BigAEM(6,27) = (-0.4*cM[7])-0.447213595499958*cM[1]; 
  BigAEM(6,28) = (-0.31943828249997*cM[6])-0.5000000000000001*cM[2]; 
  BigAEM(6,29) = -0.4472135954999579*cM[6]; 
  BigAEM(6,30) = (-0.4472135954999579*cM[5])-0.31943828249997*cM[4]-0.5*cM[0]; 
  BigAEM(6,31) = -0.4*cM[3]; 
  BigAEM(7,24) = -0.5*cM[7]; 
  BigAEM(7,25) = -0.5000000000000001*cM[5]; 
  BigAEM(7,26) = -0.447213595499958*cM[3]; 
  BigAEM(7,27) = (-0.4*cM[6])-0.447213595499958*cM[2]; 
  BigAEM(7,28) = -0.4472135954999579*cM[7]; 
  BigAEM(7,29) = (-0.31943828249997*cM[7])-0.5000000000000001*cM[1]; 
  BigAEM(7,30) = -0.4*cM[3]; 
  BigAEM(7,31) = (-0.31943828249997*cM[5])-0.4472135954999579*cM[4]-0.5*cM[0]; 
 
  // ....... Block from weak multiply of uX and m1X  .......... // 
  BigAEM(24,0) = 0.5*m1[0]; 
  BigAEM(24,1) = 0.5*m1[1]; 
  BigAEM(24,2) = 0.5*m1[2]; 
  BigAEM(24,3) = 0.5*m1[3]; 
  BigAEM(24,4) = 0.5*m1[4]; 
  BigAEM(24,5) = 0.5*m1[5]; 
  BigAEM(24,6) = 0.5*m1[6]; 
  BigAEM(24,7) = 0.5*m1[7]; 
  BigAEM(25,0) = 0.5*m1[1]; 
  BigAEM(25,1) = 0.4472135954999579*m1[4]+0.5*m1[0]; 
  BigAEM(25,2) = 0.5*m1[3]; 
  BigAEM(25,3) = 0.447213595499958*m1[6]+0.5*m1[2]; 
  BigAEM(25,4) = 0.4472135954999579*m1[1]; 
  BigAEM(25,5) = 0.5000000000000001*m1[7]; 
  BigAEM(25,6) = 0.447213595499958*m1[3]; 
  BigAEM(25,7) = 0.5000000000000001*m1[5]; 
  BigAEM(26,0) = 0.5*m1[2]; 
  BigAEM(26,1) = 0.5*m1[3]; 
  BigAEM(26,2) = 0.4472135954999579*m1[5]+0.5*m1[0]; 
  BigAEM(26,3) = 0.447213595499958*m1[7]+0.5*m1[1]; 
  BigAEM(26,4) = 0.5000000000000001*m1[6]; 
  BigAEM(26,5) = 0.4472135954999579*m1[2]; 
  BigAEM(26,6) = 0.5000000000000001*m1[4]; 
  BigAEM(26,7) = 0.447213595499958*m1[3]; 
  BigAEM(27,0) = 0.5*m1[3]; 
  BigAEM(27,1) = 0.447213595499958*m1[6]+0.5*m1[2]; 
  BigAEM(27,2) = 0.447213595499958*m1[7]+0.5*m1[1]; 
  BigAEM(27,3) = 0.4472135954999579*m1[5]+0.4472135954999579*m1[4]+0.5*m1[0]; 
  BigAEM(27,4) = 0.4472135954999579*m1[3]; 
  BigAEM(27,5) = 0.4472135954999579*m1[3]; 
  BigAEM(27,6) = 0.4*m1[7]+0.447213595499958*m1[1]; 
  BigAEM(27,7) = 0.4*m1[6]+0.447213595499958*m1[2]; 
  BigAEM(28,0) = 0.5*m1[4]; 
  BigAEM(28,1) = 0.4472135954999579*m1[1]; 
  BigAEM(28,2) = 0.5000000000000001*m1[6]; 
  BigAEM(28,3) = 0.4472135954999579*m1[3]; 
  BigAEM(28,4) = 0.31943828249997*m1[4]+0.5*m1[0]; 
  BigAEM(28,6) = 0.31943828249997*m1[6]+0.5000000000000001*m1[2]; 
  BigAEM(28,7) = 0.4472135954999579*m1[7]; 
  BigAEM(29,0) = 0.5*m1[5]; 
  BigAEM(29,1) = 0.5000000000000001*m1[7]; 
  BigAEM(29,2) = 0.4472135954999579*m1[2]; 
  BigAEM(29,3) = 0.4472135954999579*m1[3]; 
  BigAEM(29,5) = 0.31943828249997*m1[5]+0.5*m1[0]; 
  BigAEM(29,6) = 0.4472135954999579*m1[6]; 
  BigAEM(29,7) = 0.31943828249997*m1[7]+0.5000000000000001*m1[1]; 
  BigAEM(30,0) = 0.5*m1[6]; 
  BigAEM(30,1) = 0.447213595499958*m1[3]; 
  BigAEM(30,2) = 0.5000000000000001*m1[4]; 
  BigAEM(30,3) = 0.4*m1[7]+0.447213595499958*m1[1]; 
  BigAEM(30,4) = 0.31943828249997*m1[6]+0.5000000000000001*m1[2]; 
  BigAEM(30,5) = 0.4472135954999579*m1[6]; 
  BigAEM(30,6) = 0.4472135954999579*m1[5]+0.31943828249997*m1[4]+0.5*m1[0]; 
  BigAEM(30,7) = 0.4*m1[3]; 
  BigAEM(31,0) = 0.5*m1[7]; 
  BigAEM(31,1) = 0.5000000000000001*m1[5]; 
  BigAEM(31,2) = 0.447213595499958*m1[3]; 
  BigAEM(31,3) = 0.4*m1[6]+0.447213595499958*m1[2]; 
  BigAEM(31,4) = 0.4472135954999579*m1[7]; 
  BigAEM(31,5) = 0.31943828249997*m1[7]+0.5000000000000001*m1[1]; 
  BigAEM(31,6) = 0.4*m1[3]; 
  BigAEM(31,7) = 0.31943828249997*m1[5]+0.4472135954999579*m1[4]+0.5*m1[0]; 
 
  // ....... Block from weak multiply of uY and m0  .......... // 
  BigAEM(8,8) = 0.5*m0[0]; 
  BigAEM(8,9) = 0.5*m0[1]; 
  BigAEM(8,10) = 0.5*m0[2]; 
  BigAEM(8,11) = 0.5*m0[3]; 
  BigAEM(8,12) = 0.5*m0[4]; 
  BigAEM(8,13) = 0.5*m0[5]; 
  BigAEM(8,14) = 0.5*m0[6]; 
  BigAEM(8,15) = 0.5*m0[7]; 
  BigAEM(9,8) = 0.5*m0[1]; 
  BigAEM(9,9) = 0.4472135954999579*m0[4]+0.5*m0[0]; 
  BigAEM(9,10) = 0.5*m0[3]; 
  BigAEM(9,11) = 0.447213595499958*m0[6]+0.5*m0[2]; 
  BigAEM(9,12) = 0.4472135954999579*m0[1]; 
  BigAEM(9,13) = 0.5000000000000001*m0[7]; 
  BigAEM(9,14) = 0.447213595499958*m0[3]; 
  BigAEM(9,15) = 0.5000000000000001*m0[5]; 
  BigAEM(10,8) = 0.5*m0[2]; 
  BigAEM(10,9) = 0.5*m0[3]; 
  BigAEM(10,10) = 0.4472135954999579*m0[5]+0.5*m0[0]; 
  BigAEM(10,11) = 0.447213595499958*m0[7]+0.5*m0[1]; 
  BigAEM(10,12) = 0.5000000000000001*m0[6]; 
  BigAEM(10,13) = 0.4472135954999579*m0[2]; 
  BigAEM(10,14) = 0.5000000000000001*m0[4]; 
  BigAEM(10,15) = 0.447213595499958*m0[3]; 
  BigAEM(11,8) = 0.5*m0[3]; 
  BigAEM(11,9) = 0.447213595499958*m0[6]+0.5*m0[2]; 
  BigAEM(11,10) = 0.447213595499958*m0[7]+0.5*m0[1]; 
  BigAEM(11,11) = 0.4472135954999579*m0[5]+0.4472135954999579*m0[4]+0.5*m0[0]; 
  BigAEM(11,12) = 0.4472135954999579*m0[3]; 
  BigAEM(11,13) = 0.4472135954999579*m0[3]; 
  BigAEM(11,14) = 0.4*m0[7]+0.447213595499958*m0[1]; 
  BigAEM(11,15) = 0.4*m0[6]+0.447213595499958*m0[2]; 
  BigAEM(12,8) = 0.5*m0[4]; 
  BigAEM(12,9) = 0.4472135954999579*m0[1]; 
  BigAEM(12,10) = 0.5000000000000001*m0[6]; 
  BigAEM(12,11) = 0.4472135954999579*m0[3]; 
  BigAEM(12,12) = 0.31943828249997*m0[4]+0.5*m0[0]; 
  BigAEM(12,14) = 0.31943828249997*m0[6]+0.5000000000000001*m0[2]; 
  BigAEM(12,15) = 0.4472135954999579*m0[7]; 
  BigAEM(13,8) = 0.5*m0[5]; 
  BigAEM(13,9) = 0.5000000000000001*m0[7]; 
  BigAEM(13,10) = 0.4472135954999579*m0[2]; 
  BigAEM(13,11) = 0.4472135954999579*m0[3]; 
  BigAEM(13,13) = 0.31943828249997*m0[5]+0.5*m0[0]; 
  BigAEM(13,14) = 0.4472135954999579*m0[6]; 
  BigAEM(13,15) = 0.31943828249997*m0[7]+0.5000000000000001*m0[1]; 
  BigAEM(14,8) = 0.5*m0[6]; 
  BigAEM(14,9) = 0.447213595499958*m0[3]; 
  BigAEM(14,10) = 0.5000000000000001*m0[4]; 
  BigAEM(14,11) = 0.4*m0[7]+0.447213595499958*m0[1]; 
  BigAEM(14,12) = 0.31943828249997*m0[6]+0.5000000000000001*m0[2]; 
  BigAEM(14,13) = 0.4472135954999579*m0[6]; 
  BigAEM(14,14) = 0.4472135954999579*m0[5]+0.31943828249997*m0[4]+0.5*m0[0]; 
  BigAEM(14,15) = 0.4*m0[3]; 
  BigAEM(15,8) = 0.5*m0[7]; 
  BigAEM(15,9) = 0.5000000000000001*m0[5]; 
  BigAEM(15,10) = 0.447213595499958*m0[3]; 
  BigAEM(15,11) = 0.4*m0[6]+0.447213595499958*m0[2]; 
  BigAEM(15,12) = 0.4472135954999579*m0[7]; 
  BigAEM(15,13) = 0.31943828249997*m0[7]+0.5000000000000001*m0[1]; 
  BigAEM(15,14) = 0.4*m0[3]; 
  BigAEM(15,15) = 0.31943828249997*m0[5]+0.4472135954999579*m0[4]+0.5*m0[0]; 
 
  // ....... Block from correction to uY .......... // 
  BigAEM(8,24) = -0.5*cM[8]; 
  BigAEM(8,25) = -0.5*cM[9]; 
  BigAEM(8,26) = -0.5*cM[10]; 
  BigAEM(8,27) = -0.5*cM[11]; 
  BigAEM(8,28) = -0.5*cM[12]; 
  BigAEM(8,29) = -0.5*cM[13]; 
  BigAEM(8,30) = -0.5*cM[14]; 
  BigAEM(8,31) = -0.5*cM[15]; 
  BigAEM(9,24) = -0.5*cM[9]; 
  BigAEM(9,25) = (-0.4472135954999579*cM[12])-0.5*cM[8]; 
  BigAEM(9,26) = -0.5*cM[11]; 
  BigAEM(9,27) = (-0.447213595499958*cM[14])-0.5*cM[10]; 
  BigAEM(9,28) = -0.4472135954999579*cM[9]; 
  BigAEM(9,29) = -0.5000000000000001*cM[15]; 
  BigAEM(9,30) = -0.447213595499958*cM[11]; 
  BigAEM(9,31) = -0.5000000000000001*cM[13]; 
  BigAEM(10,24) = -0.5*cM[10]; 
  BigAEM(10,25) = -0.5*cM[11]; 
  BigAEM(10,26) = (-0.4472135954999579*cM[13])-0.5*cM[8]; 
  BigAEM(10,27) = (-0.447213595499958*cM[15])-0.5*cM[9]; 
  BigAEM(10,28) = -0.5000000000000001*cM[14]; 
  BigAEM(10,29) = -0.4472135954999579*cM[10]; 
  BigAEM(10,30) = -0.5000000000000001*cM[12]; 
  BigAEM(10,31) = -0.447213595499958*cM[11]; 
  BigAEM(11,24) = -0.5*cM[11]; 
  BigAEM(11,25) = (-0.447213595499958*cM[14])-0.5*cM[10]; 
  BigAEM(11,26) = (-0.447213595499958*cM[15])-0.5*cM[9]; 
  BigAEM(11,27) = (-0.4472135954999579*cM[13])-0.4472135954999579*cM[12]-0.5*cM[8]; 
  BigAEM(11,28) = -0.4472135954999579*cM[11]; 
  BigAEM(11,29) = -0.4472135954999579*cM[11]; 
  BigAEM(11,30) = (-0.4*cM[15])-0.447213595499958*cM[9]; 
  BigAEM(11,31) = (-0.4*cM[14])-0.447213595499958*cM[10]; 
  BigAEM(12,24) = -0.5*cM[12]; 
  BigAEM(12,25) = -0.4472135954999579*cM[9]; 
  BigAEM(12,26) = -0.5000000000000001*cM[14]; 
  BigAEM(12,27) = -0.4472135954999579*cM[11]; 
  BigAEM(12,28) = (-0.31943828249997*cM[12])-0.5*cM[8]; 
  BigAEM(12,30) = (-0.31943828249997*cM[14])-0.5000000000000001*cM[10]; 
  BigAEM(12,31) = -0.4472135954999579*cM[15]; 
  BigAEM(13,24) = -0.5*cM[13]; 
  BigAEM(13,25) = -0.5000000000000001*cM[15]; 
  BigAEM(13,26) = -0.4472135954999579*cM[10]; 
  BigAEM(13,27) = -0.4472135954999579*cM[11]; 
  BigAEM(13,29) = (-0.31943828249997*cM[13])-0.5*cM[8]; 
  BigAEM(13,30) = -0.4472135954999579*cM[14]; 
  BigAEM(13,31) = (-0.31943828249997*cM[15])-0.5000000000000001*cM[9]; 
  BigAEM(14,24) = -0.5*cM[14]; 
  BigAEM(14,25) = -0.447213595499958*cM[11]; 
  BigAEM(14,26) = -0.5000000000000001*cM[12]; 
  BigAEM(14,27) = (-0.4*cM[15])-0.447213595499958*cM[9]; 
  BigAEM(14,28) = (-0.31943828249997*cM[14])-0.5000000000000001*cM[10]; 
  BigAEM(14,29) = -0.4472135954999579*cM[14]; 
  BigAEM(14,30) = (-0.4472135954999579*cM[13])-0.31943828249997*cM[12]-0.5*cM[8]; 
  BigAEM(14,31) = -0.4*cM[11]; 
  BigAEM(15,24) = -0.5*cM[15]; 
  BigAEM(15,25) = -0.5000000000000001*cM[13]; 
  BigAEM(15,26) = -0.447213595499958*cM[11]; 
  BigAEM(15,27) = (-0.4*cM[14])-0.447213595499958*cM[10]; 
  BigAEM(15,28) = -0.4472135954999579*cM[15]; 
  BigAEM(15,29) = (-0.31943828249997*cM[15])-0.5000000000000001*cM[9]; 
  BigAEM(15,30) = -0.4*cM[11]; 
  BigAEM(15,31) = (-0.31943828249997*cM[13])-0.4472135954999579*cM[12]-0.5*cM[8]; 
 
  // ....... Block from weak multiply of uY and m1Y  .......... // 
  BigAEM(24,8) = 0.5*m1[8]; 
  BigAEM(24,9) = 0.5*m1[9]; 
  BigAEM(24,10) = 0.5*m1[10]; 
  BigAEM(24,11) = 0.5*m1[11]; 
  BigAEM(24,12) = 0.5*m1[12]; 
  BigAEM(24,13) = 0.5*m1[13]; 
  BigAEM(24,14) = 0.5*m1[14]; 
  BigAEM(24,15) = 0.5*m1[15]; 
  BigAEM(25,8) = 0.5*m1[9]; 
  BigAEM(25,9) = 0.4472135954999579*m1[12]+0.5*m1[8]; 
  BigAEM(25,10) = 0.5*m1[11]; 
  BigAEM(25,11) = 0.447213595499958*m1[14]+0.5*m1[10]; 
  BigAEM(25,12) = 0.4472135954999579*m1[9]; 
  BigAEM(25,13) = 0.5000000000000001*m1[15]; 
  BigAEM(25,14) = 0.447213595499958*m1[11]; 
  BigAEM(25,15) = 0.5000000000000001*m1[13]; 
  BigAEM(26,8) = 0.5*m1[10]; 
  BigAEM(26,9) = 0.5*m1[11]; 
  BigAEM(26,10) = 0.4472135954999579*m1[13]+0.5*m1[8]; 
  BigAEM(26,11) = 0.447213595499958*m1[15]+0.5*m1[9]; 
  BigAEM(26,12) = 0.5000000000000001*m1[14]; 
  BigAEM(26,13) = 0.4472135954999579*m1[10]; 
  BigAEM(26,14) = 0.5000000000000001*m1[12]; 
  BigAEM(26,15) = 0.447213595499958*m1[11]; 
  BigAEM(27,8) = 0.5*m1[11]; 
  BigAEM(27,9) = 0.447213595499958*m1[14]+0.5*m1[10]; 
  BigAEM(27,10) = 0.447213595499958*m1[15]+0.5*m1[9]; 
  BigAEM(27,11) = 0.4472135954999579*m1[13]+0.4472135954999579*m1[12]+0.5*m1[8]; 
  BigAEM(27,12) = 0.4472135954999579*m1[11]; 
  BigAEM(27,13) = 0.4472135954999579*m1[11]; 
  BigAEM(27,14) = 0.4*m1[15]+0.447213595499958*m1[9]; 
  BigAEM(27,15) = 0.4*m1[14]+0.447213595499958*m1[10]; 
  BigAEM(28,8) = 0.5*m1[12]; 
  BigAEM(28,9) = 0.4472135954999579*m1[9]; 
  BigAEM(28,10) = 0.5000000000000001*m1[14]; 
  BigAEM(28,11) = 0.4472135954999579*m1[11]; 
  BigAEM(28,12) = 0.31943828249997*m1[12]+0.5*m1[8]; 
  BigAEM(28,14) = 0.31943828249997*m1[14]+0.5000000000000001*m1[10]; 
  BigAEM(28,15) = 0.4472135954999579*m1[15]; 
  BigAEM(29,8) = 0.5*m1[13]; 
  BigAEM(29,9) = 0.5000000000000001*m1[15]; 
  BigAEM(29,10) = 0.4472135954999579*m1[10]; 
  BigAEM(29,11) = 0.4472135954999579*m1[11]; 
  BigAEM(29,13) = 0.31943828249997*m1[13]+0.5*m1[8]; 
  BigAEM(29,14) = 0.4472135954999579*m1[14]; 
  BigAEM(29,15) = 0.31943828249997*m1[15]+0.5000000000000001*m1[9]; 
  BigAEM(30,8) = 0.5*m1[14]; 
  BigAEM(30,9) = 0.447213595499958*m1[11]; 
  BigAEM(30,10) = 0.5000000000000001*m1[12]; 
  BigAEM(30,11) = 0.4*m1[15]+0.447213595499958*m1[9]; 
  BigAEM(30,12) = 0.31943828249997*m1[14]+0.5000000000000001*m1[10]; 
  BigAEM(30,13) = 0.4472135954999579*m1[14]; 
  BigAEM(30,14) = 0.4472135954999579*m1[13]+0.31943828249997*m1[12]+0.5*m1[8]; 
  BigAEM(30,15) = 0.4*m1[11]; 
  BigAEM(31,8) = 0.5*m1[15]; 
  BigAEM(31,9) = 0.5000000000000001*m1[13]; 
  BigAEM(31,10) = 0.447213595499958*m1[11]; 
  BigAEM(31,11) = 0.4*m1[14]+0.447213595499958*m1[10]; 
  BigAEM(31,12) = 0.4472135954999579*m1[15]; 
  BigAEM(31,13) = 0.31943828249997*m1[15]+0.5000000000000001*m1[9]; 
  BigAEM(31,14) = 0.4*m1[11]; 
  BigAEM(31,15) = 0.31943828249997*m1[13]+0.4472135954999579*m1[12]+0.5*m1[8]; 
 
  // ....... Block from weak multiply of uZ and m0  .......... // 
  BigAEM(16,16) = 0.5*m0[0]; 
  BigAEM(16,17) = 0.5*m0[1]; 
  BigAEM(16,18) = 0.5*m0[2]; 
  BigAEM(16,19) = 0.5*m0[3]; 
  BigAEM(16,20) = 0.5*m0[4]; 
  BigAEM(16,21) = 0.5*m0[5]; 
  BigAEM(16,22) = 0.5*m0[6]; 
  BigAEM(16,23) = 0.5*m0[7]; 
  BigAEM(17,16) = 0.5*m0[1]; 
  BigAEM(17,17) = 0.4472135954999579*m0[4]+0.5*m0[0]; 
  BigAEM(17,18) = 0.5*m0[3]; 
  BigAEM(17,19) = 0.447213595499958*m0[6]+0.5*m0[2]; 
  BigAEM(17,20) = 0.4472135954999579*m0[1]; 
  BigAEM(17,21) = 0.5000000000000001*m0[7]; 
  BigAEM(17,22) = 0.447213595499958*m0[3]; 
  BigAEM(17,23) = 0.5000000000000001*m0[5]; 
  BigAEM(18,16) = 0.5*m0[2]; 
  BigAEM(18,17) = 0.5*m0[3]; 
  BigAEM(18,18) = 0.4472135954999579*m0[5]+0.5*m0[0]; 
  BigAEM(18,19) = 0.447213595499958*m0[7]+0.5*m0[1]; 
  BigAEM(18,20) = 0.5000000000000001*m0[6]; 
  BigAEM(18,21) = 0.4472135954999579*m0[2]; 
  BigAEM(18,22) = 0.5000000000000001*m0[4]; 
  BigAEM(18,23) = 0.447213595499958*m0[3]; 
  BigAEM(19,16) = 0.5*m0[3]; 
  BigAEM(19,17) = 0.447213595499958*m0[6]+0.5*m0[2]; 
  BigAEM(19,18) = 0.447213595499958*m0[7]+0.5*m0[1]; 
  BigAEM(19,19) = 0.4472135954999579*m0[5]+0.4472135954999579*m0[4]+0.5*m0[0]; 
  BigAEM(19,20) = 0.4472135954999579*m0[3]; 
  BigAEM(19,21) = 0.4472135954999579*m0[3]; 
  BigAEM(19,22) = 0.4*m0[7]+0.447213595499958*m0[1]; 
  BigAEM(19,23) = 0.4*m0[6]+0.447213595499958*m0[2]; 
  BigAEM(20,16) = 0.5*m0[4]; 
  BigAEM(20,17) = 0.4472135954999579*m0[1]; 
  BigAEM(20,18) = 0.5000000000000001*m0[6]; 
  BigAEM(20,19) = 0.4472135954999579*m0[3]; 
  BigAEM(20,20) = 0.31943828249997*m0[4]+0.5*m0[0]; 
  BigAEM(20,22) = 0.31943828249997*m0[6]+0.5000000000000001*m0[2]; 
  BigAEM(20,23) = 0.4472135954999579*m0[7]; 
  BigAEM(21,16) = 0.5*m0[5]; 
  BigAEM(21,17) = 0.5000000000000001*m0[7]; 
  BigAEM(21,18) = 0.4472135954999579*m0[2]; 
  BigAEM(21,19) = 0.4472135954999579*m0[3]; 
  BigAEM(21,21) = 0.31943828249997*m0[5]+0.5*m0[0]; 
  BigAEM(21,22) = 0.4472135954999579*m0[6]; 
  BigAEM(21,23) = 0.31943828249997*m0[7]+0.5000000000000001*m0[1]; 
  BigAEM(22,16) = 0.5*m0[6]; 
  BigAEM(22,17) = 0.447213595499958*m0[3]; 
  BigAEM(22,18) = 0.5000000000000001*m0[4]; 
  BigAEM(22,19) = 0.4*m0[7]+0.447213595499958*m0[1]; 
  BigAEM(22,20) = 0.31943828249997*m0[6]+0.5000000000000001*m0[2]; 
  BigAEM(22,21) = 0.4472135954999579*m0[6]; 
  BigAEM(22,22) = 0.4472135954999579*m0[5]+0.31943828249997*m0[4]+0.5*m0[0]; 
  BigAEM(22,23) = 0.4*m0[3]; 
  BigAEM(23,16) = 0.5*m0[7]; 
  BigAEM(23,17) = 0.5000000000000001*m0[5]; 
  BigAEM(23,18) = 0.447213595499958*m0[3]; 
  BigAEM(23,19) = 0.4*m0[6]+0.447213595499958*m0[2]; 
  BigAEM(23,20) = 0.4472135954999579*m0[7]; 
  BigAEM(23,21) = 0.31943828249997*m0[7]+0.5000000000000001*m0[1]; 
  BigAEM(23,22) = 0.4*m0[3]; 
  BigAEM(23,23) = 0.31943828249997*m0[5]+0.4472135954999579*m0[4]+0.5*m0[0]; 
 
  // ....... Block from correction to uZ .......... // 
  BigAEM(16,24) = -0.5*cM[16]; 
  BigAEM(16,25) = -0.5*cM[17]; 
  BigAEM(16,26) = -0.5*cM[18]; 
  BigAEM(16,27) = -0.5*cM[19]; 
  BigAEM(16,28) = -0.5*cM[20]; 
  BigAEM(16,29) = -0.5*cM[21]; 
  BigAEM(16,30) = -0.5*cM[22]; 
  BigAEM(16,31) = -0.5*cM[23]; 
  BigAEM(17,24) = -0.5*cM[17]; 
  BigAEM(17,25) = (-0.4472135954999579*cM[20])-0.5*cM[16]; 
  BigAEM(17,26) = -0.5*cM[19]; 
  BigAEM(17,27) = (-0.447213595499958*cM[22])-0.5*cM[18]; 
  BigAEM(17,28) = -0.4472135954999579*cM[17]; 
  BigAEM(17,29) = -0.5000000000000001*cM[23]; 
  BigAEM(17,30) = -0.447213595499958*cM[19]; 
  BigAEM(17,31) = -0.5000000000000001*cM[21]; 
  BigAEM(18,24) = -0.5*cM[18]; 
  BigAEM(18,25) = -0.5*cM[19]; 
  BigAEM(18,26) = (-0.4472135954999579*cM[21])-0.5*cM[16]; 
  BigAEM(18,27) = (-0.447213595499958*cM[23])-0.5*cM[17]; 
  BigAEM(18,28) = -0.5000000000000001*cM[22]; 
  BigAEM(18,29) = -0.4472135954999579*cM[18]; 
  BigAEM(18,30) = -0.5000000000000001*cM[20]; 
  BigAEM(18,31) = -0.447213595499958*cM[19]; 
  BigAEM(19,24) = -0.5*cM[19]; 
  BigAEM(19,25) = (-0.447213595499958*cM[22])-0.5*cM[18]; 
  BigAEM(19,26) = (-0.447213595499958*cM[23])-0.5*cM[17]; 
  BigAEM(19,27) = (-0.4472135954999579*cM[21])-0.4472135954999579*cM[20]-0.5*cM[16]; 
  BigAEM(19,28) = -0.4472135954999579*cM[19]; 
  BigAEM(19,29) = -0.4472135954999579*cM[19]; 
  BigAEM(19,30) = (-0.4*cM[23])-0.447213595499958*cM[17]; 
  BigAEM(19,31) = (-0.4*cM[22])-0.447213595499958*cM[18]; 
  BigAEM(20,24) = -0.5*cM[20]; 
  BigAEM(20,25) = -0.4472135954999579*cM[17]; 
  BigAEM(20,26) = -0.5000000000000001*cM[22]; 
  BigAEM(20,27) = -0.4472135954999579*cM[19]; 
  BigAEM(20,28) = (-0.31943828249997*cM[20])-0.5*cM[16]; 
  BigAEM(20,30) = (-0.31943828249997*cM[22])-0.5000000000000001*cM[18]; 
  BigAEM(20,31) = -0.4472135954999579*cM[23]; 
  BigAEM(21,24) = -0.5*cM[21]; 
  BigAEM(21,25) = -0.5000000000000001*cM[23]; 
  BigAEM(21,26) = -0.4472135954999579*cM[18]; 
  BigAEM(21,27) = -0.4472135954999579*cM[19]; 
  BigAEM(21,29) = (-0.31943828249997*cM[21])-0.5*cM[16]; 
  BigAEM(21,30) = -0.4472135954999579*cM[22]; 
  BigAEM(21,31) = (-0.31943828249997*cM[23])-0.5000000000000001*cM[17]; 
  BigAEM(22,24) = -0.5*cM[22]; 
  BigAEM(22,25) = -0.447213595499958*cM[19]; 
  BigAEM(22,26) = -0.5000000000000001*cM[20]; 
  BigAEM(22,27) = (-0.4*cM[23])-0.447213595499958*cM[17]; 
  BigAEM(22,28) = (-0.31943828249997*cM[22])-0.5000000000000001*cM[18]; 
  BigAEM(22,29) = -0.4472135954999579*cM[22]; 
  BigAEM(22,30) = (-0.4472135954999579*cM[21])-0.31943828249997*cM[20]-0.5*cM[16]; 
  BigAEM(22,31) = -0.4*cM[19]; 
  BigAEM(23,24) = -0.5*cM[23]; 
  BigAEM(23,25) = -0.5000000000000001*cM[21]; 
  BigAEM(23,26) = -0.447213595499958*cM[19]; 
  BigAEM(23,27) = (-0.4*cM[22])-0.447213595499958*cM[18]; 
  BigAEM(23,28) = -0.4472135954999579*cM[23]; 
  BigAEM(23,29) = (-0.31943828249997*cM[23])-0.5000000000000001*cM[17]; 
  BigAEM(23,30) = -0.4*cM[19]; 
  BigAEM(23,31) = (-0.31943828249997*cM[21])-0.4472135954999579*cM[20]-0.5*cM[16]; 
 
  // ....... Block from weak multiply of uZ and m1Z  .......... // 
  BigAEM(24,16) = 0.5*m1[16]; 
  BigAEM(24,17) = 0.5*m1[17]; 
  BigAEM(24,18) = 0.5*m1[18]; 
  BigAEM(24,19) = 0.5*m1[19]; 
  BigAEM(24,20) = 0.5*m1[20]; 
  BigAEM(24,21) = 0.5*m1[21]; 
  BigAEM(24,22) = 0.5*m1[22]; 
  BigAEM(24,23) = 0.5*m1[23]; 
  BigAEM(25,16) = 0.5*m1[17]; 
  BigAEM(25,17) = 0.4472135954999579*m1[20]+0.5*m1[16]; 
  BigAEM(25,18) = 0.5*m1[19]; 
  BigAEM(25,19) = 0.447213595499958*m1[22]+0.5*m1[18]; 
  BigAEM(25,20) = 0.4472135954999579*m1[17]; 
  BigAEM(25,21) = 0.5000000000000001*m1[23]; 
  BigAEM(25,22) = 0.447213595499958*m1[19]; 
  BigAEM(25,23) = 0.5000000000000001*m1[21]; 
  BigAEM(26,16) = 0.5*m1[18]; 
  BigAEM(26,17) = 0.5*m1[19]; 
  BigAEM(26,18) = 0.4472135954999579*m1[21]+0.5*m1[16]; 
  BigAEM(26,19) = 0.447213595499958*m1[23]+0.5*m1[17]; 
  BigAEM(26,20) = 0.5000000000000001*m1[22]; 
  BigAEM(26,21) = 0.4472135954999579*m1[18]; 
  BigAEM(26,22) = 0.5000000000000001*m1[20]; 
  BigAEM(26,23) = 0.447213595499958*m1[19]; 
  BigAEM(27,16) = 0.5*m1[19]; 
  BigAEM(27,17) = 0.447213595499958*m1[22]+0.5*m1[18]; 
  BigAEM(27,18) = 0.447213595499958*m1[23]+0.5*m1[17]; 
  BigAEM(27,19) = 0.4472135954999579*m1[21]+0.4472135954999579*m1[20]+0.5*m1[16]; 
  BigAEM(27,20) = 0.4472135954999579*m1[19]; 
  BigAEM(27,21) = 0.4472135954999579*m1[19]; 
  BigAEM(27,22) = 0.4*m1[23]+0.447213595499958*m1[17]; 
  BigAEM(27,23) = 0.4*m1[22]+0.447213595499958*m1[18]; 
  BigAEM(28,16) = 0.5*m1[20]; 
  BigAEM(28,17) = 0.4472135954999579*m1[17]; 
  BigAEM(28,18) = 0.5000000000000001*m1[22]; 
  BigAEM(28,19) = 0.4472135954999579*m1[19]; 
  BigAEM(28,20) = 0.31943828249997*m1[20]+0.5*m1[16]; 
  BigAEM(28,22) = 0.31943828249997*m1[22]+0.5000000000000001*m1[18]; 
  BigAEM(28,23) = 0.4472135954999579*m1[23]; 
  BigAEM(29,16) = 0.5*m1[21]; 
  BigAEM(29,17) = 0.5000000000000001*m1[23]; 
  BigAEM(29,18) = 0.4472135954999579*m1[18]; 
  BigAEM(29,19) = 0.4472135954999579*m1[19]; 
  BigAEM(29,21) = 0.31943828249997*m1[21]+0.5*m1[16]; 
  BigAEM(29,22) = 0.4472135954999579*m1[22]; 
  BigAEM(29,23) = 0.31943828249997*m1[23]+0.5000000000000001*m1[17]; 
  BigAEM(30,16) = 0.5*m1[22]; 
  BigAEM(30,17) = 0.447213595499958*m1[19]; 
  BigAEM(30,18) = 0.5000000000000001*m1[20]; 
  BigAEM(30,19) = 0.4*m1[23]+0.447213595499958*m1[17]; 
  BigAEM(30,20) = 0.31943828249997*m1[22]+0.5000000000000001*m1[18]; 
  BigAEM(30,21) = 0.4472135954999579*m1[22]; 
  BigAEM(30,22) = 0.4472135954999579*m1[21]+0.31943828249997*m1[20]+0.5*m1[16]; 
  BigAEM(30,23) = 0.4*m1[19]; 
  BigAEM(31,16) = 0.5*m1[23]; 
  BigAEM(31,17) = 0.5000000000000001*m1[21]; 
  BigAEM(31,18) = 0.447213595499958*m1[19]; 
  BigAEM(31,19) = 0.4*m1[22]+0.447213595499958*m1[18]; 
  BigAEM(31,20) = 0.4472135954999579*m1[23]; 
  BigAEM(31,21) = 0.31943828249997*m1[23]+0.5000000000000001*m1[17]; 
  BigAEM(31,22) = 0.4*m1[19]; 
  BigAEM(31,23) = 0.31943828249997*m1[21]+0.4472135954999579*m1[20]+0.5*m1[16]; 
 
  // ....... Block from correction to vtSq .......... // 
  BigAEM(24,24) = 0.5*m0[0]*pVdim-0.5*cE[0]; 
  BigAEM(24,25) = 0.5*m0[1]*pVdim-0.5*cE[1]; 
  BigAEM(24,26) = 0.5*m0[2]*pVdim-0.5*cE[2]; 
  BigAEM(24,27) = 0.5*m0[3]*pVdim-0.5*cE[3]; 
  BigAEM(24,28) = 0.5*m0[4]*pVdim-0.5*cE[4]; 
  BigAEM(24,29) = 0.5*m0[5]*pVdim-0.5*cE[5]; 
  BigAEM(24,30) = 0.5*m0[6]*pVdim-0.5*cE[6]; 
  BigAEM(24,31) = 0.5*m0[7]*pVdim-0.5*cE[7]; 
  BigAEM(25,24) = 0.5*m0[1]*pVdim-0.5*cE[1]; 
  BigAEM(25,25) = 0.4472135954999579*m0[4]*pVdim+0.5*m0[0]*pVdim-0.4472135954999579*cE[4]-0.5*cE[0]; 
  BigAEM(25,26) = 0.5*m0[3]*pVdim-0.5*cE[3]; 
  BigAEM(25,27) = 0.447213595499958*m0[6]*pVdim+0.5*m0[2]*pVdim-0.447213595499958*cE[6]-0.5*cE[2]; 
  BigAEM(25,28) = 0.4472135954999579*m0[1]*pVdim-0.4472135954999579*cE[1]; 
  BigAEM(25,29) = 0.5000000000000001*m0[7]*pVdim-0.5000000000000001*cE[7]; 
  BigAEM(25,30) = 0.447213595499958*m0[3]*pVdim-0.447213595499958*cE[3]; 
  BigAEM(25,31) = 0.5000000000000001*m0[5]*pVdim-0.5000000000000001*cE[5]; 
  BigAEM(26,24) = 0.5*m0[2]*pVdim-0.5*cE[2]; 
  BigAEM(26,25) = 0.5*m0[3]*pVdim-0.5*cE[3]; 
  BigAEM(26,26) = 0.4472135954999579*m0[5]*pVdim+0.5*m0[0]*pVdim-0.4472135954999579*cE[5]-0.5*cE[0]; 
  BigAEM(26,27) = 0.447213595499958*m0[7]*pVdim+0.5*m0[1]*pVdim-0.447213595499958*cE[7]-0.5*cE[1]; 
  BigAEM(26,28) = 0.5000000000000001*m0[6]*pVdim-0.5000000000000001*cE[6]; 
  BigAEM(26,29) = 0.4472135954999579*m0[2]*pVdim-0.4472135954999579*cE[2]; 
  BigAEM(26,30) = 0.5000000000000001*m0[4]*pVdim-0.5000000000000001*cE[4]; 
  BigAEM(26,31) = 0.447213595499958*m0[3]*pVdim-0.447213595499958*cE[3]; 
  BigAEM(27,24) = 0.5*m0[3]*pVdim-0.5*cE[3]; 
  BigAEM(27,25) = 0.447213595499958*m0[6]*pVdim+0.5*m0[2]*pVdim-0.447213595499958*cE[6]-0.5*cE[2]; 
  BigAEM(27,26) = 0.447213595499958*m0[7]*pVdim+0.5*m0[1]*pVdim-0.447213595499958*cE[7]-0.5*cE[1]; 
  BigAEM(27,27) = 0.4472135954999579*m0[5]*pVdim+0.4472135954999579*m0[4]*pVdim+0.5*m0[0]*pVdim-0.4472135954999579*cE[5]-0.4472135954999579*cE[4]-0.5*cE[0]; 
  BigAEM(27,28) = 0.4472135954999579*m0[3]*pVdim-0.4472135954999579*cE[3]; 
  BigAEM(27,29) = 0.4472135954999579*m0[3]*pVdim-0.4472135954999579*cE[3]; 
  BigAEM(27,30) = 0.4*m0[7]*pVdim+0.447213595499958*m0[1]*pVdim-0.4*cE[7]-0.447213595499958*cE[1]; 
  BigAEM(27,31) = 0.4*m0[6]*pVdim+0.447213595499958*m0[2]*pVdim-0.4*cE[6]-0.447213595499958*cE[2]; 
  BigAEM(28,24) = 0.5*m0[4]*pVdim-0.5*cE[4]; 
  BigAEM(28,25) = 0.4472135954999579*m0[1]*pVdim-0.4472135954999579*cE[1]; 
  BigAEM(28,26) = 0.5000000000000001*m0[6]*pVdim-0.5000000000000001*cE[6]; 
  BigAEM(28,27) = 0.4472135954999579*m0[3]*pVdim-0.4472135954999579*cE[3]; 
  BigAEM(28,28) = 0.31943828249997*m0[4]*pVdim+0.5*m0[0]*pVdim-0.31943828249997*cE[4]-0.5*cE[0]; 
  BigAEM(28,30) = 0.31943828249997*m0[6]*pVdim+0.5000000000000001*m0[2]*pVdim-0.31943828249997*cE[6]-0.5000000000000001*cE[2]; 
  BigAEM(28,31) = 0.4472135954999579*m0[7]*pVdim-0.4472135954999579*cE[7]; 
  BigAEM(29,24) = 0.5*m0[5]*pVdim-0.5*cE[5]; 
  BigAEM(29,25) = 0.5000000000000001*m0[7]*pVdim-0.5000000000000001*cE[7]; 
  BigAEM(29,26) = 0.4472135954999579*m0[2]*pVdim-0.4472135954999579*cE[2]; 
  BigAEM(29,27) = 0.4472135954999579*m0[3]*pVdim-0.4472135954999579*cE[3]; 
  BigAEM(29,29) = 0.31943828249997*m0[5]*pVdim+0.5*m0[0]*pVdim-0.31943828249997*cE[5]-0.5*cE[0]; 
  BigAEM(29,30) = 0.4472135954999579*m0[6]*pVdim-0.4472135954999579*cE[6]; 
  BigAEM(29,31) = 0.31943828249997*m0[7]*pVdim+0.5000000000000001*m0[1]*pVdim-0.31943828249997*cE[7]-0.5000000000000001*cE[1]; 
  BigAEM(30,24) = 0.5*m0[6]*pVdim-0.5*cE[6]; 
  BigAEM(30,25) = 0.447213595499958*m0[3]*pVdim-0.447213595499958*cE[3]; 
  BigAEM(30,26) = 0.5000000000000001*m0[4]*pVdim-0.5000000000000001*cE[4]; 
  BigAEM(30,27) = 0.4*m0[7]*pVdim+0.447213595499958*m0[1]*pVdim-0.4*cE[7]-0.447213595499958*cE[1]; 
  BigAEM(30,28) = 0.31943828249997*m0[6]*pVdim+0.5000000000000001*m0[2]*pVdim-0.31943828249997*cE[6]-0.5000000000000001*cE[2]; 
  BigAEM(30,29) = 0.4472135954999579*m0[6]*pVdim-0.4472135954999579*cE[6]; 
  BigAEM(30,30) = 0.4472135954999579*m0[5]*pVdim+0.31943828249997*m0[4]*pVdim+0.5*m0[0]*pVdim-0.4472135954999579*cE[5]-0.31943828249997*cE[4]-0.5*cE[0]; 
  BigAEM(30,31) = 0.4*m0[3]*pVdim-0.4*cE[3]; 
  BigAEM(31,24) = 0.5*m0[7]*pVdim-0.5*cE[7]; 
  BigAEM(31,25) = 0.5000000000000001*m0[5]*pVdim-0.5000000000000001*cE[5]; 
  BigAEM(31,26) = 0.447213595499958*m0[3]*pVdim-0.447213595499958*cE[3]; 
  BigAEM(31,27) = 0.4*m0[6]*pVdim+0.447213595499958*m0[2]*pVdim-0.4*cE[6]-0.447213595499958*cE[2]; 
  BigAEM(31,28) = 0.4472135954999579*m0[7]*pVdim-0.4472135954999579*cE[7]; 
  BigAEM(31,29) = 0.31943828249997*m0[7]*pVdim+0.5000000000000001*m0[1]*pVdim-0.31943828249997*cE[7]-0.5000000000000001*cE[1]; 
  BigAEM(31,30) = 0.4*m0[3]*pVdim-0.4*cE[3]; 
  BigAEM(31,31) = 0.31943828249997*m0[5]*pVdim+0.4472135954999579*m0[4]*pVdim+0.5*m0[0]*pVdim-0.31943828249997*cE[5]-0.4472135954999579*cE[4]-0.5*cE[0]; 
 
  // Set other entries to 0. // 
  BigAEM.block<8,16>(0,8).setZero(); 
  BigAEM.block<16,8>(8,0).setZero(); 
  BigAEM.block<8,8>(8,16).setZero(); 
  BigAEM.block<8,8>(16,8).setZero(); 
 
  // ....... RHS vector is composed of m1 and m2 .......... // 
  bEV << m1[0],m1[1],m1[2],m1[3],m1[4],m1[5],m1[6],m1[7],m1[8],m1[9],m1[10],m1[11],m1[12],m1[13],m1[14],m1[15],m1[16],m1[17],m1[18],m1[19],m1[20],m1[21],m1[22],m1[23],m2[0],m2[1],m2[2],m2[3],m2[4],m2[5],m2[6],m2[7]; 
 
  xEV = BigAEM.colPivHouseholderQr().solve(bEV); 
 
  Eigen::Map<VectorXd>(u,24,1) = xEV.segment<24>(0); 
 
  Eigen::Map<VectorXd>(vtSq,8,1) = xEV.segment<8>(24); 
 
} 
 
void SelfPrimMoments2x3vSer_P3(const int pVdim, const double *m0, const double *m1, const double *m2, const double *cM, const double *cE, double *u, double *vtSq) 
{ 
  // m0,m1,m2: moments of the distribution function. 
  // cM, cE: vtSq*cM and vtSq*cE are corrections to u and vtSq, respectively. 
  // u:        velocity. 
  // vtSq:     squared thermal speed, sqrt(T/m). 
 
  // Declare Eigen matrix and vectors for weak division. 
  Eigen::MatrixXd BigAEM = Eigen::MatrixXd::Zero(48,48); 
  Eigen::VectorXd bEV = Eigen::VectorXd::Zero(48);  
  Eigen::VectorXd xEV = Eigen::VectorXd::Zero(48);  
 
  // ....... Block from weak multiply of uX and m0  .......... // 
  BigAEM(0,0) = 0.5*m0[0]; 
  BigAEM(0,1) = 0.5*m0[1]; 
  BigAEM(0,2) = 0.5*m0[2]; 
  BigAEM(0,3) = 0.5*m0[3]; 
  BigAEM(0,4) = 0.5*m0[4]; 
  BigAEM(0,5) = 0.5*m0[5]; 
  BigAEM(0,6) = 0.5*m0[6]; 
  BigAEM(0,7) = 0.5*m0[7]; 
  BigAEM(0,8) = 0.5*m0[8]; 
  BigAEM(0,9) = 0.5*m0[9]; 
  BigAEM(0,10) = 0.5*m0[10]; 
  BigAEM(0,11) = 0.5*m0[11]; 
  BigAEM(1,0) = 0.5*m0[1]; 
  BigAEM(1,1) = 0.4472135954999579*m0[4]+0.5*m0[0]; 
  BigAEM(1,2) = 0.5*m0[3]; 
  BigAEM(1,3) = 0.447213595499958*m0[6]+0.5*m0[2]; 
  BigAEM(1,4) = 0.4391550328268398*m0[8]+0.4472135954999579*m0[1]; 
  BigAEM(1,5) = 0.5000000000000001*m0[7]; 
  BigAEM(1,6) = 0.4391550328268399*m0[10]+0.447213595499958*m0[3]; 
  BigAEM(1,7) = 0.5000000000000001*m0[5]; 
  BigAEM(1,8) = 0.4391550328268398*m0[4]; 
  BigAEM(1,9) = 0.5*m0[11]; 
  BigAEM(1,10) = 0.4391550328268399*m0[6]; 
  BigAEM(1,11) = 0.5*m0[9]; 
  BigAEM(2,0) = 0.5*m0[2]; 
  BigAEM(2,1) = 0.5*m0[3]; 
  BigAEM(2,2) = 0.4472135954999579*m0[5]+0.5*m0[0]; 
  BigAEM(2,3) = 0.447213595499958*m0[7]+0.5*m0[1]; 
  BigAEM(2,4) = 0.5000000000000001*m0[6]; 
  BigAEM(2,5) = 0.4391550328268398*m0[9]+0.4472135954999579*m0[2]; 
  BigAEM(2,6) = 0.5000000000000001*m0[4]; 
  BigAEM(2,7) = 0.4391550328268399*m0[11]+0.447213595499958*m0[3]; 
  BigAEM(2,8) = 0.5*m0[10]; 
  BigAEM(2,9) = 0.4391550328268398*m0[5]; 
  BigAEM(2,10) = 0.5*m0[8]; 
  BigAEM(2,11) = 0.4391550328268399*m0[7]; 
  BigAEM(3,0) = 0.5*m0[3]; 
  BigAEM(3,1) = 0.447213595499958*m0[6]+0.5*m0[2]; 
  BigAEM(3,2) = 0.447213595499958*m0[7]+0.5*m0[1]; 
  BigAEM(3,3) = 0.4472135954999579*m0[5]+0.4472135954999579*m0[4]+0.5*m0[0]; 
  BigAEM(3,4) = 0.4391550328268399*m0[10]+0.4472135954999579*m0[3]; 
  BigAEM(3,5) = 0.4391550328268399*m0[11]+0.4472135954999579*m0[3]; 
  BigAEM(3,6) = 0.4391550328268399*m0[8]+0.4*m0[7]+0.447213595499958*m0[1]; 
  BigAEM(3,7) = 0.4391550328268399*m0[9]+0.4*m0[6]+0.447213595499958*m0[2]; 
  BigAEM(3,8) = 0.4391550328268399*m0[6]; 
  BigAEM(3,9) = 0.4391550328268399*m0[7]; 
  BigAEM(3,10) = 0.4391550328268399*m0[4]; 
  BigAEM(3,11) = 0.4391550328268399*m0[5]; 
  BigAEM(4,0) = 0.5*m0[4]; 
  BigAEM(4,1) = 0.4391550328268398*m0[8]+0.4472135954999579*m0[1]; 
  BigAEM(4,2) = 0.5000000000000001*m0[6]; 
  BigAEM(4,3) = 0.4391550328268399*m0[10]+0.4472135954999579*m0[3]; 
  BigAEM(4,4) = 0.31943828249997*m0[4]+0.5*m0[0]; 
  BigAEM(4,6) = 0.31943828249997*m0[6]+0.5000000000000001*m0[2]; 
  BigAEM(4,7) = 0.4472135954999579*m0[7]; 
  BigAEM(4,8) = 0.2981423969999719*m0[8]+0.4391550328268398*m0[1]; 
  BigAEM(4,10) = 0.2981423969999719*m0[10]+0.4391550328268399*m0[3]; 
  BigAEM(4,11) = 0.4472135954999579*m0[11]; 
  BigAEM(5,0) = 0.5*m0[5]; 
  BigAEM(5,1) = 0.5000000000000001*m0[7]; 
  BigAEM(5,2) = 0.4391550328268398*m0[9]+0.4472135954999579*m0[2]; 
  BigAEM(5,3) = 0.4391550328268399*m0[11]+0.4472135954999579*m0[3]; 
  BigAEM(5,5) = 0.31943828249997*m0[5]+0.5*m0[0]; 
  BigAEM(5,6) = 0.4472135954999579*m0[6]; 
  BigAEM(5,7) = 0.31943828249997*m0[7]+0.5000000000000001*m0[1]; 
  BigAEM(5,9) = 0.2981423969999719*m0[9]+0.4391550328268398*m0[2]; 
  BigAEM(5,10) = 0.4472135954999579*m0[10]; 
  BigAEM(5,11) = 0.2981423969999719*m0[11]+0.4391550328268399*m0[3]; 
  BigAEM(6,0) = 0.5*m0[6]; 
  BigAEM(6,1) = 0.4391550328268399*m0[10]+0.447213595499958*m0[3]; 
  BigAEM(6,2) = 0.5000000000000001*m0[4]; 
  BigAEM(6,3) = 0.4391550328268399*m0[8]+0.4*m0[7]+0.447213595499958*m0[1]; 
  BigAEM(6,4) = 0.31943828249997*m0[6]+0.5000000000000001*m0[2]; 
  BigAEM(6,5) = 0.4472135954999579*m0[6]; 
  BigAEM(6,6) = 0.4472135954999579*m0[5]+0.31943828249997*m0[4]+0.5*m0[0]; 
  BigAEM(6,7) = 0.3927922024247863*m0[11]+0.3927922024247863*m0[10]+0.4*m0[3]; 
  BigAEM(6,8) = 0.2981423969999719*m0[10]+0.4391550328268399*m0[3]; 
  BigAEM(6,10) = 0.2981423969999719*m0[8]+0.3927922024247863*m0[7]+0.4391550328268399*m0[1]; 
  BigAEM(6,11) = 0.3927922024247863*m0[7]; 
  BigAEM(7,0) = 0.5*m0[7]; 
  BigAEM(7,1) = 0.5000000000000001*m0[5]; 
  BigAEM(7,2) = 0.4391550328268399*m0[11]+0.447213595499958*m0[3]; 
  BigAEM(7,3) = 0.4391550328268399*m0[9]+0.4*m0[6]+0.447213595499958*m0[2]; 
  BigAEM(7,4) = 0.4472135954999579*m0[7]; 
  BigAEM(7,5) = 0.31943828249997*m0[7]+0.5000000000000001*m0[1]; 
  BigAEM(7,6) = 0.3927922024247863*m0[11]+0.3927922024247863*m0[10]+0.4*m0[3]; 
  BigAEM(7,7) = 0.31943828249997*m0[5]+0.4472135954999579*m0[4]+0.5*m0[0]; 
  BigAEM(7,9) = 0.2981423969999719*m0[11]+0.4391550328268399*m0[3]; 
  BigAEM(7,10) = 0.3927922024247863*m0[6]; 
  BigAEM(7,11) = 0.2981423969999719*m0[9]+0.3927922024247863*m0[6]+0.4391550328268399*m0[2]; 
  BigAEM(8,0) = 0.5*m0[8]; 
  BigAEM(8,1) = 0.4391550328268398*m0[4]; 
  BigAEM(8,2) = 0.5*m0[10]; 
  BigAEM(8,3) = 0.4391550328268399*m0[6]; 
  BigAEM(8,4) = 0.2981423969999719*m0[8]+0.4391550328268398*m0[1]; 
  BigAEM(8,6) = 0.2981423969999719*m0[10]+0.4391550328268399*m0[3]; 
  BigAEM(8,8) = 0.2981423969999719*m0[4]+0.5*m0[0]; 
  BigAEM(8,10) = 0.2981423969999719*m0[6]+0.5*m0[2]; 
  BigAEM(9,0) = 0.5*m0[9]; 
  BigAEM(9,1) = 0.5*m0[11]; 
  BigAEM(9,2) = 0.4391550328268398*m0[5]; 
  BigAEM(9,3) = 0.4391550328268399*m0[7]; 
  BigAEM(9,5) = 0.2981423969999719*m0[9]+0.4391550328268398*m0[2]; 
  BigAEM(9,7) = 0.2981423969999719*m0[11]+0.4391550328268399*m0[3]; 
  BigAEM(9,9) = 0.2981423969999719*m0[5]+0.5*m0[0]; 
  BigAEM(9,11) = 0.2981423969999719*m0[7]+0.5*m0[1]; 
  BigAEM(10,0) = 0.5*m0[10]; 
  BigAEM(10,1) = 0.4391550328268399*m0[6]; 
  BigAEM(10,2) = 0.5*m0[8]; 
  BigAEM(10,3) = 0.4391550328268399*m0[4]; 
  BigAEM(10,4) = 0.2981423969999719*m0[10]+0.4391550328268399*m0[3]; 
  BigAEM(10,5) = 0.4472135954999579*m0[10]; 
  BigAEM(10,6) = 0.2981423969999719*m0[8]+0.3927922024247863*m0[7]+0.4391550328268399*m0[1]; 
  BigAEM(10,7) = 0.3927922024247863*m0[6]; 
  BigAEM(10,8) = 0.2981423969999719*m0[6]+0.5*m0[2]; 
  BigAEM(10,10) = 0.4472135954999579*m0[5]+0.2981423969999719*m0[4]+0.5*m0[0]; 
  BigAEM(11,0) = 0.5*m0[11]; 
  BigAEM(11,1) = 0.5*m0[9]; 
  BigAEM(11,2) = 0.4391550328268399*m0[7]; 
  BigAEM(11,3) = 0.4391550328268399*m0[5]; 
  BigAEM(11,4) = 0.4472135954999579*m0[11]; 
  BigAEM(11,5) = 0.2981423969999719*m0[11]+0.4391550328268399*m0[3]; 
  BigAEM(11,6) = 0.3927922024247863*m0[7]; 
  BigAEM(11,7) = 0.2981423969999719*m0[9]+0.3927922024247863*m0[6]+0.4391550328268399*m0[2]; 
  BigAEM(11,9) = 0.2981423969999719*m0[7]+0.5*m0[1]; 
  BigAEM(11,11) = 0.2981423969999719*m0[5]+0.4472135954999579*m0[4]+0.5*m0[0]; 
 
  // ....... Block from correction to uX .......... // 
  BigAEM(0,36) = -0.5*cM[0]; 
  BigAEM(0,37) = -0.5*cM[1]; 
  BigAEM(0,38) = -0.5*cM[2]; 
  BigAEM(0,39) = -0.5*cM[3]; 
  BigAEM(0,40) = -0.5*cM[4]; 
  BigAEM(0,41) = -0.5*cM[5]; 
  BigAEM(0,42) = -0.5*cM[6]; 
  BigAEM(0,43) = -0.5*cM[7]; 
  BigAEM(0,44) = -0.5*cM[8]; 
  BigAEM(0,45) = -0.5*cM[9]; 
  BigAEM(0,46) = -0.5*cM[10]; 
  BigAEM(0,47) = -0.5*cM[11]; 
  BigAEM(1,36) = -0.5*cM[1]; 
  BigAEM(1,37) = (-0.4472135954999579*cM[4])-0.5*cM[0]; 
  BigAEM(1,38) = -0.5*cM[3]; 
  BigAEM(1,39) = (-0.447213595499958*cM[6])-0.5*cM[2]; 
  BigAEM(1,40) = (-0.4391550328268398*cM[8])-0.4472135954999579*cM[1]; 
  BigAEM(1,41) = -0.5000000000000001*cM[7]; 
  BigAEM(1,42) = (-0.4391550328268399*cM[10])-0.447213595499958*cM[3]; 
  BigAEM(1,43) = -0.5000000000000001*cM[5]; 
  BigAEM(1,44) = -0.4391550328268398*cM[4]; 
  BigAEM(1,45) = -0.5*cM[11]; 
  BigAEM(1,46) = -0.4391550328268399*cM[6]; 
  BigAEM(1,47) = -0.5*cM[9]; 
  BigAEM(2,36) = -0.5*cM[2]; 
  BigAEM(2,37) = -0.5*cM[3]; 
  BigAEM(2,38) = (-0.4472135954999579*cM[5])-0.5*cM[0]; 
  BigAEM(2,39) = (-0.447213595499958*cM[7])-0.5*cM[1]; 
  BigAEM(2,40) = -0.5000000000000001*cM[6]; 
  BigAEM(2,41) = (-0.4391550328268398*cM[9])-0.4472135954999579*cM[2]; 
  BigAEM(2,42) = -0.5000000000000001*cM[4]; 
  BigAEM(2,43) = (-0.4391550328268399*cM[11])-0.447213595499958*cM[3]; 
  BigAEM(2,44) = -0.5*cM[10]; 
  BigAEM(2,45) = -0.4391550328268398*cM[5]; 
  BigAEM(2,46) = -0.5*cM[8]; 
  BigAEM(2,47) = -0.4391550328268399*cM[7]; 
  BigAEM(3,36) = -0.5*cM[3]; 
  BigAEM(3,37) = (-0.447213595499958*cM[6])-0.5*cM[2]; 
  BigAEM(3,38) = (-0.447213595499958*cM[7])-0.5*cM[1]; 
  BigAEM(3,39) = (-0.4472135954999579*cM[5])-0.4472135954999579*cM[4]-0.5*cM[0]; 
  BigAEM(3,40) = (-0.4391550328268399*cM[10])-0.4472135954999579*cM[3]; 
  BigAEM(3,41) = (-0.4391550328268399*cM[11])-0.4472135954999579*cM[3]; 
  BigAEM(3,42) = (-0.4391550328268399*cM[8])-0.4*cM[7]-0.447213595499958*cM[1]; 
  BigAEM(3,43) = (-0.4391550328268399*cM[9])-0.4*cM[6]-0.447213595499958*cM[2]; 
  BigAEM(3,44) = -0.4391550328268399*cM[6]; 
  BigAEM(3,45) = -0.4391550328268399*cM[7]; 
  BigAEM(3,46) = -0.4391550328268399*cM[4]; 
  BigAEM(3,47) = -0.4391550328268399*cM[5]; 
  BigAEM(4,36) = -0.5*cM[4]; 
  BigAEM(4,37) = (-0.4391550328268398*cM[8])-0.4472135954999579*cM[1]; 
  BigAEM(4,38) = -0.5000000000000001*cM[6]; 
  BigAEM(4,39) = (-0.4391550328268399*cM[10])-0.4472135954999579*cM[3]; 
  BigAEM(4,40) = (-0.31943828249997*cM[4])-0.5*cM[0]; 
  BigAEM(4,42) = (-0.31943828249997*cM[6])-0.5000000000000001*cM[2]; 
  BigAEM(4,43) = -0.4472135954999579*cM[7]; 
  BigAEM(4,44) = (-0.2981423969999719*cM[8])-0.4391550328268398*cM[1]; 
  BigAEM(4,46) = (-0.2981423969999719*cM[10])-0.4391550328268399*cM[3]; 
  BigAEM(4,47) = -0.4472135954999579*cM[11]; 
  BigAEM(5,36) = -0.5*cM[5]; 
  BigAEM(5,37) = -0.5000000000000001*cM[7]; 
  BigAEM(5,38) = (-0.4391550328268398*cM[9])-0.4472135954999579*cM[2]; 
  BigAEM(5,39) = (-0.4391550328268399*cM[11])-0.4472135954999579*cM[3]; 
  BigAEM(5,41) = (-0.31943828249997*cM[5])-0.5*cM[0]; 
  BigAEM(5,42) = -0.4472135954999579*cM[6]; 
  BigAEM(5,43) = (-0.31943828249997*cM[7])-0.5000000000000001*cM[1]; 
  BigAEM(5,45) = (-0.2981423969999719*cM[9])-0.4391550328268398*cM[2]; 
  BigAEM(5,46) = -0.4472135954999579*cM[10]; 
  BigAEM(5,47) = (-0.2981423969999719*cM[11])-0.4391550328268399*cM[3]; 
  BigAEM(6,36) = -0.5*cM[6]; 
  BigAEM(6,37) = (-0.4391550328268399*cM[10])-0.447213595499958*cM[3]; 
  BigAEM(6,38) = -0.5000000000000001*cM[4]; 
  BigAEM(6,39) = (-0.4391550328268399*cM[8])-0.4*cM[7]-0.447213595499958*cM[1]; 
  BigAEM(6,40) = (-0.31943828249997*cM[6])-0.5000000000000001*cM[2]; 
  BigAEM(6,41) = -0.4472135954999579*cM[6]; 
  BigAEM(6,42) = (-0.4472135954999579*cM[5])-0.31943828249997*cM[4]-0.5*cM[0]; 
  BigAEM(6,43) = (-0.3927922024247863*cM[11])-0.3927922024247863*cM[10]-0.4*cM[3]; 
  BigAEM(6,44) = (-0.2981423969999719*cM[10])-0.4391550328268399*cM[3]; 
  BigAEM(6,46) = (-0.2981423969999719*cM[8])-0.3927922024247863*cM[7]-0.4391550328268399*cM[1]; 
  BigAEM(6,47) = -0.3927922024247863*cM[7]; 
  BigAEM(7,36) = -0.5*cM[7]; 
  BigAEM(7,37) = -0.5000000000000001*cM[5]; 
  BigAEM(7,38) = (-0.4391550328268399*cM[11])-0.447213595499958*cM[3]; 
  BigAEM(7,39) = (-0.4391550328268399*cM[9])-0.4*cM[6]-0.447213595499958*cM[2]; 
  BigAEM(7,40) = -0.4472135954999579*cM[7]; 
  BigAEM(7,41) = (-0.31943828249997*cM[7])-0.5000000000000001*cM[1]; 
  BigAEM(7,42) = (-0.3927922024247863*cM[11])-0.3927922024247863*cM[10]-0.4*cM[3]; 
  BigAEM(7,43) = (-0.31943828249997*cM[5])-0.4472135954999579*cM[4]-0.5*cM[0]; 
  BigAEM(7,45) = (-0.2981423969999719*cM[11])-0.4391550328268399*cM[3]; 
  BigAEM(7,46) = -0.3927922024247863*cM[6]; 
  BigAEM(7,47) = (-0.2981423969999719*cM[9])-0.3927922024247863*cM[6]-0.4391550328268399*cM[2]; 
  BigAEM(8,36) = -0.5*cM[8]; 
  BigAEM(8,37) = -0.4391550328268398*cM[4]; 
  BigAEM(8,38) = -0.5*cM[10]; 
  BigAEM(8,39) = -0.4391550328268399*cM[6]; 
  BigAEM(8,40) = (-0.2981423969999719*cM[8])-0.4391550328268398*cM[1]; 
  BigAEM(8,42) = (-0.2981423969999719*cM[10])-0.4391550328268399*cM[3]; 
  BigAEM(8,44) = (-0.2981423969999719*cM[4])-0.5*cM[0]; 
  BigAEM(8,46) = (-0.2981423969999719*cM[6])-0.5*cM[2]; 
  BigAEM(9,36) = -0.5*cM[9]; 
  BigAEM(9,37) = -0.5*cM[11]; 
  BigAEM(9,38) = -0.4391550328268398*cM[5]; 
  BigAEM(9,39) = -0.4391550328268399*cM[7]; 
  BigAEM(9,41) = (-0.2981423969999719*cM[9])-0.4391550328268398*cM[2]; 
  BigAEM(9,43) = (-0.2981423969999719*cM[11])-0.4391550328268399*cM[3]; 
  BigAEM(9,45) = (-0.2981423969999719*cM[5])-0.5*cM[0]; 
  BigAEM(9,47) = (-0.2981423969999719*cM[7])-0.5*cM[1]; 
  BigAEM(10,36) = -0.5*cM[10]; 
  BigAEM(10,37) = -0.4391550328268399*cM[6]; 
  BigAEM(10,38) = -0.5*cM[8]; 
  BigAEM(10,39) = -0.4391550328268399*cM[4]; 
  BigAEM(10,40) = (-0.2981423969999719*cM[10])-0.4391550328268399*cM[3]; 
  BigAEM(10,41) = -0.4472135954999579*cM[10]; 
  BigAEM(10,42) = (-0.2981423969999719*cM[8])-0.3927922024247863*cM[7]-0.4391550328268399*cM[1]; 
  BigAEM(10,43) = -0.3927922024247863*cM[6]; 
  BigAEM(10,44) = (-0.2981423969999719*cM[6])-0.5*cM[2]; 
  BigAEM(10,46) = (-0.4472135954999579*cM[5])-0.2981423969999719*cM[4]-0.5*cM[0]; 
  BigAEM(11,36) = -0.5*cM[11]; 
  BigAEM(11,37) = -0.5*cM[9]; 
  BigAEM(11,38) = -0.4391550328268399*cM[7]; 
  BigAEM(11,39) = -0.4391550328268399*cM[5]; 
  BigAEM(11,40) = -0.4472135954999579*cM[11]; 
  BigAEM(11,41) = (-0.2981423969999719*cM[11])-0.4391550328268399*cM[3]; 
  BigAEM(11,42) = -0.3927922024247863*cM[7]; 
  BigAEM(11,43) = (-0.2981423969999719*cM[9])-0.3927922024247863*cM[6]-0.4391550328268399*cM[2]; 
  BigAEM(11,45) = (-0.2981423969999719*cM[7])-0.5*cM[1]; 
  BigAEM(11,47) = (-0.2981423969999719*cM[5])-0.4472135954999579*cM[4]-0.5*cM[0]; 
 
  // ....... Block from weak multiply of uX and m1X  .......... // 
  BigAEM(36,0) = 0.5*m1[0]; 
  BigAEM(36,1) = 0.5*m1[1]; 
  BigAEM(36,2) = 0.5*m1[2]; 
  BigAEM(36,3) = 0.5*m1[3]; 
  BigAEM(36,4) = 0.5*m1[4]; 
  BigAEM(36,5) = 0.5*m1[5]; 
  BigAEM(36,6) = 0.5*m1[6]; 
  BigAEM(36,7) = 0.5*m1[7]; 
  BigAEM(36,8) = 0.5*m1[8]; 
  BigAEM(36,9) = 0.5*m1[9]; 
  BigAEM(36,10) = 0.5*m1[10]; 
  BigAEM(36,11) = 0.5*m1[11]; 
  BigAEM(37,0) = 0.5*m1[1]; 
  BigAEM(37,1) = 0.4472135954999579*m1[4]+0.5*m1[0]; 
  BigAEM(37,2) = 0.5*m1[3]; 
  BigAEM(37,3) = 0.447213595499958*m1[6]+0.5*m1[2]; 
  BigAEM(37,4) = 0.4391550328268398*m1[8]+0.4472135954999579*m1[1]; 
  BigAEM(37,5) = 0.5000000000000001*m1[7]; 
  BigAEM(37,6) = 0.4391550328268399*m1[10]+0.447213595499958*m1[3]; 
  BigAEM(37,7) = 0.5000000000000001*m1[5]; 
  BigAEM(37,8) = 0.4391550328268398*m1[4]; 
  BigAEM(37,9) = 0.5*m1[11]; 
  BigAEM(37,10) = 0.4391550328268399*m1[6]; 
  BigAEM(37,11) = 0.5*m1[9]; 
  BigAEM(38,0) = 0.5*m1[2]; 
  BigAEM(38,1) = 0.5*m1[3]; 
  BigAEM(38,2) = 0.4472135954999579*m1[5]+0.5*m1[0]; 
  BigAEM(38,3) = 0.447213595499958*m1[7]+0.5*m1[1]; 
  BigAEM(38,4) = 0.5000000000000001*m1[6]; 
  BigAEM(38,5) = 0.4391550328268398*m1[9]+0.4472135954999579*m1[2]; 
  BigAEM(38,6) = 0.5000000000000001*m1[4]; 
  BigAEM(38,7) = 0.4391550328268399*m1[11]+0.447213595499958*m1[3]; 
  BigAEM(38,8) = 0.5*m1[10]; 
  BigAEM(38,9) = 0.4391550328268398*m1[5]; 
  BigAEM(38,10) = 0.5*m1[8]; 
  BigAEM(38,11) = 0.4391550328268399*m1[7]; 
  BigAEM(39,0) = 0.5*m1[3]; 
  BigAEM(39,1) = 0.447213595499958*m1[6]+0.5*m1[2]; 
  BigAEM(39,2) = 0.447213595499958*m1[7]+0.5*m1[1]; 
  BigAEM(39,3) = 0.4472135954999579*m1[5]+0.4472135954999579*m1[4]+0.5*m1[0]; 
  BigAEM(39,4) = 0.4391550328268399*m1[10]+0.4472135954999579*m1[3]; 
  BigAEM(39,5) = 0.4391550328268399*m1[11]+0.4472135954999579*m1[3]; 
  BigAEM(39,6) = 0.4391550328268399*m1[8]+0.4*m1[7]+0.447213595499958*m1[1]; 
  BigAEM(39,7) = 0.4391550328268399*m1[9]+0.4*m1[6]+0.447213595499958*m1[2]; 
  BigAEM(39,8) = 0.4391550328268399*m1[6]; 
  BigAEM(39,9) = 0.4391550328268399*m1[7]; 
  BigAEM(39,10) = 0.4391550328268399*m1[4]; 
  BigAEM(39,11) = 0.4391550328268399*m1[5]; 
  BigAEM(40,0) = 0.5*m1[4]; 
  BigAEM(40,1) = 0.4391550328268398*m1[8]+0.4472135954999579*m1[1]; 
  BigAEM(40,2) = 0.5000000000000001*m1[6]; 
  BigAEM(40,3) = 0.4391550328268399*m1[10]+0.4472135954999579*m1[3]; 
  BigAEM(40,4) = 0.31943828249997*m1[4]+0.5*m1[0]; 
  BigAEM(40,6) = 0.31943828249997*m1[6]+0.5000000000000001*m1[2]; 
  BigAEM(40,7) = 0.4472135954999579*m1[7]; 
  BigAEM(40,8) = 0.2981423969999719*m1[8]+0.4391550328268398*m1[1]; 
  BigAEM(40,10) = 0.2981423969999719*m1[10]+0.4391550328268399*m1[3]; 
  BigAEM(40,11) = 0.4472135954999579*m1[11]; 
  BigAEM(41,0) = 0.5*m1[5]; 
  BigAEM(41,1) = 0.5000000000000001*m1[7]; 
  BigAEM(41,2) = 0.4391550328268398*m1[9]+0.4472135954999579*m1[2]; 
  BigAEM(41,3) = 0.4391550328268399*m1[11]+0.4472135954999579*m1[3]; 
  BigAEM(41,5) = 0.31943828249997*m1[5]+0.5*m1[0]; 
  BigAEM(41,6) = 0.4472135954999579*m1[6]; 
  BigAEM(41,7) = 0.31943828249997*m1[7]+0.5000000000000001*m1[1]; 
  BigAEM(41,9) = 0.2981423969999719*m1[9]+0.4391550328268398*m1[2]; 
  BigAEM(41,10) = 0.4472135954999579*m1[10]; 
  BigAEM(41,11) = 0.2981423969999719*m1[11]+0.4391550328268399*m1[3]; 
  BigAEM(42,0) = 0.5*m1[6]; 
  BigAEM(42,1) = 0.4391550328268399*m1[10]+0.447213595499958*m1[3]; 
  BigAEM(42,2) = 0.5000000000000001*m1[4]; 
  BigAEM(42,3) = 0.4391550328268399*m1[8]+0.4*m1[7]+0.447213595499958*m1[1]; 
  BigAEM(42,4) = 0.31943828249997*m1[6]+0.5000000000000001*m1[2]; 
  BigAEM(42,5) = 0.4472135954999579*m1[6]; 
  BigAEM(42,6) = 0.4472135954999579*m1[5]+0.31943828249997*m1[4]+0.5*m1[0]; 
  BigAEM(42,7) = 0.3927922024247863*m1[11]+0.3927922024247863*m1[10]+0.4*m1[3]; 
  BigAEM(42,8) = 0.2981423969999719*m1[10]+0.4391550328268399*m1[3]; 
  BigAEM(42,10) = 0.2981423969999719*m1[8]+0.3927922024247863*m1[7]+0.4391550328268399*m1[1]; 
  BigAEM(42,11) = 0.3927922024247863*m1[7]; 
  BigAEM(43,0) = 0.5*m1[7]; 
  BigAEM(43,1) = 0.5000000000000001*m1[5]; 
  BigAEM(43,2) = 0.4391550328268399*m1[11]+0.447213595499958*m1[3]; 
  BigAEM(43,3) = 0.4391550328268399*m1[9]+0.4*m1[6]+0.447213595499958*m1[2]; 
  BigAEM(43,4) = 0.4472135954999579*m1[7]; 
  BigAEM(43,5) = 0.31943828249997*m1[7]+0.5000000000000001*m1[1]; 
  BigAEM(43,6) = 0.3927922024247863*m1[11]+0.3927922024247863*m1[10]+0.4*m1[3]; 
  BigAEM(43,7) = 0.31943828249997*m1[5]+0.4472135954999579*m1[4]+0.5*m1[0]; 
  BigAEM(43,9) = 0.2981423969999719*m1[11]+0.4391550328268399*m1[3]; 
  BigAEM(43,10) = 0.3927922024247863*m1[6]; 
  BigAEM(43,11) = 0.2981423969999719*m1[9]+0.3927922024247863*m1[6]+0.4391550328268399*m1[2]; 
  BigAEM(44,0) = 0.5*m1[8]; 
  BigAEM(44,1) = 0.4391550328268398*m1[4]; 
  BigAEM(44,2) = 0.5*m1[10]; 
  BigAEM(44,3) = 0.4391550328268399*m1[6]; 
  BigAEM(44,4) = 0.2981423969999719*m1[8]+0.4391550328268398*m1[1]; 
  BigAEM(44,6) = 0.2981423969999719*m1[10]+0.4391550328268399*m1[3]; 
  BigAEM(44,8) = 0.2981423969999719*m1[4]+0.5*m1[0]; 
  BigAEM(44,10) = 0.2981423969999719*m1[6]+0.5*m1[2]; 
  BigAEM(45,0) = 0.5*m1[9]; 
  BigAEM(45,1) = 0.5*m1[11]; 
  BigAEM(45,2) = 0.4391550328268398*m1[5]; 
  BigAEM(45,3) = 0.4391550328268399*m1[7]; 
  BigAEM(45,5) = 0.2981423969999719*m1[9]+0.4391550328268398*m1[2]; 
  BigAEM(45,7) = 0.2981423969999719*m1[11]+0.4391550328268399*m1[3]; 
  BigAEM(45,9) = 0.2981423969999719*m1[5]+0.5*m1[0]; 
  BigAEM(45,11) = 0.2981423969999719*m1[7]+0.5*m1[1]; 
  BigAEM(46,0) = 0.5*m1[10]; 
  BigAEM(46,1) = 0.4391550328268399*m1[6]; 
  BigAEM(46,2) = 0.5*m1[8]; 
  BigAEM(46,3) = 0.4391550328268399*m1[4]; 
  BigAEM(46,4) = 0.2981423969999719*m1[10]+0.4391550328268399*m1[3]; 
  BigAEM(46,5) = 0.4472135954999579*m1[10]; 
  BigAEM(46,6) = 0.2981423969999719*m1[8]+0.3927922024247863*m1[7]+0.4391550328268399*m1[1]; 
  BigAEM(46,7) = 0.3927922024247863*m1[6]; 
  BigAEM(46,8) = 0.2981423969999719*m1[6]+0.5*m1[2]; 
  BigAEM(46,10) = 0.4472135954999579*m1[5]+0.2981423969999719*m1[4]+0.5*m1[0]; 
  BigAEM(47,0) = 0.5*m1[11]; 
  BigAEM(47,1) = 0.5*m1[9]; 
  BigAEM(47,2) = 0.4391550328268399*m1[7]; 
  BigAEM(47,3) = 0.4391550328268399*m1[5]; 
  BigAEM(47,4) = 0.4472135954999579*m1[11]; 
  BigAEM(47,5) = 0.2981423969999719*m1[11]+0.4391550328268399*m1[3]; 
  BigAEM(47,6) = 0.3927922024247863*m1[7]; 
  BigAEM(47,7) = 0.2981423969999719*m1[9]+0.3927922024247863*m1[6]+0.4391550328268399*m1[2]; 
  BigAEM(47,9) = 0.2981423969999719*m1[7]+0.5*m1[1]; 
  BigAEM(47,11) = 0.2981423969999719*m1[5]+0.4472135954999579*m1[4]+0.5*m1[0]; 
 
  // ....... Block from weak multiply of uY and m0  .......... // 
  BigAEM(12,12) = 0.5*m0[0]; 
  BigAEM(12,13) = 0.5*m0[1]; 
  BigAEM(12,14) = 0.5*m0[2]; 
  BigAEM(12,15) = 0.5*m0[3]; 
  BigAEM(12,16) = 0.5*m0[4]; 
  BigAEM(12,17) = 0.5*m0[5]; 
  BigAEM(12,18) = 0.5*m0[6]; 
  BigAEM(12,19) = 0.5*m0[7]; 
  BigAEM(12,20) = 0.5*m0[8]; 
  BigAEM(12,21) = 0.5*m0[9]; 
  BigAEM(12,22) = 0.5*m0[10]; 
  BigAEM(12,23) = 0.5*m0[11]; 
  BigAEM(13,12) = 0.5*m0[1]; 
  BigAEM(13,13) = 0.4472135954999579*m0[4]+0.5*m0[0]; 
  BigAEM(13,14) = 0.5*m0[3]; 
  BigAEM(13,15) = 0.447213595499958*m0[6]+0.5*m0[2]; 
  BigAEM(13,16) = 0.4391550328268398*m0[8]+0.4472135954999579*m0[1]; 
  BigAEM(13,17) = 0.5000000000000001*m0[7]; 
  BigAEM(13,18) = 0.4391550328268399*m0[10]+0.447213595499958*m0[3]; 
  BigAEM(13,19) = 0.5000000000000001*m0[5]; 
  BigAEM(13,20) = 0.4391550328268398*m0[4]; 
  BigAEM(13,21) = 0.5*m0[11]; 
  BigAEM(13,22) = 0.4391550328268399*m0[6]; 
  BigAEM(13,23) = 0.5*m0[9]; 
  BigAEM(14,12) = 0.5*m0[2]; 
  BigAEM(14,13) = 0.5*m0[3]; 
  BigAEM(14,14) = 0.4472135954999579*m0[5]+0.5*m0[0]; 
  BigAEM(14,15) = 0.447213595499958*m0[7]+0.5*m0[1]; 
  BigAEM(14,16) = 0.5000000000000001*m0[6]; 
  BigAEM(14,17) = 0.4391550328268398*m0[9]+0.4472135954999579*m0[2]; 
  BigAEM(14,18) = 0.5000000000000001*m0[4]; 
  BigAEM(14,19) = 0.4391550328268399*m0[11]+0.447213595499958*m0[3]; 
  BigAEM(14,20) = 0.5*m0[10]; 
  BigAEM(14,21) = 0.4391550328268398*m0[5]; 
  BigAEM(14,22) = 0.5*m0[8]; 
  BigAEM(14,23) = 0.4391550328268399*m0[7]; 
  BigAEM(15,12) = 0.5*m0[3]; 
  BigAEM(15,13) = 0.447213595499958*m0[6]+0.5*m0[2]; 
  BigAEM(15,14) = 0.447213595499958*m0[7]+0.5*m0[1]; 
  BigAEM(15,15) = 0.4472135954999579*m0[5]+0.4472135954999579*m0[4]+0.5*m0[0]; 
  BigAEM(15,16) = 0.4391550328268399*m0[10]+0.4472135954999579*m0[3]; 
  BigAEM(15,17) = 0.4391550328268399*m0[11]+0.4472135954999579*m0[3]; 
  BigAEM(15,18) = 0.4391550328268399*m0[8]+0.4*m0[7]+0.447213595499958*m0[1]; 
  BigAEM(15,19) = 0.4391550328268399*m0[9]+0.4*m0[6]+0.447213595499958*m0[2]; 
  BigAEM(15,20) = 0.4391550328268399*m0[6]; 
  BigAEM(15,21) = 0.4391550328268399*m0[7]; 
  BigAEM(15,22) = 0.4391550328268399*m0[4]; 
  BigAEM(15,23) = 0.4391550328268399*m0[5]; 
  BigAEM(16,12) = 0.5*m0[4]; 
  BigAEM(16,13) = 0.4391550328268398*m0[8]+0.4472135954999579*m0[1]; 
  BigAEM(16,14) = 0.5000000000000001*m0[6]; 
  BigAEM(16,15) = 0.4391550328268399*m0[10]+0.4472135954999579*m0[3]; 
  BigAEM(16,16) = 0.31943828249997*m0[4]+0.5*m0[0]; 
  BigAEM(16,18) = 0.31943828249997*m0[6]+0.5000000000000001*m0[2]; 
  BigAEM(16,19) = 0.4472135954999579*m0[7]; 
  BigAEM(16,20) = 0.2981423969999719*m0[8]+0.4391550328268398*m0[1]; 
  BigAEM(16,22) = 0.2981423969999719*m0[10]+0.4391550328268399*m0[3]; 
  BigAEM(16,23) = 0.4472135954999579*m0[11]; 
  BigAEM(17,12) = 0.5*m0[5]; 
  BigAEM(17,13) = 0.5000000000000001*m0[7]; 
  BigAEM(17,14) = 0.4391550328268398*m0[9]+0.4472135954999579*m0[2]; 
  BigAEM(17,15) = 0.4391550328268399*m0[11]+0.4472135954999579*m0[3]; 
  BigAEM(17,17) = 0.31943828249997*m0[5]+0.5*m0[0]; 
  BigAEM(17,18) = 0.4472135954999579*m0[6]; 
  BigAEM(17,19) = 0.31943828249997*m0[7]+0.5000000000000001*m0[1]; 
  BigAEM(17,21) = 0.2981423969999719*m0[9]+0.4391550328268398*m0[2]; 
  BigAEM(17,22) = 0.4472135954999579*m0[10]; 
  BigAEM(17,23) = 0.2981423969999719*m0[11]+0.4391550328268399*m0[3]; 
  BigAEM(18,12) = 0.5*m0[6]; 
  BigAEM(18,13) = 0.4391550328268399*m0[10]+0.447213595499958*m0[3]; 
  BigAEM(18,14) = 0.5000000000000001*m0[4]; 
  BigAEM(18,15) = 0.4391550328268399*m0[8]+0.4*m0[7]+0.447213595499958*m0[1]; 
  BigAEM(18,16) = 0.31943828249997*m0[6]+0.5000000000000001*m0[2]; 
  BigAEM(18,17) = 0.4472135954999579*m0[6]; 
  BigAEM(18,18) = 0.4472135954999579*m0[5]+0.31943828249997*m0[4]+0.5*m0[0]; 
  BigAEM(18,19) = 0.3927922024247863*m0[11]+0.3927922024247863*m0[10]+0.4*m0[3]; 
  BigAEM(18,20) = 0.2981423969999719*m0[10]+0.4391550328268399*m0[3]; 
  BigAEM(18,22) = 0.2981423969999719*m0[8]+0.3927922024247863*m0[7]+0.4391550328268399*m0[1]; 
  BigAEM(18,23) = 0.3927922024247863*m0[7]; 
  BigAEM(19,12) = 0.5*m0[7]; 
  BigAEM(19,13) = 0.5000000000000001*m0[5]; 
  BigAEM(19,14) = 0.4391550328268399*m0[11]+0.447213595499958*m0[3]; 
  BigAEM(19,15) = 0.4391550328268399*m0[9]+0.4*m0[6]+0.447213595499958*m0[2]; 
  BigAEM(19,16) = 0.4472135954999579*m0[7]; 
  BigAEM(19,17) = 0.31943828249997*m0[7]+0.5000000000000001*m0[1]; 
  BigAEM(19,18) = 0.3927922024247863*m0[11]+0.3927922024247863*m0[10]+0.4*m0[3]; 
  BigAEM(19,19) = 0.31943828249997*m0[5]+0.4472135954999579*m0[4]+0.5*m0[0]; 
  BigAEM(19,21) = 0.2981423969999719*m0[11]+0.4391550328268399*m0[3]; 
  BigAEM(19,22) = 0.3927922024247863*m0[6]; 
  BigAEM(19,23) = 0.2981423969999719*m0[9]+0.3927922024247863*m0[6]+0.4391550328268399*m0[2]; 
  BigAEM(20,12) = 0.5*m0[8]; 
  BigAEM(20,13) = 0.4391550328268398*m0[4]; 
  BigAEM(20,14) = 0.5*m0[10]; 
  BigAEM(20,15) = 0.4391550328268399*m0[6]; 
  BigAEM(20,16) = 0.2981423969999719*m0[8]+0.4391550328268398*m0[1]; 
  BigAEM(20,18) = 0.2981423969999719*m0[10]+0.4391550328268399*m0[3]; 
  BigAEM(20,20) = 0.2981423969999719*m0[4]+0.5*m0[0]; 
  BigAEM(20,22) = 0.2981423969999719*m0[6]+0.5*m0[2]; 
  BigAEM(21,12) = 0.5*m0[9]; 
  BigAEM(21,13) = 0.5*m0[11]; 
  BigAEM(21,14) = 0.4391550328268398*m0[5]; 
  BigAEM(21,15) = 0.4391550328268399*m0[7]; 
  BigAEM(21,17) = 0.2981423969999719*m0[9]+0.4391550328268398*m0[2]; 
  BigAEM(21,19) = 0.2981423969999719*m0[11]+0.4391550328268399*m0[3]; 
  BigAEM(21,21) = 0.2981423969999719*m0[5]+0.5*m0[0]; 
  BigAEM(21,23) = 0.2981423969999719*m0[7]+0.5*m0[1]; 
  BigAEM(22,12) = 0.5*m0[10]; 
  BigAEM(22,13) = 0.4391550328268399*m0[6]; 
  BigAEM(22,14) = 0.5*m0[8]; 
  BigAEM(22,15) = 0.4391550328268399*m0[4]; 
  BigAEM(22,16) = 0.2981423969999719*m0[10]+0.4391550328268399*m0[3]; 
  BigAEM(22,17) = 0.4472135954999579*m0[10]; 
  BigAEM(22,18) = 0.2981423969999719*m0[8]+0.3927922024247863*m0[7]+0.4391550328268399*m0[1]; 
  BigAEM(22,19) = 0.3927922024247863*m0[6]; 
  BigAEM(22,20) = 0.2981423969999719*m0[6]+0.5*m0[2]; 
  BigAEM(22,22) = 0.4472135954999579*m0[5]+0.2981423969999719*m0[4]+0.5*m0[0]; 
  BigAEM(23,12) = 0.5*m0[11]; 
  BigAEM(23,13) = 0.5*m0[9]; 
  BigAEM(23,14) = 0.4391550328268399*m0[7]; 
  BigAEM(23,15) = 0.4391550328268399*m0[5]; 
  BigAEM(23,16) = 0.4472135954999579*m0[11]; 
  BigAEM(23,17) = 0.2981423969999719*m0[11]+0.4391550328268399*m0[3]; 
  BigAEM(23,18) = 0.3927922024247863*m0[7]; 
  BigAEM(23,19) = 0.2981423969999719*m0[9]+0.3927922024247863*m0[6]+0.4391550328268399*m0[2]; 
  BigAEM(23,21) = 0.2981423969999719*m0[7]+0.5*m0[1]; 
  BigAEM(23,23) = 0.2981423969999719*m0[5]+0.4472135954999579*m0[4]+0.5*m0[0]; 
 
  // ....... Block from correction to uY .......... // 
  BigAEM(12,36) = -0.5*cM[12]; 
  BigAEM(12,37) = -0.5*cM[13]; 
  BigAEM(12,38) = -0.5*cM[14]; 
  BigAEM(12,39) = -0.5*cM[15]; 
  BigAEM(12,40) = -0.5*cM[16]; 
  BigAEM(12,41) = -0.5*cM[17]; 
  BigAEM(12,42) = -0.5*cM[18]; 
  BigAEM(12,43) = -0.5*cM[19]; 
  BigAEM(12,44) = -0.5*cM[20]; 
  BigAEM(12,45) = -0.5*cM[21]; 
  BigAEM(12,46) = -0.5*cM[22]; 
  BigAEM(12,47) = -0.5*cM[23]; 
  BigAEM(13,36) = -0.5*cM[13]; 
  BigAEM(13,37) = (-0.4472135954999579*cM[16])-0.5*cM[12]; 
  BigAEM(13,38) = -0.5*cM[15]; 
  BigAEM(13,39) = (-0.447213595499958*cM[18])-0.5*cM[14]; 
  BigAEM(13,40) = (-0.4391550328268398*cM[20])-0.4472135954999579*cM[13]; 
  BigAEM(13,41) = -0.5000000000000001*cM[19]; 
  BigAEM(13,42) = (-0.4391550328268399*cM[22])-0.447213595499958*cM[15]; 
  BigAEM(13,43) = -0.5000000000000001*cM[17]; 
  BigAEM(13,44) = -0.4391550328268398*cM[16]; 
  BigAEM(13,45) = -0.5*cM[23]; 
  BigAEM(13,46) = -0.4391550328268399*cM[18]; 
  BigAEM(13,47) = -0.5*cM[21]; 
  BigAEM(14,36) = -0.5*cM[14]; 
  BigAEM(14,37) = -0.5*cM[15]; 
  BigAEM(14,38) = (-0.4472135954999579*cM[17])-0.5*cM[12]; 
  BigAEM(14,39) = (-0.447213595499958*cM[19])-0.5*cM[13]; 
  BigAEM(14,40) = -0.5000000000000001*cM[18]; 
  BigAEM(14,41) = (-0.4391550328268398*cM[21])-0.4472135954999579*cM[14]; 
  BigAEM(14,42) = -0.5000000000000001*cM[16]; 
  BigAEM(14,43) = (-0.4391550328268399*cM[23])-0.447213595499958*cM[15]; 
  BigAEM(14,44) = -0.5*cM[22]; 
  BigAEM(14,45) = -0.4391550328268398*cM[17]; 
  BigAEM(14,46) = -0.5*cM[20]; 
  BigAEM(14,47) = -0.4391550328268399*cM[19]; 
  BigAEM(15,36) = -0.5*cM[15]; 
  BigAEM(15,37) = (-0.447213595499958*cM[18])-0.5*cM[14]; 
  BigAEM(15,38) = (-0.447213595499958*cM[19])-0.5*cM[13]; 
  BigAEM(15,39) = (-0.4472135954999579*cM[17])-0.4472135954999579*cM[16]-0.5*cM[12]; 
  BigAEM(15,40) = (-0.4391550328268399*cM[22])-0.4472135954999579*cM[15]; 
  BigAEM(15,41) = (-0.4391550328268399*cM[23])-0.4472135954999579*cM[15]; 
  BigAEM(15,42) = (-0.4391550328268399*cM[20])-0.4*cM[19]-0.447213595499958*cM[13]; 
  BigAEM(15,43) = (-0.4391550328268399*cM[21])-0.4*cM[18]-0.447213595499958*cM[14]; 
  BigAEM(15,44) = -0.4391550328268399*cM[18]; 
  BigAEM(15,45) = -0.4391550328268399*cM[19]; 
  BigAEM(15,46) = -0.4391550328268399*cM[16]; 
  BigAEM(15,47) = -0.4391550328268399*cM[17]; 
  BigAEM(16,36) = -0.5*cM[16]; 
  BigAEM(16,37) = (-0.4391550328268398*cM[20])-0.4472135954999579*cM[13]; 
  BigAEM(16,38) = -0.5000000000000001*cM[18]; 
  BigAEM(16,39) = (-0.4391550328268399*cM[22])-0.4472135954999579*cM[15]; 
  BigAEM(16,40) = (-0.31943828249997*cM[16])-0.5*cM[12]; 
  BigAEM(16,42) = (-0.31943828249997*cM[18])-0.5000000000000001*cM[14]; 
  BigAEM(16,43) = -0.4472135954999579*cM[19]; 
  BigAEM(16,44) = (-0.2981423969999719*cM[20])-0.4391550328268398*cM[13]; 
  BigAEM(16,46) = (-0.2981423969999719*cM[22])-0.4391550328268399*cM[15]; 
  BigAEM(16,47) = -0.4472135954999579*cM[23]; 
  BigAEM(17,36) = -0.5*cM[17]; 
  BigAEM(17,37) = -0.5000000000000001*cM[19]; 
  BigAEM(17,38) = (-0.4391550328268398*cM[21])-0.4472135954999579*cM[14]; 
  BigAEM(17,39) = (-0.4391550328268399*cM[23])-0.4472135954999579*cM[15]; 
  BigAEM(17,41) = (-0.31943828249997*cM[17])-0.5*cM[12]; 
  BigAEM(17,42) = -0.4472135954999579*cM[18]; 
  BigAEM(17,43) = (-0.31943828249997*cM[19])-0.5000000000000001*cM[13]; 
  BigAEM(17,45) = (-0.2981423969999719*cM[21])-0.4391550328268398*cM[14]; 
  BigAEM(17,46) = -0.4472135954999579*cM[22]; 
  BigAEM(17,47) = (-0.2981423969999719*cM[23])-0.4391550328268399*cM[15]; 
  BigAEM(18,36) = -0.5*cM[18]; 
  BigAEM(18,37) = (-0.4391550328268399*cM[22])-0.447213595499958*cM[15]; 
  BigAEM(18,38) = -0.5000000000000001*cM[16]; 
  BigAEM(18,39) = (-0.4391550328268399*cM[20])-0.4*cM[19]-0.447213595499958*cM[13]; 
  BigAEM(18,40) = (-0.31943828249997*cM[18])-0.5000000000000001*cM[14]; 
  BigAEM(18,41) = -0.4472135954999579*cM[18]; 
  BigAEM(18,42) = (-0.4472135954999579*cM[17])-0.31943828249997*cM[16]-0.5*cM[12]; 
  BigAEM(18,43) = (-0.3927922024247863*cM[23])-0.3927922024247863*cM[22]-0.4*cM[15]; 
  BigAEM(18,44) = (-0.2981423969999719*cM[22])-0.4391550328268399*cM[15]; 
  BigAEM(18,46) = (-0.2981423969999719*cM[20])-0.3927922024247863*cM[19]-0.4391550328268399*cM[13]; 
  BigAEM(18,47) = -0.3927922024247863*cM[19]; 
  BigAEM(19,36) = -0.5*cM[19]; 
  BigAEM(19,37) = -0.5000000000000001*cM[17]; 
  BigAEM(19,38) = (-0.4391550328268399*cM[23])-0.447213595499958*cM[15]; 
  BigAEM(19,39) = (-0.4391550328268399*cM[21])-0.4*cM[18]-0.447213595499958*cM[14]; 
  BigAEM(19,40) = -0.4472135954999579*cM[19]; 
  BigAEM(19,41) = (-0.31943828249997*cM[19])-0.5000000000000001*cM[13]; 
  BigAEM(19,42) = (-0.3927922024247863*cM[23])-0.3927922024247863*cM[22]-0.4*cM[15]; 
  BigAEM(19,43) = (-0.31943828249997*cM[17])-0.4472135954999579*cM[16]-0.5*cM[12]; 
  BigAEM(19,45) = (-0.2981423969999719*cM[23])-0.4391550328268399*cM[15]; 
  BigAEM(19,46) = -0.3927922024247863*cM[18]; 
  BigAEM(19,47) = (-0.2981423969999719*cM[21])-0.3927922024247863*cM[18]-0.4391550328268399*cM[14]; 
  BigAEM(20,36) = -0.5*cM[20]; 
  BigAEM(20,37) = -0.4391550328268398*cM[16]; 
  BigAEM(20,38) = -0.5*cM[22]; 
  BigAEM(20,39) = -0.4391550328268399*cM[18]; 
  BigAEM(20,40) = (-0.2981423969999719*cM[20])-0.4391550328268398*cM[13]; 
  BigAEM(20,42) = (-0.2981423969999719*cM[22])-0.4391550328268399*cM[15]; 
  BigAEM(20,44) = (-0.2981423969999719*cM[16])-0.5*cM[12]; 
  BigAEM(20,46) = (-0.2981423969999719*cM[18])-0.5*cM[14]; 
  BigAEM(21,36) = -0.5*cM[21]; 
  BigAEM(21,37) = -0.5*cM[23]; 
  BigAEM(21,38) = -0.4391550328268398*cM[17]; 
  BigAEM(21,39) = -0.4391550328268399*cM[19]; 
  BigAEM(21,41) = (-0.2981423969999719*cM[21])-0.4391550328268398*cM[14]; 
  BigAEM(21,43) = (-0.2981423969999719*cM[23])-0.4391550328268399*cM[15]; 
  BigAEM(21,45) = (-0.2981423969999719*cM[17])-0.5*cM[12]; 
  BigAEM(21,47) = (-0.2981423969999719*cM[19])-0.5*cM[13]; 
  BigAEM(22,36) = -0.5*cM[22]; 
  BigAEM(22,37) = -0.4391550328268399*cM[18]; 
  BigAEM(22,38) = -0.5*cM[20]; 
  BigAEM(22,39) = -0.4391550328268399*cM[16]; 
  BigAEM(22,40) = (-0.2981423969999719*cM[22])-0.4391550328268399*cM[15]; 
  BigAEM(22,41) = -0.4472135954999579*cM[22]; 
  BigAEM(22,42) = (-0.2981423969999719*cM[20])-0.3927922024247863*cM[19]-0.4391550328268399*cM[13]; 
  BigAEM(22,43) = -0.3927922024247863*cM[18]; 
  BigAEM(22,44) = (-0.2981423969999719*cM[18])-0.5*cM[14]; 
  BigAEM(22,46) = (-0.4472135954999579*cM[17])-0.2981423969999719*cM[16]-0.5*cM[12]; 
  BigAEM(23,36) = -0.5*cM[23]; 
  BigAEM(23,37) = -0.5*cM[21]; 
  BigAEM(23,38) = -0.4391550328268399*cM[19]; 
  BigAEM(23,39) = -0.4391550328268399*cM[17]; 
  BigAEM(23,40) = -0.4472135954999579*cM[23]; 
  BigAEM(23,41) = (-0.2981423969999719*cM[23])-0.4391550328268399*cM[15]; 
  BigAEM(23,42) = -0.3927922024247863*cM[19]; 
  BigAEM(23,43) = (-0.2981423969999719*cM[21])-0.3927922024247863*cM[18]-0.4391550328268399*cM[14]; 
  BigAEM(23,45) = (-0.2981423969999719*cM[19])-0.5*cM[13]; 
  BigAEM(23,47) = (-0.2981423969999719*cM[17])-0.4472135954999579*cM[16]-0.5*cM[12]; 
 
  // ....... Block from weak multiply of uY and m1Y  .......... // 
  BigAEM(36,12) = 0.5*m1[12]; 
  BigAEM(36,13) = 0.5*m1[13]; 
  BigAEM(36,14) = 0.5*m1[14]; 
  BigAEM(36,15) = 0.5*m1[15]; 
  BigAEM(36,16) = 0.5*m1[16]; 
  BigAEM(36,17) = 0.5*m1[17]; 
  BigAEM(36,18) = 0.5*m1[18]; 
  BigAEM(36,19) = 0.5*m1[19]; 
  BigAEM(36,20) = 0.5*m1[20]; 
  BigAEM(36,21) = 0.5*m1[21]; 
  BigAEM(36,22) = 0.5*m1[22]; 
  BigAEM(36,23) = 0.5*m1[23]; 
  BigAEM(37,12) = 0.5*m1[13]; 
  BigAEM(37,13) = 0.4472135954999579*m1[16]+0.5*m1[12]; 
  BigAEM(37,14) = 0.5*m1[15]; 
  BigAEM(37,15) = 0.447213595499958*m1[18]+0.5*m1[14]; 
  BigAEM(37,16) = 0.4391550328268398*m1[20]+0.4472135954999579*m1[13]; 
  BigAEM(37,17) = 0.5000000000000001*m1[19]; 
  BigAEM(37,18) = 0.4391550328268399*m1[22]+0.447213595499958*m1[15]; 
  BigAEM(37,19) = 0.5000000000000001*m1[17]; 
  BigAEM(37,20) = 0.4391550328268398*m1[16]; 
  BigAEM(37,21) = 0.5*m1[23]; 
  BigAEM(37,22) = 0.4391550328268399*m1[18]; 
  BigAEM(37,23) = 0.5*m1[21]; 
  BigAEM(38,12) = 0.5*m1[14]; 
  BigAEM(38,13) = 0.5*m1[15]; 
  BigAEM(38,14) = 0.4472135954999579*m1[17]+0.5*m1[12]; 
  BigAEM(38,15) = 0.447213595499958*m1[19]+0.5*m1[13]; 
  BigAEM(38,16) = 0.5000000000000001*m1[18]; 
  BigAEM(38,17) = 0.4391550328268398*m1[21]+0.4472135954999579*m1[14]; 
  BigAEM(38,18) = 0.5000000000000001*m1[16]; 
  BigAEM(38,19) = 0.4391550328268399*m1[23]+0.447213595499958*m1[15]; 
  BigAEM(38,20) = 0.5*m1[22]; 
  BigAEM(38,21) = 0.4391550328268398*m1[17]; 
  BigAEM(38,22) = 0.5*m1[20]; 
  BigAEM(38,23) = 0.4391550328268399*m1[19]; 
  BigAEM(39,12) = 0.5*m1[15]; 
  BigAEM(39,13) = 0.447213595499958*m1[18]+0.5*m1[14]; 
  BigAEM(39,14) = 0.447213595499958*m1[19]+0.5*m1[13]; 
  BigAEM(39,15) = 0.4472135954999579*m1[17]+0.4472135954999579*m1[16]+0.5*m1[12]; 
  BigAEM(39,16) = 0.4391550328268399*m1[22]+0.4472135954999579*m1[15]; 
  BigAEM(39,17) = 0.4391550328268399*m1[23]+0.4472135954999579*m1[15]; 
  BigAEM(39,18) = 0.4391550328268399*m1[20]+0.4*m1[19]+0.447213595499958*m1[13]; 
  BigAEM(39,19) = 0.4391550328268399*m1[21]+0.4*m1[18]+0.447213595499958*m1[14]; 
  BigAEM(39,20) = 0.4391550328268399*m1[18]; 
  BigAEM(39,21) = 0.4391550328268399*m1[19]; 
  BigAEM(39,22) = 0.4391550328268399*m1[16]; 
  BigAEM(39,23) = 0.4391550328268399*m1[17]; 
  BigAEM(40,12) = 0.5*m1[16]; 
  BigAEM(40,13) = 0.4391550328268398*m1[20]+0.4472135954999579*m1[13]; 
  BigAEM(40,14) = 0.5000000000000001*m1[18]; 
  BigAEM(40,15) = 0.4391550328268399*m1[22]+0.4472135954999579*m1[15]; 
  BigAEM(40,16) = 0.31943828249997*m1[16]+0.5*m1[12]; 
  BigAEM(40,18) = 0.31943828249997*m1[18]+0.5000000000000001*m1[14]; 
  BigAEM(40,19) = 0.4472135954999579*m1[19]; 
  BigAEM(40,20) = 0.2981423969999719*m1[20]+0.4391550328268398*m1[13]; 
  BigAEM(40,22) = 0.2981423969999719*m1[22]+0.4391550328268399*m1[15]; 
  BigAEM(40,23) = 0.4472135954999579*m1[23]; 
  BigAEM(41,12) = 0.5*m1[17]; 
  BigAEM(41,13) = 0.5000000000000001*m1[19]; 
  BigAEM(41,14) = 0.4391550328268398*m1[21]+0.4472135954999579*m1[14]; 
  BigAEM(41,15) = 0.4391550328268399*m1[23]+0.4472135954999579*m1[15]; 
  BigAEM(41,17) = 0.31943828249997*m1[17]+0.5*m1[12]; 
  BigAEM(41,18) = 0.4472135954999579*m1[18]; 
  BigAEM(41,19) = 0.31943828249997*m1[19]+0.5000000000000001*m1[13]; 
  BigAEM(41,21) = 0.2981423969999719*m1[21]+0.4391550328268398*m1[14]; 
  BigAEM(41,22) = 0.4472135954999579*m1[22]; 
  BigAEM(41,23) = 0.2981423969999719*m1[23]+0.4391550328268399*m1[15]; 
  BigAEM(42,12) = 0.5*m1[18]; 
  BigAEM(42,13) = 0.4391550328268399*m1[22]+0.447213595499958*m1[15]; 
  BigAEM(42,14) = 0.5000000000000001*m1[16]; 
  BigAEM(42,15) = 0.4391550328268399*m1[20]+0.4*m1[19]+0.447213595499958*m1[13]; 
  BigAEM(42,16) = 0.31943828249997*m1[18]+0.5000000000000001*m1[14]; 
  BigAEM(42,17) = 0.4472135954999579*m1[18]; 
  BigAEM(42,18) = 0.4472135954999579*m1[17]+0.31943828249997*m1[16]+0.5*m1[12]; 
  BigAEM(42,19) = 0.3927922024247863*m1[23]+0.3927922024247863*m1[22]+0.4*m1[15]; 
  BigAEM(42,20) = 0.2981423969999719*m1[22]+0.4391550328268399*m1[15]; 
  BigAEM(42,22) = 0.2981423969999719*m1[20]+0.3927922024247863*m1[19]+0.4391550328268399*m1[13]; 
  BigAEM(42,23) = 0.3927922024247863*m1[19]; 
  BigAEM(43,12) = 0.5*m1[19]; 
  BigAEM(43,13) = 0.5000000000000001*m1[17]; 
  BigAEM(43,14) = 0.4391550328268399*m1[23]+0.447213595499958*m1[15]; 
  BigAEM(43,15) = 0.4391550328268399*m1[21]+0.4*m1[18]+0.447213595499958*m1[14]; 
  BigAEM(43,16) = 0.4472135954999579*m1[19]; 
  BigAEM(43,17) = 0.31943828249997*m1[19]+0.5000000000000001*m1[13]; 
  BigAEM(43,18) = 0.3927922024247863*m1[23]+0.3927922024247863*m1[22]+0.4*m1[15]; 
  BigAEM(43,19) = 0.31943828249997*m1[17]+0.4472135954999579*m1[16]+0.5*m1[12]; 
  BigAEM(43,21) = 0.2981423969999719*m1[23]+0.4391550328268399*m1[15]; 
  BigAEM(43,22) = 0.3927922024247863*m1[18]; 
  BigAEM(43,23) = 0.2981423969999719*m1[21]+0.3927922024247863*m1[18]+0.4391550328268399*m1[14]; 
  BigAEM(44,12) = 0.5*m1[20]; 
  BigAEM(44,13) = 0.4391550328268398*m1[16]; 
  BigAEM(44,14) = 0.5*m1[22]; 
  BigAEM(44,15) = 0.4391550328268399*m1[18]; 
  BigAEM(44,16) = 0.2981423969999719*m1[20]+0.4391550328268398*m1[13]; 
  BigAEM(44,18) = 0.2981423969999719*m1[22]+0.4391550328268399*m1[15]; 
  BigAEM(44,20) = 0.2981423969999719*m1[16]+0.5*m1[12]; 
  BigAEM(44,22) = 0.2981423969999719*m1[18]+0.5*m1[14]; 
  BigAEM(45,12) = 0.5*m1[21]; 
  BigAEM(45,13) = 0.5*m1[23]; 
  BigAEM(45,14) = 0.4391550328268398*m1[17]; 
  BigAEM(45,15) = 0.4391550328268399*m1[19]; 
  BigAEM(45,17) = 0.2981423969999719*m1[21]+0.4391550328268398*m1[14]; 
  BigAEM(45,19) = 0.2981423969999719*m1[23]+0.4391550328268399*m1[15]; 
  BigAEM(45,21) = 0.2981423969999719*m1[17]+0.5*m1[12]; 
  BigAEM(45,23) = 0.2981423969999719*m1[19]+0.5*m1[13]; 
  BigAEM(46,12) = 0.5*m1[22]; 
  BigAEM(46,13) = 0.4391550328268399*m1[18]; 
  BigAEM(46,14) = 0.5*m1[20]; 
  BigAEM(46,15) = 0.4391550328268399*m1[16]; 
  BigAEM(46,16) = 0.2981423969999719*m1[22]+0.4391550328268399*m1[15]; 
  BigAEM(46,17) = 0.4472135954999579*m1[22]; 
  BigAEM(46,18) = 0.2981423969999719*m1[20]+0.3927922024247863*m1[19]+0.4391550328268399*m1[13]; 
  BigAEM(46,19) = 0.3927922024247863*m1[18]; 
  BigAEM(46,20) = 0.2981423969999719*m1[18]+0.5*m1[14]; 
  BigAEM(46,22) = 0.4472135954999579*m1[17]+0.2981423969999719*m1[16]+0.5*m1[12]; 
  BigAEM(47,12) = 0.5*m1[23]; 
  BigAEM(47,13) = 0.5*m1[21]; 
  BigAEM(47,14) = 0.4391550328268399*m1[19]; 
  BigAEM(47,15) = 0.4391550328268399*m1[17]; 
  BigAEM(47,16) = 0.4472135954999579*m1[23]; 
  BigAEM(47,17) = 0.2981423969999719*m1[23]+0.4391550328268399*m1[15]; 
  BigAEM(47,18) = 0.3927922024247863*m1[19]; 
  BigAEM(47,19) = 0.2981423969999719*m1[21]+0.3927922024247863*m1[18]+0.4391550328268399*m1[14]; 
  BigAEM(47,21) = 0.2981423969999719*m1[19]+0.5*m1[13]; 
  BigAEM(47,23) = 0.2981423969999719*m1[17]+0.4472135954999579*m1[16]+0.5*m1[12]; 
 
  // ....... Block from weak multiply of uZ and m0  .......... // 
  BigAEM(24,24) = 0.5*m0[0]; 
  BigAEM(24,25) = 0.5*m0[1]; 
  BigAEM(24,26) = 0.5*m0[2]; 
  BigAEM(24,27) = 0.5*m0[3]; 
  BigAEM(24,28) = 0.5*m0[4]; 
  BigAEM(24,29) = 0.5*m0[5]; 
  BigAEM(24,30) = 0.5*m0[6]; 
  BigAEM(24,31) = 0.5*m0[7]; 
  BigAEM(24,32) = 0.5*m0[8]; 
  BigAEM(24,33) = 0.5*m0[9]; 
  BigAEM(24,34) = 0.5*m0[10]; 
  BigAEM(24,35) = 0.5*m0[11]; 
  BigAEM(25,24) = 0.5*m0[1]; 
  BigAEM(25,25) = 0.4472135954999579*m0[4]+0.5*m0[0]; 
  BigAEM(25,26) = 0.5*m0[3]; 
  BigAEM(25,27) = 0.447213595499958*m0[6]+0.5*m0[2]; 
  BigAEM(25,28) = 0.4391550328268398*m0[8]+0.4472135954999579*m0[1]; 
  BigAEM(25,29) = 0.5000000000000001*m0[7]; 
  BigAEM(25,30) = 0.4391550328268399*m0[10]+0.447213595499958*m0[3]; 
  BigAEM(25,31) = 0.5000000000000001*m0[5]; 
  BigAEM(25,32) = 0.4391550328268398*m0[4]; 
  BigAEM(25,33) = 0.5*m0[11]; 
  BigAEM(25,34) = 0.4391550328268399*m0[6]; 
  BigAEM(25,35) = 0.5*m0[9]; 
  BigAEM(26,24) = 0.5*m0[2]; 
  BigAEM(26,25) = 0.5*m0[3]; 
  BigAEM(26,26) = 0.4472135954999579*m0[5]+0.5*m0[0]; 
  BigAEM(26,27) = 0.447213595499958*m0[7]+0.5*m0[1]; 
  BigAEM(26,28) = 0.5000000000000001*m0[6]; 
  BigAEM(26,29) = 0.4391550328268398*m0[9]+0.4472135954999579*m0[2]; 
  BigAEM(26,30) = 0.5000000000000001*m0[4]; 
  BigAEM(26,31) = 0.4391550328268399*m0[11]+0.447213595499958*m0[3]; 
  BigAEM(26,32) = 0.5*m0[10]; 
  BigAEM(26,33) = 0.4391550328268398*m0[5]; 
  BigAEM(26,34) = 0.5*m0[8]; 
  BigAEM(26,35) = 0.4391550328268399*m0[7]; 
  BigAEM(27,24) = 0.5*m0[3]; 
  BigAEM(27,25) = 0.447213595499958*m0[6]+0.5*m0[2]; 
  BigAEM(27,26) = 0.447213595499958*m0[7]+0.5*m0[1]; 
  BigAEM(27,27) = 0.4472135954999579*m0[5]+0.4472135954999579*m0[4]+0.5*m0[0]; 
  BigAEM(27,28) = 0.4391550328268399*m0[10]+0.4472135954999579*m0[3]; 
  BigAEM(27,29) = 0.4391550328268399*m0[11]+0.4472135954999579*m0[3]; 
  BigAEM(27,30) = 0.4391550328268399*m0[8]+0.4*m0[7]+0.447213595499958*m0[1]; 
  BigAEM(27,31) = 0.4391550328268399*m0[9]+0.4*m0[6]+0.447213595499958*m0[2]; 
  BigAEM(27,32) = 0.4391550328268399*m0[6]; 
  BigAEM(27,33) = 0.4391550328268399*m0[7]; 
  BigAEM(27,34) = 0.4391550328268399*m0[4]; 
  BigAEM(27,35) = 0.4391550328268399*m0[5]; 
  BigAEM(28,24) = 0.5*m0[4]; 
  BigAEM(28,25) = 0.4391550328268398*m0[8]+0.4472135954999579*m0[1]; 
  BigAEM(28,26) = 0.5000000000000001*m0[6]; 
  BigAEM(28,27) = 0.4391550328268399*m0[10]+0.4472135954999579*m0[3]; 
  BigAEM(28,28) = 0.31943828249997*m0[4]+0.5*m0[0]; 
  BigAEM(28,30) = 0.31943828249997*m0[6]+0.5000000000000001*m0[2]; 
  BigAEM(28,31) = 0.4472135954999579*m0[7]; 
  BigAEM(28,32) = 0.2981423969999719*m0[8]+0.4391550328268398*m0[1]; 
  BigAEM(28,34) = 0.2981423969999719*m0[10]+0.4391550328268399*m0[3]; 
  BigAEM(28,35) = 0.4472135954999579*m0[11]; 
  BigAEM(29,24) = 0.5*m0[5]; 
  BigAEM(29,25) = 0.5000000000000001*m0[7]; 
  BigAEM(29,26) = 0.4391550328268398*m0[9]+0.4472135954999579*m0[2]; 
  BigAEM(29,27) = 0.4391550328268399*m0[11]+0.4472135954999579*m0[3]; 
  BigAEM(29,29) = 0.31943828249997*m0[5]+0.5*m0[0]; 
  BigAEM(29,30) = 0.4472135954999579*m0[6]; 
  BigAEM(29,31) = 0.31943828249997*m0[7]+0.5000000000000001*m0[1]; 
  BigAEM(29,33) = 0.2981423969999719*m0[9]+0.4391550328268398*m0[2]; 
  BigAEM(29,34) = 0.4472135954999579*m0[10]; 
  BigAEM(29,35) = 0.2981423969999719*m0[11]+0.4391550328268399*m0[3]; 
  BigAEM(30,24) = 0.5*m0[6]; 
  BigAEM(30,25) = 0.4391550328268399*m0[10]+0.447213595499958*m0[3]; 
  BigAEM(30,26) = 0.5000000000000001*m0[4]; 
  BigAEM(30,27) = 0.4391550328268399*m0[8]+0.4*m0[7]+0.447213595499958*m0[1]; 
  BigAEM(30,28) = 0.31943828249997*m0[6]+0.5000000000000001*m0[2]; 
  BigAEM(30,29) = 0.4472135954999579*m0[6]; 
  BigAEM(30,30) = 0.4472135954999579*m0[5]+0.31943828249997*m0[4]+0.5*m0[0]; 
  BigAEM(30,31) = 0.3927922024247863*m0[11]+0.3927922024247863*m0[10]+0.4*m0[3]; 
  BigAEM(30,32) = 0.2981423969999719*m0[10]+0.4391550328268399*m0[3]; 
  BigAEM(30,34) = 0.2981423969999719*m0[8]+0.3927922024247863*m0[7]+0.4391550328268399*m0[1]; 
  BigAEM(30,35) = 0.3927922024247863*m0[7]; 
  BigAEM(31,24) = 0.5*m0[7]; 
  BigAEM(31,25) = 0.5000000000000001*m0[5]; 
  BigAEM(31,26) = 0.4391550328268399*m0[11]+0.447213595499958*m0[3]; 
  BigAEM(31,27) = 0.4391550328268399*m0[9]+0.4*m0[6]+0.447213595499958*m0[2]; 
  BigAEM(31,28) = 0.4472135954999579*m0[7]; 
  BigAEM(31,29) = 0.31943828249997*m0[7]+0.5000000000000001*m0[1]; 
  BigAEM(31,30) = 0.3927922024247863*m0[11]+0.3927922024247863*m0[10]+0.4*m0[3]; 
  BigAEM(31,31) = 0.31943828249997*m0[5]+0.4472135954999579*m0[4]+0.5*m0[0]; 
  BigAEM(31,33) = 0.2981423969999719*m0[11]+0.4391550328268399*m0[3]; 
  BigAEM(31,34) = 0.3927922024247863*m0[6]; 
  BigAEM(31,35) = 0.2981423969999719*m0[9]+0.3927922024247863*m0[6]+0.4391550328268399*m0[2]; 
  BigAEM(32,24) = 0.5*m0[8]; 
  BigAEM(32,25) = 0.4391550328268398*m0[4]; 
  BigAEM(32,26) = 0.5*m0[10]; 
  BigAEM(32,27) = 0.4391550328268399*m0[6]; 
  BigAEM(32,28) = 0.2981423969999719*m0[8]+0.4391550328268398*m0[1]; 
  BigAEM(32,30) = 0.2981423969999719*m0[10]+0.4391550328268399*m0[3]; 
  BigAEM(32,32) = 0.2981423969999719*m0[4]+0.5*m0[0]; 
  BigAEM(32,34) = 0.2981423969999719*m0[6]+0.5*m0[2]; 
  BigAEM(33,24) = 0.5*m0[9]; 
  BigAEM(33,25) = 0.5*m0[11]; 
  BigAEM(33,26) = 0.4391550328268398*m0[5]; 
  BigAEM(33,27) = 0.4391550328268399*m0[7]; 
  BigAEM(33,29) = 0.2981423969999719*m0[9]+0.4391550328268398*m0[2]; 
  BigAEM(33,31) = 0.2981423969999719*m0[11]+0.4391550328268399*m0[3]; 
  BigAEM(33,33) = 0.2981423969999719*m0[5]+0.5*m0[0]; 
  BigAEM(33,35) = 0.2981423969999719*m0[7]+0.5*m0[1]; 
  BigAEM(34,24) = 0.5*m0[10]; 
  BigAEM(34,25) = 0.4391550328268399*m0[6]; 
  BigAEM(34,26) = 0.5*m0[8]; 
  BigAEM(34,27) = 0.4391550328268399*m0[4]; 
  BigAEM(34,28) = 0.2981423969999719*m0[10]+0.4391550328268399*m0[3]; 
  BigAEM(34,29) = 0.4472135954999579*m0[10]; 
  BigAEM(34,30) = 0.2981423969999719*m0[8]+0.3927922024247863*m0[7]+0.4391550328268399*m0[1]; 
  BigAEM(34,31) = 0.3927922024247863*m0[6]; 
  BigAEM(34,32) = 0.2981423969999719*m0[6]+0.5*m0[2]; 
  BigAEM(34,34) = 0.4472135954999579*m0[5]+0.2981423969999719*m0[4]+0.5*m0[0]; 
  BigAEM(35,24) = 0.5*m0[11]; 
  BigAEM(35,25) = 0.5*m0[9]; 
  BigAEM(35,26) = 0.4391550328268399*m0[7]; 
  BigAEM(35,27) = 0.4391550328268399*m0[5]; 
  BigAEM(35,28) = 0.4472135954999579*m0[11]; 
  BigAEM(35,29) = 0.2981423969999719*m0[11]+0.4391550328268399*m0[3]; 
  BigAEM(35,30) = 0.3927922024247863*m0[7]; 
  BigAEM(35,31) = 0.2981423969999719*m0[9]+0.3927922024247863*m0[6]+0.4391550328268399*m0[2]; 
  BigAEM(35,33) = 0.2981423969999719*m0[7]+0.5*m0[1]; 
  BigAEM(35,35) = 0.2981423969999719*m0[5]+0.4472135954999579*m0[4]+0.5*m0[0]; 
 
  // ....... Block from correction to uZ .......... // 
  BigAEM(24,36) = -0.5*cM[24]; 
  BigAEM(24,37) = -0.5*cM[25]; 
  BigAEM(24,38) = -0.5*cM[26]; 
  BigAEM(24,39) = -0.5*cM[27]; 
  BigAEM(24,40) = -0.5*cM[28]; 
  BigAEM(24,41) = -0.5*cM[29]; 
  BigAEM(24,42) = -0.5*cM[30]; 
  BigAEM(24,43) = -0.5*cM[31]; 
  BigAEM(24,44) = -0.5*cM[32]; 
  BigAEM(24,45) = -0.5*cM[33]; 
  BigAEM(24,46) = -0.5*cM[34]; 
  BigAEM(24,47) = -0.5*cM[35]; 
  BigAEM(25,36) = -0.5*cM[25]; 
  BigAEM(25,37) = (-0.4472135954999579*cM[28])-0.5*cM[24]; 
  BigAEM(25,38) = -0.5*cM[27]; 
  BigAEM(25,39) = (-0.447213595499958*cM[30])-0.5*cM[26]; 
  BigAEM(25,40) = (-0.4391550328268398*cM[32])-0.4472135954999579*cM[25]; 
  BigAEM(25,41) = -0.5000000000000001*cM[31]; 
  BigAEM(25,42) = (-0.4391550328268399*cM[34])-0.447213595499958*cM[27]; 
  BigAEM(25,43) = -0.5000000000000001*cM[29]; 
  BigAEM(25,44) = -0.4391550328268398*cM[28]; 
  BigAEM(25,45) = -0.5*cM[35]; 
  BigAEM(25,46) = -0.4391550328268399*cM[30]; 
  BigAEM(25,47) = -0.5*cM[33]; 
  BigAEM(26,36) = -0.5*cM[26]; 
  BigAEM(26,37) = -0.5*cM[27]; 
  BigAEM(26,38) = (-0.4472135954999579*cM[29])-0.5*cM[24]; 
  BigAEM(26,39) = (-0.447213595499958*cM[31])-0.5*cM[25]; 
  BigAEM(26,40) = -0.5000000000000001*cM[30]; 
  BigAEM(26,41) = (-0.4391550328268398*cM[33])-0.4472135954999579*cM[26]; 
  BigAEM(26,42) = -0.5000000000000001*cM[28]; 
  BigAEM(26,43) = (-0.4391550328268399*cM[35])-0.447213595499958*cM[27]; 
  BigAEM(26,44) = -0.5*cM[34]; 
  BigAEM(26,45) = -0.4391550328268398*cM[29]; 
  BigAEM(26,46) = -0.5*cM[32]; 
  BigAEM(26,47) = -0.4391550328268399*cM[31]; 
  BigAEM(27,36) = -0.5*cM[27]; 
  BigAEM(27,37) = (-0.447213595499958*cM[30])-0.5*cM[26]; 
  BigAEM(27,38) = (-0.447213595499958*cM[31])-0.5*cM[25]; 
  BigAEM(27,39) = (-0.4472135954999579*cM[29])-0.4472135954999579*cM[28]-0.5*cM[24]; 
  BigAEM(27,40) = (-0.4391550328268399*cM[34])-0.4472135954999579*cM[27]; 
  BigAEM(27,41) = (-0.4391550328268399*cM[35])-0.4472135954999579*cM[27]; 
  BigAEM(27,42) = (-0.4391550328268399*cM[32])-0.4*cM[31]-0.447213595499958*cM[25]; 
  BigAEM(27,43) = (-0.4391550328268399*cM[33])-0.4*cM[30]-0.447213595499958*cM[26]; 
  BigAEM(27,44) = -0.4391550328268399*cM[30]; 
  BigAEM(27,45) = -0.4391550328268399*cM[31]; 
  BigAEM(27,46) = -0.4391550328268399*cM[28]; 
  BigAEM(27,47) = -0.4391550328268399*cM[29]; 
  BigAEM(28,36) = -0.5*cM[28]; 
  BigAEM(28,37) = (-0.4391550328268398*cM[32])-0.4472135954999579*cM[25]; 
  BigAEM(28,38) = -0.5000000000000001*cM[30]; 
  BigAEM(28,39) = (-0.4391550328268399*cM[34])-0.4472135954999579*cM[27]; 
  BigAEM(28,40) = (-0.31943828249997*cM[28])-0.5*cM[24]; 
  BigAEM(28,42) = (-0.31943828249997*cM[30])-0.5000000000000001*cM[26]; 
  BigAEM(28,43) = -0.4472135954999579*cM[31]; 
  BigAEM(28,44) = (-0.2981423969999719*cM[32])-0.4391550328268398*cM[25]; 
  BigAEM(28,46) = (-0.2981423969999719*cM[34])-0.4391550328268399*cM[27]; 
  BigAEM(28,47) = -0.4472135954999579*cM[35]; 
  BigAEM(29,36) = -0.5*cM[29]; 
  BigAEM(29,37) = -0.5000000000000001*cM[31]; 
  BigAEM(29,38) = (-0.4391550328268398*cM[33])-0.4472135954999579*cM[26]; 
  BigAEM(29,39) = (-0.4391550328268399*cM[35])-0.4472135954999579*cM[27]; 
  BigAEM(29,41) = (-0.31943828249997*cM[29])-0.5*cM[24]; 
  BigAEM(29,42) = -0.4472135954999579*cM[30]; 
  BigAEM(29,43) = (-0.31943828249997*cM[31])-0.5000000000000001*cM[25]; 
  BigAEM(29,45) = (-0.2981423969999719*cM[33])-0.4391550328268398*cM[26]; 
  BigAEM(29,46) = -0.4472135954999579*cM[34]; 
  BigAEM(29,47) = (-0.2981423969999719*cM[35])-0.4391550328268399*cM[27]; 
  BigAEM(30,36) = -0.5*cM[30]; 
  BigAEM(30,37) = (-0.4391550328268399*cM[34])-0.447213595499958*cM[27]; 
  BigAEM(30,38) = -0.5000000000000001*cM[28]; 
  BigAEM(30,39) = (-0.4391550328268399*cM[32])-0.4*cM[31]-0.447213595499958*cM[25]; 
  BigAEM(30,40) = (-0.31943828249997*cM[30])-0.5000000000000001*cM[26]; 
  BigAEM(30,41) = -0.4472135954999579*cM[30]; 
  BigAEM(30,42) = (-0.4472135954999579*cM[29])-0.31943828249997*cM[28]-0.5*cM[24]; 
  BigAEM(30,43) = (-0.3927922024247863*cM[35])-0.3927922024247863*cM[34]-0.4*cM[27]; 
  BigAEM(30,44) = (-0.2981423969999719*cM[34])-0.4391550328268399*cM[27]; 
  BigAEM(30,46) = (-0.2981423969999719*cM[32])-0.3927922024247863*cM[31]-0.4391550328268399*cM[25]; 
  BigAEM(30,47) = -0.3927922024247863*cM[31]; 
  BigAEM(31,36) = -0.5*cM[31]; 
  BigAEM(31,37) = -0.5000000000000001*cM[29]; 
  BigAEM(31,38) = (-0.4391550328268399*cM[35])-0.447213595499958*cM[27]; 
  BigAEM(31,39) = (-0.4391550328268399*cM[33])-0.4*cM[30]-0.447213595499958*cM[26]; 
  BigAEM(31,40) = -0.4472135954999579*cM[31]; 
  BigAEM(31,41) = (-0.31943828249997*cM[31])-0.5000000000000001*cM[25]; 
  BigAEM(31,42) = (-0.3927922024247863*cM[35])-0.3927922024247863*cM[34]-0.4*cM[27]; 
  BigAEM(31,43) = (-0.31943828249997*cM[29])-0.4472135954999579*cM[28]-0.5*cM[24]; 
  BigAEM(31,45) = (-0.2981423969999719*cM[35])-0.4391550328268399*cM[27]; 
  BigAEM(31,46) = -0.3927922024247863*cM[30]; 
  BigAEM(31,47) = (-0.2981423969999719*cM[33])-0.3927922024247863*cM[30]-0.4391550328268399*cM[26]; 
  BigAEM(32,36) = -0.5*cM[32]; 
  BigAEM(32,37) = -0.4391550328268398*cM[28]; 
  BigAEM(32,38) = -0.5*cM[34]; 
  BigAEM(32,39) = -0.4391550328268399*cM[30]; 
  BigAEM(32,40) = (-0.2981423969999719*cM[32])-0.4391550328268398*cM[25]; 
  BigAEM(32,42) = (-0.2981423969999719*cM[34])-0.4391550328268399*cM[27]; 
  BigAEM(32,44) = (-0.2981423969999719*cM[28])-0.5*cM[24]; 
  BigAEM(32,46) = (-0.2981423969999719*cM[30])-0.5*cM[26]; 
  BigAEM(33,36) = -0.5*cM[33]; 
  BigAEM(33,37) = -0.5*cM[35]; 
  BigAEM(33,38) = -0.4391550328268398*cM[29]; 
  BigAEM(33,39) = -0.4391550328268399*cM[31]; 
  BigAEM(33,41) = (-0.2981423969999719*cM[33])-0.4391550328268398*cM[26]; 
  BigAEM(33,43) = (-0.2981423969999719*cM[35])-0.4391550328268399*cM[27]; 
  BigAEM(33,45) = (-0.2981423969999719*cM[29])-0.5*cM[24]; 
  BigAEM(33,47) = (-0.2981423969999719*cM[31])-0.5*cM[25]; 
  BigAEM(34,36) = -0.5*cM[34]; 
  BigAEM(34,37) = -0.4391550328268399*cM[30]; 
  BigAEM(34,38) = -0.5*cM[32]; 
  BigAEM(34,39) = -0.4391550328268399*cM[28]; 
  BigAEM(34,40) = (-0.2981423969999719*cM[34])-0.4391550328268399*cM[27]; 
  BigAEM(34,41) = -0.4472135954999579*cM[34]; 
  BigAEM(34,42) = (-0.2981423969999719*cM[32])-0.3927922024247863*cM[31]-0.4391550328268399*cM[25]; 
  BigAEM(34,43) = -0.3927922024247863*cM[30]; 
  BigAEM(34,44) = (-0.2981423969999719*cM[30])-0.5*cM[26]; 
  BigAEM(34,46) = (-0.4472135954999579*cM[29])-0.2981423969999719*cM[28]-0.5*cM[24]; 
  BigAEM(35,36) = -0.5*cM[35]; 
  BigAEM(35,37) = -0.5*cM[33]; 
  BigAEM(35,38) = -0.4391550328268399*cM[31]; 
  BigAEM(35,39) = -0.4391550328268399*cM[29]; 
  BigAEM(35,40) = -0.4472135954999579*cM[35]; 
  BigAEM(35,41) = (-0.2981423969999719*cM[35])-0.4391550328268399*cM[27]; 
  BigAEM(35,42) = -0.3927922024247863*cM[31]; 
  BigAEM(35,43) = (-0.2981423969999719*cM[33])-0.3927922024247863*cM[30]-0.4391550328268399*cM[26]; 
  BigAEM(35,45) = (-0.2981423969999719*cM[31])-0.5*cM[25]; 
  BigAEM(35,47) = (-0.2981423969999719*cM[29])-0.4472135954999579*cM[28]-0.5*cM[24]; 
 
  // ....... Block from weak multiply of uZ and m1Z  .......... // 
  BigAEM(36,24) = 0.5*m1[24]; 
  BigAEM(36,25) = 0.5*m1[25]; 
  BigAEM(36,26) = 0.5*m1[26]; 
  BigAEM(36,27) = 0.5*m1[27]; 
  BigAEM(36,28) = 0.5*m1[28]; 
  BigAEM(36,29) = 0.5*m1[29]; 
  BigAEM(36,30) = 0.5*m1[30]; 
  BigAEM(36,31) = 0.5*m1[31]; 
  BigAEM(36,32) = 0.5*m1[32]; 
  BigAEM(36,33) = 0.5*m1[33]; 
  BigAEM(36,34) = 0.5*m1[34]; 
  BigAEM(36,35) = 0.5*m1[35]; 
  BigAEM(37,24) = 0.5*m1[25]; 
  BigAEM(37,25) = 0.4472135954999579*m1[28]+0.5*m1[24]; 
  BigAEM(37,26) = 0.5*m1[27]; 
  BigAEM(37,27) = 0.447213595499958*m1[30]+0.5*m1[26]; 
  BigAEM(37,28) = 0.4391550328268398*m1[32]+0.4472135954999579*m1[25]; 
  BigAEM(37,29) = 0.5000000000000001*m1[31]; 
  BigAEM(37,30) = 0.4391550328268399*m1[34]+0.447213595499958*m1[27]; 
  BigAEM(37,31) = 0.5000000000000001*m1[29]; 
  BigAEM(37,32) = 0.4391550328268398*m1[28]; 
  BigAEM(37,33) = 0.5*m1[35]; 
  BigAEM(37,34) = 0.4391550328268399*m1[30]; 
  BigAEM(37,35) = 0.5*m1[33]; 
  BigAEM(38,24) = 0.5*m1[26]; 
  BigAEM(38,25) = 0.5*m1[27]; 
  BigAEM(38,26) = 0.4472135954999579*m1[29]+0.5*m1[24]; 
  BigAEM(38,27) = 0.447213595499958*m1[31]+0.5*m1[25]; 
  BigAEM(38,28) = 0.5000000000000001*m1[30]; 
  BigAEM(38,29) = 0.4391550328268398*m1[33]+0.4472135954999579*m1[26]; 
  BigAEM(38,30) = 0.5000000000000001*m1[28]; 
  BigAEM(38,31) = 0.4391550328268399*m1[35]+0.447213595499958*m1[27]; 
  BigAEM(38,32) = 0.5*m1[34]; 
  BigAEM(38,33) = 0.4391550328268398*m1[29]; 
  BigAEM(38,34) = 0.5*m1[32]; 
  BigAEM(38,35) = 0.4391550328268399*m1[31]; 
  BigAEM(39,24) = 0.5*m1[27]; 
  BigAEM(39,25) = 0.447213595499958*m1[30]+0.5*m1[26]; 
  BigAEM(39,26) = 0.447213595499958*m1[31]+0.5*m1[25]; 
  BigAEM(39,27) = 0.4472135954999579*m1[29]+0.4472135954999579*m1[28]+0.5*m1[24]; 
  BigAEM(39,28) = 0.4391550328268399*m1[34]+0.4472135954999579*m1[27]; 
  BigAEM(39,29) = 0.4391550328268399*m1[35]+0.4472135954999579*m1[27]; 
  BigAEM(39,30) = 0.4391550328268399*m1[32]+0.4*m1[31]+0.447213595499958*m1[25]; 
  BigAEM(39,31) = 0.4391550328268399*m1[33]+0.4*m1[30]+0.447213595499958*m1[26]; 
  BigAEM(39,32) = 0.4391550328268399*m1[30]; 
  BigAEM(39,33) = 0.4391550328268399*m1[31]; 
  BigAEM(39,34) = 0.4391550328268399*m1[28]; 
  BigAEM(39,35) = 0.4391550328268399*m1[29]; 
  BigAEM(40,24) = 0.5*m1[28]; 
  BigAEM(40,25) = 0.4391550328268398*m1[32]+0.4472135954999579*m1[25]; 
  BigAEM(40,26) = 0.5000000000000001*m1[30]; 
  BigAEM(40,27) = 0.4391550328268399*m1[34]+0.4472135954999579*m1[27]; 
  BigAEM(40,28) = 0.31943828249997*m1[28]+0.5*m1[24]; 
  BigAEM(40,30) = 0.31943828249997*m1[30]+0.5000000000000001*m1[26]; 
  BigAEM(40,31) = 0.4472135954999579*m1[31]; 
  BigAEM(40,32) = 0.2981423969999719*m1[32]+0.4391550328268398*m1[25]; 
  BigAEM(40,34) = 0.2981423969999719*m1[34]+0.4391550328268399*m1[27]; 
  BigAEM(40,35) = 0.4472135954999579*m1[35]; 
  BigAEM(41,24) = 0.5*m1[29]; 
  BigAEM(41,25) = 0.5000000000000001*m1[31]; 
  BigAEM(41,26) = 0.4391550328268398*m1[33]+0.4472135954999579*m1[26]; 
  BigAEM(41,27) = 0.4391550328268399*m1[35]+0.4472135954999579*m1[27]; 
  BigAEM(41,29) = 0.31943828249997*m1[29]+0.5*m1[24]; 
  BigAEM(41,30) = 0.4472135954999579*m1[30]; 
  BigAEM(41,31) = 0.31943828249997*m1[31]+0.5000000000000001*m1[25]; 
  BigAEM(41,33) = 0.2981423969999719*m1[33]+0.4391550328268398*m1[26]; 
  BigAEM(41,34) = 0.4472135954999579*m1[34]; 
  BigAEM(41,35) = 0.2981423969999719*m1[35]+0.4391550328268399*m1[27]; 
  BigAEM(42,24) = 0.5*m1[30]; 
  BigAEM(42,25) = 0.4391550328268399*m1[34]+0.447213595499958*m1[27]; 
  BigAEM(42,26) = 0.5000000000000001*m1[28]; 
  BigAEM(42,27) = 0.4391550328268399*m1[32]+0.4*m1[31]+0.447213595499958*m1[25]; 
  BigAEM(42,28) = 0.31943828249997*m1[30]+0.5000000000000001*m1[26]; 
  BigAEM(42,29) = 0.4472135954999579*m1[30]; 
  BigAEM(42,30) = 0.4472135954999579*m1[29]+0.31943828249997*m1[28]+0.5*m1[24]; 
  BigAEM(42,31) = 0.3927922024247863*m1[35]+0.3927922024247863*m1[34]+0.4*m1[27]; 
  BigAEM(42,32) = 0.2981423969999719*m1[34]+0.4391550328268399*m1[27]; 
  BigAEM(42,34) = 0.2981423969999719*m1[32]+0.3927922024247863*m1[31]+0.4391550328268399*m1[25]; 
  BigAEM(42,35) = 0.3927922024247863*m1[31]; 
  BigAEM(43,24) = 0.5*m1[31]; 
  BigAEM(43,25) = 0.5000000000000001*m1[29]; 
  BigAEM(43,26) = 0.4391550328268399*m1[35]+0.447213595499958*m1[27]; 
  BigAEM(43,27) = 0.4391550328268399*m1[33]+0.4*m1[30]+0.447213595499958*m1[26]; 
  BigAEM(43,28) = 0.4472135954999579*m1[31]; 
  BigAEM(43,29) = 0.31943828249997*m1[31]+0.5000000000000001*m1[25]; 
  BigAEM(43,30) = 0.3927922024247863*m1[35]+0.3927922024247863*m1[34]+0.4*m1[27]; 
  BigAEM(43,31) = 0.31943828249997*m1[29]+0.4472135954999579*m1[28]+0.5*m1[24]; 
  BigAEM(43,33) = 0.2981423969999719*m1[35]+0.4391550328268399*m1[27]; 
  BigAEM(43,34) = 0.3927922024247863*m1[30]; 
  BigAEM(43,35) = 0.2981423969999719*m1[33]+0.3927922024247863*m1[30]+0.4391550328268399*m1[26]; 
  BigAEM(44,24) = 0.5*m1[32]; 
  BigAEM(44,25) = 0.4391550328268398*m1[28]; 
  BigAEM(44,26) = 0.5*m1[34]; 
  BigAEM(44,27) = 0.4391550328268399*m1[30]; 
  BigAEM(44,28) = 0.2981423969999719*m1[32]+0.4391550328268398*m1[25]; 
  BigAEM(44,30) = 0.2981423969999719*m1[34]+0.4391550328268399*m1[27]; 
  BigAEM(44,32) = 0.2981423969999719*m1[28]+0.5*m1[24]; 
  BigAEM(44,34) = 0.2981423969999719*m1[30]+0.5*m1[26]; 
  BigAEM(45,24) = 0.5*m1[33]; 
  BigAEM(45,25) = 0.5*m1[35]; 
  BigAEM(45,26) = 0.4391550328268398*m1[29]; 
  BigAEM(45,27) = 0.4391550328268399*m1[31]; 
  BigAEM(45,29) = 0.2981423969999719*m1[33]+0.4391550328268398*m1[26]; 
  BigAEM(45,31) = 0.2981423969999719*m1[35]+0.4391550328268399*m1[27]; 
  BigAEM(45,33) = 0.2981423969999719*m1[29]+0.5*m1[24]; 
  BigAEM(45,35) = 0.2981423969999719*m1[31]+0.5*m1[25]; 
  BigAEM(46,24) = 0.5*m1[34]; 
  BigAEM(46,25) = 0.4391550328268399*m1[30]; 
  BigAEM(46,26) = 0.5*m1[32]; 
  BigAEM(46,27) = 0.4391550328268399*m1[28]; 
  BigAEM(46,28) = 0.2981423969999719*m1[34]+0.4391550328268399*m1[27]; 
  BigAEM(46,29) = 0.4472135954999579*m1[34]; 
  BigAEM(46,30) = 0.2981423969999719*m1[32]+0.3927922024247863*m1[31]+0.4391550328268399*m1[25]; 
  BigAEM(46,31) = 0.3927922024247863*m1[30]; 
  BigAEM(46,32) = 0.2981423969999719*m1[30]+0.5*m1[26]; 
  BigAEM(46,34) = 0.4472135954999579*m1[29]+0.2981423969999719*m1[28]+0.5*m1[24]; 
  BigAEM(47,24) = 0.5*m1[35]; 
  BigAEM(47,25) = 0.5*m1[33]; 
  BigAEM(47,26) = 0.4391550328268399*m1[31]; 
  BigAEM(47,27) = 0.4391550328268399*m1[29]; 
  BigAEM(47,28) = 0.4472135954999579*m1[35]; 
  BigAEM(47,29) = 0.2981423969999719*m1[35]+0.4391550328268399*m1[27]; 
  BigAEM(47,30) = 0.3927922024247863*m1[31]; 
  BigAEM(47,31) = 0.2981423969999719*m1[33]+0.3927922024247863*m1[30]+0.4391550328268399*m1[26]; 
  BigAEM(47,33) = 0.2981423969999719*m1[31]+0.5*m1[25]; 
  BigAEM(47,35) = 0.2981423969999719*m1[29]+0.4472135954999579*m1[28]+0.5*m1[24]; 
 
  // ....... Block from correction to vtSq .......... // 
  BigAEM(36,36) = 0.5*m0[0]*pVdim-0.5*cE[0]; 
  BigAEM(36,37) = 0.5*m0[1]*pVdim-0.5*cE[1]; 
  BigAEM(36,38) = 0.5*m0[2]*pVdim-0.5*cE[2]; 
  BigAEM(36,39) = 0.5*m0[3]*pVdim-0.5*cE[3]; 
  BigAEM(36,40) = 0.5*m0[4]*pVdim-0.5*cE[4]; 
  BigAEM(36,41) = 0.5*m0[5]*pVdim-0.5*cE[5]; 
  BigAEM(36,42) = 0.5*m0[6]*pVdim-0.5*cE[6]; 
  BigAEM(36,43) = 0.5*m0[7]*pVdim-0.5*cE[7]; 
  BigAEM(36,44) = 0.5*m0[8]*pVdim-0.5*cE[8]; 
  BigAEM(36,45) = 0.5*m0[9]*pVdim-0.5*cE[9]; 
  BigAEM(36,46) = 0.5*m0[10]*pVdim-0.5*cE[10]; 
  BigAEM(36,47) = 0.5*m0[11]*pVdim-0.5*cE[11]; 
  BigAEM(37,36) = 0.5*m0[1]*pVdim-0.5*cE[1]; 
  BigAEM(37,37) = 0.4472135954999579*m0[4]*pVdim+0.5*m0[0]*pVdim-0.4472135954999579*cE[4]-0.5*cE[0]; 
  BigAEM(37,38) = 0.5*m0[3]*pVdim-0.5*cE[3]; 
  BigAEM(37,39) = 0.447213595499958*m0[6]*pVdim+0.5*m0[2]*pVdim-0.447213595499958*cE[6]-0.5*cE[2]; 
  BigAEM(37,40) = 0.4391550328268398*m0[8]*pVdim+0.4472135954999579*m0[1]*pVdim-0.4391550328268398*cE[8]-0.4472135954999579*cE[1]; 
  BigAEM(37,41) = 0.5000000000000001*m0[7]*pVdim-0.5000000000000001*cE[7]; 
  BigAEM(37,42) = 0.4391550328268399*m0[10]*pVdim+0.447213595499958*m0[3]*pVdim-0.4391550328268399*cE[10]-0.447213595499958*cE[3]; 
  BigAEM(37,43) = 0.5000000000000001*m0[5]*pVdim-0.5000000000000001*cE[5]; 
  BigAEM(37,44) = 0.4391550328268398*m0[4]*pVdim-0.4391550328268398*cE[4]; 
  BigAEM(37,45) = 0.5*m0[11]*pVdim-0.5*cE[11]; 
  BigAEM(37,46) = 0.4391550328268399*m0[6]*pVdim-0.4391550328268399*cE[6]; 
  BigAEM(37,47) = 0.5*m0[9]*pVdim-0.5*cE[9]; 
  BigAEM(38,36) = 0.5*m0[2]*pVdim-0.5*cE[2]; 
  BigAEM(38,37) = 0.5*m0[3]*pVdim-0.5*cE[3]; 
  BigAEM(38,38) = 0.4472135954999579*m0[5]*pVdim+0.5*m0[0]*pVdim-0.4472135954999579*cE[5]-0.5*cE[0]; 
  BigAEM(38,39) = 0.447213595499958*m0[7]*pVdim+0.5*m0[1]*pVdim-0.447213595499958*cE[7]-0.5*cE[1]; 
  BigAEM(38,40) = 0.5000000000000001*m0[6]*pVdim-0.5000000000000001*cE[6]; 
  BigAEM(38,41) = 0.4391550328268398*m0[9]*pVdim+0.4472135954999579*m0[2]*pVdim-0.4391550328268398*cE[9]-0.4472135954999579*cE[2]; 
  BigAEM(38,42) = 0.5000000000000001*m0[4]*pVdim-0.5000000000000001*cE[4]; 
  BigAEM(38,43) = 0.4391550328268399*m0[11]*pVdim+0.447213595499958*m0[3]*pVdim-0.4391550328268399*cE[11]-0.447213595499958*cE[3]; 
  BigAEM(38,44) = 0.5*m0[10]*pVdim-0.5*cE[10]; 
  BigAEM(38,45) = 0.4391550328268398*m0[5]*pVdim-0.4391550328268398*cE[5]; 
  BigAEM(38,46) = 0.5*m0[8]*pVdim-0.5*cE[8]; 
  BigAEM(38,47) = 0.4391550328268399*m0[7]*pVdim-0.4391550328268399*cE[7]; 
  BigAEM(39,36) = 0.5*m0[3]*pVdim-0.5*cE[3]; 
  BigAEM(39,37) = 0.447213595499958*m0[6]*pVdim+0.5*m0[2]*pVdim-0.447213595499958*cE[6]-0.5*cE[2]; 
  BigAEM(39,38) = 0.447213595499958*m0[7]*pVdim+0.5*m0[1]*pVdim-0.447213595499958*cE[7]-0.5*cE[1]; 
  BigAEM(39,39) = 0.4472135954999579*m0[5]*pVdim+0.4472135954999579*m0[4]*pVdim+0.5*m0[0]*pVdim-0.4472135954999579*cE[5]-0.4472135954999579*cE[4]-0.5*cE[0]; 
  BigAEM(39,40) = 0.4391550328268399*m0[10]*pVdim+0.4472135954999579*m0[3]*pVdim-0.4391550328268399*cE[10]-0.4472135954999579*cE[3]; 
  BigAEM(39,41) = 0.4391550328268399*m0[11]*pVdim+0.4472135954999579*m0[3]*pVdim-0.4391550328268399*cE[11]-0.4472135954999579*cE[3]; 
  BigAEM(39,42) = 0.4391550328268399*m0[8]*pVdim+0.4*m0[7]*pVdim+0.447213595499958*m0[1]*pVdim-0.4391550328268399*cE[8]-0.4*cE[7]-0.447213595499958*cE[1]; 
  BigAEM(39,43) = 0.4391550328268399*m0[9]*pVdim+0.4*m0[6]*pVdim+0.447213595499958*m0[2]*pVdim-0.4391550328268399*cE[9]-0.4*cE[6]-0.447213595499958*cE[2]; 
  BigAEM(39,44) = 0.4391550328268399*m0[6]*pVdim-0.4391550328268399*cE[6]; 
  BigAEM(39,45) = 0.4391550328268399*m0[7]*pVdim-0.4391550328268399*cE[7]; 
  BigAEM(39,46) = 0.4391550328268399*m0[4]*pVdim-0.4391550328268399*cE[4]; 
  BigAEM(39,47) = 0.4391550328268399*m0[5]*pVdim-0.4391550328268399*cE[5]; 
  BigAEM(40,36) = 0.5*m0[4]*pVdim-0.5*cE[4]; 
  BigAEM(40,37) = 0.4391550328268398*m0[8]*pVdim+0.4472135954999579*m0[1]*pVdim-0.4391550328268398*cE[8]-0.4472135954999579*cE[1]; 
  BigAEM(40,38) = 0.5000000000000001*m0[6]*pVdim-0.5000000000000001*cE[6]; 
  BigAEM(40,39) = 0.4391550328268399*m0[10]*pVdim+0.4472135954999579*m0[3]*pVdim-0.4391550328268399*cE[10]-0.4472135954999579*cE[3]; 
  BigAEM(40,40) = 0.31943828249997*m0[4]*pVdim+0.5*m0[0]*pVdim-0.31943828249997*cE[4]-0.5*cE[0]; 
  BigAEM(40,42) = 0.31943828249997*m0[6]*pVdim+0.5000000000000001*m0[2]*pVdim-0.31943828249997*cE[6]-0.5000000000000001*cE[2]; 
  BigAEM(40,43) = 0.4472135954999579*m0[7]*pVdim-0.4472135954999579*cE[7]; 
  BigAEM(40,44) = 0.2981423969999719*m0[8]*pVdim+0.4391550328268398*m0[1]*pVdim-0.2981423969999719*cE[8]-0.4391550328268398*cE[1]; 
  BigAEM(40,46) = 0.2981423969999719*m0[10]*pVdim+0.4391550328268399*m0[3]*pVdim-0.2981423969999719*cE[10]-0.4391550328268399*cE[3]; 
  BigAEM(40,47) = 0.4472135954999579*m0[11]*pVdim-0.4472135954999579*cE[11]; 
  BigAEM(41,36) = 0.5*m0[5]*pVdim-0.5*cE[5]; 
  BigAEM(41,37) = 0.5000000000000001*m0[7]*pVdim-0.5000000000000001*cE[7]; 
  BigAEM(41,38) = 0.4391550328268398*m0[9]*pVdim+0.4472135954999579*m0[2]*pVdim-0.4391550328268398*cE[9]-0.4472135954999579*cE[2]; 
  BigAEM(41,39) = 0.4391550328268399*m0[11]*pVdim+0.4472135954999579*m0[3]*pVdim-0.4391550328268399*cE[11]-0.4472135954999579*cE[3]; 
  BigAEM(41,41) = 0.31943828249997*m0[5]*pVdim+0.5*m0[0]*pVdim-0.31943828249997*cE[5]-0.5*cE[0]; 
  BigAEM(41,42) = 0.4472135954999579*m0[6]*pVdim-0.4472135954999579*cE[6]; 
  BigAEM(41,43) = 0.31943828249997*m0[7]*pVdim+0.5000000000000001*m0[1]*pVdim-0.31943828249997*cE[7]-0.5000000000000001*cE[1]; 
  BigAEM(41,45) = 0.2981423969999719*m0[9]*pVdim+0.4391550328268398*m0[2]*pVdim-0.2981423969999719*cE[9]-0.4391550328268398*cE[2]; 
  BigAEM(41,46) = 0.4472135954999579*m0[10]*pVdim-0.4472135954999579*cE[10]; 
  BigAEM(41,47) = 0.2981423969999719*m0[11]*pVdim+0.4391550328268399*m0[3]*pVdim-0.2981423969999719*cE[11]-0.4391550328268399*cE[3]; 
  BigAEM(42,36) = 0.5*m0[6]*pVdim-0.5*cE[6]; 
  BigAEM(42,37) = 0.4391550328268399*m0[10]*pVdim+0.447213595499958*m0[3]*pVdim-0.4391550328268399*cE[10]-0.447213595499958*cE[3]; 
  BigAEM(42,38) = 0.5000000000000001*m0[4]*pVdim-0.5000000000000001*cE[4]; 
  BigAEM(42,39) = 0.4391550328268399*m0[8]*pVdim+0.4*m0[7]*pVdim+0.447213595499958*m0[1]*pVdim-0.4391550328268399*cE[8]-0.4*cE[7]-0.447213595499958*cE[1]; 
  BigAEM(42,40) = 0.31943828249997*m0[6]*pVdim+0.5000000000000001*m0[2]*pVdim-0.31943828249997*cE[6]-0.5000000000000001*cE[2]; 
  BigAEM(42,41) = 0.4472135954999579*m0[6]*pVdim-0.4472135954999579*cE[6]; 
  BigAEM(42,42) = 0.4472135954999579*m0[5]*pVdim+0.31943828249997*m0[4]*pVdim+0.5*m0[0]*pVdim-0.4472135954999579*cE[5]-0.31943828249997*cE[4]-0.5*cE[0]; 
  BigAEM(42,43) = 0.3927922024247863*m0[11]*pVdim+0.3927922024247863*m0[10]*pVdim+0.4*m0[3]*pVdim-0.3927922024247863*cE[11]-0.3927922024247863*cE[10]-0.4*cE[3]; 
  BigAEM(42,44) = 0.2981423969999719*m0[10]*pVdim+0.4391550328268399*m0[3]*pVdim-0.2981423969999719*cE[10]-0.4391550328268399*cE[3]; 
  BigAEM(42,46) = 0.2981423969999719*m0[8]*pVdim+0.3927922024247863*m0[7]*pVdim+0.4391550328268399*m0[1]*pVdim-0.2981423969999719*cE[8]-0.3927922024247863*cE[7]-0.4391550328268399*cE[1]; 
  BigAEM(42,47) = 0.3927922024247863*m0[7]*pVdim-0.3927922024247863*cE[7]; 
  BigAEM(43,36) = 0.5*m0[7]*pVdim-0.5*cE[7]; 
  BigAEM(43,37) = 0.5000000000000001*m0[5]*pVdim-0.5000000000000001*cE[5]; 
  BigAEM(43,38) = 0.4391550328268399*m0[11]*pVdim+0.447213595499958*m0[3]*pVdim-0.4391550328268399*cE[11]-0.447213595499958*cE[3]; 
  BigAEM(43,39) = 0.4391550328268399*m0[9]*pVdim+0.4*m0[6]*pVdim+0.447213595499958*m0[2]*pVdim-0.4391550328268399*cE[9]-0.4*cE[6]-0.447213595499958*cE[2]; 
  BigAEM(43,40) = 0.4472135954999579*m0[7]*pVdim-0.4472135954999579*cE[7]; 
  BigAEM(43,41) = 0.31943828249997*m0[7]*pVdim+0.5000000000000001*m0[1]*pVdim-0.31943828249997*cE[7]-0.5000000000000001*cE[1]; 
  BigAEM(43,42) = 0.3927922024247863*m0[11]*pVdim+0.3927922024247863*m0[10]*pVdim+0.4*m0[3]*pVdim-0.3927922024247863*cE[11]-0.3927922024247863*cE[10]-0.4*cE[3]; 
  BigAEM(43,43) = 0.31943828249997*m0[5]*pVdim+0.4472135954999579*m0[4]*pVdim+0.5*m0[0]*pVdim-0.31943828249997*cE[5]-0.4472135954999579*cE[4]-0.5*cE[0]; 
  BigAEM(43,45) = 0.2981423969999719*m0[11]*pVdim+0.4391550328268399*m0[3]*pVdim-0.2981423969999719*cE[11]-0.4391550328268399*cE[3]; 
  BigAEM(43,46) = 0.3927922024247863*m0[6]*pVdim-0.3927922024247863*cE[6]; 
  BigAEM(43,47) = 0.2981423969999719*m0[9]*pVdim+0.3927922024247863*m0[6]*pVdim+0.4391550328268399*m0[2]*pVdim-0.2981423969999719*cE[9]-0.3927922024247863*cE[6]-0.4391550328268399*cE[2]; 
  BigAEM(44,36) = 0.5*m0[8]*pVdim-0.5*cE[8]; 
  BigAEM(44,37) = 0.4391550328268398*m0[4]*pVdim-0.4391550328268398*cE[4]; 
  BigAEM(44,38) = 0.5*m0[10]*pVdim-0.5*cE[10]; 
  BigAEM(44,39) = 0.4391550328268399*m0[6]*pVdim-0.4391550328268399*cE[6]; 
  BigAEM(44,40) = 0.2981423969999719*m0[8]*pVdim+0.4391550328268398*m0[1]*pVdim-0.2981423969999719*cE[8]-0.4391550328268398*cE[1]; 
  BigAEM(44,42) = 0.2981423969999719*m0[10]*pVdim+0.4391550328268399*m0[3]*pVdim-0.2981423969999719*cE[10]-0.4391550328268399*cE[3]; 
  BigAEM(44,44) = 0.2981423969999719*m0[4]*pVdim+0.5*m0[0]*pVdim-0.2981423969999719*cE[4]-0.5*cE[0]; 
  BigAEM(44,46) = 0.2981423969999719*m0[6]*pVdim+0.5*m0[2]*pVdim-0.2981423969999719*cE[6]-0.5*cE[2]; 
  BigAEM(45,36) = 0.5*m0[9]*pVdim-0.5*cE[9]; 
  BigAEM(45,37) = 0.5*m0[11]*pVdim-0.5*cE[11]; 
  BigAEM(45,38) = 0.4391550328268398*m0[5]*pVdim-0.4391550328268398*cE[5]; 
  BigAEM(45,39) = 0.4391550328268399*m0[7]*pVdim-0.4391550328268399*cE[7]; 
  BigAEM(45,41) = 0.2981423969999719*m0[9]*pVdim+0.4391550328268398*m0[2]*pVdim-0.2981423969999719*cE[9]-0.4391550328268398*cE[2]; 
  BigAEM(45,43) = 0.2981423969999719*m0[11]*pVdim+0.4391550328268399*m0[3]*pVdim-0.2981423969999719*cE[11]-0.4391550328268399*cE[3]; 
  BigAEM(45,45) = 0.2981423969999719*m0[5]*pVdim+0.5*m0[0]*pVdim-0.2981423969999719*cE[5]-0.5*cE[0]; 
  BigAEM(45,47) = 0.2981423969999719*m0[7]*pVdim+0.5*m0[1]*pVdim-0.2981423969999719*cE[7]-0.5*cE[1]; 
  BigAEM(46,36) = 0.5*m0[10]*pVdim-0.5*cE[10]; 
  BigAEM(46,37) = 0.4391550328268399*m0[6]*pVdim-0.4391550328268399*cE[6]; 
  BigAEM(46,38) = 0.5*m0[8]*pVdim-0.5*cE[8]; 
  BigAEM(46,39) = 0.4391550328268399*m0[4]*pVdim-0.4391550328268399*cE[4]; 
  BigAEM(46,40) = 0.2981423969999719*m0[10]*pVdim+0.4391550328268399*m0[3]*pVdim-0.2981423969999719*cE[10]-0.4391550328268399*cE[3]; 
  BigAEM(46,41) = 0.4472135954999579*m0[10]*pVdim-0.4472135954999579*cE[10]; 
  BigAEM(46,42) = 0.2981423969999719*m0[8]*pVdim+0.3927922024247863*m0[7]*pVdim+0.4391550328268399*m0[1]*pVdim-0.2981423969999719*cE[8]-0.3927922024247863*cE[7]-0.4391550328268399*cE[1]; 
  BigAEM(46,43) = 0.3927922024247863*m0[6]*pVdim-0.3927922024247863*cE[6]; 
  BigAEM(46,44) = 0.2981423969999719*m0[6]*pVdim+0.5*m0[2]*pVdim-0.2981423969999719*cE[6]-0.5*cE[2]; 
  BigAEM(46,46) = 0.4472135954999579*m0[5]*pVdim+0.2981423969999719*m0[4]*pVdim+0.5*m0[0]*pVdim-0.4472135954999579*cE[5]-0.2981423969999719*cE[4]-0.5*cE[0]; 
  BigAEM(47,36) = 0.5*m0[11]*pVdim-0.5*cE[11]; 
  BigAEM(47,37) = 0.5*m0[9]*pVdim-0.5*cE[9]; 
  BigAEM(47,38) = 0.4391550328268399*m0[7]*pVdim-0.4391550328268399*cE[7]; 
  BigAEM(47,39) = 0.4391550328268399*m0[5]*pVdim-0.4391550328268399*cE[5]; 
  BigAEM(47,40) = 0.4472135954999579*m0[11]*pVdim-0.4472135954999579*cE[11]; 
  BigAEM(47,41) = 0.2981423969999719*m0[11]*pVdim+0.4391550328268399*m0[3]*pVdim-0.2981423969999719*cE[11]-0.4391550328268399*cE[3]; 
  BigAEM(47,42) = 0.3927922024247863*m0[7]*pVdim-0.3927922024247863*cE[7]; 
  BigAEM(47,43) = 0.2981423969999719*m0[9]*pVdim+0.3927922024247863*m0[6]*pVdim+0.4391550328268399*m0[2]*pVdim-0.2981423969999719*cE[9]-0.3927922024247863*cE[6]-0.4391550328268399*cE[2]; 
  BigAEM(47,45) = 0.2981423969999719*m0[7]*pVdim+0.5*m0[1]*pVdim-0.2981423969999719*cE[7]-0.5*cE[1]; 
  BigAEM(47,47) = 0.2981423969999719*m0[5]*pVdim+0.4472135954999579*m0[4]*pVdim+0.5*m0[0]*pVdim-0.2981423969999719*cE[5]-0.4472135954999579*cE[4]-0.5*cE[0]; 
 
  // Set other entries to 0. // 
  BigAEM.block<12,24>(0,12).setZero(); 
  BigAEM.block<24,12>(12,0).setZero(); 
  BigAEM.block<12,12>(12,24).setZero(); 
  BigAEM.block<12,12>(24,12).setZero(); 
 
  // ....... RHS vector is composed of m1 and m2 .......... // 
  bEV << m1[0],m1[1],m1[2],m1[3],m1[4],m1[5],m1[6],m1[7],m1[8],m1[9],m1[10],m1[11],m1[12],m1[13],m1[14],m1[15],m1[16],m1[17],m1[18],m1[19],m1[20],m1[21],m1[22],m1[23],m1[24],m1[25],m1[26],m1[27],m1[28],m1[29],m1[30],m1[31],m1[32],m1[33],m1[34],m1[35],m2[0],m2[1],m2[2],m2[3],m2[4],m2[5],m2[6],m2[7],m2[8],m2[9],m2[10],m2[11]; 
 
  xEV = BigAEM.colPivHouseholderQr().solve(bEV); 
 
  Eigen::Map<VectorXd>(u,36,1) = xEV.segment<36>(0); 
 
  Eigen::Map<VectorXd>(vtSq,12,1) = xEV.segment<12>(36); 
 
} 
 
void BoundaryIntegral2x3vSer_F_VX_P1(const double intFac, const double vmin, const double vmax, const double *dxv, const double *fvmin, const double *fvmax, double *out) 
{ 
  // intFac:             =1 for VmLBO, =2pi/m or 4pi/m for GkLBO. 
  // vmax, vmin:         maximum and minimum velocity of the velocity grid. 
  // dxv[5]:             cell length in each direciton. 
  // fvmax[32], fvmin[32]: distribution function at the velocity boundaries. 
  // out:                int dS of f|^(vmax)_(vmin) or vf^(vmax)_(vmin). 
 
  const double dS = 0.25*dxv[3]*dxv[4]; 
 
  out[0] += (2.449489742783178*fvmin[3]*dS+2.449489742783178*fvmax[3]*dS-1.414213562373095*fvmin[0]*dS+1.414213562373095*fvmax[0]*dS)*intFac; 
  out[1] += (2.449489742783178*fvmin[7]*dS+2.449489742783178*fvmax[7]*dS-1.414213562373095*fvmin[1]*dS+1.414213562373095*fvmax[1]*dS)*intFac; 
  out[2] += (2.449489742783178*fvmin[8]*dS+2.449489742783178*fvmax[8]*dS-1.414213562373095*fvmin[2]*dS+1.414213562373095*fvmax[2]*dS)*intFac; 
  out[3] += (2.449489742783178*fvmin[16]*dS+2.449489742783178*fvmax[16]*dS-1.414213562373095*fvmin[6]*dS+1.414213562373095*fvmax[6]*dS)*intFac; 
 
} 
 
void BoundaryIntegral2x3vSer_F_VX_P2(const double intFac, const double vmin, const double vmax, const double *dxv, const double *fvmin, const double *fvmax, double *out) 
{ 
  // intFac:             =1 for VmLBO, =2pi/m or 4pi/m for GkLBO. 
  // vmax, vmin:         maximum and minimum velocity of the velocity grid. 
  // dxv[5]:             cell length in each direciton. 
  // fvmax[112], fvmin[112]: distribution function at the velocity boundaries. 
  // out:                int dS of f|^(vmax)_(vmin) or vf^(vmax)_(vmin). 
 
  const double dS = 0.25*dxv[3]*dxv[4]; 
 
  out[0] += ((-3.16227766016838*fvmin[18]*dS)+3.16227766016838*fvmax[18]*dS+2.449489742783178*fvmin[3]*dS+2.449489742783178*fvmax[3]*dS-1.414213562373095*fvmin[0]*dS+1.414213562373095*fvmax[0]*dS)*intFac; 
  out[1] += ((-3.16227766016838*fvmin[35]*dS)+3.16227766016838*fvmax[35]*dS+2.449489742783178*fvmin[7]*dS+2.449489742783178*fvmax[7]*dS-1.414213562373095*fvmin[1]*dS+1.414213562373095*fvmax[1]*dS)*intFac; 
  out[2] += ((-3.16227766016838*fvmin[36]*dS)+3.16227766016838*fvmax[36]*dS+2.449489742783178*fvmin[8]*dS+2.449489742783178*fvmax[8]*dS-1.414213562373095*fvmin[2]*dS+1.414213562373095*fvmax[2]*dS)*intFac; 
  out[3] += ((-3.16227766016838*fvmin[58]*dS)+3.16227766016838*fvmax[58]*dS+2.449489742783178*fvmin[21]*dS+2.449489742783178*fvmax[21]*dS-1.414213562373095*fvmin[6]*dS+1.414213562373095*fvmax[6]*dS)*intFac; 
  out[4] += (2.449489742783178*fvmin[33]*dS+2.449489742783178*fvmax[33]*dS-1.414213562373095*fvmin[16]*dS+1.414213562373095*fvmax[16]*dS)*intFac; 
  out[5] += (2.449489742783178*fvmin[34]*dS+2.449489742783178*fvmax[34]*dS-1.414213562373095*fvmin[17]*dS+1.414213562373095*fvmax[17]*dS)*intFac; 
  out[6] += (2.449489742783178*fvmin[56]*dS+2.449489742783178*fvmax[56]*dS-1.414213562373095*fvmin[31]*dS+1.414213562373095*fvmax[31]*dS)*intFac; 
  out[7] += (2.449489742783178*fvmin[57]*dS+2.449489742783178*fvmax[57]*dS-1.414213562373095*fvmin[32]*dS+1.414213562373095*fvmax[32]*dS)*intFac; 
 
} 
 
void BoundaryIntegral2x3vSer_F_VX_P3(const double intFac, const double vmin, const double vmax, const double *dxv, const double *fvmin, const double *fvmax, double *out) 
{ 
  // intFac:             =1 for VmLBO, =2pi/m or 4pi/m for GkLBO. 
  // vmax, vmin:         maximum and minimum velocity of the velocity grid. 
  // dxv[5]:             cell length in each direciton. 
  // fvmax[192], fvmin[192]: distribution function at the velocity boundaries. 
  // out:                int dS of f|^(vmax)_(vmin) or vf^(vmax)_(vmin). 
 
  const double dS = 0.25*dxv[3]*dxv[4]; 
 
  out[0] += (3.741657386773942*fvmin[53]*dS+3.741657386773942*fvmax[53]*dS-3.16227766016838*fvmin[18]*dS+3.16227766016838*fvmax[18]*dS+2.449489742783178*fvmin[3]*dS+2.449489742783178*fvmax[3]*dS-1.414213562373095*fvmin[0]*dS+1.414213562373095*fvmax[0]*dS)*intFac; 
  out[1] += (3.741657386773942*fvmin[95]*dS+3.741657386773942*fvmax[95]*dS-3.16227766016838*fvmin[35]*dS+3.16227766016838*fvmax[35]*dS+2.449489742783178*fvmin[7]*dS+2.449489742783178*fvmax[7]*dS-1.414213562373095*fvmin[1]*dS+1.414213562373095*fvmax[1]*dS)*intFac; 
  out[2] += (3.741657386773942*fvmin[96]*dS+3.741657386773942*fvmax[96]*dS-3.16227766016838*fvmin[36]*dS+3.16227766016838*fvmax[36]*dS+2.449489742783178*fvmin[8]*dS+2.449489742783178*fvmax[8]*dS-1.414213562373095*fvmin[2]*dS+1.414213562373095*fvmax[2]*dS)*intFac; 
  out[3] += (3.741657386773942*fvmin[134]*dS+3.741657386773942*fvmax[134]*dS-3.16227766016838*fvmin[63]*dS+3.16227766016838*fvmax[63]*dS+2.449489742783178*fvmin[21]*dS+2.449489742783178*fvmax[21]*dS-1.414213562373095*fvmin[6]*dS+1.414213562373095*fvmax[6]*dS)*intFac; 
  out[4] += (2.449489742783178*fvmin[33]*dS+2.449489742783178*fvmax[33]*dS-1.414213562373095*fvmin[16]*dS+1.414213562373095*fvmax[16]*dS)*intFac; 
  out[5] += (2.449489742783178*fvmin[34]*dS+2.449489742783178*fvmax[34]*dS-1.414213562373095*fvmin[17]*dS+1.414213562373095*fvmax[17]*dS)*intFac; 
  out[6] += (2.449489742783178*fvmin[61]*dS+2.449489742783178*fvmax[61]*dS-1.414213562373095*fvmin[31]*dS+1.414213562373095*fvmax[31]*dS)*intFac; 
  out[7] += (2.449489742783178*fvmin[62]*dS+2.449489742783178*fvmax[62]*dS-1.414213562373095*fvmin[32]*dS+1.414213562373095*fvmax[32]*dS)*intFac; 
  out[8] += (2.449489742783178*fvmin[93]*dS+2.449489742783178*fvmax[93]*dS-1.414213562373095*fvmin[51]*dS+1.414213562373095*fvmax[51]*dS)*intFac; 
  out[9] += (2.449489742783178*fvmin[94]*dS+2.449489742783178*fvmax[94]*dS-1.414213562373095*fvmin[52]*dS+1.414213562373095*fvmax[52]*dS)*intFac; 
  out[10] += (2.449489742783178*fvmin[132]*dS+2.449489742783178*fvmax[132]*dS-1.414213562373095*fvmin[91]*dS+1.414213562373095*fvmax[91]*dS)*intFac; 
  out[11] += (2.449489742783178*fvmin[133]*dS+2.449489742783178*fvmax[133]*dS-1.414213562373095*fvmin[92]*dS+1.414213562373095*fvmax[92]*dS)*intFac; 
 
} 
 
void BoundaryIntegral2x3vSer_vF_VX_P1(const double intFac, const double vmin, const double vmax, const double *dxv, const double *fvmin, const double *fvmax, double *out) 
{ 
  // intFac:             =1 for VmLBO, =2pi/m or 4pi/m for GkLBO. 
  // vmax, vmin:         maximum and minimum velocity of the velocity grid. 
  // dxv[5]:             cell length in each direciton. 
  // fvmax[32], fvmin[32]: distribution function at the velocity boundaries. 
  // out:                int dS of f|^(vmax)_(vmin) or vf^(vmax)_(vmin). 
 
  const double dS = 0.25*dxv[3]*dxv[4]; 
 
  out[0] += intFac*(2.449489742783178*fvmin[3]*dS*vmin-1.414213562373095*fvmin[0]*dS*vmin+2.449489742783178*fvmax[3]*dS*vmax+1.414213562373095*fvmax[0]*dS*vmax); 
  out[1] += intFac*(2.449489742783178*fvmin[7]*dS*vmin-1.414213562373095*fvmin[1]*dS*vmin+2.449489742783178*fvmax[7]*dS*vmax+1.414213562373095*fvmax[1]*dS*vmax); 
  out[2] += intFac*(2.449489742783178*fvmin[8]*dS*vmin-1.414213562373095*fvmin[2]*dS*vmin+2.449489742783178*fvmax[8]*dS*vmax+1.414213562373095*fvmax[2]*dS*vmax); 
  out[3] += intFac*(2.449489742783178*fvmin[16]*dS*vmin-1.414213562373095*fvmin[6]*dS*vmin+2.449489742783178*fvmax[16]*dS*vmax+1.414213562373095*fvmax[6]*dS*vmax); 
 
} 
 
void BoundaryIntegral2x3vSer_vF_VX_P2(const double intFac, const double vmin, const double vmax, const double *dxv, const double *fvmin, const double *fvmax, double *out) 
{ 
  // intFac:             =1 for VmLBO, =2pi/m or 4pi/m for GkLBO. 
  // vmax, vmin:         maximum and minimum velocity of the velocity grid. 
  // dxv[5]:             cell length in each direciton. 
  // fvmax[112], fvmin[112]: distribution function at the velocity boundaries. 
  // out:                int dS of f|^(vmax)_(vmin) or vf^(vmax)_(vmin). 
 
  const double dS = 0.25*dxv[3]*dxv[4]; 
 
  out[0] += intFac*((-3.16227766016838*fvmin[18]*dS*vmin)+2.449489742783178*fvmin[3]*dS*vmin-1.414213562373095*fvmin[0]*dS*vmin+3.16227766016838*fvmax[18]*dS*vmax+2.449489742783178*fvmax[3]*dS*vmax+1.414213562373095*fvmax[0]*dS*vmax); 
  out[1] += intFac*((-3.16227766016838*fvmin[35]*dS*vmin)+2.449489742783178*fvmin[7]*dS*vmin-1.414213562373095*fvmin[1]*dS*vmin+3.16227766016838*fvmax[35]*dS*vmax+2.449489742783178*fvmax[7]*dS*vmax+1.414213562373095*fvmax[1]*dS*vmax); 
  out[2] += intFac*((-3.16227766016838*fvmin[36]*dS*vmin)+2.449489742783178*fvmin[8]*dS*vmin-1.414213562373095*fvmin[2]*dS*vmin+3.16227766016838*fvmax[36]*dS*vmax+2.449489742783178*fvmax[8]*dS*vmax+1.414213562373095*fvmax[2]*dS*vmax); 
  out[3] += intFac*((-3.16227766016838*fvmin[58]*dS*vmin)+2.449489742783178*fvmin[21]*dS*vmin-1.414213562373095*fvmin[6]*dS*vmin+3.16227766016838*fvmax[58]*dS*vmax+2.449489742783178*fvmax[21]*dS*vmax+1.414213562373095*fvmax[6]*dS*vmax); 
  out[4] += intFac*(2.449489742783178*fvmin[33]*dS*vmin-1.414213562373095*fvmin[16]*dS*vmin+2.449489742783178*fvmax[33]*dS*vmax+1.414213562373095*fvmax[16]*dS*vmax); 
  out[5] += intFac*(2.449489742783178*fvmin[34]*dS*vmin-1.414213562373095*fvmin[17]*dS*vmin+2.449489742783178*fvmax[34]*dS*vmax+1.414213562373095*fvmax[17]*dS*vmax); 
  out[6] += intFac*(2.449489742783178*fvmin[56]*dS*vmin-1.414213562373095*fvmin[31]*dS*vmin+2.449489742783178*fvmax[56]*dS*vmax+1.414213562373095*fvmax[31]*dS*vmax); 
  out[7] += intFac*(2.449489742783178*fvmin[57]*dS*vmin-1.414213562373095*fvmin[32]*dS*vmin+2.449489742783178*fvmax[57]*dS*vmax+1.414213562373095*fvmax[32]*dS*vmax); 
 
} 
 
void BoundaryIntegral2x3vSer_vF_VX_P3(const double intFac, const double vmin, const double vmax, const double *dxv, const double *fvmin, const double *fvmax, double *out) 
{ 
  // intFac:             =1 for VmLBO, =2pi/m or 4pi/m for GkLBO. 
  // vmax, vmin:         maximum and minimum velocity of the velocity grid. 
  // dxv[5]:             cell length in each direciton. 
  // fvmax[192], fvmin[192]: distribution function at the velocity boundaries. 
  // out:                int dS of f|^(vmax)_(vmin) or vf^(vmax)_(vmin). 
 
  const double dS = 0.25*dxv[3]*dxv[4]; 
 
  out[0] += intFac*(3.741657386773942*fvmin[53]*dS*vmin-3.16227766016838*fvmin[18]*dS*vmin+2.449489742783178*fvmin[3]*dS*vmin-1.414213562373095*fvmin[0]*dS*vmin+3.741657386773942*fvmax[53]*dS*vmax+3.16227766016838*fvmax[18]*dS*vmax+2.449489742783178*fvmax[3]*dS*vmax+1.414213562373095*fvmax[0]*dS*vmax); 
  out[1] += intFac*(3.741657386773942*fvmin[95]*dS*vmin-3.16227766016838*fvmin[35]*dS*vmin+2.449489742783178*fvmin[7]*dS*vmin-1.414213562373095*fvmin[1]*dS*vmin+3.741657386773942*fvmax[95]*dS*vmax+3.16227766016838*fvmax[35]*dS*vmax+2.449489742783178*fvmax[7]*dS*vmax+1.414213562373095*fvmax[1]*dS*vmax); 
  out[2] += intFac*(3.741657386773942*fvmin[96]*dS*vmin-3.16227766016838*fvmin[36]*dS*vmin+2.449489742783178*fvmin[8]*dS*vmin-1.414213562373095*fvmin[2]*dS*vmin+3.741657386773942*fvmax[96]*dS*vmax+3.16227766016838*fvmax[36]*dS*vmax+2.449489742783178*fvmax[8]*dS*vmax+1.414213562373095*fvmax[2]*dS*vmax); 
  out[3] += intFac*(3.741657386773942*fvmin[134]*dS*vmin-3.16227766016838*fvmin[63]*dS*vmin+2.449489742783178*fvmin[21]*dS*vmin-1.414213562373095*fvmin[6]*dS*vmin+3.741657386773942*fvmax[134]*dS*vmax+3.16227766016838*fvmax[63]*dS*vmax+2.449489742783178*fvmax[21]*dS*vmax+1.414213562373095*fvmax[6]*dS*vmax); 
  out[4] += intFac*(2.449489742783178*fvmin[33]*dS*vmin-1.414213562373095*fvmin[16]*dS*vmin+2.449489742783178*fvmax[33]*dS*vmax+1.414213562373095*fvmax[16]*dS*vmax); 
  out[5] += intFac*(2.449489742783178*fvmin[34]*dS*vmin-1.414213562373095*fvmin[17]*dS*vmin+2.449489742783178*fvmax[34]*dS*vmax+1.414213562373095*fvmax[17]*dS*vmax); 
  out[6] += intFac*(2.449489742783178*fvmin[61]*dS*vmin-1.414213562373095*fvmin[31]*dS*vmin+2.449489742783178*fvmax[61]*dS*vmax+1.414213562373095*fvmax[31]*dS*vmax); 
  out[7] += intFac*(2.449489742783178*fvmin[62]*dS*vmin-1.414213562373095*fvmin[32]*dS*vmin+2.449489742783178*fvmax[62]*dS*vmax+1.414213562373095*fvmax[32]*dS*vmax); 
  out[8] += intFac*(2.449489742783178*fvmin[93]*dS*vmin-1.414213562373095*fvmin[51]*dS*vmin+2.449489742783178*fvmax[93]*dS*vmax+1.414213562373095*fvmax[51]*dS*vmax); 
  out[9] += intFac*(2.449489742783178*fvmin[94]*dS*vmin-1.414213562373095*fvmin[52]*dS*vmin+2.449489742783178*fvmax[94]*dS*vmax+1.414213562373095*fvmax[52]*dS*vmax); 
  out[10] += intFac*(2.449489742783178*fvmin[132]*dS*vmin-1.414213562373095*fvmin[91]*dS*vmin+2.449489742783178*fvmax[132]*dS*vmax+1.414213562373095*fvmax[91]*dS*vmax); 
  out[11] += intFac*(2.449489742783178*fvmin[133]*dS*vmin-1.414213562373095*fvmin[92]*dS*vmin+2.449489742783178*fvmax[133]*dS*vmax+1.414213562373095*fvmax[92]*dS*vmax); 
 
} 
 
void BoundaryIntegral2x3vSer_F_VY_P1(const double intFac, const double vmin, const double vmax, const double *dxv, const double *fvmin, const double *fvmax, double *out) 
{ 
  // intFac:             =1 for VmLBO, =2pi/m or 4pi/m for GkLBO. 
  // vmax, vmin:         maximum and minimum velocity of the velocity grid. 
  // dxv[5]:             cell length in each direciton. 
  // fvmax[32], fvmin[32]: distribution function at the velocity boundaries. 
  // out:                int dS of f|^(vmax)_(vmin) or vf^(vmax)_(vmin). 
 
  const double dS = 0.25*dxv[2]*dxv[4]; 
 
  out[4] += (2.449489742783178*fvmin[4]*dS+2.449489742783178*fvmax[4]*dS-1.414213562373095*fvmin[0]*dS+1.414213562373095*fvmax[0]*dS)*intFac; 
  out[5] += (2.449489742783178*fvmin[9]*dS+2.449489742783178*fvmax[9]*dS-1.414213562373095*fvmin[1]*dS+1.414213562373095*fvmax[1]*dS)*intFac; 
  out[6] += (2.449489742783178*fvmin[10]*dS+2.449489742783178*fvmax[10]*dS-1.414213562373095*fvmin[2]*dS+1.414213562373095*fvmax[2]*dS)*intFac; 
  out[7] += (2.449489742783178*fvmin[17]*dS+2.449489742783178*fvmax[17]*dS-1.414213562373095*fvmin[6]*dS+1.414213562373095*fvmax[6]*dS)*intFac; 
 
} 
 
void BoundaryIntegral2x3vSer_F_VY_P2(const double intFac, const double vmin, const double vmax, const double *dxv, const double *fvmin, const double *fvmax, double *out) 
{ 
  // intFac:             =1 for VmLBO, =2pi/m or 4pi/m for GkLBO. 
  // vmax, vmin:         maximum and minimum velocity of the velocity grid. 
  // dxv[5]:             cell length in each direciton. 
  // fvmax[112], fvmin[112]: distribution function at the velocity boundaries. 
  // out:                int dS of f|^(vmax)_(vmin) or vf^(vmax)_(vmin). 
 
  const double dS = 0.25*dxv[2]*dxv[4]; 
 
  out[8] += ((-3.16227766016838*fvmin[19]*dS)+3.16227766016838*fvmax[19]*dS+2.449489742783178*fvmin[4]*dS+2.449489742783178*fvmax[4]*dS-1.414213562373095*fvmin[0]*dS+1.414213562373095*fvmax[0]*dS)*intFac; 
  out[9] += ((-3.16227766016838*fvmin[40]*dS)+3.16227766016838*fvmax[40]*dS+2.449489742783178*fvmin[9]*dS+2.449489742783178*fvmax[9]*dS-1.414213562373095*fvmin[1]*dS+1.414213562373095*fvmax[1]*dS)*intFac; 
  out[10] += ((-3.16227766016838*fvmin[41]*dS)+3.16227766016838*fvmax[41]*dS+2.449489742783178*fvmin[10]*dS+2.449489742783178*fvmax[10]*dS-1.414213562373095*fvmin[2]*dS+1.414213562373095*fvmax[2]*dS)*intFac; 
  out[11] += ((-3.16227766016838*fvmin[65]*dS)+3.16227766016838*fvmax[65]*dS+2.449489742783178*fvmin[22]*dS+2.449489742783178*fvmax[22]*dS-1.414213562373095*fvmin[6]*dS+1.414213562373095*fvmax[6]*dS)*intFac; 
  out[12] += (2.449489742783178*fvmin[37]*dS+2.449489742783178*fvmax[37]*dS-1.414213562373095*fvmin[16]*dS+1.414213562373095*fvmax[16]*dS)*intFac; 
  out[13] += (2.449489742783178*fvmin[38]*dS+2.449489742783178*fvmax[38]*dS-1.414213562373095*fvmin[17]*dS+1.414213562373095*fvmax[17]*dS)*intFac; 
  out[14] += (2.449489742783178*fvmin[59]*dS+2.449489742783178*fvmax[59]*dS-1.414213562373095*fvmin[31]*dS+1.414213562373095*fvmax[31]*dS)*intFac; 
  out[15] += (2.449489742783178*fvmin[60]*dS+2.449489742783178*fvmax[60]*dS-1.414213562373095*fvmin[32]*dS+1.414213562373095*fvmax[32]*dS)*intFac; 
 
} 
 
void BoundaryIntegral2x3vSer_F_VY_P3(const double intFac, const double vmin, const double vmax, const double *dxv, const double *fvmin, const double *fvmax, double *out) 
{ 
  // intFac:             =1 for VmLBO, =2pi/m or 4pi/m for GkLBO. 
  // vmax, vmin:         maximum and minimum velocity of the velocity grid. 
  // dxv[5]:             cell length in each direciton. 
  // fvmax[192], fvmin[192]: distribution function at the velocity boundaries. 
  // out:                int dS of f|^(vmax)_(vmin) or vf^(vmax)_(vmin). 
 
  const double dS = 0.25*dxv[2]*dxv[4]; 
 
  out[12] += (3.741657386773942*fvmin[54]*dS+3.741657386773942*fvmax[54]*dS-3.16227766016838*fvmin[19]*dS+3.16227766016838*fvmax[19]*dS+2.449489742783178*fvmin[4]*dS+2.449489742783178*fvmax[4]*dS-1.414213562373095*fvmin[0]*dS+1.414213562373095*fvmax[0]*dS)*intFac; 
  out[13] += (3.741657386773942*fvmin[100]*dS+3.741657386773942*fvmax[100]*dS-3.16227766016838*fvmin[40]*dS+3.16227766016838*fvmax[40]*dS+2.449489742783178*fvmin[9]*dS+2.449489742783178*fvmax[9]*dS-1.414213562373095*fvmin[1]*dS+1.414213562373095*fvmax[1]*dS)*intFac; 
  out[14] += (3.741657386773942*fvmin[101]*dS+3.741657386773942*fvmax[101]*dS-3.16227766016838*fvmin[41]*dS+3.16227766016838*fvmax[41]*dS+2.449489742783178*fvmin[10]*dS+2.449489742783178*fvmax[10]*dS-1.414213562373095*fvmin[2]*dS+1.414213562373095*fvmax[2]*dS)*intFac; 
  out[15] += (3.741657386773942*fvmin[141]*dS+3.741657386773942*fvmax[141]*dS-3.16227766016838*fvmin[70]*dS+3.16227766016838*fvmax[70]*dS+2.449489742783178*fvmin[22]*dS+2.449489742783178*fvmax[22]*dS-1.414213562373095*fvmin[6]*dS+1.414213562373095*fvmax[6]*dS)*intFac; 
  out[16] += (2.449489742783178*fvmin[37]*dS+2.449489742783178*fvmax[37]*dS-1.414213562373095*fvmin[16]*dS+1.414213562373095*fvmax[16]*dS)*intFac; 
  out[17] += (2.449489742783178*fvmin[38]*dS+2.449489742783178*fvmax[38]*dS-1.414213562373095*fvmin[17]*dS+1.414213562373095*fvmax[17]*dS)*intFac; 
  out[18] += (2.449489742783178*fvmin[64]*dS+2.449489742783178*fvmax[64]*dS-1.414213562373095*fvmin[31]*dS+1.414213562373095*fvmax[31]*dS)*intFac; 
  out[19] += (2.449489742783178*fvmin[65]*dS+2.449489742783178*fvmax[65]*dS-1.414213562373095*fvmin[32]*dS+1.414213562373095*fvmax[32]*dS)*intFac; 
  out[20] += (2.449489742783178*fvmin[97]*dS+2.449489742783178*fvmax[97]*dS-1.414213562373095*fvmin[51]*dS+1.414213562373095*fvmax[51]*dS)*intFac; 
  out[21] += (2.449489742783178*fvmin[98]*dS+2.449489742783178*fvmax[98]*dS-1.414213562373095*fvmin[52]*dS+1.414213562373095*fvmax[52]*dS)*intFac; 
  out[22] += (2.449489742783178*fvmin[135]*dS+2.449489742783178*fvmax[135]*dS-1.414213562373095*fvmin[91]*dS+1.414213562373095*fvmax[91]*dS)*intFac; 
  out[23] += (2.449489742783178*fvmin[136]*dS+2.449489742783178*fvmax[136]*dS-1.414213562373095*fvmin[92]*dS+1.414213562373095*fvmax[92]*dS)*intFac; 
 
} 
 
void BoundaryIntegral2x3vSer_vF_VY_P1(const double intFac, const double vmin, const double vmax, const double *dxv, const double *fvmin, const double *fvmax, double *out) 
{ 
  // intFac:             =1 for VmLBO, =2pi/m or 4pi/m for GkLBO. 
  // vmax, vmin:         maximum and minimum velocity of the velocity grid. 
  // dxv[5]:             cell length in each direciton. 
  // fvmax[32], fvmin[32]: distribution function at the velocity boundaries. 
  // out:                int dS of f|^(vmax)_(vmin) or vf^(vmax)_(vmin). 
 
  const double dS = 0.25*dxv[2]*dxv[4]; 
 
  out[0] += intFac*(2.449489742783178*fvmin[4]*dS*vmin-1.414213562373095*fvmin[0]*dS*vmin+2.449489742783178*fvmax[4]*dS*vmax+1.414213562373095*fvmax[0]*dS*vmax); 
  out[1] += intFac*(2.449489742783178*fvmin[9]*dS*vmin-1.414213562373095*fvmin[1]*dS*vmin+2.449489742783178*fvmax[9]*dS*vmax+1.414213562373095*fvmax[1]*dS*vmax); 
  out[2] += intFac*(2.449489742783178*fvmin[10]*dS*vmin-1.414213562373095*fvmin[2]*dS*vmin+2.449489742783178*fvmax[10]*dS*vmax+1.414213562373095*fvmax[2]*dS*vmax); 
  out[3] += intFac*(2.449489742783178*fvmin[17]*dS*vmin-1.414213562373095*fvmin[6]*dS*vmin+2.449489742783178*fvmax[17]*dS*vmax+1.414213562373095*fvmax[6]*dS*vmax); 
 
} 
 
void BoundaryIntegral2x3vSer_vF_VY_P2(const double intFac, const double vmin, const double vmax, const double *dxv, const double *fvmin, const double *fvmax, double *out) 
{ 
  // intFac:             =1 for VmLBO, =2pi/m or 4pi/m for GkLBO. 
  // vmax, vmin:         maximum and minimum velocity of the velocity grid. 
  // dxv[5]:             cell length in each direciton. 
  // fvmax[112], fvmin[112]: distribution function at the velocity boundaries. 
  // out:                int dS of f|^(vmax)_(vmin) or vf^(vmax)_(vmin). 
 
  const double dS = 0.25*dxv[2]*dxv[4]; 
 
  out[0] += intFac*((-3.16227766016838*fvmin[19]*dS*vmin)+2.449489742783178*fvmin[4]*dS*vmin-1.414213562373095*fvmin[0]*dS*vmin+3.16227766016838*fvmax[19]*dS*vmax+2.449489742783178*fvmax[4]*dS*vmax+1.414213562373095*fvmax[0]*dS*vmax); 
  out[1] += intFac*((-3.16227766016838*fvmin[40]*dS*vmin)+2.449489742783178*fvmin[9]*dS*vmin-1.414213562373095*fvmin[1]*dS*vmin+3.16227766016838*fvmax[40]*dS*vmax+2.449489742783178*fvmax[9]*dS*vmax+1.414213562373095*fvmax[1]*dS*vmax); 
  out[2] += intFac*((-3.16227766016838*fvmin[41]*dS*vmin)+2.449489742783178*fvmin[10]*dS*vmin-1.414213562373095*fvmin[2]*dS*vmin+3.16227766016838*fvmax[41]*dS*vmax+2.449489742783178*fvmax[10]*dS*vmax+1.414213562373095*fvmax[2]*dS*vmax); 
  out[3] += intFac*((-3.16227766016838*fvmin[65]*dS*vmin)+2.449489742783178*fvmin[22]*dS*vmin-1.414213562373095*fvmin[6]*dS*vmin+3.16227766016838*fvmax[65]*dS*vmax+2.449489742783178*fvmax[22]*dS*vmax+1.414213562373095*fvmax[6]*dS*vmax); 
  out[4] += intFac*(2.449489742783178*fvmin[37]*dS*vmin-1.414213562373095*fvmin[16]*dS*vmin+2.449489742783178*fvmax[37]*dS*vmax+1.414213562373095*fvmax[16]*dS*vmax); 
  out[5] += intFac*(2.449489742783178*fvmin[38]*dS*vmin-1.414213562373095*fvmin[17]*dS*vmin+2.449489742783178*fvmax[38]*dS*vmax+1.414213562373095*fvmax[17]*dS*vmax); 
  out[6] += intFac*(2.449489742783178*fvmin[59]*dS*vmin-1.414213562373095*fvmin[31]*dS*vmin+2.449489742783178*fvmax[59]*dS*vmax+1.414213562373095*fvmax[31]*dS*vmax); 
  out[7] += intFac*(2.449489742783178*fvmin[60]*dS*vmin-1.414213562373095*fvmin[32]*dS*vmin+2.449489742783178*fvmax[60]*dS*vmax+1.414213562373095*fvmax[32]*dS*vmax); 
 
} 
 
void BoundaryIntegral2x3vSer_vF_VY_P3(const double intFac, const double vmin, const double vmax, const double *dxv, const double *fvmin, const double *fvmax, double *out) 
{ 
  // intFac:             =1 for VmLBO, =2pi/m or 4pi/m for GkLBO. 
  // vmax, vmin:         maximum and minimum velocity of the velocity grid. 
  // dxv[5]:             cell length in each direciton. 
  // fvmax[192], fvmin[192]: distribution function at the velocity boundaries. 
  // out:                int dS of f|^(vmax)_(vmin) or vf^(vmax)_(vmin). 
 
  const double dS = 0.25*dxv[2]*dxv[4]; 
 
  out[0] += intFac*(3.741657386773942*fvmin[54]*dS*vmin-3.16227766016838*fvmin[19]*dS*vmin+2.449489742783178*fvmin[4]*dS*vmin-1.414213562373095*fvmin[0]*dS*vmin+3.741657386773942*fvmax[54]*dS*vmax+3.16227766016838*fvmax[19]*dS*vmax+2.449489742783178*fvmax[4]*dS*vmax+1.414213562373095*fvmax[0]*dS*vmax); 
  out[1] += intFac*(3.741657386773942*fvmin[100]*dS*vmin-3.16227766016838*fvmin[40]*dS*vmin+2.449489742783178*fvmin[9]*dS*vmin-1.414213562373095*fvmin[1]*dS*vmin+3.741657386773942*fvmax[100]*dS*vmax+3.16227766016838*fvmax[40]*dS*vmax+2.449489742783178*fvmax[9]*dS*vmax+1.414213562373095*fvmax[1]*dS*vmax); 
  out[2] += intFac*(3.741657386773942*fvmin[101]*dS*vmin-3.16227766016838*fvmin[41]*dS*vmin+2.449489742783178*fvmin[10]*dS*vmin-1.414213562373095*fvmin[2]*dS*vmin+3.741657386773942*fvmax[101]*dS*vmax+3.16227766016838*fvmax[41]*dS*vmax+2.449489742783178*fvmax[10]*dS*vmax+1.414213562373095*fvmax[2]*dS*vmax); 
  out[3] += intFac*(3.741657386773942*fvmin[141]*dS*vmin-3.16227766016838*fvmin[70]*dS*vmin+2.449489742783178*fvmin[22]*dS*vmin-1.414213562373095*fvmin[6]*dS*vmin+3.741657386773942*fvmax[141]*dS*vmax+3.16227766016838*fvmax[70]*dS*vmax+2.449489742783178*fvmax[22]*dS*vmax+1.414213562373095*fvmax[6]*dS*vmax); 
  out[4] += intFac*(2.449489742783178*fvmin[37]*dS*vmin-1.414213562373095*fvmin[16]*dS*vmin+2.449489742783178*fvmax[37]*dS*vmax+1.414213562373095*fvmax[16]*dS*vmax); 
  out[5] += intFac*(2.449489742783178*fvmin[38]*dS*vmin-1.414213562373095*fvmin[17]*dS*vmin+2.449489742783178*fvmax[38]*dS*vmax+1.414213562373095*fvmax[17]*dS*vmax); 
  out[6] += intFac*(2.449489742783178*fvmin[64]*dS*vmin-1.414213562373095*fvmin[31]*dS*vmin+2.449489742783178*fvmax[64]*dS*vmax+1.414213562373095*fvmax[31]*dS*vmax); 
  out[7] += intFac*(2.449489742783178*fvmin[65]*dS*vmin-1.414213562373095*fvmin[32]*dS*vmin+2.449489742783178*fvmax[65]*dS*vmax+1.414213562373095*fvmax[32]*dS*vmax); 
  out[8] += intFac*(2.449489742783178*fvmin[97]*dS*vmin-1.414213562373095*fvmin[51]*dS*vmin+2.449489742783178*fvmax[97]*dS*vmax+1.414213562373095*fvmax[51]*dS*vmax); 
  out[9] += intFac*(2.449489742783178*fvmin[98]*dS*vmin-1.414213562373095*fvmin[52]*dS*vmin+2.449489742783178*fvmax[98]*dS*vmax+1.414213562373095*fvmax[52]*dS*vmax); 
  out[10] += intFac*(2.449489742783178*fvmin[135]*dS*vmin-1.414213562373095*fvmin[91]*dS*vmin+2.449489742783178*fvmax[135]*dS*vmax+1.414213562373095*fvmax[91]*dS*vmax); 
  out[11] += intFac*(2.449489742783178*fvmin[136]*dS*vmin-1.414213562373095*fvmin[92]*dS*vmin+2.449489742783178*fvmax[136]*dS*vmax+1.414213562373095*fvmax[92]*dS*vmax); 
 
} 
 
void BoundaryIntegral2x3vSer_F_VZ_P1(const double intFac, const double vmin, const double vmax, const double *dxv, const double *fvmin, const double *fvmax, double *out) 
{ 
  // intFac:             =1 for VmLBO, =2pi/m or 4pi/m for GkLBO. 
  // vmax, vmin:         maximum and minimum velocity of the velocity grid. 
  // dxv[5]:             cell length in each direciton. 
  // fvmax[32], fvmin[32]: distribution function at the velocity boundaries. 
  // out:                int dS of f|^(vmax)_(vmin) or vf^(vmax)_(vmin). 
 
  const double dS = 0.25*dxv[2]*dxv[3]; 
 
  out[8] += (2.449489742783178*fvmin[5]*dS+2.449489742783178*fvmax[5]*dS-1.414213562373095*fvmin[0]*dS+1.414213562373095*fvmax[0]*dS)*intFac; 
  out[9] += (2.449489742783178*fvmin[12]*dS+2.449489742783178*fvmax[12]*dS-1.414213562373095*fvmin[1]*dS+1.414213562373095*fvmax[1]*dS)*intFac; 
  out[10] += (2.449489742783178*fvmin[13]*dS+2.449489742783178*fvmax[13]*dS-1.414213562373095*fvmin[2]*dS+1.414213562373095*fvmax[2]*dS)*intFac; 
  out[11] += (2.449489742783178*fvmin[20]*dS+2.449489742783178*fvmax[20]*dS-1.414213562373095*fvmin[6]*dS+1.414213562373095*fvmax[6]*dS)*intFac; 
 
} 
 
void BoundaryIntegral2x3vSer_F_VZ_P2(const double intFac, const double vmin, const double vmax, const double *dxv, const double *fvmin, const double *fvmax, double *out) 
{ 
  // intFac:             =1 for VmLBO, =2pi/m or 4pi/m for GkLBO. 
  // vmax, vmin:         maximum and minimum velocity of the velocity grid. 
  // dxv[5]:             cell length in each direciton. 
  // fvmax[112], fvmin[112]: distribution function at the velocity boundaries. 
  // out:                int dS of f|^(vmax)_(vmin) or vf^(vmax)_(vmin). 
 
  const double dS = 0.25*dxv[2]*dxv[3]; 
 
  out[16] += ((-3.16227766016838*fvmin[20]*dS)+3.16227766016838*fvmax[20]*dS+2.449489742783178*fvmin[5]*dS+2.449489742783178*fvmax[5]*dS-1.414213562373095*fvmin[0]*dS+1.414213562373095*fvmax[0]*dS)*intFac; 
  out[17] += ((-3.16227766016838*fvmin[47]*dS)+3.16227766016838*fvmax[47]*dS+2.449489742783178*fvmin[12]*dS+2.449489742783178*fvmax[12]*dS-1.414213562373095*fvmin[1]*dS+1.414213562373095*fvmax[1]*dS)*intFac; 
  out[18] += ((-3.16227766016838*fvmin[48]*dS)+3.16227766016838*fvmax[48]*dS+2.449489742783178*fvmin[13]*dS+2.449489742783178*fvmax[13]*dS-1.414213562373095*fvmin[2]*dS+1.414213562373095*fvmax[2]*dS)*intFac; 
  out[19] += ((-3.16227766016838*fvmin[80]*dS)+3.16227766016838*fvmax[80]*dS+2.449489742783178*fvmin[25]*dS+2.449489742783178*fvmax[25]*dS-1.414213562373095*fvmin[6]*dS+1.414213562373095*fvmax[6]*dS)*intFac; 
  out[20] += (2.449489742783178*fvmin[43]*dS+2.449489742783178*fvmax[43]*dS-1.414213562373095*fvmin[16]*dS+1.414213562373095*fvmax[16]*dS)*intFac; 
  out[21] += (2.449489742783178*fvmin[44]*dS+2.449489742783178*fvmax[44]*dS-1.414213562373095*fvmin[17]*dS+1.414213562373095*fvmax[17]*dS)*intFac; 
  out[22] += (2.449489742783178*fvmin[68]*dS+2.449489742783178*fvmax[68]*dS-1.414213562373095*fvmin[31]*dS+1.414213562373095*fvmax[31]*dS)*intFac; 
  out[23] += (2.449489742783178*fvmin[69]*dS+2.449489742783178*fvmax[69]*dS-1.414213562373095*fvmin[32]*dS+1.414213562373095*fvmax[32]*dS)*intFac; 
 
} 
 
void BoundaryIntegral2x3vSer_F_VZ_P3(const double intFac, const double vmin, const double vmax, const double *dxv, const double *fvmin, const double *fvmax, double *out) 
{ 
  // intFac:             =1 for VmLBO, =2pi/m or 4pi/m for GkLBO. 
  // vmax, vmin:         maximum and minimum velocity of the velocity grid. 
  // dxv[5]:             cell length in each direciton. 
  // fvmax[192], fvmin[192]: distribution function at the velocity boundaries. 
  // out:                int dS of f|^(vmax)_(vmin) or vf^(vmax)_(vmin). 
 
  const double dS = 0.25*dxv[2]*dxv[3]; 
 
  out[24] += (3.741657386773942*fvmin[55]*dS+3.741657386773942*fvmax[55]*dS-3.16227766016838*fvmin[20]*dS+3.16227766016838*fvmax[20]*dS+2.449489742783178*fvmin[5]*dS+2.449489742783178*fvmax[5]*dS-1.414213562373095*fvmin[0]*dS+1.414213562373095*fvmax[0]*dS)*intFac; 
  out[25] += (3.741657386773942*fvmin[107]*dS+3.741657386773942*fvmax[107]*dS-3.16227766016838*fvmin[47]*dS+3.16227766016838*fvmax[47]*dS+2.449489742783178*fvmin[12]*dS+2.449489742783178*fvmax[12]*dS-1.414213562373095*fvmin[1]*dS+1.414213562373095*fvmax[1]*dS)*intFac; 
  out[26] += (3.741657386773942*fvmin[108]*dS+3.741657386773942*fvmax[108]*dS-3.16227766016838*fvmin[48]*dS+3.16227766016838*fvmax[48]*dS+2.449489742783178*fvmin[13]*dS+2.449489742783178*fvmax[13]*dS-1.414213562373095*fvmin[2]*dS+1.414213562373095*fvmax[2]*dS)*intFac; 
  out[27] += (3.741657386773942*fvmin[156]*dS+3.741657386773942*fvmax[156]*dS-3.16227766016838*fvmin[85]*dS+3.16227766016838*fvmax[85]*dS+2.449489742783178*fvmin[25]*dS+2.449489742783178*fvmax[25]*dS-1.414213562373095*fvmin[6]*dS+1.414213562373095*fvmax[6]*dS)*intFac; 
  out[28] += (2.449489742783178*fvmin[43]*dS+2.449489742783178*fvmax[43]*dS-1.414213562373095*fvmin[16]*dS+1.414213562373095*fvmax[16]*dS)*intFac; 
  out[29] += (2.449489742783178*fvmin[44]*dS+2.449489742783178*fvmax[44]*dS-1.414213562373095*fvmin[17]*dS+1.414213562373095*fvmax[17]*dS)*intFac; 
  out[30] += (2.449489742783178*fvmin[73]*dS+2.449489742783178*fvmax[73]*dS-1.414213562373095*fvmin[31]*dS+1.414213562373095*fvmax[31]*dS)*intFac; 
  out[31] += (2.449489742783178*fvmin[74]*dS+2.449489742783178*fvmax[74]*dS-1.414213562373095*fvmin[32]*dS+1.414213562373095*fvmax[32]*dS)*intFac; 
  out[32] += (2.449489742783178*fvmin[103]*dS+2.449489742783178*fvmax[103]*dS-1.414213562373095*fvmin[51]*dS+1.414213562373095*fvmax[51]*dS)*intFac; 
  out[33] += (2.449489742783178*fvmin[104]*dS+2.449489742783178*fvmax[104]*dS-1.414213562373095*fvmin[52]*dS+1.414213562373095*fvmax[52]*dS)*intFac; 
  out[34] += (2.449489742783178*fvmin[144]*dS+2.449489742783178*fvmax[144]*dS-1.414213562373095*fvmin[91]*dS+1.414213562373095*fvmax[91]*dS)*intFac; 
  out[35] += (2.449489742783178*fvmin[145]*dS+2.449489742783178*fvmax[145]*dS-1.414213562373095*fvmin[92]*dS+1.414213562373095*fvmax[92]*dS)*intFac; 
 
} 
 
void BoundaryIntegral2x3vSer_vF_VZ_P1(const double intFac, const double vmin, const double vmax, const double *dxv, const double *fvmin, const double *fvmax, double *out) 
{ 
  // intFac:             =1 for VmLBO, =2pi/m or 4pi/m for GkLBO. 
  // vmax, vmin:         maximum and minimum velocity of the velocity grid. 
  // dxv[5]:             cell length in each direciton. 
  // fvmax[32], fvmin[32]: distribution function at the velocity boundaries. 
  // out:                int dS of f|^(vmax)_(vmin) or vf^(vmax)_(vmin). 
 
  const double dS = 0.25*dxv[2]*dxv[3]; 
 
  out[0] += intFac*(2.449489742783178*fvmin[5]*dS*vmin-1.414213562373095*fvmin[0]*dS*vmin+2.449489742783178*fvmax[5]*dS*vmax+1.414213562373095*fvmax[0]*dS*vmax); 
  out[1] += intFac*(2.449489742783178*fvmin[12]*dS*vmin-1.414213562373095*fvmin[1]*dS*vmin+2.449489742783178*fvmax[12]*dS*vmax+1.414213562373095*fvmax[1]*dS*vmax); 
  out[2] += intFac*(2.449489742783178*fvmin[13]*dS*vmin-1.414213562373095*fvmin[2]*dS*vmin+2.449489742783178*fvmax[13]*dS*vmax+1.414213562373095*fvmax[2]*dS*vmax); 
  out[3] += intFac*(2.449489742783178*fvmin[20]*dS*vmin-1.414213562373095*fvmin[6]*dS*vmin+2.449489742783178*fvmax[20]*dS*vmax+1.414213562373095*fvmax[6]*dS*vmax); 
 
} 
 
void BoundaryIntegral2x3vSer_vF_VZ_P2(const double intFac, const double vmin, const double vmax, const double *dxv, const double *fvmin, const double *fvmax, double *out) 
{ 
  // intFac:             =1 for VmLBO, =2pi/m or 4pi/m for GkLBO. 
  // vmax, vmin:         maximum and minimum velocity of the velocity grid. 
  // dxv[5]:             cell length in each direciton. 
  // fvmax[112], fvmin[112]: distribution function at the velocity boundaries. 
  // out:                int dS of f|^(vmax)_(vmin) or vf^(vmax)_(vmin). 
 
  const double dS = 0.25*dxv[2]*dxv[3]; 
 
  out[0] += intFac*((-3.16227766016838*fvmin[20]*dS*vmin)+2.449489742783178*fvmin[5]*dS*vmin-1.414213562373095*fvmin[0]*dS*vmin+3.16227766016838*fvmax[20]*dS*vmax+2.449489742783178*fvmax[5]*dS*vmax+1.414213562373095*fvmax[0]*dS*vmax); 
  out[1] += intFac*((-3.16227766016838*fvmin[47]*dS*vmin)+2.449489742783178*fvmin[12]*dS*vmin-1.414213562373095*fvmin[1]*dS*vmin+3.16227766016838*fvmax[47]*dS*vmax+2.449489742783178*fvmax[12]*dS*vmax+1.414213562373095*fvmax[1]*dS*vmax); 
  out[2] += intFac*((-3.16227766016838*fvmin[48]*dS*vmin)+2.449489742783178*fvmin[13]*dS*vmin-1.414213562373095*fvmin[2]*dS*vmin+3.16227766016838*fvmax[48]*dS*vmax+2.449489742783178*fvmax[13]*dS*vmax+1.414213562373095*fvmax[2]*dS*vmax); 
  out[3] += intFac*((-3.16227766016838*fvmin[80]*dS*vmin)+2.449489742783178*fvmin[25]*dS*vmin-1.414213562373095*fvmin[6]*dS*vmin+3.16227766016838*fvmax[80]*dS*vmax+2.449489742783178*fvmax[25]*dS*vmax+1.414213562373095*fvmax[6]*dS*vmax); 
  out[4] += intFac*(2.449489742783178*fvmin[43]*dS*vmin-1.414213562373095*fvmin[16]*dS*vmin+2.449489742783178*fvmax[43]*dS*vmax+1.414213562373095*fvmax[16]*dS*vmax); 
  out[5] += intFac*(2.449489742783178*fvmin[44]*dS*vmin-1.414213562373095*fvmin[17]*dS*vmin+2.449489742783178*fvmax[44]*dS*vmax+1.414213562373095*fvmax[17]*dS*vmax); 
  out[6] += intFac*(2.449489742783178*fvmin[68]*dS*vmin-1.414213562373095*fvmin[31]*dS*vmin+2.449489742783178*fvmax[68]*dS*vmax+1.414213562373095*fvmax[31]*dS*vmax); 
  out[7] += intFac*(2.449489742783178*fvmin[69]*dS*vmin-1.414213562373095*fvmin[32]*dS*vmin+2.449489742783178*fvmax[69]*dS*vmax+1.414213562373095*fvmax[32]*dS*vmax); 
 
} 
 
void BoundaryIntegral2x3vSer_vF_VZ_P3(const double intFac, const double vmin, const double vmax, const double *dxv, const double *fvmin, const double *fvmax, double *out) 
{ 
  // intFac:             =1 for VmLBO, =2pi/m or 4pi/m for GkLBO. 
  // vmax, vmin:         maximum and minimum velocity of the velocity grid. 
  // dxv[5]:             cell length in each direciton. 
  // fvmax[192], fvmin[192]: distribution function at the velocity boundaries. 
  // out:                int dS of f|^(vmax)_(vmin) or vf^(vmax)_(vmin). 
 
  const double dS = 0.25*dxv[2]*dxv[3]; 
 
  out[0] += intFac*(3.741657386773942*fvmin[55]*dS*vmin-3.16227766016838*fvmin[20]*dS*vmin+2.449489742783178*fvmin[5]*dS*vmin-1.414213562373095*fvmin[0]*dS*vmin+3.741657386773942*fvmax[55]*dS*vmax+3.16227766016838*fvmax[20]*dS*vmax+2.449489742783178*fvmax[5]*dS*vmax+1.414213562373095*fvmax[0]*dS*vmax); 
  out[1] += intFac*(3.741657386773942*fvmin[107]*dS*vmin-3.16227766016838*fvmin[47]*dS*vmin+2.449489742783178*fvmin[12]*dS*vmin-1.414213562373095*fvmin[1]*dS*vmin+3.741657386773942*fvmax[107]*dS*vmax+3.16227766016838*fvmax[47]*dS*vmax+2.449489742783178*fvmax[12]*dS*vmax+1.414213562373095*fvmax[1]*dS*vmax); 
  out[2] += intFac*(3.741657386773942*fvmin[108]*dS*vmin-3.16227766016838*fvmin[48]*dS*vmin+2.449489742783178*fvmin[13]*dS*vmin-1.414213562373095*fvmin[2]*dS*vmin+3.741657386773942*fvmax[108]*dS*vmax+3.16227766016838*fvmax[48]*dS*vmax+2.449489742783178*fvmax[13]*dS*vmax+1.414213562373095*fvmax[2]*dS*vmax); 
  out[3] += intFac*(3.741657386773942*fvmin[156]*dS*vmin-3.16227766016838*fvmin[85]*dS*vmin+2.449489742783178*fvmin[25]*dS*vmin-1.414213562373095*fvmin[6]*dS*vmin+3.741657386773942*fvmax[156]*dS*vmax+3.16227766016838*fvmax[85]*dS*vmax+2.449489742783178*fvmax[25]*dS*vmax+1.414213562373095*fvmax[6]*dS*vmax); 
  out[4] += intFac*(2.449489742783178*fvmin[43]*dS*vmin-1.414213562373095*fvmin[16]*dS*vmin+2.449489742783178*fvmax[43]*dS*vmax+1.414213562373095*fvmax[16]*dS*vmax); 
  out[5] += intFac*(2.449489742783178*fvmin[44]*dS*vmin-1.414213562373095*fvmin[17]*dS*vmin+2.449489742783178*fvmax[44]*dS*vmax+1.414213562373095*fvmax[17]*dS*vmax); 
  out[6] += intFac*(2.449489742783178*fvmin[73]*dS*vmin-1.414213562373095*fvmin[31]*dS*vmin+2.449489742783178*fvmax[73]*dS*vmax+1.414213562373095*fvmax[31]*dS*vmax); 
  out[7] += intFac*(2.449489742783178*fvmin[74]*dS*vmin-1.414213562373095*fvmin[32]*dS*vmin+2.449489742783178*fvmax[74]*dS*vmax+1.414213562373095*fvmax[32]*dS*vmax); 
  out[8] += intFac*(2.449489742783178*fvmin[103]*dS*vmin-1.414213562373095*fvmin[51]*dS*vmin+2.449489742783178*fvmax[103]*dS*vmax+1.414213562373095*fvmax[51]*dS*vmax); 
  out[9] += intFac*(2.449489742783178*fvmin[104]*dS*vmin-1.414213562373095*fvmin[52]*dS*vmin+2.449489742783178*fvmax[104]*dS*vmax+1.414213562373095*fvmax[52]*dS*vmax); 
  out[10] += intFac*(2.449489742783178*fvmin[144]*dS*vmin-1.414213562373095*fvmin[91]*dS*vmin+2.449489742783178*fvmax[144]*dS*vmax+1.414213562373095*fvmax[91]*dS*vmax); 
  out[11] += intFac*(2.449489742783178*fvmin[145]*dS*vmin-1.414213562373095*fvmin[92]*dS*vmin+2.449489742783178*fvmax[145]*dS*vmax+1.414213562373095*fvmax[92]*dS*vmax); 
 
} 
 
