#include <math.h> 
#include <PrimMomentsModDecl.h> 
 
using namespace Eigen; 
 
void SelfPrimMoments3x1vMax_P1(const int pVdim, const double *m0, const double *m1, const double *m2, const double *cM, const double *cE, double *u, double *vtSq) 
{ 
  // m0,m1,m2: moments of the distribution function. 
  // cM, cE: vtSq*cM and vtSq*cE are corrections to u and vtSq, respectively. 
  // u:        velocity. 
  // vtSq:     squared thermal speed, sqrt(T/m). 
 
  // If a corner value is below zero, use cell average m0.
  bool m0Avg = false;
  if ((-0.6123724356957944*m0[3])-0.6123724356957944*m0[2]-0.6123724356957944*m0[1]+0.3535533905932737*m0[0] < 0) { 
    m0Avg = true;
  }
  if ((-0.6123724356957944*m0[3])-0.6123724356957944*m0[2]-0.6123724356957944*m0[1]+0.3535533905932737*m0[0] < 0) { 
    m0Avg = true;
  }
  if ((-0.6123724356957944*m0[3])-0.6123724356957944*m0[2]-0.6123724356957944*m0[1]+0.3535533905932737*m0[0] < 0) { 
    m0Avg = true;
  }
  if ((-0.6123724356957944*m0[3])-0.6123724356957944*m0[2]-0.6123724356957944*m0[1]+0.3535533905932737*m0[0] < 0) { 
    m0Avg = true;
  }
  if ((-0.6123724356957944*m0[3])-0.6123724356957944*m0[2]+0.6123724356957944*m0[1]+0.3535533905932737*m0[0] < 0) { 
    m0Avg = true;
  }
  if ((-0.6123724356957944*m0[3])-0.6123724356957944*m0[2]+0.6123724356957944*m0[1]+0.3535533905932737*m0[0] < 0) { 
    m0Avg = true;
  }
  if ((-0.6123724356957944*m0[3])-0.6123724356957944*m0[2]+0.6123724356957944*m0[1]+0.3535533905932737*m0[0] < 0) { 
    m0Avg = true;
  }
  if ((-0.6123724356957944*m0[3])-0.6123724356957944*m0[2]+0.6123724356957944*m0[1]+0.3535533905932737*m0[0] < 0) { 
    m0Avg = true;
  }
 
  double m0s[4]; 
  if (m0Avg) { 
    m0s[0] = m0[0]; 
    m0s[1] = 0.0; 
    m0s[2] = 0.0; 
    m0s[3] = 0.0; 
  } else { 
    m0s[0] = m0[0]; 
    m0s[1] = m0[1]; 
    m0s[2] = m0[2]; 
    m0s[3] = m0[3]; 
  } 
 
  // Declare Eigen matrix and vectors for weak division. 
  Eigen::MatrixXd BigAEM = Eigen::MatrixXd::Zero(8,8); 
  Eigen::VectorXd bEV = Eigen::VectorXd::Zero(8);  
  Eigen::VectorXd xEV = Eigen::VectorXd::Zero(8);  
 
  // ....... Block from weak multiply of uX and m0  .......... // 
  BigAEM(0,0) = 0.3535533905932737*m0s[0]; 
  BigAEM(0,1) = 0.3535533905932737*m0s[1]; 
  BigAEM(0,2) = 0.3535533905932737*m0s[2]; 
  BigAEM(0,3) = 0.3535533905932737*m0s[3]; 
  BigAEM(1,0) = 0.3535533905932737*m0s[1]; 
  BigAEM(1,1) = 0.3535533905932737*m0s[0]; 
  BigAEM(2,0) = 0.3535533905932737*m0s[2]; 
  BigAEM(2,2) = 0.3535533905932737*m0s[0]; 
  BigAEM(3,0) = 0.3535533905932737*m0s[3]; 
  BigAEM(3,3) = 0.3535533905932737*m0s[0]; 
 
  // ....... Block from correction to uX .......... // 
  BigAEM(0,4) = -0.3535533905932737*cM[0]; 
  BigAEM(0,5) = -0.3535533905932737*cM[1]; 
  BigAEM(0,6) = -0.3535533905932737*cM[2]; 
  BigAEM(0,7) = -0.3535533905932737*cM[3]; 
  BigAEM(1,4) = -0.3535533905932737*cM[1]; 
  BigAEM(1,5) = -0.3535533905932737*cM[0]; 
  BigAEM(2,4) = -0.3535533905932737*cM[2]; 
  BigAEM(2,6) = -0.3535533905932737*cM[0]; 
  BigAEM(3,4) = -0.3535533905932737*cM[3]; 
  BigAEM(3,7) = -0.3535533905932737*cM[0]; 
 
  // ....... Block from weak multiply of uX and m1X  .......... // 
  BigAEM(4,0) = 0.3535533905932737*m1[0]; 
  BigAEM(4,1) = 0.3535533905932737*m1[1]; 
  BigAEM(4,2) = 0.3535533905932737*m1[2]; 
  BigAEM(4,3) = 0.3535533905932737*m1[3]; 
  BigAEM(5,0) = 0.3535533905932737*m1[1]; 
  BigAEM(5,1) = 0.3535533905932737*m1[0]; 
  BigAEM(6,0) = 0.3535533905932737*m1[2]; 
  BigAEM(6,2) = 0.3535533905932737*m1[0]; 
  BigAEM(7,0) = 0.3535533905932737*m1[3]; 
  BigAEM(7,3) = 0.3535533905932737*m1[0]; 
 
  // ....... Block from correction to vtSq .......... // 
  BigAEM(4,4) = 0.3535533905932737*m0s[0]*pVdim-0.3535533905932737*cE[0]; 
  BigAEM(4,5) = 0.3535533905932737*m0s[1]*pVdim-0.3535533905932737*cE[1]; 
  BigAEM(4,6) = 0.3535533905932737*m0s[2]*pVdim-0.3535533905932737*cE[2]; 
  BigAEM(4,7) = 0.3535533905932737*m0s[3]*pVdim-0.3535533905932737*cE[3]; 
  BigAEM(5,4) = 0.3535533905932737*m0s[1]*pVdim-0.3535533905932737*cE[1]; 
  BigAEM(5,5) = 0.3535533905932737*m0s[0]*pVdim-0.3535533905932737*cE[0]; 
  BigAEM(6,4) = 0.3535533905932737*m0s[2]*pVdim-0.3535533905932737*cE[2]; 
  BigAEM(6,6) = 0.3535533905932737*m0s[0]*pVdim-0.3535533905932737*cE[0]; 
  BigAEM(7,4) = 0.3535533905932737*m0s[3]*pVdim-0.3535533905932737*cE[3]; 
  BigAEM(7,7) = 0.3535533905932737*m0s[0]*pVdim-0.3535533905932737*cE[0]; 
 
  // ....... RHS vector is composed of m1 and m2 .......... // 
  bEV << m1[0],m1[1],m1[2],m1[3],m2[0],m2[1],m2[2],m2[3]; 
 
  xEV = BigAEM.colPivHouseholderQr().solve(bEV); 
 
  Eigen::Map<VectorXd>(u,4,1) = xEV.segment<4>(0); 
 
  Eigen::Map<VectorXd>(vtSq,4,1) = xEV.segment<4>(4); 
 
} 
 
void SelfPrimMoments3x1vMax_P2(const int pVdim, const double *m0, const double *m1, const double *m2, const double *cM, const double *cE, double *u, double *vtSq) 
{ 
  // m0,m1,m2: moments of the distribution function. 
  // cM, cE: vtSq*cM and vtSq*cE are corrections to u and vtSq, respectively. 
  // u:        velocity. 
  // vtSq:     squared thermal speed, sqrt(T/m). 
 
  // If a corner value is below zero, use cell average m0.
  bool m0Avg = false;
  if (0.7905694150420947*m0[9]+0.7905694150420947*m0[8]+0.7905694150420947*m0[7]+1.060660171779821*m0[6]+1.060660171779821*m0[5]+1.060660171779821*m0[4]-0.6123724356957944*m0[3]-0.6123724356957944*m0[2]-0.6123724356957944*m0[1]+0.3535533905932737*m0[0] < 0) { 
    m0Avg = true;
  }
  if (0.7905694150420947*m0[9]+0.7905694150420947*m0[8]+0.7905694150420947*m0[7]+1.060660171779821*m0[6]+1.060660171779821*m0[5]+1.060660171779821*m0[4]-0.6123724356957944*m0[3]-0.6123724356957944*m0[2]-0.6123724356957944*m0[1]+0.3535533905932737*m0[0] < 0) { 
    m0Avg = true;
  }
  if (0.7905694150420947*m0[9]+0.7905694150420947*m0[8]+0.7905694150420947*m0[7]+1.060660171779821*m0[6]+1.060660171779821*m0[5]+1.060660171779821*m0[4]-0.6123724356957944*m0[3]-0.6123724356957944*m0[2]-0.6123724356957944*m0[1]+0.3535533905932737*m0[0] < 0) { 
    m0Avg = true;
  }
  if (0.7905694150420947*m0[9]+0.7905694150420947*m0[8]+0.7905694150420947*m0[7]+1.060660171779821*m0[6]+1.060660171779821*m0[5]+1.060660171779821*m0[4]-0.6123724356957944*m0[3]-0.6123724356957944*m0[2]-0.6123724356957944*m0[1]+0.3535533905932737*m0[0] < 0) { 
    m0Avg = true;
  }
  if (0.7905694150420947*m0[9]+0.7905694150420947*m0[8]+0.7905694150420947*m0[7]+1.060660171779821*m0[6]-1.060660171779821*m0[5]-1.060660171779821*m0[4]-0.6123724356957944*m0[3]-0.6123724356957944*m0[2]+0.6123724356957944*m0[1]+0.3535533905932737*m0[0] < 0) { 
    m0Avg = true;
  }
  if (0.7905694150420947*m0[9]+0.7905694150420947*m0[8]+0.7905694150420947*m0[7]+1.060660171779821*m0[6]-1.060660171779821*m0[5]-1.060660171779821*m0[4]-0.6123724356957944*m0[3]-0.6123724356957944*m0[2]+0.6123724356957944*m0[1]+0.3535533905932737*m0[0] < 0) { 
    m0Avg = true;
  }
  if (0.7905694150420947*m0[9]+0.7905694150420947*m0[8]+0.7905694150420947*m0[7]+1.060660171779821*m0[6]-1.060660171779821*m0[5]-1.060660171779821*m0[4]-0.6123724356957944*m0[3]-0.6123724356957944*m0[2]+0.6123724356957944*m0[1]+0.3535533905932737*m0[0] < 0) { 
    m0Avg = true;
  }
  if (0.7905694150420947*m0[9]+0.7905694150420947*m0[8]+0.7905694150420947*m0[7]+1.060660171779821*m0[6]-1.060660171779821*m0[5]-1.060660171779821*m0[4]-0.6123724356957944*m0[3]-0.6123724356957944*m0[2]+0.6123724356957944*m0[1]+0.3535533905932737*m0[0] < 0) { 
    m0Avg = true;
  }
 
  double m0s[10]; 
  if (m0Avg) { 
    m0s[0] = m0[0]; 
    m0s[1] = 0.0; 
    m0s[2] = 0.0; 
    m0s[3] = 0.0; 
    m0s[4] = 0.0; 
    m0s[5] = 0.0; 
    m0s[6] = 0.0; 
    m0s[7] = 0.0; 
    m0s[8] = 0.0; 
    m0s[9] = 0.0; 
  } else { 
    m0s[0] = m0[0]; 
    m0s[1] = m0[1]; 
    m0s[2] = m0[2]; 
    m0s[3] = m0[3]; 
    m0s[4] = m0[4]; 
    m0s[5] = m0[5]; 
    m0s[6] = m0[6]; 
    m0s[7] = m0[7]; 
    m0s[8] = m0[8]; 
    m0s[9] = m0[9]; 
  } 
 
  // Declare Eigen matrix and vectors for weak division. 
  Eigen::MatrixXd BigAEM = Eigen::MatrixXd::Zero(20,20); 
  Eigen::VectorXd bEV = Eigen::VectorXd::Zero(20);  
  Eigen::VectorXd xEV = Eigen::VectorXd::Zero(20);  
 
  // ....... Block from weak multiply of uX and m0  .......... // 
  BigAEM(0,0) = 0.3535533905932737*m0s[0]; 
  BigAEM(0,1) = 0.3535533905932737*m0s[1]; 
  BigAEM(0,2) = 0.3535533905932737*m0s[2]; 
  BigAEM(0,3) = 0.3535533905932737*m0s[3]; 
  BigAEM(0,4) = 0.3535533905932737*m0s[4]; 
  BigAEM(0,5) = 0.3535533905932737*m0s[5]; 
  BigAEM(0,6) = 0.3535533905932737*m0s[6]; 
  BigAEM(0,7) = 0.3535533905932737*m0s[7]; 
  BigAEM(0,8) = 0.3535533905932737*m0s[8]; 
  BigAEM(0,9) = 0.3535533905932737*m0s[9]; 
  BigAEM(1,0) = 0.3535533905932737*m0s[1]; 
  BigAEM(1,1) = 0.3162277660168379*m0s[7]+0.3535533905932737*m0s[0]; 
  BigAEM(1,2) = 0.3535533905932737*m0s[4]; 
  BigAEM(1,3) = 0.3535533905932737*m0s[5]; 
  BigAEM(1,4) = 0.3535533905932737*m0s[2]; 
  BigAEM(1,5) = 0.3535533905932737*m0s[3]; 
  BigAEM(1,7) = 0.3162277660168379*m0s[1]; 
  BigAEM(2,0) = 0.3535533905932737*m0s[2]; 
  BigAEM(2,1) = 0.3535533905932737*m0s[4]; 
  BigAEM(2,2) = 0.3162277660168379*m0s[8]+0.3535533905932737*m0s[0]; 
  BigAEM(2,3) = 0.3535533905932737*m0s[6]; 
  BigAEM(2,4) = 0.3535533905932737*m0s[1]; 
  BigAEM(2,6) = 0.3535533905932737*m0s[3]; 
  BigAEM(2,8) = 0.3162277660168379*m0s[2]; 
  BigAEM(3,0) = 0.3535533905932737*m0s[3]; 
  BigAEM(3,1) = 0.3535533905932737*m0s[5]; 
  BigAEM(3,2) = 0.3535533905932737*m0s[6]; 
  BigAEM(3,3) = 0.3162277660168379*m0s[9]+0.3535533905932737*m0s[0]; 
  BigAEM(3,5) = 0.3535533905932737*m0s[1]; 
  BigAEM(3,6) = 0.3535533905932737*m0s[2]; 
  BigAEM(3,9) = 0.3162277660168379*m0s[3]; 
  BigAEM(4,0) = 0.3535533905932737*m0s[4]; 
  BigAEM(4,1) = 0.3535533905932737*m0s[2]; 
  BigAEM(4,2) = 0.3535533905932737*m0s[1]; 
  BigAEM(4,4) = 0.3162277660168379*m0s[8]+0.3162277660168379*m0s[7]+0.3535533905932737*m0s[0]; 
  BigAEM(4,5) = 0.3535533905932737*m0s[6]; 
  BigAEM(4,6) = 0.3535533905932737*m0s[5]; 
  BigAEM(4,7) = 0.3162277660168379*m0s[4]; 
  BigAEM(4,8) = 0.3162277660168379*m0s[4]; 
  BigAEM(5,0) = 0.3535533905932737*m0s[5]; 
  BigAEM(5,1) = 0.3535533905932737*m0s[3]; 
  BigAEM(5,3) = 0.3535533905932737*m0s[1]; 
  BigAEM(5,4) = 0.3535533905932737*m0s[6]; 
  BigAEM(5,5) = 0.3162277660168379*m0s[9]+0.3162277660168379*m0s[7]+0.3535533905932737*m0s[0]; 
  BigAEM(5,6) = 0.3535533905932737*m0s[4]; 
  BigAEM(5,7) = 0.3162277660168379*m0s[5]; 
  BigAEM(5,9) = 0.3162277660168379*m0s[5]; 
  BigAEM(6,0) = 0.3535533905932737*m0s[6]; 
  BigAEM(6,2) = 0.3535533905932737*m0s[3]; 
  BigAEM(6,3) = 0.3535533905932737*m0s[2]; 
  BigAEM(6,4) = 0.3535533905932737*m0s[5]; 
  BigAEM(6,5) = 0.3535533905932737*m0s[4]; 
  BigAEM(6,6) = 0.3162277660168379*m0s[9]+0.3162277660168379*m0s[8]+0.3535533905932737*m0s[0]; 
  BigAEM(6,8) = 0.3162277660168379*m0s[6]; 
  BigAEM(6,9) = 0.3162277660168379*m0s[6]; 
  BigAEM(7,0) = 0.3535533905932737*m0s[7]; 
  BigAEM(7,1) = 0.3162277660168379*m0s[1]; 
  BigAEM(7,4) = 0.3162277660168379*m0s[4]; 
  BigAEM(7,5) = 0.3162277660168379*m0s[5]; 
  BigAEM(7,7) = 0.2258769757263128*m0s[7]+0.3535533905932737*m0s[0]; 
  BigAEM(8,0) = 0.3535533905932737*m0s[8]; 
  BigAEM(8,2) = 0.3162277660168379*m0s[2]; 
  BigAEM(8,4) = 0.3162277660168379*m0s[4]; 
  BigAEM(8,6) = 0.3162277660168379*m0s[6]; 
  BigAEM(8,8) = 0.2258769757263128*m0s[8]+0.3535533905932737*m0s[0]; 
  BigAEM(9,0) = 0.3535533905932737*m0s[9]; 
  BigAEM(9,3) = 0.3162277660168379*m0s[3]; 
  BigAEM(9,5) = 0.3162277660168379*m0s[5]; 
  BigAEM(9,6) = 0.3162277660168379*m0s[6]; 
  BigAEM(9,9) = 0.2258769757263128*m0s[9]+0.3535533905932737*m0s[0]; 
 
  // ....... Block from correction to uX .......... // 
  BigAEM(0,10) = -0.3535533905932737*cM[0]; 
  BigAEM(0,11) = -0.3535533905932737*cM[1]; 
  BigAEM(0,12) = -0.3535533905932737*cM[2]; 
  BigAEM(0,13) = -0.3535533905932737*cM[3]; 
  BigAEM(0,14) = -0.3535533905932737*cM[4]; 
  BigAEM(0,15) = -0.3535533905932737*cM[5]; 
  BigAEM(0,16) = -0.3535533905932737*cM[6]; 
  BigAEM(0,17) = -0.3535533905932737*cM[7]; 
  BigAEM(0,18) = -0.3535533905932737*cM[8]; 
  BigAEM(0,19) = -0.3535533905932737*cM[9]; 
  BigAEM(1,10) = -0.3535533905932737*cM[1]; 
  BigAEM(1,11) = (-0.3162277660168379*cM[7])-0.3535533905932737*cM[0]; 
  BigAEM(1,12) = -0.3535533905932737*cM[4]; 
  BigAEM(1,13) = -0.3535533905932737*cM[5]; 
  BigAEM(1,14) = -0.3535533905932737*cM[2]; 
  BigAEM(1,15) = -0.3535533905932737*cM[3]; 
  BigAEM(1,17) = -0.3162277660168379*cM[1]; 
  BigAEM(2,10) = -0.3535533905932737*cM[2]; 
  BigAEM(2,11) = -0.3535533905932737*cM[4]; 
  BigAEM(2,12) = (-0.3162277660168379*cM[8])-0.3535533905932737*cM[0]; 
  BigAEM(2,13) = -0.3535533905932737*cM[6]; 
  BigAEM(2,14) = -0.3535533905932737*cM[1]; 
  BigAEM(2,16) = -0.3535533905932737*cM[3]; 
  BigAEM(2,18) = -0.3162277660168379*cM[2]; 
  BigAEM(3,10) = -0.3535533905932737*cM[3]; 
  BigAEM(3,11) = -0.3535533905932737*cM[5]; 
  BigAEM(3,12) = -0.3535533905932737*cM[6]; 
  BigAEM(3,13) = (-0.3162277660168379*cM[9])-0.3535533905932737*cM[0]; 
  BigAEM(3,15) = -0.3535533905932737*cM[1]; 
  BigAEM(3,16) = -0.3535533905932737*cM[2]; 
  BigAEM(3,19) = -0.3162277660168379*cM[3]; 
  BigAEM(4,10) = -0.3535533905932737*cM[4]; 
  BigAEM(4,11) = -0.3535533905932737*cM[2]; 
  BigAEM(4,12) = -0.3535533905932737*cM[1]; 
  BigAEM(4,14) = (-0.3162277660168379*cM[8])-0.3162277660168379*cM[7]-0.3535533905932737*cM[0]; 
  BigAEM(4,15) = -0.3535533905932737*cM[6]; 
  BigAEM(4,16) = -0.3535533905932737*cM[5]; 
  BigAEM(4,17) = -0.3162277660168379*cM[4]; 
  BigAEM(4,18) = -0.3162277660168379*cM[4]; 
  BigAEM(5,10) = -0.3535533905932737*cM[5]; 
  BigAEM(5,11) = -0.3535533905932737*cM[3]; 
  BigAEM(5,13) = -0.3535533905932737*cM[1]; 
  BigAEM(5,14) = -0.3535533905932737*cM[6]; 
  BigAEM(5,15) = (-0.3162277660168379*cM[9])-0.3162277660168379*cM[7]-0.3535533905932737*cM[0]; 
  BigAEM(5,16) = -0.3535533905932737*cM[4]; 
  BigAEM(5,17) = -0.3162277660168379*cM[5]; 
  BigAEM(5,19) = -0.3162277660168379*cM[5]; 
  BigAEM(6,10) = -0.3535533905932737*cM[6]; 
  BigAEM(6,12) = -0.3535533905932737*cM[3]; 
  BigAEM(6,13) = -0.3535533905932737*cM[2]; 
  BigAEM(6,14) = -0.3535533905932737*cM[5]; 
  BigAEM(6,15) = -0.3535533905932737*cM[4]; 
  BigAEM(6,16) = (-0.3162277660168379*cM[9])-0.3162277660168379*cM[8]-0.3535533905932737*cM[0]; 
  BigAEM(6,18) = -0.3162277660168379*cM[6]; 
  BigAEM(6,19) = -0.3162277660168379*cM[6]; 
  BigAEM(7,10) = -0.3535533905932737*cM[7]; 
  BigAEM(7,11) = -0.3162277660168379*cM[1]; 
  BigAEM(7,14) = -0.3162277660168379*cM[4]; 
  BigAEM(7,15) = -0.3162277660168379*cM[5]; 
  BigAEM(7,17) = (-0.2258769757263128*cM[7])-0.3535533905932737*cM[0]; 
  BigAEM(8,10) = -0.3535533905932737*cM[8]; 
  BigAEM(8,12) = -0.3162277660168379*cM[2]; 
  BigAEM(8,14) = -0.3162277660168379*cM[4]; 
  BigAEM(8,16) = -0.3162277660168379*cM[6]; 
  BigAEM(8,18) = (-0.2258769757263128*cM[8])-0.3535533905932737*cM[0]; 
  BigAEM(9,10) = -0.3535533905932737*cM[9]; 
  BigAEM(9,13) = -0.3162277660168379*cM[3]; 
  BigAEM(9,15) = -0.3162277660168379*cM[5]; 
  BigAEM(9,16) = -0.3162277660168379*cM[6]; 
  BigAEM(9,19) = (-0.2258769757263128*cM[9])-0.3535533905932737*cM[0]; 
 
  // ....... Block from weak multiply of uX and m1X  .......... // 
  BigAEM(10,0) = 0.3535533905932737*m1[0]; 
  BigAEM(10,1) = 0.3535533905932737*m1[1]; 
  BigAEM(10,2) = 0.3535533905932737*m1[2]; 
  BigAEM(10,3) = 0.3535533905932737*m1[3]; 
  BigAEM(10,4) = 0.3535533905932737*m1[4]; 
  BigAEM(10,5) = 0.3535533905932737*m1[5]; 
  BigAEM(10,6) = 0.3535533905932737*m1[6]; 
  BigAEM(10,7) = 0.3535533905932737*m1[7]; 
  BigAEM(10,8) = 0.3535533905932737*m1[8]; 
  BigAEM(10,9) = 0.3535533905932737*m1[9]; 
  BigAEM(11,0) = 0.3535533905932737*m1[1]; 
  BigAEM(11,1) = 0.3162277660168379*m1[7]+0.3535533905932737*m1[0]; 
  BigAEM(11,2) = 0.3535533905932737*m1[4]; 
  BigAEM(11,3) = 0.3535533905932737*m1[5]; 
  BigAEM(11,4) = 0.3535533905932737*m1[2]; 
  BigAEM(11,5) = 0.3535533905932737*m1[3]; 
  BigAEM(11,7) = 0.3162277660168379*m1[1]; 
  BigAEM(12,0) = 0.3535533905932737*m1[2]; 
  BigAEM(12,1) = 0.3535533905932737*m1[4]; 
  BigAEM(12,2) = 0.3162277660168379*m1[8]+0.3535533905932737*m1[0]; 
  BigAEM(12,3) = 0.3535533905932737*m1[6]; 
  BigAEM(12,4) = 0.3535533905932737*m1[1]; 
  BigAEM(12,6) = 0.3535533905932737*m1[3]; 
  BigAEM(12,8) = 0.3162277660168379*m1[2]; 
  BigAEM(13,0) = 0.3535533905932737*m1[3]; 
  BigAEM(13,1) = 0.3535533905932737*m1[5]; 
  BigAEM(13,2) = 0.3535533905932737*m1[6]; 
  BigAEM(13,3) = 0.3162277660168379*m1[9]+0.3535533905932737*m1[0]; 
  BigAEM(13,5) = 0.3535533905932737*m1[1]; 
  BigAEM(13,6) = 0.3535533905932737*m1[2]; 
  BigAEM(13,9) = 0.3162277660168379*m1[3]; 
  BigAEM(14,0) = 0.3535533905932737*m1[4]; 
  BigAEM(14,1) = 0.3535533905932737*m1[2]; 
  BigAEM(14,2) = 0.3535533905932737*m1[1]; 
  BigAEM(14,4) = 0.3162277660168379*m1[8]+0.3162277660168379*m1[7]+0.3535533905932737*m1[0]; 
  BigAEM(14,5) = 0.3535533905932737*m1[6]; 
  BigAEM(14,6) = 0.3535533905932737*m1[5]; 
  BigAEM(14,7) = 0.3162277660168379*m1[4]; 
  BigAEM(14,8) = 0.3162277660168379*m1[4]; 
  BigAEM(15,0) = 0.3535533905932737*m1[5]; 
  BigAEM(15,1) = 0.3535533905932737*m1[3]; 
  BigAEM(15,3) = 0.3535533905932737*m1[1]; 
  BigAEM(15,4) = 0.3535533905932737*m1[6]; 
  BigAEM(15,5) = 0.3162277660168379*m1[9]+0.3162277660168379*m1[7]+0.3535533905932737*m1[0]; 
  BigAEM(15,6) = 0.3535533905932737*m1[4]; 
  BigAEM(15,7) = 0.3162277660168379*m1[5]; 
  BigAEM(15,9) = 0.3162277660168379*m1[5]; 
  BigAEM(16,0) = 0.3535533905932737*m1[6]; 
  BigAEM(16,2) = 0.3535533905932737*m1[3]; 
  BigAEM(16,3) = 0.3535533905932737*m1[2]; 
  BigAEM(16,4) = 0.3535533905932737*m1[5]; 
  BigAEM(16,5) = 0.3535533905932737*m1[4]; 
  BigAEM(16,6) = 0.3162277660168379*m1[9]+0.3162277660168379*m1[8]+0.3535533905932737*m1[0]; 
  BigAEM(16,8) = 0.3162277660168379*m1[6]; 
  BigAEM(16,9) = 0.3162277660168379*m1[6]; 
  BigAEM(17,0) = 0.3535533905932737*m1[7]; 
  BigAEM(17,1) = 0.3162277660168379*m1[1]; 
  BigAEM(17,4) = 0.3162277660168379*m1[4]; 
  BigAEM(17,5) = 0.3162277660168379*m1[5]; 
  BigAEM(17,7) = 0.2258769757263128*m1[7]+0.3535533905932737*m1[0]; 
  BigAEM(18,0) = 0.3535533905932737*m1[8]; 
  BigAEM(18,2) = 0.3162277660168379*m1[2]; 
  BigAEM(18,4) = 0.3162277660168379*m1[4]; 
  BigAEM(18,6) = 0.3162277660168379*m1[6]; 
  BigAEM(18,8) = 0.2258769757263128*m1[8]+0.3535533905932737*m1[0]; 
  BigAEM(19,0) = 0.3535533905932737*m1[9]; 
  BigAEM(19,3) = 0.3162277660168379*m1[3]; 
  BigAEM(19,5) = 0.3162277660168379*m1[5]; 
  BigAEM(19,6) = 0.3162277660168379*m1[6]; 
  BigAEM(19,9) = 0.2258769757263128*m1[9]+0.3535533905932737*m1[0]; 
 
  // ....... Block from correction to vtSq .......... // 
  BigAEM(10,10) = 0.3535533905932737*m0s[0]*pVdim-0.3535533905932737*cE[0]; 
  BigAEM(10,11) = 0.3535533905932737*m0s[1]*pVdim-0.3535533905932737*cE[1]; 
  BigAEM(10,12) = 0.3535533905932737*m0s[2]*pVdim-0.3535533905932737*cE[2]; 
  BigAEM(10,13) = 0.3535533905932737*m0s[3]*pVdim-0.3535533905932737*cE[3]; 
  BigAEM(10,14) = 0.3535533905932737*m0s[4]*pVdim-0.3535533905932737*cE[4]; 
  BigAEM(10,15) = 0.3535533905932737*m0s[5]*pVdim-0.3535533905932737*cE[5]; 
  BigAEM(10,16) = 0.3535533905932737*m0s[6]*pVdim-0.3535533905932737*cE[6]; 
  BigAEM(10,17) = 0.3535533905932737*m0s[7]*pVdim-0.3535533905932737*cE[7]; 
  BigAEM(10,18) = 0.3535533905932737*m0s[8]*pVdim-0.3535533905932737*cE[8]; 
  BigAEM(10,19) = 0.3535533905932737*m0s[9]*pVdim-0.3535533905932737*cE[9]; 
  BigAEM(11,10) = 0.3535533905932737*m0s[1]*pVdim-0.3535533905932737*cE[1]; 
  BigAEM(11,11) = 0.3162277660168379*m0s[7]*pVdim+0.3535533905932737*m0s[0]*pVdim-0.3162277660168379*cE[7]-0.3535533905932737*cE[0]; 
  BigAEM(11,12) = 0.3535533905932737*m0s[4]*pVdim-0.3535533905932737*cE[4]; 
  BigAEM(11,13) = 0.3535533905932737*m0s[5]*pVdim-0.3535533905932737*cE[5]; 
  BigAEM(11,14) = 0.3535533905932737*m0s[2]*pVdim-0.3535533905932737*cE[2]; 
  BigAEM(11,15) = 0.3535533905932737*m0s[3]*pVdim-0.3535533905932737*cE[3]; 
  BigAEM(11,17) = 0.3162277660168379*m0s[1]*pVdim-0.3162277660168379*cE[1]; 
  BigAEM(12,10) = 0.3535533905932737*m0s[2]*pVdim-0.3535533905932737*cE[2]; 
  BigAEM(12,11) = 0.3535533905932737*m0s[4]*pVdim-0.3535533905932737*cE[4]; 
  BigAEM(12,12) = 0.3162277660168379*m0s[8]*pVdim+0.3535533905932737*m0s[0]*pVdim-0.3162277660168379*cE[8]-0.3535533905932737*cE[0]; 
  BigAEM(12,13) = 0.3535533905932737*m0s[6]*pVdim-0.3535533905932737*cE[6]; 
  BigAEM(12,14) = 0.3535533905932737*m0s[1]*pVdim-0.3535533905932737*cE[1]; 
  BigAEM(12,16) = 0.3535533905932737*m0s[3]*pVdim-0.3535533905932737*cE[3]; 
  BigAEM(12,18) = 0.3162277660168379*m0s[2]*pVdim-0.3162277660168379*cE[2]; 
  BigAEM(13,10) = 0.3535533905932737*m0s[3]*pVdim-0.3535533905932737*cE[3]; 
  BigAEM(13,11) = 0.3535533905932737*m0s[5]*pVdim-0.3535533905932737*cE[5]; 
  BigAEM(13,12) = 0.3535533905932737*m0s[6]*pVdim-0.3535533905932737*cE[6]; 
  BigAEM(13,13) = 0.3162277660168379*m0s[9]*pVdim+0.3535533905932737*m0s[0]*pVdim-0.3162277660168379*cE[9]-0.3535533905932737*cE[0]; 
  BigAEM(13,15) = 0.3535533905932737*m0s[1]*pVdim-0.3535533905932737*cE[1]; 
  BigAEM(13,16) = 0.3535533905932737*m0s[2]*pVdim-0.3535533905932737*cE[2]; 
  BigAEM(13,19) = 0.3162277660168379*m0s[3]*pVdim-0.3162277660168379*cE[3]; 
  BigAEM(14,10) = 0.3535533905932737*m0s[4]*pVdim-0.3535533905932737*cE[4]; 
  BigAEM(14,11) = 0.3535533905932737*m0s[2]*pVdim-0.3535533905932737*cE[2]; 
  BigAEM(14,12) = 0.3535533905932737*m0s[1]*pVdim-0.3535533905932737*cE[1]; 
  BigAEM(14,14) = 0.3162277660168379*m0s[8]*pVdim+0.3162277660168379*m0s[7]*pVdim+0.3535533905932737*m0s[0]*pVdim-0.3162277660168379*cE[8]-0.3162277660168379*cE[7]-0.3535533905932737*cE[0]; 
  BigAEM(14,15) = 0.3535533905932737*m0s[6]*pVdim-0.3535533905932737*cE[6]; 
  BigAEM(14,16) = 0.3535533905932737*m0s[5]*pVdim-0.3535533905932737*cE[5]; 
  BigAEM(14,17) = 0.3162277660168379*m0s[4]*pVdim-0.3162277660168379*cE[4]; 
  BigAEM(14,18) = 0.3162277660168379*m0s[4]*pVdim-0.3162277660168379*cE[4]; 
  BigAEM(15,10) = 0.3535533905932737*m0s[5]*pVdim-0.3535533905932737*cE[5]; 
  BigAEM(15,11) = 0.3535533905932737*m0s[3]*pVdim-0.3535533905932737*cE[3]; 
  BigAEM(15,13) = 0.3535533905932737*m0s[1]*pVdim-0.3535533905932737*cE[1]; 
  BigAEM(15,14) = 0.3535533905932737*m0s[6]*pVdim-0.3535533905932737*cE[6]; 
  BigAEM(15,15) = 0.3162277660168379*m0s[9]*pVdim+0.3162277660168379*m0s[7]*pVdim+0.3535533905932737*m0s[0]*pVdim-0.3162277660168379*cE[9]-0.3162277660168379*cE[7]-0.3535533905932737*cE[0]; 
  BigAEM(15,16) = 0.3535533905932737*m0s[4]*pVdim-0.3535533905932737*cE[4]; 
  BigAEM(15,17) = 0.3162277660168379*m0s[5]*pVdim-0.3162277660168379*cE[5]; 
  BigAEM(15,19) = 0.3162277660168379*m0s[5]*pVdim-0.3162277660168379*cE[5]; 
  BigAEM(16,10) = 0.3535533905932737*m0s[6]*pVdim-0.3535533905932737*cE[6]; 
  BigAEM(16,12) = 0.3535533905932737*m0s[3]*pVdim-0.3535533905932737*cE[3]; 
  BigAEM(16,13) = 0.3535533905932737*m0s[2]*pVdim-0.3535533905932737*cE[2]; 
  BigAEM(16,14) = 0.3535533905932737*m0s[5]*pVdim-0.3535533905932737*cE[5]; 
  BigAEM(16,15) = 0.3535533905932737*m0s[4]*pVdim-0.3535533905932737*cE[4]; 
  BigAEM(16,16) = 0.3162277660168379*m0s[9]*pVdim+0.3162277660168379*m0s[8]*pVdim+0.3535533905932737*m0s[0]*pVdim-0.3162277660168379*cE[9]-0.3162277660168379*cE[8]-0.3535533905932737*cE[0]; 
  BigAEM(16,18) = 0.3162277660168379*m0s[6]*pVdim-0.3162277660168379*cE[6]; 
  BigAEM(16,19) = 0.3162277660168379*m0s[6]*pVdim-0.3162277660168379*cE[6]; 
  BigAEM(17,10) = 0.3535533905932737*m0s[7]*pVdim-0.3535533905932737*cE[7]; 
  BigAEM(17,11) = 0.3162277660168379*m0s[1]*pVdim-0.3162277660168379*cE[1]; 
  BigAEM(17,14) = 0.3162277660168379*m0s[4]*pVdim-0.3162277660168379*cE[4]; 
  BigAEM(17,15) = 0.3162277660168379*m0s[5]*pVdim-0.3162277660168379*cE[5]; 
  BigAEM(17,17) = 0.2258769757263128*m0s[7]*pVdim+0.3535533905932737*m0s[0]*pVdim-0.2258769757263128*cE[7]-0.3535533905932737*cE[0]; 
  BigAEM(18,10) = 0.3535533905932737*m0s[8]*pVdim-0.3535533905932737*cE[8]; 
  BigAEM(18,12) = 0.3162277660168379*m0s[2]*pVdim-0.3162277660168379*cE[2]; 
  BigAEM(18,14) = 0.3162277660168379*m0s[4]*pVdim-0.3162277660168379*cE[4]; 
  BigAEM(18,16) = 0.3162277660168379*m0s[6]*pVdim-0.3162277660168379*cE[6]; 
  BigAEM(18,18) = 0.2258769757263128*m0s[8]*pVdim+0.3535533905932737*m0s[0]*pVdim-0.2258769757263128*cE[8]-0.3535533905932737*cE[0]; 
  BigAEM(19,10) = 0.3535533905932737*m0s[9]*pVdim-0.3535533905932737*cE[9]; 
  BigAEM(19,13) = 0.3162277660168379*m0s[3]*pVdim-0.3162277660168379*cE[3]; 
  BigAEM(19,15) = 0.3162277660168379*m0s[5]*pVdim-0.3162277660168379*cE[5]; 
  BigAEM(19,16) = 0.3162277660168379*m0s[6]*pVdim-0.3162277660168379*cE[6]; 
  BigAEM(19,19) = 0.2258769757263128*m0s[9]*pVdim+0.3535533905932737*m0s[0]*pVdim-0.2258769757263128*cE[9]-0.3535533905932737*cE[0]; 
 
  // ....... RHS vector is composed of m1 and m2 .......... // 
  bEV << m1[0],m1[1],m1[2],m1[3],m1[4],m1[5],m1[6],m1[7],m1[8],m1[9],m2[0],m2[1],m2[2],m2[3],m2[4],m2[5],m2[6],m2[7],m2[8],m2[9]; 
 
  xEV = BigAEM.colPivHouseholderQr().solve(bEV); 
 
  Eigen::Map<VectorXd>(u,10,1) = xEV.segment<10>(0); 
 
  Eigen::Map<VectorXd>(vtSq,10,1) = xEV.segment<10>(10); 
 
} 
 
void SelfPrimMoments3x1vMax_P3(const int pVdim, const double *m0, const double *m1, const double *m2, const double *cM, const double *cE, double *u, double *vtSq) 
{ 
  // m0,m1,m2: moments of the distribution function. 
  // cM, cE: vtSq*cM and vtSq*cE are corrections to u and vtSq, respectively. 
  // u:        velocity. 
  // vtSq:     squared thermal speed, sqrt(T/m). 
 
  // If a corner value is below zero, use cell average m0.
  bool m0Avg = false;
  if ((-0.9354143466934851*m0[19])-0.9354143466934851*m0[18]-0.9354143466934851*m0[17]-1.369306393762915*m0[16]-1.369306393762915*m0[15]-1.369306393762915*m0[14]-1.369306393762915*m0[13]-1.369306393762915*m0[12]-1.369306393762915*m0[11]-1.837117307087383*m0[10]+0.7905694150420947*m0[9]+0.7905694150420947*m0[8]+0.7905694150420947*m0[7]+1.060660171779821*m0[6]+1.060660171779821*m0[5]+1.060660171779821*m0[4]-0.6123724356957944*m0[3]-0.6123724356957944*m0[2]-0.6123724356957944*m0[1]+0.3535533905932737*m0[0] < 0) { 
    m0Avg = true;
  }
  if ((-0.9354143466934851*m0[19])-0.9354143466934851*m0[18]-0.9354143466934851*m0[17]-1.369306393762915*m0[16]-1.369306393762915*m0[15]-1.369306393762915*m0[14]-1.369306393762915*m0[13]-1.369306393762915*m0[12]-1.369306393762915*m0[11]-1.837117307087383*m0[10]+0.7905694150420947*m0[9]+0.7905694150420947*m0[8]+0.7905694150420947*m0[7]+1.060660171779821*m0[6]+1.060660171779821*m0[5]+1.060660171779821*m0[4]-0.6123724356957944*m0[3]-0.6123724356957944*m0[2]-0.6123724356957944*m0[1]+0.3535533905932737*m0[0] < 0) { 
    m0Avg = true;
  }
  if ((-0.9354143466934851*m0[19])-0.9354143466934851*m0[18]-0.9354143466934851*m0[17]-1.369306393762915*m0[16]-1.369306393762915*m0[15]-1.369306393762915*m0[14]-1.369306393762915*m0[13]-1.369306393762915*m0[12]-1.369306393762915*m0[11]-1.837117307087383*m0[10]+0.7905694150420947*m0[9]+0.7905694150420947*m0[8]+0.7905694150420947*m0[7]+1.060660171779821*m0[6]+1.060660171779821*m0[5]+1.060660171779821*m0[4]-0.6123724356957944*m0[3]-0.6123724356957944*m0[2]-0.6123724356957944*m0[1]+0.3535533905932737*m0[0] < 0) { 
    m0Avg = true;
  }
  if ((-0.9354143466934851*m0[19])-0.9354143466934851*m0[18]-0.9354143466934851*m0[17]-1.369306393762915*m0[16]-1.369306393762915*m0[15]-1.369306393762915*m0[14]-1.369306393762915*m0[13]-1.369306393762915*m0[12]-1.369306393762915*m0[11]-1.837117307087383*m0[10]+0.7905694150420947*m0[9]+0.7905694150420947*m0[8]+0.7905694150420947*m0[7]+1.060660171779821*m0[6]+1.060660171779821*m0[5]+1.060660171779821*m0[4]-0.6123724356957944*m0[3]-0.6123724356957944*m0[2]-0.6123724356957944*m0[1]+0.3535533905932737*m0[0] < 0) { 
    m0Avg = true;
  }
  if ((-0.9354143466934851*m0[19])-0.9354143466934851*m0[18]+0.9354143466934851*m0[17]-1.369306393762915*m0[16]+1.369306393762915*m0[15]-1.369306393762915*m0[14]-1.369306393762915*m0[13]+1.369306393762915*m0[12]-1.369306393762915*m0[11]+1.837117307087383*m0[10]+0.7905694150420947*m0[9]+0.7905694150420947*m0[8]+0.7905694150420947*m0[7]+1.060660171779821*m0[6]-1.060660171779821*m0[5]-1.060660171779821*m0[4]-0.6123724356957944*m0[3]-0.6123724356957944*m0[2]+0.6123724356957944*m0[1]+0.3535533905932737*m0[0] < 0) { 
    m0Avg = true;
  }
  if ((-0.9354143466934851*m0[19])-0.9354143466934851*m0[18]+0.9354143466934851*m0[17]-1.369306393762915*m0[16]+1.369306393762915*m0[15]-1.369306393762915*m0[14]-1.369306393762915*m0[13]+1.369306393762915*m0[12]-1.369306393762915*m0[11]+1.837117307087383*m0[10]+0.7905694150420947*m0[9]+0.7905694150420947*m0[8]+0.7905694150420947*m0[7]+1.060660171779821*m0[6]-1.060660171779821*m0[5]-1.060660171779821*m0[4]-0.6123724356957944*m0[3]-0.6123724356957944*m0[2]+0.6123724356957944*m0[1]+0.3535533905932737*m0[0] < 0) { 
    m0Avg = true;
  }
  if ((-0.9354143466934851*m0[19])-0.9354143466934851*m0[18]+0.9354143466934851*m0[17]-1.369306393762915*m0[16]+1.369306393762915*m0[15]-1.369306393762915*m0[14]-1.369306393762915*m0[13]+1.369306393762915*m0[12]-1.369306393762915*m0[11]+1.837117307087383*m0[10]+0.7905694150420947*m0[9]+0.7905694150420947*m0[8]+0.7905694150420947*m0[7]+1.060660171779821*m0[6]-1.060660171779821*m0[5]-1.060660171779821*m0[4]-0.6123724356957944*m0[3]-0.6123724356957944*m0[2]+0.6123724356957944*m0[1]+0.3535533905932737*m0[0] < 0) { 
    m0Avg = true;
  }
  if ((-0.9354143466934851*m0[19])-0.9354143466934851*m0[18]+0.9354143466934851*m0[17]-1.369306393762915*m0[16]+1.369306393762915*m0[15]-1.369306393762915*m0[14]-1.369306393762915*m0[13]+1.369306393762915*m0[12]-1.369306393762915*m0[11]+1.837117307087383*m0[10]+0.7905694150420947*m0[9]+0.7905694150420947*m0[8]+0.7905694150420947*m0[7]+1.060660171779821*m0[6]-1.060660171779821*m0[5]-1.060660171779821*m0[4]-0.6123724356957944*m0[3]-0.6123724356957944*m0[2]+0.6123724356957944*m0[1]+0.3535533905932737*m0[0] < 0) { 
    m0Avg = true;
  }
 
  double m0s[20]; 
  if (m0Avg) { 
    m0s[0] = m0[0]; 
    m0s[1] = 0.0; 
    m0s[2] = 0.0; 
    m0s[3] = 0.0; 
    m0s[4] = 0.0; 
    m0s[5] = 0.0; 
    m0s[6] = 0.0; 
    m0s[7] = 0.0; 
    m0s[8] = 0.0; 
    m0s[9] = 0.0; 
    m0s[10] = 0.0; 
    m0s[11] = 0.0; 
    m0s[12] = 0.0; 
    m0s[13] = 0.0; 
    m0s[14] = 0.0; 
    m0s[15] = 0.0; 
    m0s[16] = 0.0; 
    m0s[17] = 0.0; 
    m0s[18] = 0.0; 
    m0s[19] = 0.0; 
  } else { 
    m0s[0] = m0[0]; 
    m0s[1] = m0[1]; 
    m0s[2] = m0[2]; 
    m0s[3] = m0[3]; 
    m0s[4] = m0[4]; 
    m0s[5] = m0[5]; 
    m0s[6] = m0[6]; 
    m0s[7] = m0[7]; 
    m0s[8] = m0[8]; 
    m0s[9] = m0[9]; 
    m0s[10] = m0[10]; 
    m0s[11] = m0[11]; 
    m0s[12] = m0[12]; 
    m0s[13] = m0[13]; 
    m0s[14] = m0[14]; 
    m0s[15] = m0[15]; 
    m0s[16] = m0[16]; 
    m0s[17] = m0[17]; 
    m0s[18] = m0[18]; 
    m0s[19] = m0[19]; 
  } 
 
  // Declare Eigen matrix and vectors for weak division. 
  Eigen::MatrixXd BigAEM = Eigen::MatrixXd::Zero(40,40); 
  Eigen::VectorXd bEV = Eigen::VectorXd::Zero(40);  
  Eigen::VectorXd xEV = Eigen::VectorXd::Zero(40);  
 
  // ....... Block from weak multiply of uX and m0  .......... // 
  BigAEM(0,0) = 0.3535533905932737*m0s[0]; 
  BigAEM(0,1) = 0.3535533905932737*m0s[1]; 
  BigAEM(0,2) = 0.3535533905932737*m0s[2]; 
  BigAEM(0,3) = 0.3535533905932737*m0s[3]; 
  BigAEM(0,4) = 0.3535533905932737*m0s[4]; 
  BigAEM(0,5) = 0.3535533905932737*m0s[5]; 
  BigAEM(0,6) = 0.3535533905932737*m0s[6]; 
  BigAEM(0,7) = 0.3535533905932737*m0s[7]; 
  BigAEM(0,8) = 0.3535533905932737*m0s[8]; 
  BigAEM(0,9) = 0.3535533905932737*m0s[9]; 
  BigAEM(0,10) = 0.3535533905932737*m0s[10]; 
  BigAEM(0,11) = 0.3535533905932737*m0s[11]; 
  BigAEM(0,12) = 0.3535533905932737*m0s[12]; 
  BigAEM(0,13) = 0.3535533905932737*m0s[13]; 
  BigAEM(0,14) = 0.3535533905932737*m0s[14]; 
  BigAEM(0,15) = 0.3535533905932737*m0s[15]; 
  BigAEM(0,16) = 0.3535533905932737*m0s[16]; 
  BigAEM(0,17) = 0.3535533905932737*m0s[17]; 
  BigAEM(0,18) = 0.3535533905932737*m0s[18]; 
  BigAEM(0,19) = 0.3535533905932737*m0s[19]; 
  BigAEM(1,0) = 0.3535533905932737*m0s[1]; 
  BigAEM(1,1) = 0.3162277660168379*m0s[7]+0.3535533905932737*m0s[0]; 
  BigAEM(1,2) = 0.3535533905932737*m0s[4]; 
  BigAEM(1,3) = 0.3535533905932737*m0s[5]; 
  BigAEM(1,4) = 0.3162277660168379*m0s[11]+0.3535533905932737*m0s[2]; 
  BigAEM(1,5) = 0.3162277660168379*m0s[13]+0.3535533905932737*m0s[3]; 
  BigAEM(1,6) = 0.3535533905932737*m0s[10]; 
  BigAEM(1,7) = 0.3105295017040592*m0s[17]+0.3162277660168379*m0s[1]; 
  BigAEM(1,8) = 0.3535533905932737*m0s[12]; 
  BigAEM(1,9) = 0.3535533905932737*m0s[15]; 
  BigAEM(1,10) = 0.3535533905932737*m0s[6]; 
  BigAEM(1,11) = 0.3162277660168379*m0s[4]; 
  BigAEM(1,12) = 0.3535533905932737*m0s[8]; 
  BigAEM(1,13) = 0.3162277660168379*m0s[5]; 
  BigAEM(1,15) = 0.3535533905932737*m0s[9]; 
  BigAEM(1,17) = 0.3105295017040592*m0s[7]; 
  BigAEM(2,0) = 0.3535533905932737*m0s[2]; 
  BigAEM(2,1) = 0.3535533905932737*m0s[4]; 
  BigAEM(2,2) = 0.3162277660168379*m0s[8]+0.3535533905932737*m0s[0]; 
  BigAEM(2,3) = 0.3535533905932737*m0s[6]; 
  BigAEM(2,4) = 0.3162277660168379*m0s[12]+0.3535533905932737*m0s[1]; 
  BigAEM(2,5) = 0.3535533905932737*m0s[10]; 
  BigAEM(2,6) = 0.3162277660168379*m0s[14]+0.3535533905932737*m0s[3]; 
  BigAEM(2,7) = 0.3535533905932737*m0s[11]; 
  BigAEM(2,8) = 0.3105295017040592*m0s[18]+0.3162277660168379*m0s[2]; 
  BigAEM(2,9) = 0.3535533905932737*m0s[16]; 
  BigAEM(2,10) = 0.3535533905932737*m0s[5]; 
  BigAEM(2,11) = 0.3535533905932737*m0s[7]; 
  BigAEM(2,12) = 0.3162277660168379*m0s[4]; 
  BigAEM(2,14) = 0.3162277660168379*m0s[6]; 
  BigAEM(2,16) = 0.3535533905932737*m0s[9]; 
  BigAEM(2,18) = 0.3105295017040592*m0s[8]; 
  BigAEM(3,0) = 0.3535533905932737*m0s[3]; 
  BigAEM(3,1) = 0.3535533905932737*m0s[5]; 
  BigAEM(3,2) = 0.3535533905932737*m0s[6]; 
  BigAEM(3,3) = 0.3162277660168379*m0s[9]+0.3535533905932737*m0s[0]; 
  BigAEM(3,4) = 0.3535533905932737*m0s[10]; 
  BigAEM(3,5) = 0.3162277660168379*m0s[15]+0.3535533905932737*m0s[1]; 
  BigAEM(3,6) = 0.3162277660168379*m0s[16]+0.3535533905932737*m0s[2]; 
  BigAEM(3,7) = 0.3535533905932737*m0s[13]; 
  BigAEM(3,8) = 0.3535533905932737*m0s[14]; 
  BigAEM(3,9) = 0.3105295017040592*m0s[19]+0.3162277660168379*m0s[3]; 
  BigAEM(3,10) = 0.3535533905932737*m0s[4]; 
  BigAEM(3,13) = 0.3535533905932737*m0s[7]; 
  BigAEM(3,14) = 0.3535533905932737*m0s[8]; 
  BigAEM(3,15) = 0.3162277660168379*m0s[5]; 
  BigAEM(3,16) = 0.3162277660168379*m0s[6]; 
  BigAEM(3,19) = 0.3105295017040592*m0s[9]; 
  BigAEM(4,0) = 0.3535533905932737*m0s[4]; 
  BigAEM(4,1) = 0.3162277660168379*m0s[11]+0.3535533905932737*m0s[2]; 
  BigAEM(4,2) = 0.3162277660168379*m0s[12]+0.3535533905932737*m0s[1]; 
  BigAEM(4,3) = 0.3535533905932737*m0s[10]; 
  BigAEM(4,4) = 0.3162277660168379*m0s[8]+0.3162277660168379*m0s[7]+0.3535533905932737*m0s[0]; 
  BigAEM(4,5) = 0.3535533905932737*m0s[6]; 
  BigAEM(4,6) = 0.3535533905932737*m0s[5]; 
  BigAEM(4,7) = 0.3162277660168379*m0s[4]; 
  BigAEM(4,8) = 0.3162277660168379*m0s[4]; 
  BigAEM(4,10) = 0.3162277660168379*m0s[14]+0.3162277660168379*m0s[13]+0.3535533905932737*m0s[3]; 
  BigAEM(4,11) = 0.3105295017040593*m0s[17]+0.2828427124746191*m0s[12]+0.3162277660168379*m0s[1]; 
  BigAEM(4,12) = 0.3105295017040593*m0s[18]+0.2828427124746191*m0s[11]+0.3162277660168379*m0s[2]; 
  BigAEM(4,13) = 0.3162277660168379*m0s[10]; 
  BigAEM(4,14) = 0.3162277660168379*m0s[10]; 
  BigAEM(4,15) = 0.3535533905932737*m0s[16]; 
  BigAEM(4,16) = 0.3535533905932737*m0s[15]; 
  BigAEM(4,17) = 0.3105295017040593*m0s[11]; 
  BigAEM(4,18) = 0.3105295017040593*m0s[12]; 
  BigAEM(5,0) = 0.3535533905932737*m0s[5]; 
  BigAEM(5,1) = 0.3162277660168379*m0s[13]+0.3535533905932737*m0s[3]; 
  BigAEM(5,2) = 0.3535533905932737*m0s[10]; 
  BigAEM(5,3) = 0.3162277660168379*m0s[15]+0.3535533905932737*m0s[1]; 
  BigAEM(5,4) = 0.3535533905932737*m0s[6]; 
  BigAEM(5,5) = 0.3162277660168379*m0s[9]+0.3162277660168379*m0s[7]+0.3535533905932737*m0s[0]; 
  BigAEM(5,6) = 0.3535533905932737*m0s[4]; 
  BigAEM(5,7) = 0.3162277660168379*m0s[5]; 
  BigAEM(5,9) = 0.3162277660168379*m0s[5]; 
  BigAEM(5,10) = 0.3162277660168379*m0s[16]+0.3162277660168379*m0s[11]+0.3535533905932737*m0s[2]; 
  BigAEM(5,11) = 0.3162277660168379*m0s[10]; 
  BigAEM(5,12) = 0.3535533905932737*m0s[14]; 
  BigAEM(5,13) = 0.3105295017040593*m0s[17]+0.2828427124746191*m0s[15]+0.3162277660168379*m0s[1]; 
  BigAEM(5,14) = 0.3535533905932737*m0s[12]; 
  BigAEM(5,15) = 0.3105295017040593*m0s[19]+0.2828427124746191*m0s[13]+0.3162277660168379*m0s[3]; 
  BigAEM(5,16) = 0.3162277660168379*m0s[10]; 
  BigAEM(5,17) = 0.3105295017040593*m0s[13]; 
  BigAEM(5,19) = 0.3105295017040593*m0s[15]; 
  BigAEM(6,0) = 0.3535533905932737*m0s[6]; 
  BigAEM(6,1) = 0.3535533905932737*m0s[10]; 
  BigAEM(6,2) = 0.3162277660168379*m0s[14]+0.3535533905932737*m0s[3]; 
  BigAEM(6,3) = 0.3162277660168379*m0s[16]+0.3535533905932737*m0s[2]; 
  BigAEM(6,4) = 0.3535533905932737*m0s[5]; 
  BigAEM(6,5) = 0.3535533905932737*m0s[4]; 
  BigAEM(6,6) = 0.3162277660168379*m0s[9]+0.3162277660168379*m0s[8]+0.3535533905932737*m0s[0]; 
  BigAEM(6,8) = 0.3162277660168379*m0s[6]; 
  BigAEM(6,9) = 0.3162277660168379*m0s[6]; 
  BigAEM(6,10) = 0.3162277660168379*m0s[15]+0.3162277660168379*m0s[12]+0.3535533905932737*m0s[1]; 
  BigAEM(6,11) = 0.3535533905932737*m0s[13]; 
  BigAEM(6,12) = 0.3162277660168379*m0s[10]; 
  BigAEM(6,13) = 0.3535533905932737*m0s[11]; 
  BigAEM(6,14) = 0.3105295017040593*m0s[18]+0.2828427124746191*m0s[16]+0.3162277660168379*m0s[2]; 
  BigAEM(6,15) = 0.3162277660168379*m0s[10]; 
  BigAEM(6,16) = 0.3105295017040593*m0s[19]+0.2828427124746191*m0s[14]+0.3162277660168379*m0s[3]; 
  BigAEM(6,18) = 0.3105295017040593*m0s[14]; 
  BigAEM(6,19) = 0.3105295017040593*m0s[16]; 
  BigAEM(7,0) = 0.3535533905932737*m0s[7]; 
  BigAEM(7,1) = 0.3105295017040592*m0s[17]+0.3162277660168379*m0s[1]; 
  BigAEM(7,2) = 0.3535533905932737*m0s[11]; 
  BigAEM(7,3) = 0.3535533905932737*m0s[13]; 
  BigAEM(7,4) = 0.3162277660168379*m0s[4]; 
  BigAEM(7,5) = 0.3162277660168379*m0s[5]; 
  BigAEM(7,7) = 0.2258769757263128*m0s[7]+0.3535533905932737*m0s[0]; 
  BigAEM(7,10) = 0.3162277660168379*m0s[10]; 
  BigAEM(7,11) = 0.2258769757263128*m0s[11]+0.3535533905932737*m0s[2]; 
  BigAEM(7,12) = 0.3162277660168379*m0s[12]; 
  BigAEM(7,13) = 0.2258769757263128*m0s[13]+0.3535533905932737*m0s[3]; 
  BigAEM(7,15) = 0.3162277660168379*m0s[15]; 
  BigAEM(7,17) = 0.210818510677892*m0s[17]+0.3105295017040592*m0s[1]; 
  BigAEM(8,0) = 0.3535533905932737*m0s[8]; 
  BigAEM(8,1) = 0.3535533905932737*m0s[12]; 
  BigAEM(8,2) = 0.3105295017040592*m0s[18]+0.3162277660168379*m0s[2]; 
  BigAEM(8,3) = 0.3535533905932737*m0s[14]; 
  BigAEM(8,4) = 0.3162277660168379*m0s[4]; 
  BigAEM(8,6) = 0.3162277660168379*m0s[6]; 
  BigAEM(8,8) = 0.2258769757263128*m0s[8]+0.3535533905932737*m0s[0]; 
  BigAEM(8,10) = 0.3162277660168379*m0s[10]; 
  BigAEM(8,11) = 0.3162277660168379*m0s[11]; 
  BigAEM(8,12) = 0.2258769757263128*m0s[12]+0.3535533905932737*m0s[1]; 
  BigAEM(8,14) = 0.2258769757263128*m0s[14]+0.3535533905932737*m0s[3]; 
  BigAEM(8,16) = 0.3162277660168379*m0s[16]; 
  BigAEM(8,18) = 0.210818510677892*m0s[18]+0.3105295017040592*m0s[2]; 
  BigAEM(9,0) = 0.3535533905932737*m0s[9]; 
  BigAEM(9,1) = 0.3535533905932737*m0s[15]; 
  BigAEM(9,2) = 0.3535533905932737*m0s[16]; 
  BigAEM(9,3) = 0.3105295017040592*m0s[19]+0.3162277660168379*m0s[3]; 
  BigAEM(9,5) = 0.3162277660168379*m0s[5]; 
  BigAEM(9,6) = 0.3162277660168379*m0s[6]; 
  BigAEM(9,9) = 0.2258769757263128*m0s[9]+0.3535533905932737*m0s[0]; 
  BigAEM(9,10) = 0.3162277660168379*m0s[10]; 
  BigAEM(9,13) = 0.3162277660168379*m0s[13]; 
  BigAEM(9,14) = 0.3162277660168379*m0s[14]; 
  BigAEM(9,15) = 0.2258769757263128*m0s[15]+0.3535533905932737*m0s[1]; 
  BigAEM(9,16) = 0.2258769757263128*m0s[16]+0.3535533905932737*m0s[2]; 
  BigAEM(9,19) = 0.210818510677892*m0s[19]+0.3105295017040592*m0s[3]; 
  BigAEM(10,0) = 0.3535533905932737*m0s[10]; 
  BigAEM(10,1) = 0.3535533905932737*m0s[6]; 
  BigAEM(10,2) = 0.3535533905932737*m0s[5]; 
  BigAEM(10,3) = 0.3535533905932737*m0s[4]; 
  BigAEM(10,4) = 0.3162277660168379*m0s[14]+0.3162277660168379*m0s[13]+0.3535533905932737*m0s[3]; 
  BigAEM(10,5) = 0.3162277660168379*m0s[16]+0.3162277660168379*m0s[11]+0.3535533905932737*m0s[2]; 
  BigAEM(10,6) = 0.3162277660168379*m0s[15]+0.3162277660168379*m0s[12]+0.3535533905932737*m0s[1]; 
  BigAEM(10,7) = 0.3162277660168379*m0s[10]; 
  BigAEM(10,8) = 0.3162277660168379*m0s[10]; 
  BigAEM(10,9) = 0.3162277660168379*m0s[10]; 
  BigAEM(10,10) = 0.3162277660168379*m0s[9]+0.3162277660168379*m0s[8]+0.3162277660168379*m0s[7]+0.3535533905932737*m0s[0]; 
  BigAEM(10,11) = 0.3162277660168379*m0s[5]; 
  BigAEM(10,12) = 0.3162277660168379*m0s[6]; 
  BigAEM(10,13) = 0.3162277660168379*m0s[4]; 
  BigAEM(10,14) = 0.3162277660168379*m0s[4]; 
  BigAEM(10,15) = 0.3162277660168379*m0s[6]; 
  BigAEM(10,16) = 0.3162277660168379*m0s[5]; 
  BigAEM(11,0) = 0.3535533905932737*m0s[11]; 
  BigAEM(11,1) = 0.3162277660168379*m0s[4]; 
  BigAEM(11,2) = 0.3535533905932737*m0s[7]; 
  BigAEM(11,4) = 0.3105295017040593*m0s[17]+0.2828427124746191*m0s[12]+0.3162277660168379*m0s[1]; 
  BigAEM(11,5) = 0.3162277660168379*m0s[10]; 
  BigAEM(11,6) = 0.3535533905932737*m0s[13]; 
  BigAEM(11,7) = 0.2258769757263128*m0s[11]+0.3535533905932737*m0s[2]; 
  BigAEM(11,8) = 0.3162277660168379*m0s[11]; 
  BigAEM(11,10) = 0.3162277660168379*m0s[5]; 
  BigAEM(11,11) = 0.3162277660168379*m0s[8]+0.2258769757263128*m0s[7]+0.3535533905932737*m0s[0]; 
  BigAEM(11,12) = 0.2828427124746191*m0s[4]; 
  BigAEM(11,13) = 0.3535533905932737*m0s[6]; 
  BigAEM(11,17) = 0.3105295017040593*m0s[4]; 
  BigAEM(12,0) = 0.3535533905932737*m0s[12]; 
  BigAEM(12,1) = 0.3535533905932737*m0s[8]; 
  BigAEM(12,2) = 0.3162277660168379*m0s[4]; 
  BigAEM(12,4) = 0.3105295017040593*m0s[18]+0.2828427124746191*m0s[11]+0.3162277660168379*m0s[2]; 
  BigAEM(12,5) = 0.3535533905932737*m0s[14]; 
  BigAEM(12,6) = 0.3162277660168379*m0s[10]; 
  BigAEM(12,7) = 0.3162277660168379*m0s[12]; 
  BigAEM(12,8) = 0.2258769757263128*m0s[12]+0.3535533905932737*m0s[1]; 
  BigAEM(12,10) = 0.3162277660168379*m0s[6]; 
  BigAEM(12,11) = 0.2828427124746191*m0s[4]; 
  BigAEM(12,12) = 0.2258769757263128*m0s[8]+0.3162277660168379*m0s[7]+0.3535533905932737*m0s[0]; 
  BigAEM(12,14) = 0.3535533905932737*m0s[5]; 
  BigAEM(12,18) = 0.3105295017040593*m0s[4]; 
  BigAEM(13,0) = 0.3535533905932737*m0s[13]; 
  BigAEM(13,1) = 0.3162277660168379*m0s[5]; 
  BigAEM(13,3) = 0.3535533905932737*m0s[7]; 
  BigAEM(13,4) = 0.3162277660168379*m0s[10]; 
  BigAEM(13,5) = 0.3105295017040593*m0s[17]+0.2828427124746191*m0s[15]+0.3162277660168379*m0s[1]; 
  BigAEM(13,6) = 0.3535533905932737*m0s[11]; 
  BigAEM(13,7) = 0.2258769757263128*m0s[13]+0.3535533905932737*m0s[3]; 
  BigAEM(13,9) = 0.3162277660168379*m0s[13]; 
  BigAEM(13,10) = 0.3162277660168379*m0s[4]; 
  BigAEM(13,11) = 0.3535533905932737*m0s[6]; 
  BigAEM(13,13) = 0.3162277660168379*m0s[9]+0.2258769757263128*m0s[7]+0.3535533905932737*m0s[0]; 
  BigAEM(13,15) = 0.2828427124746191*m0s[5]; 
  BigAEM(13,17) = 0.3105295017040593*m0s[5]; 
  BigAEM(14,0) = 0.3535533905932737*m0s[14]; 
  BigAEM(14,2) = 0.3162277660168379*m0s[6]; 
  BigAEM(14,3) = 0.3535533905932737*m0s[8]; 
  BigAEM(14,4) = 0.3162277660168379*m0s[10]; 
  BigAEM(14,5) = 0.3535533905932737*m0s[12]; 
  BigAEM(14,6) = 0.3105295017040593*m0s[18]+0.2828427124746191*m0s[16]+0.3162277660168379*m0s[2]; 
  BigAEM(14,8) = 0.2258769757263128*m0s[14]+0.3535533905932737*m0s[3]; 
  BigAEM(14,9) = 0.3162277660168379*m0s[14]; 
  BigAEM(14,10) = 0.3162277660168379*m0s[4]; 
  BigAEM(14,12) = 0.3535533905932737*m0s[5]; 
  BigAEM(14,14) = 0.3162277660168379*m0s[9]+0.2258769757263128*m0s[8]+0.3535533905932737*m0s[0]; 
  BigAEM(14,16) = 0.2828427124746191*m0s[6]; 
  BigAEM(14,18) = 0.3105295017040593*m0s[6]; 
  BigAEM(15,0) = 0.3535533905932737*m0s[15]; 
  BigAEM(15,1) = 0.3535533905932737*m0s[9]; 
  BigAEM(15,3) = 0.3162277660168379*m0s[5]; 
  BigAEM(15,4) = 0.3535533905932737*m0s[16]; 
  BigAEM(15,5) = 0.3105295017040593*m0s[19]+0.2828427124746191*m0s[13]+0.3162277660168379*m0s[3]; 
  BigAEM(15,6) = 0.3162277660168379*m0s[10]; 
  BigAEM(15,7) = 0.3162277660168379*m0s[15]; 
  BigAEM(15,9) = 0.2258769757263128*m0s[15]+0.3535533905932737*m0s[1]; 
  BigAEM(15,10) = 0.3162277660168379*m0s[6]; 
  BigAEM(15,13) = 0.2828427124746191*m0s[5]; 
  BigAEM(15,15) = 0.2258769757263128*m0s[9]+0.3162277660168379*m0s[7]+0.3535533905932737*m0s[0]; 
  BigAEM(15,16) = 0.3535533905932737*m0s[4]; 
  BigAEM(15,19) = 0.3105295017040593*m0s[5]; 
  BigAEM(16,0) = 0.3535533905932737*m0s[16]; 
  BigAEM(16,2) = 0.3535533905932737*m0s[9]; 
  BigAEM(16,3) = 0.3162277660168379*m0s[6]; 
  BigAEM(16,4) = 0.3535533905932737*m0s[15]; 
  BigAEM(16,5) = 0.3162277660168379*m0s[10]; 
  BigAEM(16,6) = 0.3105295017040593*m0s[19]+0.2828427124746191*m0s[14]+0.3162277660168379*m0s[3]; 
  BigAEM(16,8) = 0.3162277660168379*m0s[16]; 
  BigAEM(16,9) = 0.2258769757263128*m0s[16]+0.3535533905932737*m0s[2]; 
  BigAEM(16,10) = 0.3162277660168379*m0s[5]; 
  BigAEM(16,14) = 0.2828427124746191*m0s[6]; 
  BigAEM(16,15) = 0.3535533905932737*m0s[4]; 
  BigAEM(16,16) = 0.2258769757263128*m0s[9]+0.3162277660168379*m0s[8]+0.3535533905932737*m0s[0]; 
  BigAEM(16,19) = 0.3105295017040593*m0s[6]; 
  BigAEM(17,0) = 0.3535533905932737*m0s[17]; 
  BigAEM(17,1) = 0.3105295017040592*m0s[7]; 
  BigAEM(17,4) = 0.3105295017040593*m0s[11]; 
  BigAEM(17,5) = 0.3105295017040593*m0s[13]; 
  BigAEM(17,7) = 0.210818510677892*m0s[17]+0.3105295017040592*m0s[1]; 
  BigAEM(17,11) = 0.3105295017040593*m0s[4]; 
  BigAEM(17,13) = 0.3105295017040593*m0s[5]; 
  BigAEM(17,17) = 0.210818510677892*m0s[7]+0.3535533905932737*m0s[0]; 
  BigAEM(18,0) = 0.3535533905932737*m0s[18]; 
  BigAEM(18,2) = 0.3105295017040592*m0s[8]; 
  BigAEM(18,4) = 0.3105295017040593*m0s[12]; 
  BigAEM(18,6) = 0.3105295017040593*m0s[14]; 
  BigAEM(18,8) = 0.210818510677892*m0s[18]+0.3105295017040592*m0s[2]; 
  BigAEM(18,12) = 0.3105295017040593*m0s[4]; 
  BigAEM(18,14) = 0.3105295017040593*m0s[6]; 
  BigAEM(18,18) = 0.210818510677892*m0s[8]+0.3535533905932737*m0s[0]; 
  BigAEM(19,0) = 0.3535533905932737*m0s[19]; 
  BigAEM(19,3) = 0.3105295017040592*m0s[9]; 
  BigAEM(19,5) = 0.3105295017040593*m0s[15]; 
  BigAEM(19,6) = 0.3105295017040593*m0s[16]; 
  BigAEM(19,9) = 0.210818510677892*m0s[19]+0.3105295017040592*m0s[3]; 
  BigAEM(19,15) = 0.3105295017040593*m0s[5]; 
  BigAEM(19,16) = 0.3105295017040593*m0s[6]; 
  BigAEM(19,19) = 0.210818510677892*m0s[9]+0.3535533905932737*m0s[0]; 
 
  // ....... Block from correction to uX .......... // 
  BigAEM(0,20) = -0.3535533905932737*cM[0]; 
  BigAEM(0,21) = -0.3535533905932737*cM[1]; 
  BigAEM(0,22) = -0.3535533905932737*cM[2]; 
  BigAEM(0,23) = -0.3535533905932737*cM[3]; 
  BigAEM(0,24) = -0.3535533905932737*cM[4]; 
  BigAEM(0,25) = -0.3535533905932737*cM[5]; 
  BigAEM(0,26) = -0.3535533905932737*cM[6]; 
  BigAEM(0,27) = -0.3535533905932737*cM[7]; 
  BigAEM(0,28) = -0.3535533905932737*cM[8]; 
  BigAEM(0,29) = -0.3535533905932737*cM[9]; 
  BigAEM(0,30) = -0.3535533905932737*cM[10]; 
  BigAEM(0,31) = -0.3535533905932737*cM[11]; 
  BigAEM(0,32) = -0.3535533905932737*cM[12]; 
  BigAEM(0,33) = -0.3535533905932737*cM[13]; 
  BigAEM(0,34) = -0.3535533905932737*cM[14]; 
  BigAEM(0,35) = -0.3535533905932737*cM[15]; 
  BigAEM(0,36) = -0.3535533905932737*cM[16]; 
  BigAEM(0,37) = -0.3535533905932737*cM[17]; 
  BigAEM(0,38) = -0.3535533905932737*cM[18]; 
  BigAEM(0,39) = -0.3535533905932737*cM[19]; 
  BigAEM(1,20) = -0.3535533905932737*cM[1]; 
  BigAEM(1,21) = (-0.3162277660168379*cM[7])-0.3535533905932737*cM[0]; 
  BigAEM(1,22) = -0.3535533905932737*cM[4]; 
  BigAEM(1,23) = -0.3535533905932737*cM[5]; 
  BigAEM(1,24) = (-0.3162277660168379*cM[11])-0.3535533905932737*cM[2]; 
  BigAEM(1,25) = (-0.3162277660168379*cM[13])-0.3535533905932737*cM[3]; 
  BigAEM(1,26) = -0.3535533905932737*cM[10]; 
  BigAEM(1,27) = (-0.3105295017040592*cM[17])-0.3162277660168379*cM[1]; 
  BigAEM(1,28) = -0.3535533905932737*cM[12]; 
  BigAEM(1,29) = -0.3535533905932737*cM[15]; 
  BigAEM(1,30) = -0.3535533905932737*cM[6]; 
  BigAEM(1,31) = -0.3162277660168379*cM[4]; 
  BigAEM(1,32) = -0.3535533905932737*cM[8]; 
  BigAEM(1,33) = -0.3162277660168379*cM[5]; 
  BigAEM(1,35) = -0.3535533905932737*cM[9]; 
  BigAEM(1,37) = -0.3105295017040592*cM[7]; 
  BigAEM(2,20) = -0.3535533905932737*cM[2]; 
  BigAEM(2,21) = -0.3535533905932737*cM[4]; 
  BigAEM(2,22) = (-0.3162277660168379*cM[8])-0.3535533905932737*cM[0]; 
  BigAEM(2,23) = -0.3535533905932737*cM[6]; 
  BigAEM(2,24) = (-0.3162277660168379*cM[12])-0.3535533905932737*cM[1]; 
  BigAEM(2,25) = -0.3535533905932737*cM[10]; 
  BigAEM(2,26) = (-0.3162277660168379*cM[14])-0.3535533905932737*cM[3]; 
  BigAEM(2,27) = -0.3535533905932737*cM[11]; 
  BigAEM(2,28) = (-0.3105295017040592*cM[18])-0.3162277660168379*cM[2]; 
  BigAEM(2,29) = -0.3535533905932737*cM[16]; 
  BigAEM(2,30) = -0.3535533905932737*cM[5]; 
  BigAEM(2,31) = -0.3535533905932737*cM[7]; 
  BigAEM(2,32) = -0.3162277660168379*cM[4]; 
  BigAEM(2,34) = -0.3162277660168379*cM[6]; 
  BigAEM(2,36) = -0.3535533905932737*cM[9]; 
  BigAEM(2,38) = -0.3105295017040592*cM[8]; 
  BigAEM(3,20) = -0.3535533905932737*cM[3]; 
  BigAEM(3,21) = -0.3535533905932737*cM[5]; 
  BigAEM(3,22) = -0.3535533905932737*cM[6]; 
  BigAEM(3,23) = (-0.3162277660168379*cM[9])-0.3535533905932737*cM[0]; 
  BigAEM(3,24) = -0.3535533905932737*cM[10]; 
  BigAEM(3,25) = (-0.3162277660168379*cM[15])-0.3535533905932737*cM[1]; 
  BigAEM(3,26) = (-0.3162277660168379*cM[16])-0.3535533905932737*cM[2]; 
  BigAEM(3,27) = -0.3535533905932737*cM[13]; 
  BigAEM(3,28) = -0.3535533905932737*cM[14]; 
  BigAEM(3,29) = (-0.3105295017040592*cM[19])-0.3162277660168379*cM[3]; 
  BigAEM(3,30) = -0.3535533905932737*cM[4]; 
  BigAEM(3,33) = -0.3535533905932737*cM[7]; 
  BigAEM(3,34) = -0.3535533905932737*cM[8]; 
  BigAEM(3,35) = -0.3162277660168379*cM[5]; 
  BigAEM(3,36) = -0.3162277660168379*cM[6]; 
  BigAEM(3,39) = -0.3105295017040592*cM[9]; 
  BigAEM(4,20) = -0.3535533905932737*cM[4]; 
  BigAEM(4,21) = (-0.3162277660168379*cM[11])-0.3535533905932737*cM[2]; 
  BigAEM(4,22) = (-0.3162277660168379*cM[12])-0.3535533905932737*cM[1]; 
  BigAEM(4,23) = -0.3535533905932737*cM[10]; 
  BigAEM(4,24) = (-0.3162277660168379*cM[8])-0.3162277660168379*cM[7]-0.3535533905932737*cM[0]; 
  BigAEM(4,25) = -0.3535533905932737*cM[6]; 
  BigAEM(4,26) = -0.3535533905932737*cM[5]; 
  BigAEM(4,27) = -0.3162277660168379*cM[4]; 
  BigAEM(4,28) = -0.3162277660168379*cM[4]; 
  BigAEM(4,30) = (-0.3162277660168379*cM[14])-0.3162277660168379*cM[13]-0.3535533905932737*cM[3]; 
  BigAEM(4,31) = (-0.3105295017040593*cM[17])-0.2828427124746191*cM[12]-0.3162277660168379*cM[1]; 
  BigAEM(4,32) = (-0.3105295017040593*cM[18])-0.2828427124746191*cM[11]-0.3162277660168379*cM[2]; 
  BigAEM(4,33) = -0.3162277660168379*cM[10]; 
  BigAEM(4,34) = -0.3162277660168379*cM[10]; 
  BigAEM(4,35) = -0.3535533905932737*cM[16]; 
  BigAEM(4,36) = -0.3535533905932737*cM[15]; 
  BigAEM(4,37) = -0.3105295017040593*cM[11]; 
  BigAEM(4,38) = -0.3105295017040593*cM[12]; 
  BigAEM(5,20) = -0.3535533905932737*cM[5]; 
  BigAEM(5,21) = (-0.3162277660168379*cM[13])-0.3535533905932737*cM[3]; 
  BigAEM(5,22) = -0.3535533905932737*cM[10]; 
  BigAEM(5,23) = (-0.3162277660168379*cM[15])-0.3535533905932737*cM[1]; 
  BigAEM(5,24) = -0.3535533905932737*cM[6]; 
  BigAEM(5,25) = (-0.3162277660168379*cM[9])-0.3162277660168379*cM[7]-0.3535533905932737*cM[0]; 
  BigAEM(5,26) = -0.3535533905932737*cM[4]; 
  BigAEM(5,27) = -0.3162277660168379*cM[5]; 
  BigAEM(5,29) = -0.3162277660168379*cM[5]; 
  BigAEM(5,30) = (-0.3162277660168379*cM[16])-0.3162277660168379*cM[11]-0.3535533905932737*cM[2]; 
  BigAEM(5,31) = -0.3162277660168379*cM[10]; 
  BigAEM(5,32) = -0.3535533905932737*cM[14]; 
  BigAEM(5,33) = (-0.3105295017040593*cM[17])-0.2828427124746191*cM[15]-0.3162277660168379*cM[1]; 
  BigAEM(5,34) = -0.3535533905932737*cM[12]; 
  BigAEM(5,35) = (-0.3105295017040593*cM[19])-0.2828427124746191*cM[13]-0.3162277660168379*cM[3]; 
  BigAEM(5,36) = -0.3162277660168379*cM[10]; 
  BigAEM(5,37) = -0.3105295017040593*cM[13]; 
  BigAEM(5,39) = -0.3105295017040593*cM[15]; 
  BigAEM(6,20) = -0.3535533905932737*cM[6]; 
  BigAEM(6,21) = -0.3535533905932737*cM[10]; 
  BigAEM(6,22) = (-0.3162277660168379*cM[14])-0.3535533905932737*cM[3]; 
  BigAEM(6,23) = (-0.3162277660168379*cM[16])-0.3535533905932737*cM[2]; 
  BigAEM(6,24) = -0.3535533905932737*cM[5]; 
  BigAEM(6,25) = -0.3535533905932737*cM[4]; 
  BigAEM(6,26) = (-0.3162277660168379*cM[9])-0.3162277660168379*cM[8]-0.3535533905932737*cM[0]; 
  BigAEM(6,28) = -0.3162277660168379*cM[6]; 
  BigAEM(6,29) = -0.3162277660168379*cM[6]; 
  BigAEM(6,30) = (-0.3162277660168379*cM[15])-0.3162277660168379*cM[12]-0.3535533905932737*cM[1]; 
  BigAEM(6,31) = -0.3535533905932737*cM[13]; 
  BigAEM(6,32) = -0.3162277660168379*cM[10]; 
  BigAEM(6,33) = -0.3535533905932737*cM[11]; 
  BigAEM(6,34) = (-0.3105295017040593*cM[18])-0.2828427124746191*cM[16]-0.3162277660168379*cM[2]; 
  BigAEM(6,35) = -0.3162277660168379*cM[10]; 
  BigAEM(6,36) = (-0.3105295017040593*cM[19])-0.2828427124746191*cM[14]-0.3162277660168379*cM[3]; 
  BigAEM(6,38) = -0.3105295017040593*cM[14]; 
  BigAEM(6,39) = -0.3105295017040593*cM[16]; 
  BigAEM(7,20) = -0.3535533905932737*cM[7]; 
  BigAEM(7,21) = (-0.3105295017040592*cM[17])-0.3162277660168379*cM[1]; 
  BigAEM(7,22) = -0.3535533905932737*cM[11]; 
  BigAEM(7,23) = -0.3535533905932737*cM[13]; 
  BigAEM(7,24) = -0.3162277660168379*cM[4]; 
  BigAEM(7,25) = -0.3162277660168379*cM[5]; 
  BigAEM(7,27) = (-0.2258769757263128*cM[7])-0.3535533905932737*cM[0]; 
  BigAEM(7,30) = -0.3162277660168379*cM[10]; 
  BigAEM(7,31) = (-0.2258769757263128*cM[11])-0.3535533905932737*cM[2]; 
  BigAEM(7,32) = -0.3162277660168379*cM[12]; 
  BigAEM(7,33) = (-0.2258769757263128*cM[13])-0.3535533905932737*cM[3]; 
  BigAEM(7,35) = -0.3162277660168379*cM[15]; 
  BigAEM(7,37) = (-0.210818510677892*cM[17])-0.3105295017040592*cM[1]; 
  BigAEM(8,20) = -0.3535533905932737*cM[8]; 
  BigAEM(8,21) = -0.3535533905932737*cM[12]; 
  BigAEM(8,22) = (-0.3105295017040592*cM[18])-0.3162277660168379*cM[2]; 
  BigAEM(8,23) = -0.3535533905932737*cM[14]; 
  BigAEM(8,24) = -0.3162277660168379*cM[4]; 
  BigAEM(8,26) = -0.3162277660168379*cM[6]; 
  BigAEM(8,28) = (-0.2258769757263128*cM[8])-0.3535533905932737*cM[0]; 
  BigAEM(8,30) = -0.3162277660168379*cM[10]; 
  BigAEM(8,31) = -0.3162277660168379*cM[11]; 
  BigAEM(8,32) = (-0.2258769757263128*cM[12])-0.3535533905932737*cM[1]; 
  BigAEM(8,34) = (-0.2258769757263128*cM[14])-0.3535533905932737*cM[3]; 
  BigAEM(8,36) = -0.3162277660168379*cM[16]; 
  BigAEM(8,38) = (-0.210818510677892*cM[18])-0.3105295017040592*cM[2]; 
  BigAEM(9,20) = -0.3535533905932737*cM[9]; 
  BigAEM(9,21) = -0.3535533905932737*cM[15]; 
  BigAEM(9,22) = -0.3535533905932737*cM[16]; 
  BigAEM(9,23) = (-0.3105295017040592*cM[19])-0.3162277660168379*cM[3]; 
  BigAEM(9,25) = -0.3162277660168379*cM[5]; 
  BigAEM(9,26) = -0.3162277660168379*cM[6]; 
  BigAEM(9,29) = (-0.2258769757263128*cM[9])-0.3535533905932737*cM[0]; 
  BigAEM(9,30) = -0.3162277660168379*cM[10]; 
  BigAEM(9,33) = -0.3162277660168379*cM[13]; 
  BigAEM(9,34) = -0.3162277660168379*cM[14]; 
  BigAEM(9,35) = (-0.2258769757263128*cM[15])-0.3535533905932737*cM[1]; 
  BigAEM(9,36) = (-0.2258769757263128*cM[16])-0.3535533905932737*cM[2]; 
  BigAEM(9,39) = (-0.210818510677892*cM[19])-0.3105295017040592*cM[3]; 
  BigAEM(10,20) = -0.3535533905932737*cM[10]; 
  BigAEM(10,21) = -0.3535533905932737*cM[6]; 
  BigAEM(10,22) = -0.3535533905932737*cM[5]; 
  BigAEM(10,23) = -0.3535533905932737*cM[4]; 
  BigAEM(10,24) = (-0.3162277660168379*cM[14])-0.3162277660168379*cM[13]-0.3535533905932737*cM[3]; 
  BigAEM(10,25) = (-0.3162277660168379*cM[16])-0.3162277660168379*cM[11]-0.3535533905932737*cM[2]; 
  BigAEM(10,26) = (-0.3162277660168379*cM[15])-0.3162277660168379*cM[12]-0.3535533905932737*cM[1]; 
  BigAEM(10,27) = -0.3162277660168379*cM[10]; 
  BigAEM(10,28) = -0.3162277660168379*cM[10]; 
  BigAEM(10,29) = -0.3162277660168379*cM[10]; 
  BigAEM(10,30) = (-0.3162277660168379*cM[9])-0.3162277660168379*cM[8]-0.3162277660168379*cM[7]-0.3535533905932737*cM[0]; 
  BigAEM(10,31) = -0.3162277660168379*cM[5]; 
  BigAEM(10,32) = -0.3162277660168379*cM[6]; 
  BigAEM(10,33) = -0.3162277660168379*cM[4]; 
  BigAEM(10,34) = -0.3162277660168379*cM[4]; 
  BigAEM(10,35) = -0.3162277660168379*cM[6]; 
  BigAEM(10,36) = -0.3162277660168379*cM[5]; 
  BigAEM(11,20) = -0.3535533905932737*cM[11]; 
  BigAEM(11,21) = -0.3162277660168379*cM[4]; 
  BigAEM(11,22) = -0.3535533905932737*cM[7]; 
  BigAEM(11,24) = (-0.3105295017040593*cM[17])-0.2828427124746191*cM[12]-0.3162277660168379*cM[1]; 
  BigAEM(11,25) = -0.3162277660168379*cM[10]; 
  BigAEM(11,26) = -0.3535533905932737*cM[13]; 
  BigAEM(11,27) = (-0.2258769757263128*cM[11])-0.3535533905932737*cM[2]; 
  BigAEM(11,28) = -0.3162277660168379*cM[11]; 
  BigAEM(11,30) = -0.3162277660168379*cM[5]; 
  BigAEM(11,31) = (-0.3162277660168379*cM[8])-0.2258769757263128*cM[7]-0.3535533905932737*cM[0]; 
  BigAEM(11,32) = -0.2828427124746191*cM[4]; 
  BigAEM(11,33) = -0.3535533905932737*cM[6]; 
  BigAEM(11,37) = -0.3105295017040593*cM[4]; 
  BigAEM(12,20) = -0.3535533905932737*cM[12]; 
  BigAEM(12,21) = -0.3535533905932737*cM[8]; 
  BigAEM(12,22) = -0.3162277660168379*cM[4]; 
  BigAEM(12,24) = (-0.3105295017040593*cM[18])-0.2828427124746191*cM[11]-0.3162277660168379*cM[2]; 
  BigAEM(12,25) = -0.3535533905932737*cM[14]; 
  BigAEM(12,26) = -0.3162277660168379*cM[10]; 
  BigAEM(12,27) = -0.3162277660168379*cM[12]; 
  BigAEM(12,28) = (-0.2258769757263128*cM[12])-0.3535533905932737*cM[1]; 
  BigAEM(12,30) = -0.3162277660168379*cM[6]; 
  BigAEM(12,31) = -0.2828427124746191*cM[4]; 
  BigAEM(12,32) = (-0.2258769757263128*cM[8])-0.3162277660168379*cM[7]-0.3535533905932737*cM[0]; 
  BigAEM(12,34) = -0.3535533905932737*cM[5]; 
  BigAEM(12,38) = -0.3105295017040593*cM[4]; 
  BigAEM(13,20) = -0.3535533905932737*cM[13]; 
  BigAEM(13,21) = -0.3162277660168379*cM[5]; 
  BigAEM(13,23) = -0.3535533905932737*cM[7]; 
  BigAEM(13,24) = -0.3162277660168379*cM[10]; 
  BigAEM(13,25) = (-0.3105295017040593*cM[17])-0.2828427124746191*cM[15]-0.3162277660168379*cM[1]; 
  BigAEM(13,26) = -0.3535533905932737*cM[11]; 
  BigAEM(13,27) = (-0.2258769757263128*cM[13])-0.3535533905932737*cM[3]; 
  BigAEM(13,29) = -0.3162277660168379*cM[13]; 
  BigAEM(13,30) = -0.3162277660168379*cM[4]; 
  BigAEM(13,31) = -0.3535533905932737*cM[6]; 
  BigAEM(13,33) = (-0.3162277660168379*cM[9])-0.2258769757263128*cM[7]-0.3535533905932737*cM[0]; 
  BigAEM(13,35) = -0.2828427124746191*cM[5]; 
  BigAEM(13,37) = -0.3105295017040593*cM[5]; 
  BigAEM(14,20) = -0.3535533905932737*cM[14]; 
  BigAEM(14,22) = -0.3162277660168379*cM[6]; 
  BigAEM(14,23) = -0.3535533905932737*cM[8]; 
  BigAEM(14,24) = -0.3162277660168379*cM[10]; 
  BigAEM(14,25) = -0.3535533905932737*cM[12]; 
  BigAEM(14,26) = (-0.3105295017040593*cM[18])-0.2828427124746191*cM[16]-0.3162277660168379*cM[2]; 
  BigAEM(14,28) = (-0.2258769757263128*cM[14])-0.3535533905932737*cM[3]; 
  BigAEM(14,29) = -0.3162277660168379*cM[14]; 
  BigAEM(14,30) = -0.3162277660168379*cM[4]; 
  BigAEM(14,32) = -0.3535533905932737*cM[5]; 
  BigAEM(14,34) = (-0.3162277660168379*cM[9])-0.2258769757263128*cM[8]-0.3535533905932737*cM[0]; 
  BigAEM(14,36) = -0.2828427124746191*cM[6]; 
  BigAEM(14,38) = -0.3105295017040593*cM[6]; 
  BigAEM(15,20) = -0.3535533905932737*cM[15]; 
  BigAEM(15,21) = -0.3535533905932737*cM[9]; 
  BigAEM(15,23) = -0.3162277660168379*cM[5]; 
  BigAEM(15,24) = -0.3535533905932737*cM[16]; 
  BigAEM(15,25) = (-0.3105295017040593*cM[19])-0.2828427124746191*cM[13]-0.3162277660168379*cM[3]; 
  BigAEM(15,26) = -0.3162277660168379*cM[10]; 
  BigAEM(15,27) = -0.3162277660168379*cM[15]; 
  BigAEM(15,29) = (-0.2258769757263128*cM[15])-0.3535533905932737*cM[1]; 
  BigAEM(15,30) = -0.3162277660168379*cM[6]; 
  BigAEM(15,33) = -0.2828427124746191*cM[5]; 
  BigAEM(15,35) = (-0.2258769757263128*cM[9])-0.3162277660168379*cM[7]-0.3535533905932737*cM[0]; 
  BigAEM(15,36) = -0.3535533905932737*cM[4]; 
  BigAEM(15,39) = -0.3105295017040593*cM[5]; 
  BigAEM(16,20) = -0.3535533905932737*cM[16]; 
  BigAEM(16,22) = -0.3535533905932737*cM[9]; 
  BigAEM(16,23) = -0.3162277660168379*cM[6]; 
  BigAEM(16,24) = -0.3535533905932737*cM[15]; 
  BigAEM(16,25) = -0.3162277660168379*cM[10]; 
  BigAEM(16,26) = (-0.3105295017040593*cM[19])-0.2828427124746191*cM[14]-0.3162277660168379*cM[3]; 
  BigAEM(16,28) = -0.3162277660168379*cM[16]; 
  BigAEM(16,29) = (-0.2258769757263128*cM[16])-0.3535533905932737*cM[2]; 
  BigAEM(16,30) = -0.3162277660168379*cM[5]; 
  BigAEM(16,34) = -0.2828427124746191*cM[6]; 
  BigAEM(16,35) = -0.3535533905932737*cM[4]; 
  BigAEM(16,36) = (-0.2258769757263128*cM[9])-0.3162277660168379*cM[8]-0.3535533905932737*cM[0]; 
  BigAEM(16,39) = -0.3105295017040593*cM[6]; 
  BigAEM(17,20) = -0.3535533905932737*cM[17]; 
  BigAEM(17,21) = -0.3105295017040592*cM[7]; 
  BigAEM(17,24) = -0.3105295017040593*cM[11]; 
  BigAEM(17,25) = -0.3105295017040593*cM[13]; 
  BigAEM(17,27) = (-0.210818510677892*cM[17])-0.3105295017040592*cM[1]; 
  BigAEM(17,31) = -0.3105295017040593*cM[4]; 
  BigAEM(17,33) = -0.3105295017040593*cM[5]; 
  BigAEM(17,37) = (-0.210818510677892*cM[7])-0.3535533905932737*cM[0]; 
  BigAEM(18,20) = -0.3535533905932737*cM[18]; 
  BigAEM(18,22) = -0.3105295017040592*cM[8]; 
  BigAEM(18,24) = -0.3105295017040593*cM[12]; 
  BigAEM(18,26) = -0.3105295017040593*cM[14]; 
  BigAEM(18,28) = (-0.210818510677892*cM[18])-0.3105295017040592*cM[2]; 
  BigAEM(18,32) = -0.3105295017040593*cM[4]; 
  BigAEM(18,34) = -0.3105295017040593*cM[6]; 
  BigAEM(18,38) = (-0.210818510677892*cM[8])-0.3535533905932737*cM[0]; 
  BigAEM(19,20) = -0.3535533905932737*cM[19]; 
  BigAEM(19,23) = -0.3105295017040592*cM[9]; 
  BigAEM(19,25) = -0.3105295017040593*cM[15]; 
  BigAEM(19,26) = -0.3105295017040593*cM[16]; 
  BigAEM(19,29) = (-0.210818510677892*cM[19])-0.3105295017040592*cM[3]; 
  BigAEM(19,35) = -0.3105295017040593*cM[5]; 
  BigAEM(19,36) = -0.3105295017040593*cM[6]; 
  BigAEM(19,39) = (-0.210818510677892*cM[9])-0.3535533905932737*cM[0]; 
 
  // ....... Block from weak multiply of uX and m1X  .......... // 
  BigAEM(20,0) = 0.3535533905932737*m1[0]; 
  BigAEM(20,1) = 0.3535533905932737*m1[1]; 
  BigAEM(20,2) = 0.3535533905932737*m1[2]; 
  BigAEM(20,3) = 0.3535533905932737*m1[3]; 
  BigAEM(20,4) = 0.3535533905932737*m1[4]; 
  BigAEM(20,5) = 0.3535533905932737*m1[5]; 
  BigAEM(20,6) = 0.3535533905932737*m1[6]; 
  BigAEM(20,7) = 0.3535533905932737*m1[7]; 
  BigAEM(20,8) = 0.3535533905932737*m1[8]; 
  BigAEM(20,9) = 0.3535533905932737*m1[9]; 
  BigAEM(20,10) = 0.3535533905932737*m1[10]; 
  BigAEM(20,11) = 0.3535533905932737*m1[11]; 
  BigAEM(20,12) = 0.3535533905932737*m1[12]; 
  BigAEM(20,13) = 0.3535533905932737*m1[13]; 
  BigAEM(20,14) = 0.3535533905932737*m1[14]; 
  BigAEM(20,15) = 0.3535533905932737*m1[15]; 
  BigAEM(20,16) = 0.3535533905932737*m1[16]; 
  BigAEM(20,17) = 0.3535533905932737*m1[17]; 
  BigAEM(20,18) = 0.3535533905932737*m1[18]; 
  BigAEM(20,19) = 0.3535533905932737*m1[19]; 
  BigAEM(21,0) = 0.3535533905932737*m1[1]; 
  BigAEM(21,1) = 0.3162277660168379*m1[7]+0.3535533905932737*m1[0]; 
  BigAEM(21,2) = 0.3535533905932737*m1[4]; 
  BigAEM(21,3) = 0.3535533905932737*m1[5]; 
  BigAEM(21,4) = 0.3162277660168379*m1[11]+0.3535533905932737*m1[2]; 
  BigAEM(21,5) = 0.3162277660168379*m1[13]+0.3535533905932737*m1[3]; 
  BigAEM(21,6) = 0.3535533905932737*m1[10]; 
  BigAEM(21,7) = 0.3105295017040592*m1[17]+0.3162277660168379*m1[1]; 
  BigAEM(21,8) = 0.3535533905932737*m1[12]; 
  BigAEM(21,9) = 0.3535533905932737*m1[15]; 
  BigAEM(21,10) = 0.3535533905932737*m1[6]; 
  BigAEM(21,11) = 0.3162277660168379*m1[4]; 
  BigAEM(21,12) = 0.3535533905932737*m1[8]; 
  BigAEM(21,13) = 0.3162277660168379*m1[5]; 
  BigAEM(21,15) = 0.3535533905932737*m1[9]; 
  BigAEM(21,17) = 0.3105295017040592*m1[7]; 
  BigAEM(22,0) = 0.3535533905932737*m1[2]; 
  BigAEM(22,1) = 0.3535533905932737*m1[4]; 
  BigAEM(22,2) = 0.3162277660168379*m1[8]+0.3535533905932737*m1[0]; 
  BigAEM(22,3) = 0.3535533905932737*m1[6]; 
  BigAEM(22,4) = 0.3162277660168379*m1[12]+0.3535533905932737*m1[1]; 
  BigAEM(22,5) = 0.3535533905932737*m1[10]; 
  BigAEM(22,6) = 0.3162277660168379*m1[14]+0.3535533905932737*m1[3]; 
  BigAEM(22,7) = 0.3535533905932737*m1[11]; 
  BigAEM(22,8) = 0.3105295017040592*m1[18]+0.3162277660168379*m1[2]; 
  BigAEM(22,9) = 0.3535533905932737*m1[16]; 
  BigAEM(22,10) = 0.3535533905932737*m1[5]; 
  BigAEM(22,11) = 0.3535533905932737*m1[7]; 
  BigAEM(22,12) = 0.3162277660168379*m1[4]; 
  BigAEM(22,14) = 0.3162277660168379*m1[6]; 
  BigAEM(22,16) = 0.3535533905932737*m1[9]; 
  BigAEM(22,18) = 0.3105295017040592*m1[8]; 
  BigAEM(23,0) = 0.3535533905932737*m1[3]; 
  BigAEM(23,1) = 0.3535533905932737*m1[5]; 
  BigAEM(23,2) = 0.3535533905932737*m1[6]; 
  BigAEM(23,3) = 0.3162277660168379*m1[9]+0.3535533905932737*m1[0]; 
  BigAEM(23,4) = 0.3535533905932737*m1[10]; 
  BigAEM(23,5) = 0.3162277660168379*m1[15]+0.3535533905932737*m1[1]; 
  BigAEM(23,6) = 0.3162277660168379*m1[16]+0.3535533905932737*m1[2]; 
  BigAEM(23,7) = 0.3535533905932737*m1[13]; 
  BigAEM(23,8) = 0.3535533905932737*m1[14]; 
  BigAEM(23,9) = 0.3105295017040592*m1[19]+0.3162277660168379*m1[3]; 
  BigAEM(23,10) = 0.3535533905932737*m1[4]; 
  BigAEM(23,13) = 0.3535533905932737*m1[7]; 
  BigAEM(23,14) = 0.3535533905932737*m1[8]; 
  BigAEM(23,15) = 0.3162277660168379*m1[5]; 
  BigAEM(23,16) = 0.3162277660168379*m1[6]; 
  BigAEM(23,19) = 0.3105295017040592*m1[9]; 
  BigAEM(24,0) = 0.3535533905932737*m1[4]; 
  BigAEM(24,1) = 0.3162277660168379*m1[11]+0.3535533905932737*m1[2]; 
  BigAEM(24,2) = 0.3162277660168379*m1[12]+0.3535533905932737*m1[1]; 
  BigAEM(24,3) = 0.3535533905932737*m1[10]; 
  BigAEM(24,4) = 0.3162277660168379*m1[8]+0.3162277660168379*m1[7]+0.3535533905932737*m1[0]; 
  BigAEM(24,5) = 0.3535533905932737*m1[6]; 
  BigAEM(24,6) = 0.3535533905932737*m1[5]; 
  BigAEM(24,7) = 0.3162277660168379*m1[4]; 
  BigAEM(24,8) = 0.3162277660168379*m1[4]; 
  BigAEM(24,10) = 0.3162277660168379*m1[14]+0.3162277660168379*m1[13]+0.3535533905932737*m1[3]; 
  BigAEM(24,11) = 0.3105295017040593*m1[17]+0.2828427124746191*m1[12]+0.3162277660168379*m1[1]; 
  BigAEM(24,12) = 0.3105295017040593*m1[18]+0.2828427124746191*m1[11]+0.3162277660168379*m1[2]; 
  BigAEM(24,13) = 0.3162277660168379*m1[10]; 
  BigAEM(24,14) = 0.3162277660168379*m1[10]; 
  BigAEM(24,15) = 0.3535533905932737*m1[16]; 
  BigAEM(24,16) = 0.3535533905932737*m1[15]; 
  BigAEM(24,17) = 0.3105295017040593*m1[11]; 
  BigAEM(24,18) = 0.3105295017040593*m1[12]; 
  BigAEM(25,0) = 0.3535533905932737*m1[5]; 
  BigAEM(25,1) = 0.3162277660168379*m1[13]+0.3535533905932737*m1[3]; 
  BigAEM(25,2) = 0.3535533905932737*m1[10]; 
  BigAEM(25,3) = 0.3162277660168379*m1[15]+0.3535533905932737*m1[1]; 
  BigAEM(25,4) = 0.3535533905932737*m1[6]; 
  BigAEM(25,5) = 0.3162277660168379*m1[9]+0.3162277660168379*m1[7]+0.3535533905932737*m1[0]; 
  BigAEM(25,6) = 0.3535533905932737*m1[4]; 
  BigAEM(25,7) = 0.3162277660168379*m1[5]; 
  BigAEM(25,9) = 0.3162277660168379*m1[5]; 
  BigAEM(25,10) = 0.3162277660168379*m1[16]+0.3162277660168379*m1[11]+0.3535533905932737*m1[2]; 
  BigAEM(25,11) = 0.3162277660168379*m1[10]; 
  BigAEM(25,12) = 0.3535533905932737*m1[14]; 
  BigAEM(25,13) = 0.3105295017040593*m1[17]+0.2828427124746191*m1[15]+0.3162277660168379*m1[1]; 
  BigAEM(25,14) = 0.3535533905932737*m1[12]; 
  BigAEM(25,15) = 0.3105295017040593*m1[19]+0.2828427124746191*m1[13]+0.3162277660168379*m1[3]; 
  BigAEM(25,16) = 0.3162277660168379*m1[10]; 
  BigAEM(25,17) = 0.3105295017040593*m1[13]; 
  BigAEM(25,19) = 0.3105295017040593*m1[15]; 
  BigAEM(26,0) = 0.3535533905932737*m1[6]; 
  BigAEM(26,1) = 0.3535533905932737*m1[10]; 
  BigAEM(26,2) = 0.3162277660168379*m1[14]+0.3535533905932737*m1[3]; 
  BigAEM(26,3) = 0.3162277660168379*m1[16]+0.3535533905932737*m1[2]; 
  BigAEM(26,4) = 0.3535533905932737*m1[5]; 
  BigAEM(26,5) = 0.3535533905932737*m1[4]; 
  BigAEM(26,6) = 0.3162277660168379*m1[9]+0.3162277660168379*m1[8]+0.3535533905932737*m1[0]; 
  BigAEM(26,8) = 0.3162277660168379*m1[6]; 
  BigAEM(26,9) = 0.3162277660168379*m1[6]; 
  BigAEM(26,10) = 0.3162277660168379*m1[15]+0.3162277660168379*m1[12]+0.3535533905932737*m1[1]; 
  BigAEM(26,11) = 0.3535533905932737*m1[13]; 
  BigAEM(26,12) = 0.3162277660168379*m1[10]; 
  BigAEM(26,13) = 0.3535533905932737*m1[11]; 
  BigAEM(26,14) = 0.3105295017040593*m1[18]+0.2828427124746191*m1[16]+0.3162277660168379*m1[2]; 
  BigAEM(26,15) = 0.3162277660168379*m1[10]; 
  BigAEM(26,16) = 0.3105295017040593*m1[19]+0.2828427124746191*m1[14]+0.3162277660168379*m1[3]; 
  BigAEM(26,18) = 0.3105295017040593*m1[14]; 
  BigAEM(26,19) = 0.3105295017040593*m1[16]; 
  BigAEM(27,0) = 0.3535533905932737*m1[7]; 
  BigAEM(27,1) = 0.3105295017040592*m1[17]+0.3162277660168379*m1[1]; 
  BigAEM(27,2) = 0.3535533905932737*m1[11]; 
  BigAEM(27,3) = 0.3535533905932737*m1[13]; 
  BigAEM(27,4) = 0.3162277660168379*m1[4]; 
  BigAEM(27,5) = 0.3162277660168379*m1[5]; 
  BigAEM(27,7) = 0.2258769757263128*m1[7]+0.3535533905932737*m1[0]; 
  BigAEM(27,10) = 0.3162277660168379*m1[10]; 
  BigAEM(27,11) = 0.2258769757263128*m1[11]+0.3535533905932737*m1[2]; 
  BigAEM(27,12) = 0.3162277660168379*m1[12]; 
  BigAEM(27,13) = 0.2258769757263128*m1[13]+0.3535533905932737*m1[3]; 
  BigAEM(27,15) = 0.3162277660168379*m1[15]; 
  BigAEM(27,17) = 0.210818510677892*m1[17]+0.3105295017040592*m1[1]; 
  BigAEM(28,0) = 0.3535533905932737*m1[8]; 
  BigAEM(28,1) = 0.3535533905932737*m1[12]; 
  BigAEM(28,2) = 0.3105295017040592*m1[18]+0.3162277660168379*m1[2]; 
  BigAEM(28,3) = 0.3535533905932737*m1[14]; 
  BigAEM(28,4) = 0.3162277660168379*m1[4]; 
  BigAEM(28,6) = 0.3162277660168379*m1[6]; 
  BigAEM(28,8) = 0.2258769757263128*m1[8]+0.3535533905932737*m1[0]; 
  BigAEM(28,10) = 0.3162277660168379*m1[10]; 
  BigAEM(28,11) = 0.3162277660168379*m1[11]; 
  BigAEM(28,12) = 0.2258769757263128*m1[12]+0.3535533905932737*m1[1]; 
  BigAEM(28,14) = 0.2258769757263128*m1[14]+0.3535533905932737*m1[3]; 
  BigAEM(28,16) = 0.3162277660168379*m1[16]; 
  BigAEM(28,18) = 0.210818510677892*m1[18]+0.3105295017040592*m1[2]; 
  BigAEM(29,0) = 0.3535533905932737*m1[9]; 
  BigAEM(29,1) = 0.3535533905932737*m1[15]; 
  BigAEM(29,2) = 0.3535533905932737*m1[16]; 
  BigAEM(29,3) = 0.3105295017040592*m1[19]+0.3162277660168379*m1[3]; 
  BigAEM(29,5) = 0.3162277660168379*m1[5]; 
  BigAEM(29,6) = 0.3162277660168379*m1[6]; 
  BigAEM(29,9) = 0.2258769757263128*m1[9]+0.3535533905932737*m1[0]; 
  BigAEM(29,10) = 0.3162277660168379*m1[10]; 
  BigAEM(29,13) = 0.3162277660168379*m1[13]; 
  BigAEM(29,14) = 0.3162277660168379*m1[14]; 
  BigAEM(29,15) = 0.2258769757263128*m1[15]+0.3535533905932737*m1[1]; 
  BigAEM(29,16) = 0.2258769757263128*m1[16]+0.3535533905932737*m1[2]; 
  BigAEM(29,19) = 0.210818510677892*m1[19]+0.3105295017040592*m1[3]; 
  BigAEM(30,0) = 0.3535533905932737*m1[10]; 
  BigAEM(30,1) = 0.3535533905932737*m1[6]; 
  BigAEM(30,2) = 0.3535533905932737*m1[5]; 
  BigAEM(30,3) = 0.3535533905932737*m1[4]; 
  BigAEM(30,4) = 0.3162277660168379*m1[14]+0.3162277660168379*m1[13]+0.3535533905932737*m1[3]; 
  BigAEM(30,5) = 0.3162277660168379*m1[16]+0.3162277660168379*m1[11]+0.3535533905932737*m1[2]; 
  BigAEM(30,6) = 0.3162277660168379*m1[15]+0.3162277660168379*m1[12]+0.3535533905932737*m1[1]; 
  BigAEM(30,7) = 0.3162277660168379*m1[10]; 
  BigAEM(30,8) = 0.3162277660168379*m1[10]; 
  BigAEM(30,9) = 0.3162277660168379*m1[10]; 
  BigAEM(30,10) = 0.3162277660168379*m1[9]+0.3162277660168379*m1[8]+0.3162277660168379*m1[7]+0.3535533905932737*m1[0]; 
  BigAEM(30,11) = 0.3162277660168379*m1[5]; 
  BigAEM(30,12) = 0.3162277660168379*m1[6]; 
  BigAEM(30,13) = 0.3162277660168379*m1[4]; 
  BigAEM(30,14) = 0.3162277660168379*m1[4]; 
  BigAEM(30,15) = 0.3162277660168379*m1[6]; 
  BigAEM(30,16) = 0.3162277660168379*m1[5]; 
  BigAEM(31,0) = 0.3535533905932737*m1[11]; 
  BigAEM(31,1) = 0.3162277660168379*m1[4]; 
  BigAEM(31,2) = 0.3535533905932737*m1[7]; 
  BigAEM(31,4) = 0.3105295017040593*m1[17]+0.2828427124746191*m1[12]+0.3162277660168379*m1[1]; 
  BigAEM(31,5) = 0.3162277660168379*m1[10]; 
  BigAEM(31,6) = 0.3535533905932737*m1[13]; 
  BigAEM(31,7) = 0.2258769757263128*m1[11]+0.3535533905932737*m1[2]; 
  BigAEM(31,8) = 0.3162277660168379*m1[11]; 
  BigAEM(31,10) = 0.3162277660168379*m1[5]; 
  BigAEM(31,11) = 0.3162277660168379*m1[8]+0.2258769757263128*m1[7]+0.3535533905932737*m1[0]; 
  BigAEM(31,12) = 0.2828427124746191*m1[4]; 
  BigAEM(31,13) = 0.3535533905932737*m1[6]; 
  BigAEM(31,17) = 0.3105295017040593*m1[4]; 
  BigAEM(32,0) = 0.3535533905932737*m1[12]; 
  BigAEM(32,1) = 0.3535533905932737*m1[8]; 
  BigAEM(32,2) = 0.3162277660168379*m1[4]; 
  BigAEM(32,4) = 0.3105295017040593*m1[18]+0.2828427124746191*m1[11]+0.3162277660168379*m1[2]; 
  BigAEM(32,5) = 0.3535533905932737*m1[14]; 
  BigAEM(32,6) = 0.3162277660168379*m1[10]; 
  BigAEM(32,7) = 0.3162277660168379*m1[12]; 
  BigAEM(32,8) = 0.2258769757263128*m1[12]+0.3535533905932737*m1[1]; 
  BigAEM(32,10) = 0.3162277660168379*m1[6]; 
  BigAEM(32,11) = 0.2828427124746191*m1[4]; 
  BigAEM(32,12) = 0.2258769757263128*m1[8]+0.3162277660168379*m1[7]+0.3535533905932737*m1[0]; 
  BigAEM(32,14) = 0.3535533905932737*m1[5]; 
  BigAEM(32,18) = 0.3105295017040593*m1[4]; 
  BigAEM(33,0) = 0.3535533905932737*m1[13]; 
  BigAEM(33,1) = 0.3162277660168379*m1[5]; 
  BigAEM(33,3) = 0.3535533905932737*m1[7]; 
  BigAEM(33,4) = 0.3162277660168379*m1[10]; 
  BigAEM(33,5) = 0.3105295017040593*m1[17]+0.2828427124746191*m1[15]+0.3162277660168379*m1[1]; 
  BigAEM(33,6) = 0.3535533905932737*m1[11]; 
  BigAEM(33,7) = 0.2258769757263128*m1[13]+0.3535533905932737*m1[3]; 
  BigAEM(33,9) = 0.3162277660168379*m1[13]; 
  BigAEM(33,10) = 0.3162277660168379*m1[4]; 
  BigAEM(33,11) = 0.3535533905932737*m1[6]; 
  BigAEM(33,13) = 0.3162277660168379*m1[9]+0.2258769757263128*m1[7]+0.3535533905932737*m1[0]; 
  BigAEM(33,15) = 0.2828427124746191*m1[5]; 
  BigAEM(33,17) = 0.3105295017040593*m1[5]; 
  BigAEM(34,0) = 0.3535533905932737*m1[14]; 
  BigAEM(34,2) = 0.3162277660168379*m1[6]; 
  BigAEM(34,3) = 0.3535533905932737*m1[8]; 
  BigAEM(34,4) = 0.3162277660168379*m1[10]; 
  BigAEM(34,5) = 0.3535533905932737*m1[12]; 
  BigAEM(34,6) = 0.3105295017040593*m1[18]+0.2828427124746191*m1[16]+0.3162277660168379*m1[2]; 
  BigAEM(34,8) = 0.2258769757263128*m1[14]+0.3535533905932737*m1[3]; 
  BigAEM(34,9) = 0.3162277660168379*m1[14]; 
  BigAEM(34,10) = 0.3162277660168379*m1[4]; 
  BigAEM(34,12) = 0.3535533905932737*m1[5]; 
  BigAEM(34,14) = 0.3162277660168379*m1[9]+0.2258769757263128*m1[8]+0.3535533905932737*m1[0]; 
  BigAEM(34,16) = 0.2828427124746191*m1[6]; 
  BigAEM(34,18) = 0.3105295017040593*m1[6]; 
  BigAEM(35,0) = 0.3535533905932737*m1[15]; 
  BigAEM(35,1) = 0.3535533905932737*m1[9]; 
  BigAEM(35,3) = 0.3162277660168379*m1[5]; 
  BigAEM(35,4) = 0.3535533905932737*m1[16]; 
  BigAEM(35,5) = 0.3105295017040593*m1[19]+0.2828427124746191*m1[13]+0.3162277660168379*m1[3]; 
  BigAEM(35,6) = 0.3162277660168379*m1[10]; 
  BigAEM(35,7) = 0.3162277660168379*m1[15]; 
  BigAEM(35,9) = 0.2258769757263128*m1[15]+0.3535533905932737*m1[1]; 
  BigAEM(35,10) = 0.3162277660168379*m1[6]; 
  BigAEM(35,13) = 0.2828427124746191*m1[5]; 
  BigAEM(35,15) = 0.2258769757263128*m1[9]+0.3162277660168379*m1[7]+0.3535533905932737*m1[0]; 
  BigAEM(35,16) = 0.3535533905932737*m1[4]; 
  BigAEM(35,19) = 0.3105295017040593*m1[5]; 
  BigAEM(36,0) = 0.3535533905932737*m1[16]; 
  BigAEM(36,2) = 0.3535533905932737*m1[9]; 
  BigAEM(36,3) = 0.3162277660168379*m1[6]; 
  BigAEM(36,4) = 0.3535533905932737*m1[15]; 
  BigAEM(36,5) = 0.3162277660168379*m1[10]; 
  BigAEM(36,6) = 0.3105295017040593*m1[19]+0.2828427124746191*m1[14]+0.3162277660168379*m1[3]; 
  BigAEM(36,8) = 0.3162277660168379*m1[16]; 
  BigAEM(36,9) = 0.2258769757263128*m1[16]+0.3535533905932737*m1[2]; 
  BigAEM(36,10) = 0.3162277660168379*m1[5]; 
  BigAEM(36,14) = 0.2828427124746191*m1[6]; 
  BigAEM(36,15) = 0.3535533905932737*m1[4]; 
  BigAEM(36,16) = 0.2258769757263128*m1[9]+0.3162277660168379*m1[8]+0.3535533905932737*m1[0]; 
  BigAEM(36,19) = 0.3105295017040593*m1[6]; 
  BigAEM(37,0) = 0.3535533905932737*m1[17]; 
  BigAEM(37,1) = 0.3105295017040592*m1[7]; 
  BigAEM(37,4) = 0.3105295017040593*m1[11]; 
  BigAEM(37,5) = 0.3105295017040593*m1[13]; 
  BigAEM(37,7) = 0.210818510677892*m1[17]+0.3105295017040592*m1[1]; 
  BigAEM(37,11) = 0.3105295017040593*m1[4]; 
  BigAEM(37,13) = 0.3105295017040593*m1[5]; 
  BigAEM(37,17) = 0.210818510677892*m1[7]+0.3535533905932737*m1[0]; 
  BigAEM(38,0) = 0.3535533905932737*m1[18]; 
  BigAEM(38,2) = 0.3105295017040592*m1[8]; 
  BigAEM(38,4) = 0.3105295017040593*m1[12]; 
  BigAEM(38,6) = 0.3105295017040593*m1[14]; 
  BigAEM(38,8) = 0.210818510677892*m1[18]+0.3105295017040592*m1[2]; 
  BigAEM(38,12) = 0.3105295017040593*m1[4]; 
  BigAEM(38,14) = 0.3105295017040593*m1[6]; 
  BigAEM(38,18) = 0.210818510677892*m1[8]+0.3535533905932737*m1[0]; 
  BigAEM(39,0) = 0.3535533905932737*m1[19]; 
  BigAEM(39,3) = 0.3105295017040592*m1[9]; 
  BigAEM(39,5) = 0.3105295017040593*m1[15]; 
  BigAEM(39,6) = 0.3105295017040593*m1[16]; 
  BigAEM(39,9) = 0.210818510677892*m1[19]+0.3105295017040592*m1[3]; 
  BigAEM(39,15) = 0.3105295017040593*m1[5]; 
  BigAEM(39,16) = 0.3105295017040593*m1[6]; 
  BigAEM(39,19) = 0.210818510677892*m1[9]+0.3535533905932737*m1[0]; 
 
  // ....... Block from correction to vtSq .......... // 
  BigAEM(20,20) = 0.3535533905932737*m0s[0]*pVdim-0.3535533905932737*cE[0]; 
  BigAEM(20,21) = 0.3535533905932737*m0s[1]*pVdim-0.3535533905932737*cE[1]; 
  BigAEM(20,22) = 0.3535533905932737*m0s[2]*pVdim-0.3535533905932737*cE[2]; 
  BigAEM(20,23) = 0.3535533905932737*m0s[3]*pVdim-0.3535533905932737*cE[3]; 
  BigAEM(20,24) = 0.3535533905932737*m0s[4]*pVdim-0.3535533905932737*cE[4]; 
  BigAEM(20,25) = 0.3535533905932737*m0s[5]*pVdim-0.3535533905932737*cE[5]; 
  BigAEM(20,26) = 0.3535533905932737*m0s[6]*pVdim-0.3535533905932737*cE[6]; 
  BigAEM(20,27) = 0.3535533905932737*m0s[7]*pVdim-0.3535533905932737*cE[7]; 
  BigAEM(20,28) = 0.3535533905932737*m0s[8]*pVdim-0.3535533905932737*cE[8]; 
  BigAEM(20,29) = 0.3535533905932737*m0s[9]*pVdim-0.3535533905932737*cE[9]; 
  BigAEM(20,30) = 0.3535533905932737*m0s[10]*pVdim-0.3535533905932737*cE[10]; 
  BigAEM(20,31) = 0.3535533905932737*m0s[11]*pVdim-0.3535533905932737*cE[11]; 
  BigAEM(20,32) = 0.3535533905932737*m0s[12]*pVdim-0.3535533905932737*cE[12]; 
  BigAEM(20,33) = 0.3535533905932737*m0s[13]*pVdim-0.3535533905932737*cE[13]; 
  BigAEM(20,34) = 0.3535533905932737*m0s[14]*pVdim-0.3535533905932737*cE[14]; 
  BigAEM(20,35) = 0.3535533905932737*m0s[15]*pVdim-0.3535533905932737*cE[15]; 
  BigAEM(20,36) = 0.3535533905932737*m0s[16]*pVdim-0.3535533905932737*cE[16]; 
  BigAEM(20,37) = 0.3535533905932737*m0s[17]*pVdim-0.3535533905932737*cE[17]; 
  BigAEM(20,38) = 0.3535533905932737*m0s[18]*pVdim-0.3535533905932737*cE[18]; 
  BigAEM(20,39) = 0.3535533905932737*m0s[19]*pVdim-0.3535533905932737*cE[19]; 
  BigAEM(21,20) = 0.3535533905932737*m0s[1]*pVdim-0.3535533905932737*cE[1]; 
  BigAEM(21,21) = 0.3162277660168379*m0s[7]*pVdim+0.3535533905932737*m0s[0]*pVdim-0.3162277660168379*cE[7]-0.3535533905932737*cE[0]; 
  BigAEM(21,22) = 0.3535533905932737*m0s[4]*pVdim-0.3535533905932737*cE[4]; 
  BigAEM(21,23) = 0.3535533905932737*m0s[5]*pVdim-0.3535533905932737*cE[5]; 
  BigAEM(21,24) = 0.3162277660168379*m0s[11]*pVdim+0.3535533905932737*m0s[2]*pVdim-0.3162277660168379*cE[11]-0.3535533905932737*cE[2]; 
  BigAEM(21,25) = 0.3162277660168379*m0s[13]*pVdim+0.3535533905932737*m0s[3]*pVdim-0.3162277660168379*cE[13]-0.3535533905932737*cE[3]; 
  BigAEM(21,26) = 0.3535533905932737*m0s[10]*pVdim-0.3535533905932737*cE[10]; 
  BigAEM(21,27) = 0.3105295017040592*m0s[17]*pVdim+0.3162277660168379*m0s[1]*pVdim-0.3105295017040592*cE[17]-0.3162277660168379*cE[1]; 
  BigAEM(21,28) = 0.3535533905932737*m0s[12]*pVdim-0.3535533905932737*cE[12]; 
  BigAEM(21,29) = 0.3535533905932737*m0s[15]*pVdim-0.3535533905932737*cE[15]; 
  BigAEM(21,30) = 0.3535533905932737*m0s[6]*pVdim-0.3535533905932737*cE[6]; 
  BigAEM(21,31) = 0.3162277660168379*m0s[4]*pVdim-0.3162277660168379*cE[4]; 
  BigAEM(21,32) = 0.3535533905932737*m0s[8]*pVdim-0.3535533905932737*cE[8]; 
  BigAEM(21,33) = 0.3162277660168379*m0s[5]*pVdim-0.3162277660168379*cE[5]; 
  BigAEM(21,35) = 0.3535533905932737*m0s[9]*pVdim-0.3535533905932737*cE[9]; 
  BigAEM(21,37) = 0.3105295017040592*m0s[7]*pVdim-0.3105295017040592*cE[7]; 
  BigAEM(22,20) = 0.3535533905932737*m0s[2]*pVdim-0.3535533905932737*cE[2]; 
  BigAEM(22,21) = 0.3535533905932737*m0s[4]*pVdim-0.3535533905932737*cE[4]; 
  BigAEM(22,22) = 0.3162277660168379*m0s[8]*pVdim+0.3535533905932737*m0s[0]*pVdim-0.3162277660168379*cE[8]-0.3535533905932737*cE[0]; 
  BigAEM(22,23) = 0.3535533905932737*m0s[6]*pVdim-0.3535533905932737*cE[6]; 
  BigAEM(22,24) = 0.3162277660168379*m0s[12]*pVdim+0.3535533905932737*m0s[1]*pVdim-0.3162277660168379*cE[12]-0.3535533905932737*cE[1]; 
  BigAEM(22,25) = 0.3535533905932737*m0s[10]*pVdim-0.3535533905932737*cE[10]; 
  BigAEM(22,26) = 0.3162277660168379*m0s[14]*pVdim+0.3535533905932737*m0s[3]*pVdim-0.3162277660168379*cE[14]-0.3535533905932737*cE[3]; 
  BigAEM(22,27) = 0.3535533905932737*m0s[11]*pVdim-0.3535533905932737*cE[11]; 
  BigAEM(22,28) = 0.3105295017040592*m0s[18]*pVdim+0.3162277660168379*m0s[2]*pVdim-0.3105295017040592*cE[18]-0.3162277660168379*cE[2]; 
  BigAEM(22,29) = 0.3535533905932737*m0s[16]*pVdim-0.3535533905932737*cE[16]; 
  BigAEM(22,30) = 0.3535533905932737*m0s[5]*pVdim-0.3535533905932737*cE[5]; 
  BigAEM(22,31) = 0.3535533905932737*m0s[7]*pVdim-0.3535533905932737*cE[7]; 
  BigAEM(22,32) = 0.3162277660168379*m0s[4]*pVdim-0.3162277660168379*cE[4]; 
  BigAEM(22,34) = 0.3162277660168379*m0s[6]*pVdim-0.3162277660168379*cE[6]; 
  BigAEM(22,36) = 0.3535533905932737*m0s[9]*pVdim-0.3535533905932737*cE[9]; 
  BigAEM(22,38) = 0.3105295017040592*m0s[8]*pVdim-0.3105295017040592*cE[8]; 
  BigAEM(23,20) = 0.3535533905932737*m0s[3]*pVdim-0.3535533905932737*cE[3]; 
  BigAEM(23,21) = 0.3535533905932737*m0s[5]*pVdim-0.3535533905932737*cE[5]; 
  BigAEM(23,22) = 0.3535533905932737*m0s[6]*pVdim-0.3535533905932737*cE[6]; 
  BigAEM(23,23) = 0.3162277660168379*m0s[9]*pVdim+0.3535533905932737*m0s[0]*pVdim-0.3162277660168379*cE[9]-0.3535533905932737*cE[0]; 
  BigAEM(23,24) = 0.3535533905932737*m0s[10]*pVdim-0.3535533905932737*cE[10]; 
  BigAEM(23,25) = 0.3162277660168379*m0s[15]*pVdim+0.3535533905932737*m0s[1]*pVdim-0.3162277660168379*cE[15]-0.3535533905932737*cE[1]; 
  BigAEM(23,26) = 0.3162277660168379*m0s[16]*pVdim+0.3535533905932737*m0s[2]*pVdim-0.3162277660168379*cE[16]-0.3535533905932737*cE[2]; 
  BigAEM(23,27) = 0.3535533905932737*m0s[13]*pVdim-0.3535533905932737*cE[13]; 
  BigAEM(23,28) = 0.3535533905932737*m0s[14]*pVdim-0.3535533905932737*cE[14]; 
  BigAEM(23,29) = 0.3105295017040592*m0s[19]*pVdim+0.3162277660168379*m0s[3]*pVdim-0.3105295017040592*cE[19]-0.3162277660168379*cE[3]; 
  BigAEM(23,30) = 0.3535533905932737*m0s[4]*pVdim-0.3535533905932737*cE[4]; 
  BigAEM(23,33) = 0.3535533905932737*m0s[7]*pVdim-0.3535533905932737*cE[7]; 
  BigAEM(23,34) = 0.3535533905932737*m0s[8]*pVdim-0.3535533905932737*cE[8]; 
  BigAEM(23,35) = 0.3162277660168379*m0s[5]*pVdim-0.3162277660168379*cE[5]; 
  BigAEM(23,36) = 0.3162277660168379*m0s[6]*pVdim-0.3162277660168379*cE[6]; 
  BigAEM(23,39) = 0.3105295017040592*m0s[9]*pVdim-0.3105295017040592*cE[9]; 
  BigAEM(24,20) = 0.3535533905932737*m0s[4]*pVdim-0.3535533905932737*cE[4]; 
  BigAEM(24,21) = 0.3162277660168379*m0s[11]*pVdim+0.3535533905932737*m0s[2]*pVdim-0.3162277660168379*cE[11]-0.3535533905932737*cE[2]; 
  BigAEM(24,22) = 0.3162277660168379*m0s[12]*pVdim+0.3535533905932737*m0s[1]*pVdim-0.3162277660168379*cE[12]-0.3535533905932737*cE[1]; 
  BigAEM(24,23) = 0.3535533905932737*m0s[10]*pVdim-0.3535533905932737*cE[10]; 
  BigAEM(24,24) = 0.3162277660168379*m0s[8]*pVdim+0.3162277660168379*m0s[7]*pVdim+0.3535533905932737*m0s[0]*pVdim-0.3162277660168379*cE[8]-0.3162277660168379*cE[7]-0.3535533905932737*cE[0]; 
  BigAEM(24,25) = 0.3535533905932737*m0s[6]*pVdim-0.3535533905932737*cE[6]; 
  BigAEM(24,26) = 0.3535533905932737*m0s[5]*pVdim-0.3535533905932737*cE[5]; 
  BigAEM(24,27) = 0.3162277660168379*m0s[4]*pVdim-0.3162277660168379*cE[4]; 
  BigAEM(24,28) = 0.3162277660168379*m0s[4]*pVdim-0.3162277660168379*cE[4]; 
  BigAEM(24,30) = 0.3162277660168379*m0s[14]*pVdim+0.3162277660168379*m0s[13]*pVdim+0.3535533905932737*m0s[3]*pVdim-0.3162277660168379*cE[14]-0.3162277660168379*cE[13]-0.3535533905932737*cE[3]; 
  BigAEM(24,31) = 0.3105295017040593*m0s[17]*pVdim+0.2828427124746191*m0s[12]*pVdim+0.3162277660168379*m0s[1]*pVdim-0.3105295017040593*cE[17]-0.2828427124746191*cE[12]-0.3162277660168379*cE[1]; 
  BigAEM(24,32) = 0.3105295017040593*m0s[18]*pVdim+0.2828427124746191*m0s[11]*pVdim+0.3162277660168379*m0s[2]*pVdim-0.3105295017040593*cE[18]-0.2828427124746191*cE[11]-0.3162277660168379*cE[2]; 
  BigAEM(24,33) = 0.3162277660168379*m0s[10]*pVdim-0.3162277660168379*cE[10]; 
  BigAEM(24,34) = 0.3162277660168379*m0s[10]*pVdim-0.3162277660168379*cE[10]; 
  BigAEM(24,35) = 0.3535533905932737*m0s[16]*pVdim-0.3535533905932737*cE[16]; 
  BigAEM(24,36) = 0.3535533905932737*m0s[15]*pVdim-0.3535533905932737*cE[15]; 
  BigAEM(24,37) = 0.3105295017040593*m0s[11]*pVdim-0.3105295017040593*cE[11]; 
  BigAEM(24,38) = 0.3105295017040593*m0s[12]*pVdim-0.3105295017040593*cE[12]; 
  BigAEM(25,20) = 0.3535533905932737*m0s[5]*pVdim-0.3535533905932737*cE[5]; 
  BigAEM(25,21) = 0.3162277660168379*m0s[13]*pVdim+0.3535533905932737*m0s[3]*pVdim-0.3162277660168379*cE[13]-0.3535533905932737*cE[3]; 
  BigAEM(25,22) = 0.3535533905932737*m0s[10]*pVdim-0.3535533905932737*cE[10]; 
  BigAEM(25,23) = 0.3162277660168379*m0s[15]*pVdim+0.3535533905932737*m0s[1]*pVdim-0.3162277660168379*cE[15]-0.3535533905932737*cE[1]; 
  BigAEM(25,24) = 0.3535533905932737*m0s[6]*pVdim-0.3535533905932737*cE[6]; 
  BigAEM(25,25) = 0.3162277660168379*m0s[9]*pVdim+0.3162277660168379*m0s[7]*pVdim+0.3535533905932737*m0s[0]*pVdim-0.3162277660168379*cE[9]-0.3162277660168379*cE[7]-0.3535533905932737*cE[0]; 
  BigAEM(25,26) = 0.3535533905932737*m0s[4]*pVdim-0.3535533905932737*cE[4]; 
  BigAEM(25,27) = 0.3162277660168379*m0s[5]*pVdim-0.3162277660168379*cE[5]; 
  BigAEM(25,29) = 0.3162277660168379*m0s[5]*pVdim-0.3162277660168379*cE[5]; 
  BigAEM(25,30) = 0.3162277660168379*m0s[16]*pVdim+0.3162277660168379*m0s[11]*pVdim+0.3535533905932737*m0s[2]*pVdim-0.3162277660168379*cE[16]-0.3162277660168379*cE[11]-0.3535533905932737*cE[2]; 
  BigAEM(25,31) = 0.3162277660168379*m0s[10]*pVdim-0.3162277660168379*cE[10]; 
  BigAEM(25,32) = 0.3535533905932737*m0s[14]*pVdim-0.3535533905932737*cE[14]; 
  BigAEM(25,33) = 0.3105295017040593*m0s[17]*pVdim+0.2828427124746191*m0s[15]*pVdim+0.3162277660168379*m0s[1]*pVdim-0.3105295017040593*cE[17]-0.2828427124746191*cE[15]-0.3162277660168379*cE[1]; 
  BigAEM(25,34) = 0.3535533905932737*m0s[12]*pVdim-0.3535533905932737*cE[12]; 
  BigAEM(25,35) = 0.3105295017040593*m0s[19]*pVdim+0.2828427124746191*m0s[13]*pVdim+0.3162277660168379*m0s[3]*pVdim-0.3105295017040593*cE[19]-0.2828427124746191*cE[13]-0.3162277660168379*cE[3]; 
  BigAEM(25,36) = 0.3162277660168379*m0s[10]*pVdim-0.3162277660168379*cE[10]; 
  BigAEM(25,37) = 0.3105295017040593*m0s[13]*pVdim-0.3105295017040593*cE[13]; 
  BigAEM(25,39) = 0.3105295017040593*m0s[15]*pVdim-0.3105295017040593*cE[15]; 
  BigAEM(26,20) = 0.3535533905932737*m0s[6]*pVdim-0.3535533905932737*cE[6]; 
  BigAEM(26,21) = 0.3535533905932737*m0s[10]*pVdim-0.3535533905932737*cE[10]; 
  BigAEM(26,22) = 0.3162277660168379*m0s[14]*pVdim+0.3535533905932737*m0s[3]*pVdim-0.3162277660168379*cE[14]-0.3535533905932737*cE[3]; 
  BigAEM(26,23) = 0.3162277660168379*m0s[16]*pVdim+0.3535533905932737*m0s[2]*pVdim-0.3162277660168379*cE[16]-0.3535533905932737*cE[2]; 
  BigAEM(26,24) = 0.3535533905932737*m0s[5]*pVdim-0.3535533905932737*cE[5]; 
  BigAEM(26,25) = 0.3535533905932737*m0s[4]*pVdim-0.3535533905932737*cE[4]; 
  BigAEM(26,26) = 0.3162277660168379*m0s[9]*pVdim+0.3162277660168379*m0s[8]*pVdim+0.3535533905932737*m0s[0]*pVdim-0.3162277660168379*cE[9]-0.3162277660168379*cE[8]-0.3535533905932737*cE[0]; 
  BigAEM(26,28) = 0.3162277660168379*m0s[6]*pVdim-0.3162277660168379*cE[6]; 
  BigAEM(26,29) = 0.3162277660168379*m0s[6]*pVdim-0.3162277660168379*cE[6]; 
  BigAEM(26,30) = 0.3162277660168379*m0s[15]*pVdim+0.3162277660168379*m0s[12]*pVdim+0.3535533905932737*m0s[1]*pVdim-0.3162277660168379*cE[15]-0.3162277660168379*cE[12]-0.3535533905932737*cE[1]; 
  BigAEM(26,31) = 0.3535533905932737*m0s[13]*pVdim-0.3535533905932737*cE[13]; 
  BigAEM(26,32) = 0.3162277660168379*m0s[10]*pVdim-0.3162277660168379*cE[10]; 
  BigAEM(26,33) = 0.3535533905932737*m0s[11]*pVdim-0.3535533905932737*cE[11]; 
  BigAEM(26,34) = 0.3105295017040593*m0s[18]*pVdim+0.2828427124746191*m0s[16]*pVdim+0.3162277660168379*m0s[2]*pVdim-0.3105295017040593*cE[18]-0.2828427124746191*cE[16]-0.3162277660168379*cE[2]; 
  BigAEM(26,35) = 0.3162277660168379*m0s[10]*pVdim-0.3162277660168379*cE[10]; 
  BigAEM(26,36) = 0.3105295017040593*m0s[19]*pVdim+0.2828427124746191*m0s[14]*pVdim+0.3162277660168379*m0s[3]*pVdim-0.3105295017040593*cE[19]-0.2828427124746191*cE[14]-0.3162277660168379*cE[3]; 
  BigAEM(26,38) = 0.3105295017040593*m0s[14]*pVdim-0.3105295017040593*cE[14]; 
  BigAEM(26,39) = 0.3105295017040593*m0s[16]*pVdim-0.3105295017040593*cE[16]; 
  BigAEM(27,20) = 0.3535533905932737*m0s[7]*pVdim-0.3535533905932737*cE[7]; 
  BigAEM(27,21) = 0.3105295017040592*m0s[17]*pVdim+0.3162277660168379*m0s[1]*pVdim-0.3105295017040592*cE[17]-0.3162277660168379*cE[1]; 
  BigAEM(27,22) = 0.3535533905932737*m0s[11]*pVdim-0.3535533905932737*cE[11]; 
  BigAEM(27,23) = 0.3535533905932737*m0s[13]*pVdim-0.3535533905932737*cE[13]; 
  BigAEM(27,24) = 0.3162277660168379*m0s[4]*pVdim-0.3162277660168379*cE[4]; 
  BigAEM(27,25) = 0.3162277660168379*m0s[5]*pVdim-0.3162277660168379*cE[5]; 
  BigAEM(27,27) = 0.2258769757263128*m0s[7]*pVdim+0.3535533905932737*m0s[0]*pVdim-0.2258769757263128*cE[7]-0.3535533905932737*cE[0]; 
  BigAEM(27,30) = 0.3162277660168379*m0s[10]*pVdim-0.3162277660168379*cE[10]; 
  BigAEM(27,31) = 0.2258769757263128*m0s[11]*pVdim+0.3535533905932737*m0s[2]*pVdim-0.2258769757263128*cE[11]-0.3535533905932737*cE[2]; 
  BigAEM(27,32) = 0.3162277660168379*m0s[12]*pVdim-0.3162277660168379*cE[12]; 
  BigAEM(27,33) = 0.2258769757263128*m0s[13]*pVdim+0.3535533905932737*m0s[3]*pVdim-0.2258769757263128*cE[13]-0.3535533905932737*cE[3]; 
  BigAEM(27,35) = 0.3162277660168379*m0s[15]*pVdim-0.3162277660168379*cE[15]; 
  BigAEM(27,37) = 0.210818510677892*m0s[17]*pVdim+0.3105295017040592*m0s[1]*pVdim-0.210818510677892*cE[17]-0.3105295017040592*cE[1]; 
  BigAEM(28,20) = 0.3535533905932737*m0s[8]*pVdim-0.3535533905932737*cE[8]; 
  BigAEM(28,21) = 0.3535533905932737*m0s[12]*pVdim-0.3535533905932737*cE[12]; 
  BigAEM(28,22) = 0.3105295017040592*m0s[18]*pVdim+0.3162277660168379*m0s[2]*pVdim-0.3105295017040592*cE[18]-0.3162277660168379*cE[2]; 
  BigAEM(28,23) = 0.3535533905932737*m0s[14]*pVdim-0.3535533905932737*cE[14]; 
  BigAEM(28,24) = 0.3162277660168379*m0s[4]*pVdim-0.3162277660168379*cE[4]; 
  BigAEM(28,26) = 0.3162277660168379*m0s[6]*pVdim-0.3162277660168379*cE[6]; 
  BigAEM(28,28) = 0.2258769757263128*m0s[8]*pVdim+0.3535533905932737*m0s[0]*pVdim-0.2258769757263128*cE[8]-0.3535533905932737*cE[0]; 
  BigAEM(28,30) = 0.3162277660168379*m0s[10]*pVdim-0.3162277660168379*cE[10]; 
  BigAEM(28,31) = 0.3162277660168379*m0s[11]*pVdim-0.3162277660168379*cE[11]; 
  BigAEM(28,32) = 0.2258769757263128*m0s[12]*pVdim+0.3535533905932737*m0s[1]*pVdim-0.2258769757263128*cE[12]-0.3535533905932737*cE[1]; 
  BigAEM(28,34) = 0.2258769757263128*m0s[14]*pVdim+0.3535533905932737*m0s[3]*pVdim-0.2258769757263128*cE[14]-0.3535533905932737*cE[3]; 
  BigAEM(28,36) = 0.3162277660168379*m0s[16]*pVdim-0.3162277660168379*cE[16]; 
  BigAEM(28,38) = 0.210818510677892*m0s[18]*pVdim+0.3105295017040592*m0s[2]*pVdim-0.210818510677892*cE[18]-0.3105295017040592*cE[2]; 
  BigAEM(29,20) = 0.3535533905932737*m0s[9]*pVdim-0.3535533905932737*cE[9]; 
  BigAEM(29,21) = 0.3535533905932737*m0s[15]*pVdim-0.3535533905932737*cE[15]; 
  BigAEM(29,22) = 0.3535533905932737*m0s[16]*pVdim-0.3535533905932737*cE[16]; 
  BigAEM(29,23) = 0.3105295017040592*m0s[19]*pVdim+0.3162277660168379*m0s[3]*pVdim-0.3105295017040592*cE[19]-0.3162277660168379*cE[3]; 
  BigAEM(29,25) = 0.3162277660168379*m0s[5]*pVdim-0.3162277660168379*cE[5]; 
  BigAEM(29,26) = 0.3162277660168379*m0s[6]*pVdim-0.3162277660168379*cE[6]; 
  BigAEM(29,29) = 0.2258769757263128*m0s[9]*pVdim+0.3535533905932737*m0s[0]*pVdim-0.2258769757263128*cE[9]-0.3535533905932737*cE[0]; 
  BigAEM(29,30) = 0.3162277660168379*m0s[10]*pVdim-0.3162277660168379*cE[10]; 
  BigAEM(29,33) = 0.3162277660168379*m0s[13]*pVdim-0.3162277660168379*cE[13]; 
  BigAEM(29,34) = 0.3162277660168379*m0s[14]*pVdim-0.3162277660168379*cE[14]; 
  BigAEM(29,35) = 0.2258769757263128*m0s[15]*pVdim+0.3535533905932737*m0s[1]*pVdim-0.2258769757263128*cE[15]-0.3535533905932737*cE[1]; 
  BigAEM(29,36) = 0.2258769757263128*m0s[16]*pVdim+0.3535533905932737*m0s[2]*pVdim-0.2258769757263128*cE[16]-0.3535533905932737*cE[2]; 
  BigAEM(29,39) = 0.210818510677892*m0s[19]*pVdim+0.3105295017040592*m0s[3]*pVdim-0.210818510677892*cE[19]-0.3105295017040592*cE[3]; 
  BigAEM(30,20) = 0.3535533905932737*m0s[10]*pVdim-0.3535533905932737*cE[10]; 
  BigAEM(30,21) = 0.3535533905932737*m0s[6]*pVdim-0.3535533905932737*cE[6]; 
  BigAEM(30,22) = 0.3535533905932737*m0s[5]*pVdim-0.3535533905932737*cE[5]; 
  BigAEM(30,23) = 0.3535533905932737*m0s[4]*pVdim-0.3535533905932737*cE[4]; 
  BigAEM(30,24) = 0.3162277660168379*m0s[14]*pVdim+0.3162277660168379*m0s[13]*pVdim+0.3535533905932737*m0s[3]*pVdim-0.3162277660168379*cE[14]-0.3162277660168379*cE[13]-0.3535533905932737*cE[3]; 
  BigAEM(30,25) = 0.3162277660168379*m0s[16]*pVdim+0.3162277660168379*m0s[11]*pVdim+0.3535533905932737*m0s[2]*pVdim-0.3162277660168379*cE[16]-0.3162277660168379*cE[11]-0.3535533905932737*cE[2]; 
  BigAEM(30,26) = 0.3162277660168379*m0s[15]*pVdim+0.3162277660168379*m0s[12]*pVdim+0.3535533905932737*m0s[1]*pVdim-0.3162277660168379*cE[15]-0.3162277660168379*cE[12]-0.3535533905932737*cE[1]; 
  BigAEM(30,27) = 0.3162277660168379*m0s[10]*pVdim-0.3162277660168379*cE[10]; 
  BigAEM(30,28) = 0.3162277660168379*m0s[10]*pVdim-0.3162277660168379*cE[10]; 
  BigAEM(30,29) = 0.3162277660168379*m0s[10]*pVdim-0.3162277660168379*cE[10]; 
  BigAEM(30,30) = 0.3162277660168379*m0s[9]*pVdim+0.3162277660168379*m0s[8]*pVdim+0.3162277660168379*m0s[7]*pVdim+0.3535533905932737*m0s[0]*pVdim-0.3162277660168379*cE[9]-0.3162277660168379*cE[8]-0.3162277660168379*cE[7]-0.3535533905932737*cE[0]; 
  BigAEM(30,31) = 0.3162277660168379*m0s[5]*pVdim-0.3162277660168379*cE[5]; 
  BigAEM(30,32) = 0.3162277660168379*m0s[6]*pVdim-0.3162277660168379*cE[6]; 
  BigAEM(30,33) = 0.3162277660168379*m0s[4]*pVdim-0.3162277660168379*cE[4]; 
  BigAEM(30,34) = 0.3162277660168379*m0s[4]*pVdim-0.3162277660168379*cE[4]; 
  BigAEM(30,35) = 0.3162277660168379*m0s[6]*pVdim-0.3162277660168379*cE[6]; 
  BigAEM(30,36) = 0.3162277660168379*m0s[5]*pVdim-0.3162277660168379*cE[5]; 
  BigAEM(31,20) = 0.3535533905932737*m0s[11]*pVdim-0.3535533905932737*cE[11]; 
  BigAEM(31,21) = 0.3162277660168379*m0s[4]*pVdim-0.3162277660168379*cE[4]; 
  BigAEM(31,22) = 0.3535533905932737*m0s[7]*pVdim-0.3535533905932737*cE[7]; 
  BigAEM(31,24) = 0.3105295017040593*m0s[17]*pVdim+0.2828427124746191*m0s[12]*pVdim+0.3162277660168379*m0s[1]*pVdim-0.3105295017040593*cE[17]-0.2828427124746191*cE[12]-0.3162277660168379*cE[1]; 
  BigAEM(31,25) = 0.3162277660168379*m0s[10]*pVdim-0.3162277660168379*cE[10]; 
  BigAEM(31,26) = 0.3535533905932737*m0s[13]*pVdim-0.3535533905932737*cE[13]; 
  BigAEM(31,27) = 0.2258769757263128*m0s[11]*pVdim+0.3535533905932737*m0s[2]*pVdim-0.2258769757263128*cE[11]-0.3535533905932737*cE[2]; 
  BigAEM(31,28) = 0.3162277660168379*m0s[11]*pVdim-0.3162277660168379*cE[11]; 
  BigAEM(31,30) = 0.3162277660168379*m0s[5]*pVdim-0.3162277660168379*cE[5]; 
  BigAEM(31,31) = 0.3162277660168379*m0s[8]*pVdim+0.2258769757263128*m0s[7]*pVdim+0.3535533905932737*m0s[0]*pVdim-0.3162277660168379*cE[8]-0.2258769757263128*cE[7]-0.3535533905932737*cE[0]; 
  BigAEM(31,32) = 0.2828427124746191*m0s[4]*pVdim-0.2828427124746191*cE[4]; 
  BigAEM(31,33) = 0.3535533905932737*m0s[6]*pVdim-0.3535533905932737*cE[6]; 
  BigAEM(31,37) = 0.3105295017040593*m0s[4]*pVdim-0.3105295017040593*cE[4]; 
  BigAEM(32,20) = 0.3535533905932737*m0s[12]*pVdim-0.3535533905932737*cE[12]; 
  BigAEM(32,21) = 0.3535533905932737*m0s[8]*pVdim-0.3535533905932737*cE[8]; 
  BigAEM(32,22) = 0.3162277660168379*m0s[4]*pVdim-0.3162277660168379*cE[4]; 
  BigAEM(32,24) = 0.3105295017040593*m0s[18]*pVdim+0.2828427124746191*m0s[11]*pVdim+0.3162277660168379*m0s[2]*pVdim-0.3105295017040593*cE[18]-0.2828427124746191*cE[11]-0.3162277660168379*cE[2]; 
  BigAEM(32,25) = 0.3535533905932737*m0s[14]*pVdim-0.3535533905932737*cE[14]; 
  BigAEM(32,26) = 0.3162277660168379*m0s[10]*pVdim-0.3162277660168379*cE[10]; 
  BigAEM(32,27) = 0.3162277660168379*m0s[12]*pVdim-0.3162277660168379*cE[12]; 
  BigAEM(32,28) = 0.2258769757263128*m0s[12]*pVdim+0.3535533905932737*m0s[1]*pVdim-0.2258769757263128*cE[12]-0.3535533905932737*cE[1]; 
  BigAEM(32,30) = 0.3162277660168379*m0s[6]*pVdim-0.3162277660168379*cE[6]; 
  BigAEM(32,31) = 0.2828427124746191*m0s[4]*pVdim-0.2828427124746191*cE[4]; 
  BigAEM(32,32) = 0.2258769757263128*m0s[8]*pVdim+0.3162277660168379*m0s[7]*pVdim+0.3535533905932737*m0s[0]*pVdim-0.2258769757263128*cE[8]-0.3162277660168379*cE[7]-0.3535533905932737*cE[0]; 
  BigAEM(32,34) = 0.3535533905932737*m0s[5]*pVdim-0.3535533905932737*cE[5]; 
  BigAEM(32,38) = 0.3105295017040593*m0s[4]*pVdim-0.3105295017040593*cE[4]; 
  BigAEM(33,20) = 0.3535533905932737*m0s[13]*pVdim-0.3535533905932737*cE[13]; 
  BigAEM(33,21) = 0.3162277660168379*m0s[5]*pVdim-0.3162277660168379*cE[5]; 
  BigAEM(33,23) = 0.3535533905932737*m0s[7]*pVdim-0.3535533905932737*cE[7]; 
  BigAEM(33,24) = 0.3162277660168379*m0s[10]*pVdim-0.3162277660168379*cE[10]; 
  BigAEM(33,25) = 0.3105295017040593*m0s[17]*pVdim+0.2828427124746191*m0s[15]*pVdim+0.3162277660168379*m0s[1]*pVdim-0.3105295017040593*cE[17]-0.2828427124746191*cE[15]-0.3162277660168379*cE[1]; 
  BigAEM(33,26) = 0.3535533905932737*m0s[11]*pVdim-0.3535533905932737*cE[11]; 
  BigAEM(33,27) = 0.2258769757263128*m0s[13]*pVdim+0.3535533905932737*m0s[3]*pVdim-0.2258769757263128*cE[13]-0.3535533905932737*cE[3]; 
  BigAEM(33,29) = 0.3162277660168379*m0s[13]*pVdim-0.3162277660168379*cE[13]; 
  BigAEM(33,30) = 0.3162277660168379*m0s[4]*pVdim-0.3162277660168379*cE[4]; 
  BigAEM(33,31) = 0.3535533905932737*m0s[6]*pVdim-0.3535533905932737*cE[6]; 
  BigAEM(33,33) = 0.3162277660168379*m0s[9]*pVdim+0.2258769757263128*m0s[7]*pVdim+0.3535533905932737*m0s[0]*pVdim-0.3162277660168379*cE[9]-0.2258769757263128*cE[7]-0.3535533905932737*cE[0]; 
  BigAEM(33,35) = 0.2828427124746191*m0s[5]*pVdim-0.2828427124746191*cE[5]; 
  BigAEM(33,37) = 0.3105295017040593*m0s[5]*pVdim-0.3105295017040593*cE[5]; 
  BigAEM(34,20) = 0.3535533905932737*m0s[14]*pVdim-0.3535533905932737*cE[14]; 
  BigAEM(34,22) = 0.3162277660168379*m0s[6]*pVdim-0.3162277660168379*cE[6]; 
  BigAEM(34,23) = 0.3535533905932737*m0s[8]*pVdim-0.3535533905932737*cE[8]; 
  BigAEM(34,24) = 0.3162277660168379*m0s[10]*pVdim-0.3162277660168379*cE[10]; 
  BigAEM(34,25) = 0.3535533905932737*m0s[12]*pVdim-0.3535533905932737*cE[12]; 
  BigAEM(34,26) = 0.3105295017040593*m0s[18]*pVdim+0.2828427124746191*m0s[16]*pVdim+0.3162277660168379*m0s[2]*pVdim-0.3105295017040593*cE[18]-0.2828427124746191*cE[16]-0.3162277660168379*cE[2]; 
  BigAEM(34,28) = 0.2258769757263128*m0s[14]*pVdim+0.3535533905932737*m0s[3]*pVdim-0.2258769757263128*cE[14]-0.3535533905932737*cE[3]; 
  BigAEM(34,29) = 0.3162277660168379*m0s[14]*pVdim-0.3162277660168379*cE[14]; 
  BigAEM(34,30) = 0.3162277660168379*m0s[4]*pVdim-0.3162277660168379*cE[4]; 
  BigAEM(34,32) = 0.3535533905932737*m0s[5]*pVdim-0.3535533905932737*cE[5]; 
  BigAEM(34,34) = 0.3162277660168379*m0s[9]*pVdim+0.2258769757263128*m0s[8]*pVdim+0.3535533905932737*m0s[0]*pVdim-0.3162277660168379*cE[9]-0.2258769757263128*cE[8]-0.3535533905932737*cE[0]; 
  BigAEM(34,36) = 0.2828427124746191*m0s[6]*pVdim-0.2828427124746191*cE[6]; 
  BigAEM(34,38) = 0.3105295017040593*m0s[6]*pVdim-0.3105295017040593*cE[6]; 
  BigAEM(35,20) = 0.3535533905932737*m0s[15]*pVdim-0.3535533905932737*cE[15]; 
  BigAEM(35,21) = 0.3535533905932737*m0s[9]*pVdim-0.3535533905932737*cE[9]; 
  BigAEM(35,23) = 0.3162277660168379*m0s[5]*pVdim-0.3162277660168379*cE[5]; 
  BigAEM(35,24) = 0.3535533905932737*m0s[16]*pVdim-0.3535533905932737*cE[16]; 
  BigAEM(35,25) = 0.3105295017040593*m0s[19]*pVdim+0.2828427124746191*m0s[13]*pVdim+0.3162277660168379*m0s[3]*pVdim-0.3105295017040593*cE[19]-0.2828427124746191*cE[13]-0.3162277660168379*cE[3]; 
  BigAEM(35,26) = 0.3162277660168379*m0s[10]*pVdim-0.3162277660168379*cE[10]; 
  BigAEM(35,27) = 0.3162277660168379*m0s[15]*pVdim-0.3162277660168379*cE[15]; 
  BigAEM(35,29) = 0.2258769757263128*m0s[15]*pVdim+0.3535533905932737*m0s[1]*pVdim-0.2258769757263128*cE[15]-0.3535533905932737*cE[1]; 
  BigAEM(35,30) = 0.3162277660168379*m0s[6]*pVdim-0.3162277660168379*cE[6]; 
  BigAEM(35,33) = 0.2828427124746191*m0s[5]*pVdim-0.2828427124746191*cE[5]; 
  BigAEM(35,35) = 0.2258769757263128*m0s[9]*pVdim+0.3162277660168379*m0s[7]*pVdim+0.3535533905932737*m0s[0]*pVdim-0.2258769757263128*cE[9]-0.3162277660168379*cE[7]-0.3535533905932737*cE[0]; 
  BigAEM(35,36) = 0.3535533905932737*m0s[4]*pVdim-0.3535533905932737*cE[4]; 
  BigAEM(35,39) = 0.3105295017040593*m0s[5]*pVdim-0.3105295017040593*cE[5]; 
  BigAEM(36,20) = 0.3535533905932737*m0s[16]*pVdim-0.3535533905932737*cE[16]; 
  BigAEM(36,22) = 0.3535533905932737*m0s[9]*pVdim-0.3535533905932737*cE[9]; 
  BigAEM(36,23) = 0.3162277660168379*m0s[6]*pVdim-0.3162277660168379*cE[6]; 
  BigAEM(36,24) = 0.3535533905932737*m0s[15]*pVdim-0.3535533905932737*cE[15]; 
  BigAEM(36,25) = 0.3162277660168379*m0s[10]*pVdim-0.3162277660168379*cE[10]; 
  BigAEM(36,26) = 0.3105295017040593*m0s[19]*pVdim+0.2828427124746191*m0s[14]*pVdim+0.3162277660168379*m0s[3]*pVdim-0.3105295017040593*cE[19]-0.2828427124746191*cE[14]-0.3162277660168379*cE[3]; 
  BigAEM(36,28) = 0.3162277660168379*m0s[16]*pVdim-0.3162277660168379*cE[16]; 
  BigAEM(36,29) = 0.2258769757263128*m0s[16]*pVdim+0.3535533905932737*m0s[2]*pVdim-0.2258769757263128*cE[16]-0.3535533905932737*cE[2]; 
  BigAEM(36,30) = 0.3162277660168379*m0s[5]*pVdim-0.3162277660168379*cE[5]; 
  BigAEM(36,34) = 0.2828427124746191*m0s[6]*pVdim-0.2828427124746191*cE[6]; 
  BigAEM(36,35) = 0.3535533905932737*m0s[4]*pVdim-0.3535533905932737*cE[4]; 
  BigAEM(36,36) = 0.2258769757263128*m0s[9]*pVdim+0.3162277660168379*m0s[8]*pVdim+0.3535533905932737*m0s[0]*pVdim-0.2258769757263128*cE[9]-0.3162277660168379*cE[8]-0.3535533905932737*cE[0]; 
  BigAEM(36,39) = 0.3105295017040593*m0s[6]*pVdim-0.3105295017040593*cE[6]; 
  BigAEM(37,20) = 0.3535533905932737*m0s[17]*pVdim-0.3535533905932737*cE[17]; 
  BigAEM(37,21) = 0.3105295017040592*m0s[7]*pVdim-0.3105295017040592*cE[7]; 
  BigAEM(37,24) = 0.3105295017040593*m0s[11]*pVdim-0.3105295017040593*cE[11]; 
  BigAEM(37,25) = 0.3105295017040593*m0s[13]*pVdim-0.3105295017040593*cE[13]; 
  BigAEM(37,27) = 0.210818510677892*m0s[17]*pVdim+0.3105295017040592*m0s[1]*pVdim-0.210818510677892*cE[17]-0.3105295017040592*cE[1]; 
  BigAEM(37,31) = 0.3105295017040593*m0s[4]*pVdim-0.3105295017040593*cE[4]; 
  BigAEM(37,33) = 0.3105295017040593*m0s[5]*pVdim-0.3105295017040593*cE[5]; 
  BigAEM(37,37) = 0.210818510677892*m0s[7]*pVdim+0.3535533905932737*m0s[0]*pVdim-0.210818510677892*cE[7]-0.3535533905932737*cE[0]; 
  BigAEM(38,20) = 0.3535533905932737*m0s[18]*pVdim-0.3535533905932737*cE[18]; 
  BigAEM(38,22) = 0.3105295017040592*m0s[8]*pVdim-0.3105295017040592*cE[8]; 
  BigAEM(38,24) = 0.3105295017040593*m0s[12]*pVdim-0.3105295017040593*cE[12]; 
  BigAEM(38,26) = 0.3105295017040593*m0s[14]*pVdim-0.3105295017040593*cE[14]; 
  BigAEM(38,28) = 0.210818510677892*m0s[18]*pVdim+0.3105295017040592*m0s[2]*pVdim-0.210818510677892*cE[18]-0.3105295017040592*cE[2]; 
  BigAEM(38,32) = 0.3105295017040593*m0s[4]*pVdim-0.3105295017040593*cE[4]; 
  BigAEM(38,34) = 0.3105295017040593*m0s[6]*pVdim-0.3105295017040593*cE[6]; 
  BigAEM(38,38) = 0.210818510677892*m0s[8]*pVdim+0.3535533905932737*m0s[0]*pVdim-0.210818510677892*cE[8]-0.3535533905932737*cE[0]; 
  BigAEM(39,20) = 0.3535533905932737*m0s[19]*pVdim-0.3535533905932737*cE[19]; 
  BigAEM(39,23) = 0.3105295017040592*m0s[9]*pVdim-0.3105295017040592*cE[9]; 
  BigAEM(39,25) = 0.3105295017040593*m0s[15]*pVdim-0.3105295017040593*cE[15]; 
  BigAEM(39,26) = 0.3105295017040593*m0s[16]*pVdim-0.3105295017040593*cE[16]; 
  BigAEM(39,29) = 0.210818510677892*m0s[19]*pVdim+0.3105295017040592*m0s[3]*pVdim-0.210818510677892*cE[19]-0.3105295017040592*cE[3]; 
  BigAEM(39,35) = 0.3105295017040593*m0s[5]*pVdim-0.3105295017040593*cE[5]; 
  BigAEM(39,36) = 0.3105295017040593*m0s[6]*pVdim-0.3105295017040593*cE[6]; 
  BigAEM(39,39) = 0.210818510677892*m0s[9]*pVdim+0.3535533905932737*m0s[0]*pVdim-0.210818510677892*cE[9]-0.3535533905932737*cE[0]; 
 
  // ....... RHS vector is composed of m1 and m2 .......... // 
  bEV << m1[0],m1[1],m1[2],m1[3],m1[4],m1[5],m1[6],m1[7],m1[8],m1[9],m1[10],m1[11],m1[12],m1[13],m1[14],m1[15],m1[16],m1[17],m1[18],m1[19],m2[0],m2[1],m2[2],m2[3],m2[4],m2[5],m2[6],m2[7],m2[8],m2[9],m2[10],m2[11],m2[12],m2[13],m2[14],m2[15],m2[16],m2[17],m2[18],m2[19]; 
 
  xEV = BigAEM.colPivHouseholderQr().solve(bEV); 
 
  Eigen::Map<VectorXd>(u,20,1) = xEV.segment<20>(0); 
 
  Eigen::Map<VectorXd>(vtSq,20,1) = xEV.segment<20>(20); 
 
} 
 
void BoundaryIntegral3x1vMax_F_VX_P1(const double intFac, const double vmin, const double vmax, const double *dxv, const double *fvmin, const double *fvmax, double *out) 
{ 
  // intFac:             =1 for VmLBO, =2pi/m or 4pi/m for GkLBO. 
  // vmax, vmin:         maximum and minimum velocity of the velocity grid. 
  // dxv[5]:             cell length in each direciton. 
  // fvmax[6], fvmin[6]: distribution function at the velocity boundaries. 
  // out:                int dS of f|^(vmax)_(vmin) or vf^(vmax)_(vmin). 
 
  const double dS = 0.5*dxv[4]; 
 
  out[0] += (1.732050807568877*fvmin[4]*dS+1.732050807568877*fvmax[4]*dS-1.0*fvmin[0]*dS+fvmax[0]*dS)*intFac; 
  out[1] += (fvmax[1]*dS-1.0*fvmin[1]*dS)*intFac; 
  out[2] += (fvmax[2]*dS-1.0*fvmin[2]*dS)*intFac; 
  out[3] += (fvmax[3]*dS-1.0*fvmin[3]*dS)*intFac; 
 
} 
 
void BoundaryIntegral3x1vMax_F_VX_P2(const double intFac, const double vmin, const double vmax, const double *dxv, const double *fvmin, const double *fvmax, double *out) 
{ 
  // intFac:             =1 for VmLBO, =2pi/m or 4pi/m for GkLBO. 
  // vmax, vmin:         maximum and minimum velocity of the velocity grid. 
  // dxv[5]:             cell length in each direciton. 
  // fvmax[21], fvmin[21]: distribution function at the velocity boundaries. 
  // out:                int dS of f|^(vmax)_(vmin) or vf^(vmax)_(vmin). 
 
  const double dS = 0.5*dxv[4]; 
 
  out[0] += ((-2.23606797749979*fvmin[19]*dS)+2.23606797749979*fvmax[19]*dS+1.732050807568877*fvmin[4]*dS+1.732050807568877*fvmax[4]*dS-1.0*fvmin[0]*dS+fvmax[0]*dS)*intFac; 
  out[1] += (1.732050807568877*fvmin[9]*dS+1.732050807568877*fvmax[9]*dS-1.0*fvmin[1]*dS+fvmax[1]*dS)*intFac; 
  out[2] += (1.732050807568877*fvmin[10]*dS+1.732050807568877*fvmax[10]*dS-1.0*fvmin[2]*dS+fvmax[2]*dS)*intFac; 
  out[3] += (1.732050807568877*fvmin[11]*dS+1.732050807568877*fvmax[11]*dS-1.0*fvmin[3]*dS+fvmax[3]*dS)*intFac; 
  out[4] += (fvmax[6]*dS-1.0*fvmin[6]*dS)*intFac; 
  out[5] += (fvmax[7]*dS-1.0*fvmin[7]*dS)*intFac; 
  out[6] += (fvmax[8]*dS-1.0*fvmin[8]*dS)*intFac; 
  out[7] += (fvmax[16]*dS-1.0*fvmin[16]*dS)*intFac; 
  out[8] += (fvmax[17]*dS-1.0*fvmin[17]*dS)*intFac; 
  out[9] += (fvmax[18]*dS-1.0*fvmin[18]*dS)*intFac; 
 
} 
 
void BoundaryIntegral3x1vMax_F_VX_P3(const double intFac, const double vmin, const double vmax, const double *dxv, const double *fvmin, const double *fvmax, double *out) 
{ 
  // intFac:             =1 for VmLBO, =2pi/m or 4pi/m for GkLBO. 
  // vmax, vmin:         maximum and minimum velocity of the velocity grid. 
  // dxv[5]:             cell length in each direciton. 
  // fvmax[56], fvmin[56]: distribution function at the velocity boundaries. 
  // out:                int dS of f|^(vmax)_(vmin) or vf^(vmax)_(vmin). 
 
  const double dS = 0.5*dxv[4]; 
 
  out[0] += (2.645751311064591*fvmin[54]*dS+2.645751311064591*fvmax[54]*dS-2.23606797749979*fvmin[19]*dS+2.23606797749979*fvmax[19]*dS+1.732050807568877*fvmin[4]*dS+1.732050807568877*fvmax[4]*dS-1.0*fvmin[0]*dS+fvmax[0]*dS)*intFac; 
  out[1] += ((-2.23606797749979*fvmin[40]*dS)+2.23606797749979*fvmax[40]*dS+1.732050807568877*fvmin[9]*dS+1.732050807568877*fvmax[9]*dS-1.0*fvmin[1]*dS+fvmax[1]*dS)*intFac; 
  out[2] += ((-2.23606797749979*fvmin[41]*dS)+2.23606797749979*fvmax[41]*dS+1.732050807568877*fvmin[10]*dS+1.732050807568877*fvmax[10]*dS-1.0*fvmin[2]*dS+fvmax[2]*dS)*intFac; 
  out[3] += ((-2.23606797749979*fvmin[42]*dS)+2.23606797749979*fvmax[42]*dS+1.732050807568877*fvmin[11]*dS+1.732050807568877*fvmax[11]*dS-1.0*fvmin[3]*dS+fvmax[3]*dS)*intFac; 
  out[4] += (1.732050807568877*fvmin[22]*dS+1.732050807568877*fvmax[22]*dS-1.0*fvmin[6]*dS+fvmax[6]*dS)*intFac; 
  out[5] += (1.732050807568877*fvmin[23]*dS+1.732050807568877*fvmax[23]*dS-1.0*fvmin[7]*dS+fvmax[7]*dS)*intFac; 
  out[6] += (1.732050807568877*fvmin[24]*dS+1.732050807568877*fvmax[24]*dS-1.0*fvmin[8]*dS+fvmax[8]*dS)*intFac; 
  out[7] += (1.732050807568877*fvmin[37]*dS+1.732050807568877*fvmax[37]*dS-1.0*fvmin[16]*dS+fvmax[16]*dS)*intFac; 
  out[8] += (1.732050807568877*fvmin[38]*dS+1.732050807568877*fvmax[38]*dS-1.0*fvmin[17]*dS+fvmax[17]*dS)*intFac; 
  out[9] += (1.732050807568877*fvmin[39]*dS+1.732050807568877*fvmax[39]*dS-1.0*fvmin[18]*dS+fvmax[18]*dS)*intFac; 
  out[10] += (fvmax[21]*dS-1.0*fvmin[21]*dS)*intFac; 
  out[11] += (fvmax[31]*dS-1.0*fvmin[31]*dS)*intFac; 
  out[12] += (fvmax[32]*dS-1.0*fvmin[32]*dS)*intFac; 
  out[13] += (fvmax[33]*dS-1.0*fvmin[33]*dS)*intFac; 
  out[14] += (fvmax[34]*dS-1.0*fvmin[34]*dS)*intFac; 
  out[15] += (fvmax[35]*dS-1.0*fvmin[35]*dS)*intFac; 
  out[16] += (fvmax[36]*dS-1.0*fvmin[36]*dS)*intFac; 
  out[17] += (fvmax[51]*dS-1.0*fvmin[51]*dS)*intFac; 
  out[18] += (fvmax[52]*dS-1.0*fvmin[52]*dS)*intFac; 
  out[19] += (fvmax[53]*dS-1.0*fvmin[53]*dS)*intFac; 
 
} 
 
void BoundaryIntegral3x1vMax_vF_VX_P1(const double intFac, const double vmin, const double vmax, const double *dxv, const double *fvmin, const double *fvmax, double *out) 
{ 
  // intFac:             =1 for VmLBO, =2pi/m or 4pi/m for GkLBO. 
  // vmax, vmin:         maximum and minimum velocity of the velocity grid. 
  // dxv[5]:             cell length in each direciton. 
  // fvmax[6], fvmin[6]: distribution function at the velocity boundaries. 
  // out:                int dS of f|^(vmax)_(vmin) or vf^(vmax)_(vmin). 
 
  const double dS = 0.5*dxv[4]; 
 
  out[0] += intFac*(1.732050807568877*fvmin[4]*dS*vmin-1.0*fvmin[0]*dS*vmin+1.732050807568877*fvmax[4]*dS*vmax+fvmax[0]*dS*vmax); 
  out[1] += intFac*(fvmax[1]*dS*vmax-1.0*fvmin[1]*dS*vmin); 
  out[2] += intFac*(fvmax[2]*dS*vmax-1.0*fvmin[2]*dS*vmin); 
  out[3] += intFac*(fvmax[3]*dS*vmax-1.0*fvmin[3]*dS*vmin); 
 
} 
 
void BoundaryIntegral3x1vMax_vF_VX_P2(const double intFac, const double vmin, const double vmax, const double *dxv, const double *fvmin, const double *fvmax, double *out) 
{ 
  // intFac:             =1 for VmLBO, =2pi/m or 4pi/m for GkLBO. 
  // vmax, vmin:         maximum and minimum velocity of the velocity grid. 
  // dxv[5]:             cell length in each direciton. 
  // fvmax[21], fvmin[21]: distribution function at the velocity boundaries. 
  // out:                int dS of f|^(vmax)_(vmin) or vf^(vmax)_(vmin). 
 
  const double dS = 0.5*dxv[4]; 
 
  out[0] += intFac*((-2.23606797749979*fvmin[19]*dS*vmin)+1.732050807568877*fvmin[4]*dS*vmin-1.0*fvmin[0]*dS*vmin+2.23606797749979*fvmax[19]*dS*vmax+1.732050807568877*fvmax[4]*dS*vmax+fvmax[0]*dS*vmax); 
  out[1] += intFac*(1.732050807568877*fvmin[9]*dS*vmin-1.0*fvmin[1]*dS*vmin+1.732050807568877*fvmax[9]*dS*vmax+fvmax[1]*dS*vmax); 
  out[2] += intFac*(1.732050807568877*fvmin[10]*dS*vmin-1.0*fvmin[2]*dS*vmin+1.732050807568877*fvmax[10]*dS*vmax+fvmax[2]*dS*vmax); 
  out[3] += intFac*(1.732050807568877*fvmin[11]*dS*vmin-1.0*fvmin[3]*dS*vmin+1.732050807568877*fvmax[11]*dS*vmax+fvmax[3]*dS*vmax); 
  out[4] += intFac*(fvmax[6]*dS*vmax-1.0*fvmin[6]*dS*vmin); 
  out[5] += intFac*(fvmax[7]*dS*vmax-1.0*fvmin[7]*dS*vmin); 
  out[6] += intFac*(fvmax[8]*dS*vmax-1.0*fvmin[8]*dS*vmin); 
  out[7] += intFac*(fvmax[16]*dS*vmax-1.0*fvmin[16]*dS*vmin); 
  out[8] += intFac*(fvmax[17]*dS*vmax-1.0*fvmin[17]*dS*vmin); 
  out[9] += intFac*(fvmax[18]*dS*vmax-1.0*fvmin[18]*dS*vmin); 
 
} 
 
void BoundaryIntegral3x1vMax_vF_VX_P3(const double intFac, const double vmin, const double vmax, const double *dxv, const double *fvmin, const double *fvmax, double *out) 
{ 
  // intFac:             =1 for VmLBO, =2pi/m or 4pi/m for GkLBO. 
  // vmax, vmin:         maximum and minimum velocity of the velocity grid. 
  // dxv[5]:             cell length in each direciton. 
  // fvmax[56], fvmin[56]: distribution function at the velocity boundaries. 
  // out:                int dS of f|^(vmax)_(vmin) or vf^(vmax)_(vmin). 
 
  const double dS = 0.5*dxv[4]; 
 
  out[0] += intFac*(2.645751311064591*fvmin[54]*dS*vmin-2.23606797749979*fvmin[19]*dS*vmin+1.732050807568877*fvmin[4]*dS*vmin-1.0*fvmin[0]*dS*vmin+2.645751311064591*fvmax[54]*dS*vmax+2.23606797749979*fvmax[19]*dS*vmax+1.732050807568877*fvmax[4]*dS*vmax+fvmax[0]*dS*vmax); 
  out[1] += intFac*((-2.23606797749979*fvmin[40]*dS*vmin)+1.732050807568877*fvmin[9]*dS*vmin-1.0*fvmin[1]*dS*vmin+2.23606797749979*fvmax[40]*dS*vmax+1.732050807568877*fvmax[9]*dS*vmax+fvmax[1]*dS*vmax); 
  out[2] += intFac*((-2.23606797749979*fvmin[41]*dS*vmin)+1.732050807568877*fvmin[10]*dS*vmin-1.0*fvmin[2]*dS*vmin+2.23606797749979*fvmax[41]*dS*vmax+1.732050807568877*fvmax[10]*dS*vmax+fvmax[2]*dS*vmax); 
  out[3] += intFac*((-2.23606797749979*fvmin[42]*dS*vmin)+1.732050807568877*fvmin[11]*dS*vmin-1.0*fvmin[3]*dS*vmin+2.23606797749979*fvmax[42]*dS*vmax+1.732050807568877*fvmax[11]*dS*vmax+fvmax[3]*dS*vmax); 
  out[4] += intFac*(1.732050807568877*fvmin[22]*dS*vmin-1.0*fvmin[6]*dS*vmin+1.732050807568877*fvmax[22]*dS*vmax+fvmax[6]*dS*vmax); 
  out[5] += intFac*(1.732050807568877*fvmin[23]*dS*vmin-1.0*fvmin[7]*dS*vmin+1.732050807568877*fvmax[23]*dS*vmax+fvmax[7]*dS*vmax); 
  out[6] += intFac*(1.732050807568877*fvmin[24]*dS*vmin-1.0*fvmin[8]*dS*vmin+1.732050807568877*fvmax[24]*dS*vmax+fvmax[8]*dS*vmax); 
  out[7] += intFac*(1.732050807568877*fvmin[37]*dS*vmin-1.0*fvmin[16]*dS*vmin+1.732050807568877*fvmax[37]*dS*vmax+fvmax[16]*dS*vmax); 
  out[8] += intFac*(1.732050807568877*fvmin[38]*dS*vmin-1.0*fvmin[17]*dS*vmin+1.732050807568877*fvmax[38]*dS*vmax+fvmax[17]*dS*vmax); 
  out[9] += intFac*(1.732050807568877*fvmin[39]*dS*vmin-1.0*fvmin[18]*dS*vmin+1.732050807568877*fvmax[39]*dS*vmax+fvmax[18]*dS*vmax); 
  out[10] += intFac*(fvmax[21]*dS*vmax-1.0*fvmin[21]*dS*vmin); 
  out[11] += intFac*(fvmax[31]*dS*vmax-1.0*fvmin[31]*dS*vmin); 
  out[12] += intFac*(fvmax[32]*dS*vmax-1.0*fvmin[32]*dS*vmin); 
  out[13] += intFac*(fvmax[33]*dS*vmax-1.0*fvmin[33]*dS*vmin); 
  out[14] += intFac*(fvmax[34]*dS*vmax-1.0*fvmin[34]*dS*vmin); 
  out[15] += intFac*(fvmax[35]*dS*vmax-1.0*fvmin[35]*dS*vmin); 
  out[16] += intFac*(fvmax[36]*dS*vmax-1.0*fvmin[36]*dS*vmin); 
  out[17] += intFac*(fvmax[51]*dS*vmax-1.0*fvmin[51]*dS*vmin); 
  out[18] += intFac*(fvmax[52]*dS*vmax-1.0*fvmin[52]*dS*vmin); 
  out[19] += intFac*(fvmax[53]*dS*vmax-1.0*fvmin[53]*dS*vmin); 
 
} 
 
void BoundaryIntegral3x1vMax_F_VY_P1(const double intFac, const double vmin, const double vmax, const double *dxv, const double *fvmin, const double *fvmax, double *out) 
{ 
  // intFac:             =1 for VmLBO, =2pi/m or 4pi/m for GkLBO. 
  // vmax, vmin:         maximum and minimum velocity of the velocity grid. 
  // dxv[5]:             cell length in each direciton. 
  // fvmax[6], fvmin[6]: distribution function at the velocity boundaries. 
  // out:                int dS of f|^(vmax)_(vmin) or vf^(vmax)_(vmin). 
 
  const double dS = 0.5*dxv[3]; 
 
  out[4] += (1.732050807568877*fvmin[5]*dS+1.732050807568877*fvmax[5]*dS-1.0*fvmin[0]*dS+fvmax[0]*dS)*intFac; 
  out[5] += (fvmax[1]*dS-1.0*fvmin[1]*dS)*intFac; 
  out[6] += (fvmax[2]*dS-1.0*fvmin[2]*dS)*intFac; 
  out[7] += (fvmax[3]*dS-1.0*fvmin[3]*dS)*intFac; 
 
} 
 
void BoundaryIntegral3x1vMax_F_VY_P2(const double intFac, const double vmin, const double vmax, const double *dxv, const double *fvmin, const double *fvmax, double *out) 
{ 
  // intFac:             =1 for VmLBO, =2pi/m or 4pi/m for GkLBO. 
  // vmax, vmin:         maximum and minimum velocity of the velocity grid. 
  // dxv[5]:             cell length in each direciton. 
  // fvmax[21], fvmin[21]: distribution function at the velocity boundaries. 
  // out:                int dS of f|^(vmax)_(vmin) or vf^(vmax)_(vmin). 
 
  const double dS = 0.5*dxv[3]; 
 
  out[10] += ((-2.23606797749979*fvmin[20]*dS)+2.23606797749979*fvmax[20]*dS+1.732050807568877*fvmin[5]*dS+1.732050807568877*fvmax[5]*dS-1.0*fvmin[0]*dS+fvmax[0]*dS)*intFac; 
  out[11] += (1.732050807568877*fvmin[12]*dS+1.732050807568877*fvmax[12]*dS-1.0*fvmin[1]*dS+fvmax[1]*dS)*intFac; 
  out[12] += (1.732050807568877*fvmin[13]*dS+1.732050807568877*fvmax[13]*dS-1.0*fvmin[2]*dS+fvmax[2]*dS)*intFac; 
  out[13] += (1.732050807568877*fvmin[14]*dS+1.732050807568877*fvmax[14]*dS-1.0*fvmin[3]*dS+fvmax[3]*dS)*intFac; 
  out[14] += (fvmax[6]*dS-1.0*fvmin[6]*dS)*intFac; 
  out[15] += (fvmax[7]*dS-1.0*fvmin[7]*dS)*intFac; 
  out[16] += (fvmax[8]*dS-1.0*fvmin[8]*dS)*intFac; 
  out[17] += (fvmax[16]*dS-1.0*fvmin[16]*dS)*intFac; 
  out[18] += (fvmax[17]*dS-1.0*fvmin[17]*dS)*intFac; 
  out[19] += (fvmax[18]*dS-1.0*fvmin[18]*dS)*intFac; 
 
} 
 
void BoundaryIntegral3x1vMax_F_VY_P3(const double intFac, const double vmin, const double vmax, const double *dxv, const double *fvmin, const double *fvmax, double *out) 
{ 
  // intFac:             =1 for VmLBO, =2pi/m or 4pi/m for GkLBO. 
  // vmax, vmin:         maximum and minimum velocity of the velocity grid. 
  // dxv[5]:             cell length in each direciton. 
  // fvmax[56], fvmin[56]: distribution function at the velocity boundaries. 
  // out:                int dS of f|^(vmax)_(vmin) or vf^(vmax)_(vmin). 
 
  const double dS = 0.5*dxv[3]; 
 
  out[20] += (2.645751311064591*fvmin[55]*dS+2.645751311064591*fvmax[55]*dS-2.23606797749979*fvmin[20]*dS+2.23606797749979*fvmax[20]*dS+1.732050807568877*fvmin[5]*dS+1.732050807568877*fvmax[5]*dS-1.0*fvmin[0]*dS+fvmax[0]*dS)*intFac; 
  out[21] += ((-2.23606797749979*fvmin[47]*dS)+2.23606797749979*fvmax[47]*dS+1.732050807568877*fvmin[12]*dS+1.732050807568877*fvmax[12]*dS-1.0*fvmin[1]*dS+fvmax[1]*dS)*intFac; 
  out[22] += ((-2.23606797749979*fvmin[48]*dS)+2.23606797749979*fvmax[48]*dS+1.732050807568877*fvmin[13]*dS+1.732050807568877*fvmax[13]*dS-1.0*fvmin[2]*dS+fvmax[2]*dS)*intFac; 
  out[23] += ((-2.23606797749979*fvmin[49]*dS)+2.23606797749979*fvmax[49]*dS+1.732050807568877*fvmin[14]*dS+1.732050807568877*fvmax[14]*dS-1.0*fvmin[3]*dS+fvmax[3]*dS)*intFac; 
  out[24] += (1.732050807568877*fvmin[25]*dS+1.732050807568877*fvmax[25]*dS-1.0*fvmin[6]*dS+fvmax[6]*dS)*intFac; 
  out[25] += (1.732050807568877*fvmin[26]*dS+1.732050807568877*fvmax[26]*dS-1.0*fvmin[7]*dS+fvmax[7]*dS)*intFac; 
  out[26] += (1.732050807568877*fvmin[27]*dS+1.732050807568877*fvmax[27]*dS-1.0*fvmin[8]*dS+fvmax[8]*dS)*intFac; 
  out[27] += (1.732050807568877*fvmin[43]*dS+1.732050807568877*fvmax[43]*dS-1.0*fvmin[16]*dS+fvmax[16]*dS)*intFac; 
  out[28] += (1.732050807568877*fvmin[44]*dS+1.732050807568877*fvmax[44]*dS-1.0*fvmin[17]*dS+fvmax[17]*dS)*intFac; 
  out[29] += (1.732050807568877*fvmin[45]*dS+1.732050807568877*fvmax[45]*dS-1.0*fvmin[18]*dS+fvmax[18]*dS)*intFac; 
  out[30] += (fvmax[21]*dS-1.0*fvmin[21]*dS)*intFac; 
  out[31] += (fvmax[31]*dS-1.0*fvmin[31]*dS)*intFac; 
  out[32] += (fvmax[32]*dS-1.0*fvmin[32]*dS)*intFac; 
  out[33] += (fvmax[33]*dS-1.0*fvmin[33]*dS)*intFac; 
  out[34] += (fvmax[34]*dS-1.0*fvmin[34]*dS)*intFac; 
  out[35] += (fvmax[35]*dS-1.0*fvmin[35]*dS)*intFac; 
  out[36] += (fvmax[36]*dS-1.0*fvmin[36]*dS)*intFac; 
  out[37] += (fvmax[51]*dS-1.0*fvmin[51]*dS)*intFac; 
  out[38] += (fvmax[52]*dS-1.0*fvmin[52]*dS)*intFac; 
  out[39] += (fvmax[53]*dS-1.0*fvmin[53]*dS)*intFac; 
 
} 
 
void BoundaryIntegral3x1vMax_vF_VY_P1(const double intFac, const double vmin, const double vmax, const double *dxv, const double *fvmin, const double *fvmax, double *out) 
{ 
  // intFac:             =1 for VmLBO, =2pi/m or 4pi/m for GkLBO. 
  // vmax, vmin:         maximum and minimum velocity of the velocity grid. 
  // dxv[5]:             cell length in each direciton. 
  // fvmax[6], fvmin[6]: distribution function at the velocity boundaries. 
  // out:                int dS of f|^(vmax)_(vmin) or vf^(vmax)_(vmin). 
 
  const double dS = 0.5*dxv[3]; 
 
  out[0] += intFac*(1.732050807568877*fvmin[5]*dS*vmin-1.0*fvmin[0]*dS*vmin+1.732050807568877*fvmax[5]*dS*vmax+fvmax[0]*dS*vmax); 
  out[1] += intFac*(fvmax[1]*dS*vmax-1.0*fvmin[1]*dS*vmin); 
  out[2] += intFac*(fvmax[2]*dS*vmax-1.0*fvmin[2]*dS*vmin); 
  out[3] += intFac*(fvmax[3]*dS*vmax-1.0*fvmin[3]*dS*vmin); 
 
} 
 
void BoundaryIntegral3x1vMax_vF_VY_P2(const double intFac, const double vmin, const double vmax, const double *dxv, const double *fvmin, const double *fvmax, double *out) 
{ 
  // intFac:             =1 for VmLBO, =2pi/m or 4pi/m for GkLBO. 
  // vmax, vmin:         maximum and minimum velocity of the velocity grid. 
  // dxv[5]:             cell length in each direciton. 
  // fvmax[21], fvmin[21]: distribution function at the velocity boundaries. 
  // out:                int dS of f|^(vmax)_(vmin) or vf^(vmax)_(vmin). 
 
  const double dS = 0.5*dxv[3]; 
 
  out[0] += intFac*((-2.23606797749979*fvmin[20]*dS*vmin)+1.732050807568877*fvmin[5]*dS*vmin-1.0*fvmin[0]*dS*vmin+2.23606797749979*fvmax[20]*dS*vmax+1.732050807568877*fvmax[5]*dS*vmax+fvmax[0]*dS*vmax); 
  out[1] += intFac*(1.732050807568877*fvmin[12]*dS*vmin-1.0*fvmin[1]*dS*vmin+1.732050807568877*fvmax[12]*dS*vmax+fvmax[1]*dS*vmax); 
  out[2] += intFac*(1.732050807568877*fvmin[13]*dS*vmin-1.0*fvmin[2]*dS*vmin+1.732050807568877*fvmax[13]*dS*vmax+fvmax[2]*dS*vmax); 
  out[3] += intFac*(1.732050807568877*fvmin[14]*dS*vmin-1.0*fvmin[3]*dS*vmin+1.732050807568877*fvmax[14]*dS*vmax+fvmax[3]*dS*vmax); 
  out[4] += intFac*(fvmax[6]*dS*vmax-1.0*fvmin[6]*dS*vmin); 
  out[5] += intFac*(fvmax[7]*dS*vmax-1.0*fvmin[7]*dS*vmin); 
  out[6] += intFac*(fvmax[8]*dS*vmax-1.0*fvmin[8]*dS*vmin); 
  out[7] += intFac*(fvmax[16]*dS*vmax-1.0*fvmin[16]*dS*vmin); 
  out[8] += intFac*(fvmax[17]*dS*vmax-1.0*fvmin[17]*dS*vmin); 
  out[9] += intFac*(fvmax[18]*dS*vmax-1.0*fvmin[18]*dS*vmin); 
 
} 
 
void BoundaryIntegral3x1vMax_vF_VY_P3(const double intFac, const double vmin, const double vmax, const double *dxv, const double *fvmin, const double *fvmax, double *out) 
{ 
  // intFac:             =1 for VmLBO, =2pi/m or 4pi/m for GkLBO. 
  // vmax, vmin:         maximum and minimum velocity of the velocity grid. 
  // dxv[5]:             cell length in each direciton. 
  // fvmax[56], fvmin[56]: distribution function at the velocity boundaries. 
  // out:                int dS of f|^(vmax)_(vmin) or vf^(vmax)_(vmin). 
 
  const double dS = 0.5*dxv[3]; 
 
  out[0] += intFac*(2.645751311064591*fvmin[55]*dS*vmin-2.23606797749979*fvmin[20]*dS*vmin+1.732050807568877*fvmin[5]*dS*vmin-1.0*fvmin[0]*dS*vmin+2.645751311064591*fvmax[55]*dS*vmax+2.23606797749979*fvmax[20]*dS*vmax+1.732050807568877*fvmax[5]*dS*vmax+fvmax[0]*dS*vmax); 
  out[1] += intFac*((-2.23606797749979*fvmin[47]*dS*vmin)+1.732050807568877*fvmin[12]*dS*vmin-1.0*fvmin[1]*dS*vmin+2.23606797749979*fvmax[47]*dS*vmax+1.732050807568877*fvmax[12]*dS*vmax+fvmax[1]*dS*vmax); 
  out[2] += intFac*((-2.23606797749979*fvmin[48]*dS*vmin)+1.732050807568877*fvmin[13]*dS*vmin-1.0*fvmin[2]*dS*vmin+2.23606797749979*fvmax[48]*dS*vmax+1.732050807568877*fvmax[13]*dS*vmax+fvmax[2]*dS*vmax); 
  out[3] += intFac*((-2.23606797749979*fvmin[49]*dS*vmin)+1.732050807568877*fvmin[14]*dS*vmin-1.0*fvmin[3]*dS*vmin+2.23606797749979*fvmax[49]*dS*vmax+1.732050807568877*fvmax[14]*dS*vmax+fvmax[3]*dS*vmax); 
  out[4] += intFac*(1.732050807568877*fvmin[25]*dS*vmin-1.0*fvmin[6]*dS*vmin+1.732050807568877*fvmax[25]*dS*vmax+fvmax[6]*dS*vmax); 
  out[5] += intFac*(1.732050807568877*fvmin[26]*dS*vmin-1.0*fvmin[7]*dS*vmin+1.732050807568877*fvmax[26]*dS*vmax+fvmax[7]*dS*vmax); 
  out[6] += intFac*(1.732050807568877*fvmin[27]*dS*vmin-1.0*fvmin[8]*dS*vmin+1.732050807568877*fvmax[27]*dS*vmax+fvmax[8]*dS*vmax); 
  out[7] += intFac*(1.732050807568877*fvmin[43]*dS*vmin-1.0*fvmin[16]*dS*vmin+1.732050807568877*fvmax[43]*dS*vmax+fvmax[16]*dS*vmax); 
  out[8] += intFac*(1.732050807568877*fvmin[44]*dS*vmin-1.0*fvmin[17]*dS*vmin+1.732050807568877*fvmax[44]*dS*vmax+fvmax[17]*dS*vmax); 
  out[9] += intFac*(1.732050807568877*fvmin[45]*dS*vmin-1.0*fvmin[18]*dS*vmin+1.732050807568877*fvmax[45]*dS*vmax+fvmax[18]*dS*vmax); 
  out[10] += intFac*(fvmax[21]*dS*vmax-1.0*fvmin[21]*dS*vmin); 
  out[11] += intFac*(fvmax[31]*dS*vmax-1.0*fvmin[31]*dS*vmin); 
  out[12] += intFac*(fvmax[32]*dS*vmax-1.0*fvmin[32]*dS*vmin); 
  out[13] += intFac*(fvmax[33]*dS*vmax-1.0*fvmin[33]*dS*vmin); 
  out[14] += intFac*(fvmax[34]*dS*vmax-1.0*fvmin[34]*dS*vmin); 
  out[15] += intFac*(fvmax[35]*dS*vmax-1.0*fvmin[35]*dS*vmin); 
  out[16] += intFac*(fvmax[36]*dS*vmax-1.0*fvmin[36]*dS*vmin); 
  out[17] += intFac*(fvmax[51]*dS*vmax-1.0*fvmin[51]*dS*vmin); 
  out[18] += intFac*(fvmax[52]*dS*vmax-1.0*fvmin[52]*dS*vmin); 
  out[19] += intFac*(fvmax[53]*dS*vmax-1.0*fvmin[53]*dS*vmin); 
 
} 
 
