#include <ConstDiffusionModDecl.h> 
double ConstDiffusionVol4xTensorP2_diffDirs2(const double *w, const double *dx, const double *nu, const double *f, double *out) 
{ 
  // w[4]:   Cell-center coordinates.
  // dx[4]:  Cell spacing.
  // nu[4]:  diffusion coefficient (collisionality).
  // f:      Input distribution function.
  // out:    Incremented output 
  double rdxFnu[1]; 
  rdxFnu[0] = 4.0*nu[1]/(dx[1]*dx[1]); 

  out[12] += 6.708203932499369*f[0]*rdxFnu[0]; 
  out[20] += 6.708203932499369*rdxFnu[0]*f[1]; 
  out[22] += 6.708203932499369*rdxFnu[0]*f[3]; 
  out[26] += 6.708203932499369*rdxFnu[0]*f[4]; 
  out[33] += 6.708203932499369*rdxFnu[0]*f[6]; 
  out[36] += 6.708203932499369*rdxFnu[0]*f[8]; 
  out[38] += 6.708203932499369*rdxFnu[0]*f[10]; 
  out[44] += 6.708203932499369*rdxFnu[0]*f[11]; 
  out[46] += 6.708203932499369*rdxFnu[0]*f[13]; 
  out[48] += 6.708203932499369*rdxFnu[0]*f[14]; 
  out[51] += 6.708203932499369*rdxFnu[0]*f[17]; 
  out[54] += 6.708203932499369*rdxFnu[0]*f[21]; 
  out[56] += 6.708203932499369*rdxFnu[0]*f[23]; 
  out[57] += 6.708203932499369*rdxFnu[0]*f[25]; 
  out[59] += 6.708203932499369*rdxFnu[0]*f[27]; 
  out[61] += 6.708203932499369*rdxFnu[0]*f[28]; 
  out[63] += 6.708203932499369*rdxFnu[0]*f[30]; 
  out[66] += 6.708203932499369*rdxFnu[0]*f[37]; 
  out[68] += 6.708203932499369*rdxFnu[0]*f[39]; 
  out[70] += 6.708203932499369*rdxFnu[0]*f[42]; 
  out[72] += 6.708203932499369*rdxFnu[0]*f[45]; 
  out[73] += 6.708203932499369*rdxFnu[0]*f[47]; 
  out[75] += 6.708203932499369*rdxFnu[0]*f[49]; 
  out[76] += 6.708203932499369*rdxFnu[0]*f[58]; 
  out[77] += 6.708203932499369*rdxFnu[0]*f[62]; 
  out[79] += 6.708203932499369*rdxFnu[0]*f[64]; 
  out[80] += 6.708203932499369*rdxFnu[0]*f[74]; 

  return (rdxFnu[0])*0.9;

} 
double ConstDiffusionVol4xTensorP2_diffDirs23(const double *w, const double *dx, const double *nu, const double *f, double *out) 
{ 
  // w[4]:   Cell-center coordinates.
  // dx[4]:  Cell spacing.
  // nu[4]:  diffusion coefficient (collisionality).
  // f:      Input distribution function.
  // out:    Incremented output 
  double rdxFnu[2]; 
  rdxFnu[0] = 4.0*nu[1]/(dx[1]*dx[1]); 
  rdxFnu[1] = 4.0*nu[2]/(dx[2]*dx[2]); 

  out[12] += 6.708203932499369*f[0]*rdxFnu[0]; 
  out[13] += 6.708203932499369*f[0]*rdxFnu[1]; 
  out[20] += 6.708203932499369*rdxFnu[0]*f[1]; 
  out[22] += 6.708203932499369*rdxFnu[0]*f[3]; 
  out[23] += 6.708203932499369*f[1]*rdxFnu[1]; 
  out[24] += 6.708203932499369*rdxFnu[1]*f[2]; 
  out[26] += 6.708203932499369*rdxFnu[0]*f[4]; 
  out[27] += 6.708203932499369*rdxFnu[1]*f[4]; 
  out[33] += 6.708203932499369*rdxFnu[0]*f[6]; 
  out[34] += 6.708203932499369*rdxFnu[1]*f[5]; 
  out[36] += 6.708203932499369*rdxFnu[0]*f[8]; 
  out[38] += 6.708203932499369*rdxFnu[0]*f[10]; 
  out[39] += 6.708203932499369*rdxFnu[1]*f[8]; 
  out[40] += 6.708203932499369*rdxFnu[1]*f[9]; 
  out[44] += 6.708203932499369*rdxFnu[0]*f[11]; 
  out[45] += 6.708203932499369*rdxFnu[1]*f[11]; 
  out[46] += 6.708203932499369*rdxFnu[0]*f[13]+6.708203932499369*rdxFnu[1]*f[12]; 
  out[48] += 6.708203932499369*rdxFnu[0]*f[14]; 
  out[49] += 6.708203932499369*rdxFnu[1]*f[14]; 
  out[51] += 6.708203932499369*rdxFnu[0]*f[17]; 
  out[52] += 6.708203932499369*rdxFnu[1]*f[16]; 
  out[54] += 6.708203932499369*rdxFnu[0]*f[21]; 
  out[55] += 6.708203932499369*rdxFnu[1]*f[19]; 
  out[56] += 6.708203932499369*rdxFnu[0]*f[23]+6.708203932499369*rdxFnu[1]*f[20]; 
  out[57] += 6.708203932499369*rdxFnu[0]*f[25]; 
  out[58] += 6.708203932499369*rdxFnu[1]*f[25]; 
  out[59] += 6.708203932499369*rdxFnu[0]*f[27]+6.708203932499369*rdxFnu[1]*f[26]; 
  out[61] += 6.708203932499369*rdxFnu[0]*f[28]; 
  out[63] += 6.708203932499369*rdxFnu[0]*f[30]; 
  out[64] += 6.708203932499369*rdxFnu[1]*f[28]; 
  out[65] += 6.708203932499369*rdxFnu[1]*f[29]; 
  out[66] += 6.708203932499369*rdxFnu[0]*f[37]; 
  out[67] += 6.708203932499369*rdxFnu[1]*f[35]; 
  out[68] += 6.708203932499369*rdxFnu[0]*f[39]+6.708203932499369*rdxFnu[1]*f[36]; 
  out[70] += 6.708203932499369*rdxFnu[0]*f[42]; 
  out[71] += 6.708203932499369*rdxFnu[1]*f[41]; 
  out[72] += 6.708203932499369*rdxFnu[0]*f[45]+6.708203932499369*rdxFnu[1]*f[44]; 
  out[73] += 6.708203932499369*rdxFnu[0]*f[47]; 
  out[74] += 6.708203932499369*rdxFnu[1]*f[47]; 
  out[75] += 6.708203932499369*rdxFnu[0]*f[49]+6.708203932499369*rdxFnu[1]*f[48]; 
  out[76] += 6.708203932499369*rdxFnu[0]*f[58]+6.708203932499369*rdxFnu[1]*f[57]; 
  out[77] += 6.708203932499369*rdxFnu[0]*f[62]; 
  out[78] += 6.708203932499369*rdxFnu[1]*f[60]; 
  out[79] += 6.708203932499369*rdxFnu[0]*f[64]+6.708203932499369*rdxFnu[1]*f[61]; 
  out[80] += 6.708203932499369*rdxFnu[0]*f[74]+6.708203932499369*rdxFnu[1]*f[73]; 

  return (rdxFnu[0]+rdxFnu[1])*0.9;

} 
double ConstDiffusionVol4xTensorP2_diffDirs234(const double *w, const double *dx, const double *nu, const double *f, double *out) 
{ 
  // w[4]:   Cell-center coordinates.
  // dx[4]:  Cell spacing.
  // nu[4]:  diffusion coefficient (collisionality).
  // f:      Input distribution function.
  // out:    Incremented output 
  double rdxFnu[3]; 
  rdxFnu[0] = 4.0*nu[1]/(dx[1]*dx[1]); 
  rdxFnu[1] = 4.0*nu[2]/(dx[2]*dx[2]); 
  rdxFnu[2] = 4.0*nu[3]/(dx[3]*dx[3]); 

  out[12] += 6.708203932499369*f[0]*rdxFnu[0]; 
  out[13] += 6.708203932499369*f[0]*rdxFnu[1]; 
  out[14] += 6.708203932499369*f[0]*rdxFnu[2]; 
  out[20] += 6.708203932499369*rdxFnu[0]*f[1]; 
  out[22] += 6.708203932499369*rdxFnu[0]*f[3]; 
  out[23] += 6.708203932499369*f[1]*rdxFnu[1]; 
  out[24] += 6.708203932499369*rdxFnu[1]*f[2]; 
  out[26] += 6.708203932499369*rdxFnu[0]*f[4]; 
  out[27] += 6.708203932499369*rdxFnu[1]*f[4]; 
  out[28] += 6.708203932499369*f[1]*rdxFnu[2]; 
  out[29] += 6.708203932499369*f[2]*rdxFnu[2]; 
  out[30] += 6.708203932499369*rdxFnu[2]*f[3]; 
  out[33] += 6.708203932499369*rdxFnu[0]*f[6]; 
  out[34] += 6.708203932499369*rdxFnu[1]*f[5]; 
  out[36] += 6.708203932499369*rdxFnu[0]*f[8]; 
  out[38] += 6.708203932499369*rdxFnu[0]*f[10]; 
  out[39] += 6.708203932499369*rdxFnu[1]*f[8]; 
  out[40] += 6.708203932499369*rdxFnu[1]*f[9]; 
  out[41] += 6.708203932499369*rdxFnu[2]*f[5]; 
  out[42] += 6.708203932499369*rdxFnu[2]*f[6]; 
  out[43] += 6.708203932499369*rdxFnu[2]*f[7]; 
  out[44] += 6.708203932499369*rdxFnu[0]*f[11]; 
  out[45] += 6.708203932499369*rdxFnu[1]*f[11]; 
  out[46] += 6.708203932499369*rdxFnu[0]*f[13]+6.708203932499369*rdxFnu[1]*f[12]; 
  out[47] += 6.708203932499369*rdxFnu[2]*f[11]; 
  out[48] += 6.708203932499369*rdxFnu[0]*f[14]+6.708203932499369*rdxFnu[2]*f[12]; 
  out[49] += 6.708203932499369*rdxFnu[1]*f[14]+6.708203932499369*rdxFnu[2]*f[13]; 
  out[51] += 6.708203932499369*rdxFnu[0]*f[17]; 
  out[52] += 6.708203932499369*rdxFnu[1]*f[16]; 
  out[53] += 6.708203932499369*rdxFnu[2]*f[15]; 
  out[54] += 6.708203932499369*rdxFnu[0]*f[21]; 
  out[55] += 6.708203932499369*rdxFnu[1]*f[19]; 
  out[56] += 6.708203932499369*rdxFnu[0]*f[23]+6.708203932499369*rdxFnu[1]*f[20]; 
  out[57] += 6.708203932499369*rdxFnu[0]*f[25]; 
  out[58] += 6.708203932499369*rdxFnu[1]*f[25]; 
  out[59] += 6.708203932499369*rdxFnu[0]*f[27]+6.708203932499369*rdxFnu[1]*f[26]; 
  out[60] += 6.708203932499369*rdxFnu[2]*f[19]; 
  out[61] += 6.708203932499369*rdxFnu[0]*f[28]+6.708203932499369*rdxFnu[2]*f[20]; 
  out[62] += 6.708203932499369*rdxFnu[2]*f[21]; 
  out[63] += 6.708203932499369*rdxFnu[0]*f[30]+6.708203932499369*rdxFnu[2]*f[22]; 
  out[64] += 6.708203932499369*rdxFnu[1]*f[28]+6.708203932499369*rdxFnu[2]*f[23]; 
  out[65] += 6.708203932499369*rdxFnu[1]*f[29]+6.708203932499369*rdxFnu[2]*f[24]; 
  out[66] += 6.708203932499369*rdxFnu[0]*f[37]; 
  out[67] += 6.708203932499369*rdxFnu[1]*f[35]; 
  out[68] += 6.708203932499369*rdxFnu[0]*f[39]+6.708203932499369*rdxFnu[1]*f[36]; 
  out[69] += 6.708203932499369*rdxFnu[2]*f[32]; 
  out[70] += 6.708203932499369*rdxFnu[0]*f[42]+6.708203932499369*rdxFnu[2]*f[33]; 
  out[71] += 6.708203932499369*rdxFnu[1]*f[41]+6.708203932499369*rdxFnu[2]*f[34]; 
  out[72] += 6.708203932499369*rdxFnu[0]*f[45]+6.708203932499369*rdxFnu[1]*f[44]; 
  out[73] += 6.708203932499369*rdxFnu[0]*f[47]+6.708203932499369*rdxFnu[2]*f[44]; 
  out[74] += 6.708203932499369*rdxFnu[1]*f[47]+6.708203932499369*rdxFnu[2]*f[45]; 
  out[75] += 6.708203932499369*rdxFnu[0]*f[49]+6.708203932499369*rdxFnu[1]*f[48]+6.708203932499369*rdxFnu[2]*f[46]; 
  out[76] += 6.708203932499369*rdxFnu[0]*f[58]+6.708203932499369*rdxFnu[1]*f[57]; 
  out[77] += 6.708203932499369*rdxFnu[0]*f[62]+6.708203932499369*rdxFnu[2]*f[54]; 
  out[78] += 6.708203932499369*rdxFnu[1]*f[60]+6.708203932499369*rdxFnu[2]*f[55]; 
  out[79] += 6.708203932499369*rdxFnu[0]*f[64]+6.708203932499369*rdxFnu[1]*f[61]+6.708203932499369*rdxFnu[2]*f[56]; 
  out[80] += 6.708203932499369*rdxFnu[0]*f[74]+6.708203932499369*rdxFnu[1]*f[73]+6.708203932499369*rdxFnu[2]*f[72]; 

  return (rdxFnu[0]+rdxFnu[1]+rdxFnu[2])*0.9;

} 
double ConstDiffusionVol4xTensorP2_diffDirs1234(const double *w, const double *dx, const double *nu, const double *f, double *out) 
{ 
  // w[4]:   Cell-center coordinates.
  // dx[4]:  Cell spacing.
  // nu[4]:  diffusion coefficient (collisionality).
  // f:      Input distribution function.
  // out:    Incremented output 
  double rdxFnu[4]; 
  rdxFnu[0] = 4.0*nu[0]/(dx[0]*dx[0]); 
  rdxFnu[1] = 4.0*nu[1]/(dx[1]*dx[1]); 
  rdxFnu[2] = 4.0*nu[2]/(dx[2]*dx[2]); 
  rdxFnu[3] = 4.0*nu[3]/(dx[3]*dx[3]); 

  out[11] += 6.708203932499369*f[0]*rdxFnu[0]; 
  out[12] += 6.708203932499369*f[0]*rdxFnu[1]; 
  out[13] += 6.708203932499369*f[0]*rdxFnu[2]; 
  out[14] += 6.708203932499369*f[0]*rdxFnu[3]; 
  out[19] += 6.708203932499369*rdxFnu[0]*f[2]; 
  out[20] += 6.708203932499369*f[1]*rdxFnu[1]; 
  out[21] += 6.708203932499369*rdxFnu[0]*f[3]; 
  out[22] += 6.708203932499369*rdxFnu[1]*f[3]; 
  out[23] += 6.708203932499369*f[1]*rdxFnu[2]; 
  out[24] += 6.708203932499369*f[2]*rdxFnu[2]; 
  out[25] += 6.708203932499369*rdxFnu[0]*f[4]; 
  out[26] += 6.708203932499369*rdxFnu[1]*f[4]; 
  out[27] += 6.708203932499369*rdxFnu[2]*f[4]; 
  out[28] += 6.708203932499369*f[1]*rdxFnu[3]; 
  out[29] += 6.708203932499369*f[2]*rdxFnu[3]; 
  out[30] += 6.708203932499369*f[3]*rdxFnu[3]; 
  out[32] += 6.708203932499369*rdxFnu[0]*f[7]; 
  out[33] += 6.708203932499369*rdxFnu[1]*f[6]; 
  out[34] += 6.708203932499369*rdxFnu[2]*f[5]; 
  out[35] += 6.708203932499369*rdxFnu[0]*f[9]; 
  out[36] += 6.708203932499369*rdxFnu[1]*f[8]; 
  out[37] += 6.708203932499369*rdxFnu[0]*f[10]; 
  out[38] += 6.708203932499369*rdxFnu[1]*f[10]; 
  out[39] += 6.708203932499369*rdxFnu[2]*f[8]; 
  out[40] += 6.708203932499369*rdxFnu[2]*f[9]; 
  out[41] += 6.708203932499369*rdxFnu[3]*f[5]; 
  out[42] += 6.708203932499369*rdxFnu[3]*f[6]; 
  out[43] += 6.708203932499369*rdxFnu[3]*f[7]; 
  out[44] += 6.708203932499369*rdxFnu[0]*f[12]+6.708203932499369*rdxFnu[1]*f[11]; 
  out[45] += 6.708203932499369*rdxFnu[0]*f[13]+6.708203932499369*rdxFnu[2]*f[11]; 
  out[46] += 6.708203932499369*rdxFnu[1]*f[13]+6.708203932499369*rdxFnu[2]*f[12]; 
  out[47] += 6.708203932499369*rdxFnu[0]*f[14]+6.708203932499369*rdxFnu[3]*f[11]; 
  out[48] += 6.708203932499369*rdxFnu[1]*f[14]+6.708203932499369*rdxFnu[3]*f[12]; 
  out[49] += 6.708203932499369*rdxFnu[2]*f[14]+6.708203932499369*rdxFnu[3]*f[13]; 
  out[50] += 6.708203932499369*rdxFnu[0]*f[18]; 
  out[51] += 6.708203932499369*rdxFnu[1]*f[17]; 
  out[52] += 6.708203932499369*rdxFnu[2]*f[16]; 
  out[53] += 6.708203932499369*rdxFnu[3]*f[15]; 
  out[54] += 6.708203932499369*rdxFnu[0]*f[22]+6.708203932499369*rdxFnu[1]*f[21]; 
  out[55] += 6.708203932499369*rdxFnu[0]*f[24]+6.708203932499369*rdxFnu[2]*f[19]; 
  out[56] += 6.708203932499369*rdxFnu[1]*f[23]+6.708203932499369*rdxFnu[2]*f[20]; 
  out[57] += 6.708203932499369*rdxFnu[0]*f[26]+6.708203932499369*rdxFnu[1]*f[25]; 
  out[58] += 6.708203932499369*rdxFnu[0]*f[27]+6.708203932499369*rdxFnu[2]*f[25]; 
  out[59] += 6.708203932499369*rdxFnu[1]*f[27]+6.708203932499369*rdxFnu[2]*f[26]; 
  out[60] += 6.708203932499369*rdxFnu[0]*f[29]+6.708203932499369*rdxFnu[3]*f[19]; 
  out[61] += 6.708203932499369*rdxFnu[1]*f[28]+6.708203932499369*rdxFnu[3]*f[20]; 
  out[62] += 6.708203932499369*rdxFnu[0]*f[30]+6.708203932499369*rdxFnu[3]*f[21]; 
  out[63] += 6.708203932499369*rdxFnu[1]*f[30]+6.708203932499369*rdxFnu[3]*f[22]; 
  out[64] += 6.708203932499369*rdxFnu[2]*f[28]+6.708203932499369*rdxFnu[3]*f[23]; 
  out[65] += 6.708203932499369*rdxFnu[2]*f[29]+6.708203932499369*rdxFnu[3]*f[24]; 
  out[66] += 6.708203932499369*rdxFnu[0]*f[38]+6.708203932499369*rdxFnu[1]*f[37]; 
  out[67] += 6.708203932499369*rdxFnu[0]*f[40]+6.708203932499369*rdxFnu[2]*f[35]; 
  out[68] += 6.708203932499369*rdxFnu[1]*f[39]+6.708203932499369*rdxFnu[2]*f[36]; 
  out[69] += 6.708203932499369*rdxFnu[0]*f[43]+6.708203932499369*rdxFnu[3]*f[32]; 
  out[70] += 6.708203932499369*rdxFnu[1]*f[42]+6.708203932499369*rdxFnu[3]*f[33]; 
  out[71] += 6.708203932499369*rdxFnu[2]*f[41]+6.708203932499369*rdxFnu[3]*f[34]; 
  out[72] += 6.708203932499369*rdxFnu[0]*f[46]+6.708203932499369*rdxFnu[1]*f[45]+6.708203932499369*rdxFnu[2]*f[44]; 
  out[73] += 6.708203932499369*rdxFnu[0]*f[48]+6.708203932499369*rdxFnu[1]*f[47]+6.708203932499369*rdxFnu[3]*f[44]; 
  out[74] += 6.708203932499369*rdxFnu[0]*f[49]+6.708203932499369*rdxFnu[2]*f[47]+6.708203932499369*rdxFnu[3]*f[45]; 
  out[75] += 6.708203932499369*rdxFnu[1]*f[49]+6.708203932499369*rdxFnu[2]*f[48]+6.708203932499369*rdxFnu[3]*f[46]; 
  out[76] += 6.708203932499369*rdxFnu[0]*f[59]+6.708203932499369*rdxFnu[1]*f[58]+6.708203932499369*rdxFnu[2]*f[57]; 
  out[77] += 6.708203932499369*rdxFnu[0]*f[63]+6.708203932499369*rdxFnu[1]*f[62]+6.708203932499369*rdxFnu[3]*f[54]; 
  out[78] += 6.708203932499369*rdxFnu[0]*f[65]+6.708203932499369*rdxFnu[2]*f[60]+6.708203932499369*rdxFnu[3]*f[55]; 
  out[79] += 6.708203932499369*rdxFnu[1]*f[64]+6.708203932499369*rdxFnu[2]*f[61]+6.708203932499369*rdxFnu[3]*f[56]; 
  out[80] += 6.708203932499369*rdxFnu[0]*f[75]+6.708203932499369*rdxFnu[1]*f[74]+6.708203932499369*rdxFnu[2]*f[73]+6.708203932499369*rdxFnu[3]*f[72]; 

  return (rdxFnu[0]+rdxFnu[1]+rdxFnu[2]+rdxFnu[3])*0.9;

} 
double ConstDiffusionVol4xTensorP2_diffDirs123(const double *w, const double *dx, const double *nu, const double *f, double *out) 
{ 
  // w[4]:   Cell-center coordinates.
  // dx[4]:  Cell spacing.
  // nu[4]:  diffusion coefficient (collisionality).
  // f:      Input distribution function.
  // out:    Incremented output 
  double rdxFnu[3]; 
  rdxFnu[0] = 4.0*nu[0]/(dx[0]*dx[0]); 
  rdxFnu[1] = 4.0*nu[1]/(dx[1]*dx[1]); 
  rdxFnu[2] = 4.0*nu[2]/(dx[2]*dx[2]); 

  out[11] += 6.708203932499369*f[0]*rdxFnu[0]; 
  out[12] += 6.708203932499369*f[0]*rdxFnu[1]; 
  out[13] += 6.708203932499369*f[0]*rdxFnu[2]; 
  out[19] += 6.708203932499369*rdxFnu[0]*f[2]; 
  out[20] += 6.708203932499369*f[1]*rdxFnu[1]; 
  out[21] += 6.708203932499369*rdxFnu[0]*f[3]; 
  out[22] += 6.708203932499369*rdxFnu[1]*f[3]; 
  out[23] += 6.708203932499369*f[1]*rdxFnu[2]; 
  out[24] += 6.708203932499369*f[2]*rdxFnu[2]; 
  out[25] += 6.708203932499369*rdxFnu[0]*f[4]; 
  out[26] += 6.708203932499369*rdxFnu[1]*f[4]; 
  out[27] += 6.708203932499369*rdxFnu[2]*f[4]; 
  out[32] += 6.708203932499369*rdxFnu[0]*f[7]; 
  out[33] += 6.708203932499369*rdxFnu[1]*f[6]; 
  out[34] += 6.708203932499369*rdxFnu[2]*f[5]; 
  out[35] += 6.708203932499369*rdxFnu[0]*f[9]; 
  out[36] += 6.708203932499369*rdxFnu[1]*f[8]; 
  out[37] += 6.708203932499369*rdxFnu[0]*f[10]; 
  out[38] += 6.708203932499369*rdxFnu[1]*f[10]; 
  out[39] += 6.708203932499369*rdxFnu[2]*f[8]; 
  out[40] += 6.708203932499369*rdxFnu[2]*f[9]; 
  out[44] += 6.708203932499369*rdxFnu[0]*f[12]+6.708203932499369*rdxFnu[1]*f[11]; 
  out[45] += 6.708203932499369*rdxFnu[0]*f[13]+6.708203932499369*rdxFnu[2]*f[11]; 
  out[46] += 6.708203932499369*rdxFnu[1]*f[13]+6.708203932499369*rdxFnu[2]*f[12]; 
  out[47] += 6.708203932499369*rdxFnu[0]*f[14]; 
  out[48] += 6.708203932499369*rdxFnu[1]*f[14]; 
  out[49] += 6.708203932499369*rdxFnu[2]*f[14]; 
  out[50] += 6.708203932499369*rdxFnu[0]*f[18]; 
  out[51] += 6.708203932499369*rdxFnu[1]*f[17]; 
  out[52] += 6.708203932499369*rdxFnu[2]*f[16]; 
  out[54] += 6.708203932499369*rdxFnu[0]*f[22]+6.708203932499369*rdxFnu[1]*f[21]; 
  out[55] += 6.708203932499369*rdxFnu[0]*f[24]+6.708203932499369*rdxFnu[2]*f[19]; 
  out[56] += 6.708203932499369*rdxFnu[1]*f[23]+6.708203932499369*rdxFnu[2]*f[20]; 
  out[57] += 6.708203932499369*rdxFnu[0]*f[26]+6.708203932499369*rdxFnu[1]*f[25]; 
  out[58] += 6.708203932499369*rdxFnu[0]*f[27]+6.708203932499369*rdxFnu[2]*f[25]; 
  out[59] += 6.708203932499369*rdxFnu[1]*f[27]+6.708203932499369*rdxFnu[2]*f[26]; 
  out[60] += 6.708203932499369*rdxFnu[0]*f[29]; 
  out[61] += 6.708203932499369*rdxFnu[1]*f[28]; 
  out[62] += 6.708203932499369*rdxFnu[0]*f[30]; 
  out[63] += 6.708203932499369*rdxFnu[1]*f[30]; 
  out[64] += 6.708203932499369*rdxFnu[2]*f[28]; 
  out[65] += 6.708203932499369*rdxFnu[2]*f[29]; 
  out[66] += 6.708203932499369*rdxFnu[0]*f[38]+6.708203932499369*rdxFnu[1]*f[37]; 
  out[67] += 6.708203932499369*rdxFnu[0]*f[40]+6.708203932499369*rdxFnu[2]*f[35]; 
  out[68] += 6.708203932499369*rdxFnu[1]*f[39]+6.708203932499369*rdxFnu[2]*f[36]; 
  out[69] += 6.708203932499369*rdxFnu[0]*f[43]; 
  out[70] += 6.708203932499369*rdxFnu[1]*f[42]; 
  out[71] += 6.708203932499369*rdxFnu[2]*f[41]; 
  out[72] += 6.708203932499369*rdxFnu[0]*f[46]+6.708203932499369*rdxFnu[1]*f[45]+6.708203932499369*rdxFnu[2]*f[44]; 
  out[73] += 6.708203932499369*rdxFnu[0]*f[48]+6.708203932499369*rdxFnu[1]*f[47]; 
  out[74] += 6.708203932499369*rdxFnu[0]*f[49]+6.708203932499369*rdxFnu[2]*f[47]; 
  out[75] += 6.708203932499369*rdxFnu[1]*f[49]+6.708203932499369*rdxFnu[2]*f[48]; 
  out[76] += 6.708203932499369*rdxFnu[0]*f[59]+6.708203932499369*rdxFnu[1]*f[58]+6.708203932499369*rdxFnu[2]*f[57]; 
  out[77] += 6.708203932499369*rdxFnu[0]*f[63]+6.708203932499369*rdxFnu[1]*f[62]; 
  out[78] += 6.708203932499369*rdxFnu[0]*f[65]+6.708203932499369*rdxFnu[2]*f[60]; 
  out[79] += 6.708203932499369*rdxFnu[1]*f[64]+6.708203932499369*rdxFnu[2]*f[61]; 
  out[80] += 6.708203932499369*rdxFnu[0]*f[75]+6.708203932499369*rdxFnu[1]*f[74]+6.708203932499369*rdxFnu[2]*f[73]; 

  return (rdxFnu[0]+rdxFnu[1]+rdxFnu[2])*0.9;

} 
double ConstDiffusionVol4xTensorP2_diffDirs24(const double *w, const double *dx, const double *nu, const double *f, double *out) 
{ 
  // w[4]:   Cell-center coordinates.
  // dx[4]:  Cell spacing.
  // nu[4]:  diffusion coefficient (collisionality).
  // f:      Input distribution function.
  // out:    Incremented output 
  double rdxFnu[2]; 
  rdxFnu[0] = 4.0*nu[1]/(dx[1]*dx[1]); 
  rdxFnu[1] = 4.0*nu[3]/(dx[3]*dx[3]); 

  out[12] += 6.708203932499369*f[0]*rdxFnu[0]; 
  out[14] += 6.708203932499369*f[0]*rdxFnu[1]; 
  out[20] += 6.708203932499369*rdxFnu[0]*f[1]; 
  out[22] += 6.708203932499369*rdxFnu[0]*f[3]; 
  out[26] += 6.708203932499369*rdxFnu[0]*f[4]; 
  out[28] += 6.708203932499369*f[1]*rdxFnu[1]; 
  out[29] += 6.708203932499369*rdxFnu[1]*f[2]; 
  out[30] += 6.708203932499369*rdxFnu[1]*f[3]; 
  out[33] += 6.708203932499369*rdxFnu[0]*f[6]; 
  out[36] += 6.708203932499369*rdxFnu[0]*f[8]; 
  out[38] += 6.708203932499369*rdxFnu[0]*f[10]; 
  out[41] += 6.708203932499369*rdxFnu[1]*f[5]; 
  out[42] += 6.708203932499369*rdxFnu[1]*f[6]; 
  out[43] += 6.708203932499369*rdxFnu[1]*f[7]; 
  out[44] += 6.708203932499369*rdxFnu[0]*f[11]; 
  out[46] += 6.708203932499369*rdxFnu[0]*f[13]; 
  out[47] += 6.708203932499369*rdxFnu[1]*f[11]; 
  out[48] += 6.708203932499369*rdxFnu[0]*f[14]+6.708203932499369*rdxFnu[1]*f[12]; 
  out[49] += 6.708203932499369*rdxFnu[1]*f[13]; 
  out[51] += 6.708203932499369*rdxFnu[0]*f[17]; 
  out[53] += 6.708203932499369*rdxFnu[1]*f[15]; 
  out[54] += 6.708203932499369*rdxFnu[0]*f[21]; 
  out[56] += 6.708203932499369*rdxFnu[0]*f[23]; 
  out[57] += 6.708203932499369*rdxFnu[0]*f[25]; 
  out[59] += 6.708203932499369*rdxFnu[0]*f[27]; 
  out[60] += 6.708203932499369*rdxFnu[1]*f[19]; 
  out[61] += 6.708203932499369*rdxFnu[0]*f[28]+6.708203932499369*rdxFnu[1]*f[20]; 
  out[62] += 6.708203932499369*rdxFnu[1]*f[21]; 
  out[63] += 6.708203932499369*rdxFnu[0]*f[30]+6.708203932499369*rdxFnu[1]*f[22]; 
  out[64] += 6.708203932499369*rdxFnu[1]*f[23]; 
  out[65] += 6.708203932499369*rdxFnu[1]*f[24]; 
  out[66] += 6.708203932499369*rdxFnu[0]*f[37]; 
  out[68] += 6.708203932499369*rdxFnu[0]*f[39]; 
  out[69] += 6.708203932499369*rdxFnu[1]*f[32]; 
  out[70] += 6.708203932499369*rdxFnu[0]*f[42]+6.708203932499369*rdxFnu[1]*f[33]; 
  out[71] += 6.708203932499369*rdxFnu[1]*f[34]; 
  out[72] += 6.708203932499369*rdxFnu[0]*f[45]; 
  out[73] += 6.708203932499369*rdxFnu[0]*f[47]+6.708203932499369*rdxFnu[1]*f[44]; 
  out[74] += 6.708203932499369*rdxFnu[1]*f[45]; 
  out[75] += 6.708203932499369*rdxFnu[0]*f[49]+6.708203932499369*rdxFnu[1]*f[46]; 
  out[76] += 6.708203932499369*rdxFnu[0]*f[58]; 
  out[77] += 6.708203932499369*rdxFnu[0]*f[62]+6.708203932499369*rdxFnu[1]*f[54]; 
  out[78] += 6.708203932499369*rdxFnu[1]*f[55]; 
  out[79] += 6.708203932499369*rdxFnu[0]*f[64]+6.708203932499369*rdxFnu[1]*f[56]; 
  out[80] += 6.708203932499369*rdxFnu[0]*f[74]+6.708203932499369*rdxFnu[1]*f[72]; 

  return (rdxFnu[0]+rdxFnu[1])*0.9;

} 
double ConstDiffusionVol4xTensorP2_diffDirs124(const double *w, const double *dx, const double *nu, const double *f, double *out) 
{ 
  // w[4]:   Cell-center coordinates.
  // dx[4]:  Cell spacing.
  // nu[4]:  diffusion coefficient (collisionality).
  // f:      Input distribution function.
  // out:    Incremented output 
  double rdxFnu[3]; 
  rdxFnu[0] = 4.0*nu[0]/(dx[0]*dx[0]); 
  rdxFnu[1] = 4.0*nu[1]/(dx[1]*dx[1]); 
  rdxFnu[2] = 4.0*nu[3]/(dx[3]*dx[3]); 

  out[11] += 6.708203932499369*f[0]*rdxFnu[0]; 
  out[12] += 6.708203932499369*f[0]*rdxFnu[1]; 
  out[14] += 6.708203932499369*f[0]*rdxFnu[2]; 
  out[19] += 6.708203932499369*rdxFnu[0]*f[2]; 
  out[20] += 6.708203932499369*f[1]*rdxFnu[1]; 
  out[21] += 6.708203932499369*rdxFnu[0]*f[3]; 
  out[22] += 6.708203932499369*rdxFnu[1]*f[3]; 
  out[25] += 6.708203932499369*rdxFnu[0]*f[4]; 
  out[26] += 6.708203932499369*rdxFnu[1]*f[4]; 
  out[28] += 6.708203932499369*f[1]*rdxFnu[2]; 
  out[29] += 6.708203932499369*f[2]*rdxFnu[2]; 
  out[30] += 6.708203932499369*rdxFnu[2]*f[3]; 
  out[32] += 6.708203932499369*rdxFnu[0]*f[7]; 
  out[33] += 6.708203932499369*rdxFnu[1]*f[6]; 
  out[35] += 6.708203932499369*rdxFnu[0]*f[9]; 
  out[36] += 6.708203932499369*rdxFnu[1]*f[8]; 
  out[37] += 6.708203932499369*rdxFnu[0]*f[10]; 
  out[38] += 6.708203932499369*rdxFnu[1]*f[10]; 
  out[41] += 6.708203932499369*rdxFnu[2]*f[5]; 
  out[42] += 6.708203932499369*rdxFnu[2]*f[6]; 
  out[43] += 6.708203932499369*rdxFnu[2]*f[7]; 
  out[44] += 6.708203932499369*rdxFnu[0]*f[12]+6.708203932499369*rdxFnu[1]*f[11]; 
  out[45] += 6.708203932499369*rdxFnu[0]*f[13]; 
  out[46] += 6.708203932499369*rdxFnu[1]*f[13]; 
  out[47] += 6.708203932499369*rdxFnu[0]*f[14]+6.708203932499369*rdxFnu[2]*f[11]; 
  out[48] += 6.708203932499369*rdxFnu[1]*f[14]+6.708203932499369*rdxFnu[2]*f[12]; 
  out[49] += 6.708203932499369*rdxFnu[2]*f[13]; 
  out[50] += 6.708203932499369*rdxFnu[0]*f[18]; 
  out[51] += 6.708203932499369*rdxFnu[1]*f[17]; 
  out[53] += 6.708203932499369*rdxFnu[2]*f[15]; 
  out[54] += 6.708203932499369*rdxFnu[0]*f[22]+6.708203932499369*rdxFnu[1]*f[21]; 
  out[55] += 6.708203932499369*rdxFnu[0]*f[24]; 
  out[56] += 6.708203932499369*rdxFnu[1]*f[23]; 
  out[57] += 6.708203932499369*rdxFnu[0]*f[26]+6.708203932499369*rdxFnu[1]*f[25]; 
  out[58] += 6.708203932499369*rdxFnu[0]*f[27]; 
  out[59] += 6.708203932499369*rdxFnu[1]*f[27]; 
  out[60] += 6.708203932499369*rdxFnu[0]*f[29]+6.708203932499369*rdxFnu[2]*f[19]; 
  out[61] += 6.708203932499369*rdxFnu[1]*f[28]+6.708203932499369*rdxFnu[2]*f[20]; 
  out[62] += 6.708203932499369*rdxFnu[0]*f[30]+6.708203932499369*rdxFnu[2]*f[21]; 
  out[63] += 6.708203932499369*rdxFnu[1]*f[30]+6.708203932499369*rdxFnu[2]*f[22]; 
  out[64] += 6.708203932499369*rdxFnu[2]*f[23]; 
  out[65] += 6.708203932499369*rdxFnu[2]*f[24]; 
  out[66] += 6.708203932499369*rdxFnu[0]*f[38]+6.708203932499369*rdxFnu[1]*f[37]; 
  out[67] += 6.708203932499369*rdxFnu[0]*f[40]; 
  out[68] += 6.708203932499369*rdxFnu[1]*f[39]; 
  out[69] += 6.708203932499369*rdxFnu[0]*f[43]+6.708203932499369*rdxFnu[2]*f[32]; 
  out[70] += 6.708203932499369*rdxFnu[1]*f[42]+6.708203932499369*rdxFnu[2]*f[33]; 
  out[71] += 6.708203932499369*rdxFnu[2]*f[34]; 
  out[72] += 6.708203932499369*rdxFnu[0]*f[46]+6.708203932499369*rdxFnu[1]*f[45]; 
  out[73] += 6.708203932499369*rdxFnu[0]*f[48]+6.708203932499369*rdxFnu[1]*f[47]+6.708203932499369*rdxFnu[2]*f[44]; 
  out[74] += 6.708203932499369*rdxFnu[0]*f[49]+6.708203932499369*rdxFnu[2]*f[45]; 
  out[75] += 6.708203932499369*rdxFnu[1]*f[49]+6.708203932499369*rdxFnu[2]*f[46]; 
  out[76] += 6.708203932499369*rdxFnu[0]*f[59]+6.708203932499369*rdxFnu[1]*f[58]; 
  out[77] += 6.708203932499369*rdxFnu[0]*f[63]+6.708203932499369*rdxFnu[1]*f[62]+6.708203932499369*rdxFnu[2]*f[54]; 
  out[78] += 6.708203932499369*rdxFnu[0]*f[65]+6.708203932499369*rdxFnu[2]*f[55]; 
  out[79] += 6.708203932499369*rdxFnu[1]*f[64]+6.708203932499369*rdxFnu[2]*f[56]; 
  out[80] += 6.708203932499369*rdxFnu[0]*f[75]+6.708203932499369*rdxFnu[1]*f[74]+6.708203932499369*rdxFnu[2]*f[72]; 

  return (rdxFnu[0]+rdxFnu[1]+rdxFnu[2])*0.9;

} 
double ConstDiffusionVol4xTensorP2_diffDirs12(const double *w, const double *dx, const double *nu, const double *f, double *out) 
{ 
  // w[4]:   Cell-center coordinates.
  // dx[4]:  Cell spacing.
  // nu[4]:  diffusion coefficient (collisionality).
  // f:      Input distribution function.
  // out:    Incremented output 
  double rdxFnu[2]; 
  rdxFnu[0] = 4.0*nu[0]/(dx[0]*dx[0]); 
  rdxFnu[1] = 4.0*nu[1]/(dx[1]*dx[1]); 

  out[11] += 6.708203932499369*f[0]*rdxFnu[0]; 
  out[12] += 6.708203932499369*f[0]*rdxFnu[1]; 
  out[19] += 6.708203932499369*rdxFnu[0]*f[2]; 
  out[20] += 6.708203932499369*f[1]*rdxFnu[1]; 
  out[21] += 6.708203932499369*rdxFnu[0]*f[3]; 
  out[22] += 6.708203932499369*rdxFnu[1]*f[3]; 
  out[25] += 6.708203932499369*rdxFnu[0]*f[4]; 
  out[26] += 6.708203932499369*rdxFnu[1]*f[4]; 
  out[32] += 6.708203932499369*rdxFnu[0]*f[7]; 
  out[33] += 6.708203932499369*rdxFnu[1]*f[6]; 
  out[35] += 6.708203932499369*rdxFnu[0]*f[9]; 
  out[36] += 6.708203932499369*rdxFnu[1]*f[8]; 
  out[37] += 6.708203932499369*rdxFnu[0]*f[10]; 
  out[38] += 6.708203932499369*rdxFnu[1]*f[10]; 
  out[44] += 6.708203932499369*rdxFnu[0]*f[12]+6.708203932499369*rdxFnu[1]*f[11]; 
  out[45] += 6.708203932499369*rdxFnu[0]*f[13]; 
  out[46] += 6.708203932499369*rdxFnu[1]*f[13]; 
  out[47] += 6.708203932499369*rdxFnu[0]*f[14]; 
  out[48] += 6.708203932499369*rdxFnu[1]*f[14]; 
  out[50] += 6.708203932499369*rdxFnu[0]*f[18]; 
  out[51] += 6.708203932499369*rdxFnu[1]*f[17]; 
  out[54] += 6.708203932499369*rdxFnu[0]*f[22]+6.708203932499369*rdxFnu[1]*f[21]; 
  out[55] += 6.708203932499369*rdxFnu[0]*f[24]; 
  out[56] += 6.708203932499369*rdxFnu[1]*f[23]; 
  out[57] += 6.708203932499369*rdxFnu[0]*f[26]+6.708203932499369*rdxFnu[1]*f[25]; 
  out[58] += 6.708203932499369*rdxFnu[0]*f[27]; 
  out[59] += 6.708203932499369*rdxFnu[1]*f[27]; 
  out[60] += 6.708203932499369*rdxFnu[0]*f[29]; 
  out[61] += 6.708203932499369*rdxFnu[1]*f[28]; 
  out[62] += 6.708203932499369*rdxFnu[0]*f[30]; 
  out[63] += 6.708203932499369*rdxFnu[1]*f[30]; 
  out[66] += 6.708203932499369*rdxFnu[0]*f[38]+6.708203932499369*rdxFnu[1]*f[37]; 
  out[67] += 6.708203932499369*rdxFnu[0]*f[40]; 
  out[68] += 6.708203932499369*rdxFnu[1]*f[39]; 
  out[69] += 6.708203932499369*rdxFnu[0]*f[43]; 
  out[70] += 6.708203932499369*rdxFnu[1]*f[42]; 
  out[72] += 6.708203932499369*rdxFnu[0]*f[46]+6.708203932499369*rdxFnu[1]*f[45]; 
  out[73] += 6.708203932499369*rdxFnu[0]*f[48]+6.708203932499369*rdxFnu[1]*f[47]; 
  out[74] += 6.708203932499369*rdxFnu[0]*f[49]; 
  out[75] += 6.708203932499369*rdxFnu[1]*f[49]; 
  out[76] += 6.708203932499369*rdxFnu[0]*f[59]+6.708203932499369*rdxFnu[1]*f[58]; 
  out[77] += 6.708203932499369*rdxFnu[0]*f[63]+6.708203932499369*rdxFnu[1]*f[62]; 
  out[78] += 6.708203932499369*rdxFnu[0]*f[65]; 
  out[79] += 6.708203932499369*rdxFnu[1]*f[64]; 
  out[80] += 6.708203932499369*rdxFnu[0]*f[75]+6.708203932499369*rdxFnu[1]*f[74]; 

  return (rdxFnu[0]+rdxFnu[1])*0.9;

} 
double ConstDiffusionVol4xTensorP2_diffDirs3(const double *w, const double *dx, const double *nu, const double *f, double *out) 
{ 
  // w[4]:   Cell-center coordinates.
  // dx[4]:  Cell spacing.
  // nu[4]:  diffusion coefficient (collisionality).
  // f:      Input distribution function.
  // out:    Incremented output 
  double rdxFnu[1]; 
  rdxFnu[0] = 4.0*nu[2]/(dx[2]*dx[2]); 

  out[13] += 6.708203932499369*f[0]*rdxFnu[0]; 
  out[23] += 6.708203932499369*rdxFnu[0]*f[1]; 
  out[24] += 6.708203932499369*rdxFnu[0]*f[2]; 
  out[27] += 6.708203932499369*rdxFnu[0]*f[4]; 
  out[34] += 6.708203932499369*rdxFnu[0]*f[5]; 
  out[39] += 6.708203932499369*rdxFnu[0]*f[8]; 
  out[40] += 6.708203932499369*rdxFnu[0]*f[9]; 
  out[45] += 6.708203932499369*rdxFnu[0]*f[11]; 
  out[46] += 6.708203932499369*rdxFnu[0]*f[12]; 
  out[49] += 6.708203932499369*rdxFnu[0]*f[14]; 
  out[52] += 6.708203932499369*rdxFnu[0]*f[16]; 
  out[55] += 6.708203932499369*rdxFnu[0]*f[19]; 
  out[56] += 6.708203932499369*rdxFnu[0]*f[20]; 
  out[58] += 6.708203932499369*rdxFnu[0]*f[25]; 
  out[59] += 6.708203932499369*rdxFnu[0]*f[26]; 
  out[64] += 6.708203932499369*rdxFnu[0]*f[28]; 
  out[65] += 6.708203932499369*rdxFnu[0]*f[29]; 
  out[67] += 6.708203932499369*rdxFnu[0]*f[35]; 
  out[68] += 6.708203932499369*rdxFnu[0]*f[36]; 
  out[71] += 6.708203932499369*rdxFnu[0]*f[41]; 
  out[72] += 6.708203932499369*rdxFnu[0]*f[44]; 
  out[74] += 6.708203932499369*rdxFnu[0]*f[47]; 
  out[75] += 6.708203932499369*rdxFnu[0]*f[48]; 
  out[76] += 6.708203932499369*rdxFnu[0]*f[57]; 
  out[78] += 6.708203932499369*rdxFnu[0]*f[60]; 
  out[79] += 6.708203932499369*rdxFnu[0]*f[61]; 
  out[80] += 6.708203932499369*rdxFnu[0]*f[73]; 

  return (rdxFnu[0])*0.9;

} 
double ConstDiffusionVol4xTensorP2_diffDirs34(const double *w, const double *dx, const double *nu, const double *f, double *out) 
{ 
  // w[4]:   Cell-center coordinates.
  // dx[4]:  Cell spacing.
  // nu[4]:  diffusion coefficient (collisionality).
  // f:      Input distribution function.
  // out:    Incremented output 
  double rdxFnu[2]; 
  rdxFnu[0] = 4.0*nu[2]/(dx[2]*dx[2]); 
  rdxFnu[1] = 4.0*nu[3]/(dx[3]*dx[3]); 

  out[13] += 6.708203932499369*f[0]*rdxFnu[0]; 
  out[14] += 6.708203932499369*f[0]*rdxFnu[1]; 
  out[23] += 6.708203932499369*rdxFnu[0]*f[1]; 
  out[24] += 6.708203932499369*rdxFnu[0]*f[2]; 
  out[27] += 6.708203932499369*rdxFnu[0]*f[4]; 
  out[28] += 6.708203932499369*f[1]*rdxFnu[1]; 
  out[29] += 6.708203932499369*rdxFnu[1]*f[2]; 
  out[30] += 6.708203932499369*rdxFnu[1]*f[3]; 
  out[34] += 6.708203932499369*rdxFnu[0]*f[5]; 
  out[39] += 6.708203932499369*rdxFnu[0]*f[8]; 
  out[40] += 6.708203932499369*rdxFnu[0]*f[9]; 
  out[41] += 6.708203932499369*rdxFnu[1]*f[5]; 
  out[42] += 6.708203932499369*rdxFnu[1]*f[6]; 
  out[43] += 6.708203932499369*rdxFnu[1]*f[7]; 
  out[45] += 6.708203932499369*rdxFnu[0]*f[11]; 
  out[46] += 6.708203932499369*rdxFnu[0]*f[12]; 
  out[47] += 6.708203932499369*rdxFnu[1]*f[11]; 
  out[48] += 6.708203932499369*rdxFnu[1]*f[12]; 
  out[49] += 6.708203932499369*rdxFnu[0]*f[14]+6.708203932499369*rdxFnu[1]*f[13]; 
  out[52] += 6.708203932499369*rdxFnu[0]*f[16]; 
  out[53] += 6.708203932499369*rdxFnu[1]*f[15]; 
  out[55] += 6.708203932499369*rdxFnu[0]*f[19]; 
  out[56] += 6.708203932499369*rdxFnu[0]*f[20]; 
  out[58] += 6.708203932499369*rdxFnu[0]*f[25]; 
  out[59] += 6.708203932499369*rdxFnu[0]*f[26]; 
  out[60] += 6.708203932499369*rdxFnu[1]*f[19]; 
  out[61] += 6.708203932499369*rdxFnu[1]*f[20]; 
  out[62] += 6.708203932499369*rdxFnu[1]*f[21]; 
  out[63] += 6.708203932499369*rdxFnu[1]*f[22]; 
  out[64] += 6.708203932499369*rdxFnu[0]*f[28]+6.708203932499369*rdxFnu[1]*f[23]; 
  out[65] += 6.708203932499369*rdxFnu[0]*f[29]+6.708203932499369*rdxFnu[1]*f[24]; 
  out[67] += 6.708203932499369*rdxFnu[0]*f[35]; 
  out[68] += 6.708203932499369*rdxFnu[0]*f[36]; 
  out[69] += 6.708203932499369*rdxFnu[1]*f[32]; 
  out[70] += 6.708203932499369*rdxFnu[1]*f[33]; 
  out[71] += 6.708203932499369*rdxFnu[0]*f[41]+6.708203932499369*rdxFnu[1]*f[34]; 
  out[72] += 6.708203932499369*rdxFnu[0]*f[44]; 
  out[73] += 6.708203932499369*rdxFnu[1]*f[44]; 
  out[74] += 6.708203932499369*rdxFnu[0]*f[47]+6.708203932499369*rdxFnu[1]*f[45]; 
  out[75] += 6.708203932499369*rdxFnu[0]*f[48]+6.708203932499369*rdxFnu[1]*f[46]; 
  out[76] += 6.708203932499369*rdxFnu[0]*f[57]; 
  out[77] += 6.708203932499369*rdxFnu[1]*f[54]; 
  out[78] += 6.708203932499369*rdxFnu[0]*f[60]+6.708203932499369*rdxFnu[1]*f[55]; 
  out[79] += 6.708203932499369*rdxFnu[0]*f[61]+6.708203932499369*rdxFnu[1]*f[56]; 
  out[80] += 6.708203932499369*rdxFnu[0]*f[73]+6.708203932499369*rdxFnu[1]*f[72]; 

  return (rdxFnu[0]+rdxFnu[1])*0.9;

} 
double ConstDiffusionVol4xTensorP2_diffDirs134(const double *w, const double *dx, const double *nu, const double *f, double *out) 
{ 
  // w[4]:   Cell-center coordinates.
  // dx[4]:  Cell spacing.
  // nu[4]:  diffusion coefficient (collisionality).
  // f:      Input distribution function.
  // out:    Incremented output 
  double rdxFnu[3]; 
  rdxFnu[0] = 4.0*nu[0]/(dx[0]*dx[0]); 
  rdxFnu[1] = 4.0*nu[2]/(dx[2]*dx[2]); 
  rdxFnu[2] = 4.0*nu[3]/(dx[3]*dx[3]); 

  out[11] += 6.708203932499369*f[0]*rdxFnu[0]; 
  out[13] += 6.708203932499369*f[0]*rdxFnu[1]; 
  out[14] += 6.708203932499369*f[0]*rdxFnu[2]; 
  out[19] += 6.708203932499369*rdxFnu[0]*f[2]; 
  out[21] += 6.708203932499369*rdxFnu[0]*f[3]; 
  out[23] += 6.708203932499369*f[1]*rdxFnu[1]; 
  out[24] += 6.708203932499369*rdxFnu[1]*f[2]; 
  out[25] += 6.708203932499369*rdxFnu[0]*f[4]; 
  out[27] += 6.708203932499369*rdxFnu[1]*f[4]; 
  out[28] += 6.708203932499369*f[1]*rdxFnu[2]; 
  out[29] += 6.708203932499369*f[2]*rdxFnu[2]; 
  out[30] += 6.708203932499369*rdxFnu[2]*f[3]; 
  out[32] += 6.708203932499369*rdxFnu[0]*f[7]; 
  out[34] += 6.708203932499369*rdxFnu[1]*f[5]; 
  out[35] += 6.708203932499369*rdxFnu[0]*f[9]; 
  out[37] += 6.708203932499369*rdxFnu[0]*f[10]; 
  out[39] += 6.708203932499369*rdxFnu[1]*f[8]; 
  out[40] += 6.708203932499369*rdxFnu[1]*f[9]; 
  out[41] += 6.708203932499369*rdxFnu[2]*f[5]; 
  out[42] += 6.708203932499369*rdxFnu[2]*f[6]; 
  out[43] += 6.708203932499369*rdxFnu[2]*f[7]; 
  out[44] += 6.708203932499369*rdxFnu[0]*f[12]; 
  out[45] += 6.708203932499369*rdxFnu[0]*f[13]+6.708203932499369*rdxFnu[1]*f[11]; 
  out[46] += 6.708203932499369*rdxFnu[1]*f[12]; 
  out[47] += 6.708203932499369*rdxFnu[0]*f[14]+6.708203932499369*rdxFnu[2]*f[11]; 
  out[48] += 6.708203932499369*rdxFnu[2]*f[12]; 
  out[49] += 6.708203932499369*rdxFnu[1]*f[14]+6.708203932499369*rdxFnu[2]*f[13]; 
  out[50] += 6.708203932499369*rdxFnu[0]*f[18]; 
  out[52] += 6.708203932499369*rdxFnu[1]*f[16]; 
  out[53] += 6.708203932499369*rdxFnu[2]*f[15]; 
  out[54] += 6.708203932499369*rdxFnu[0]*f[22]; 
  out[55] += 6.708203932499369*rdxFnu[0]*f[24]+6.708203932499369*rdxFnu[1]*f[19]; 
  out[56] += 6.708203932499369*rdxFnu[1]*f[20]; 
  out[57] += 6.708203932499369*rdxFnu[0]*f[26]; 
  out[58] += 6.708203932499369*rdxFnu[0]*f[27]+6.708203932499369*rdxFnu[1]*f[25]; 
  out[59] += 6.708203932499369*rdxFnu[1]*f[26]; 
  out[60] += 6.708203932499369*rdxFnu[0]*f[29]+6.708203932499369*rdxFnu[2]*f[19]; 
  out[61] += 6.708203932499369*rdxFnu[2]*f[20]; 
  out[62] += 6.708203932499369*rdxFnu[0]*f[30]+6.708203932499369*rdxFnu[2]*f[21]; 
  out[63] += 6.708203932499369*rdxFnu[2]*f[22]; 
  out[64] += 6.708203932499369*rdxFnu[1]*f[28]+6.708203932499369*rdxFnu[2]*f[23]; 
  out[65] += 6.708203932499369*rdxFnu[1]*f[29]+6.708203932499369*rdxFnu[2]*f[24]; 
  out[66] += 6.708203932499369*rdxFnu[0]*f[38]; 
  out[67] += 6.708203932499369*rdxFnu[0]*f[40]+6.708203932499369*rdxFnu[1]*f[35]; 
  out[68] += 6.708203932499369*rdxFnu[1]*f[36]; 
  out[69] += 6.708203932499369*rdxFnu[0]*f[43]+6.708203932499369*rdxFnu[2]*f[32]; 
  out[70] += 6.708203932499369*rdxFnu[2]*f[33]; 
  out[71] += 6.708203932499369*rdxFnu[1]*f[41]+6.708203932499369*rdxFnu[2]*f[34]; 
  out[72] += 6.708203932499369*rdxFnu[0]*f[46]+6.708203932499369*rdxFnu[1]*f[44]; 
  out[73] += 6.708203932499369*rdxFnu[0]*f[48]+6.708203932499369*rdxFnu[2]*f[44]; 
  out[74] += 6.708203932499369*rdxFnu[0]*f[49]+6.708203932499369*rdxFnu[1]*f[47]+6.708203932499369*rdxFnu[2]*f[45]; 
  out[75] += 6.708203932499369*rdxFnu[1]*f[48]+6.708203932499369*rdxFnu[2]*f[46]; 
  out[76] += 6.708203932499369*rdxFnu[0]*f[59]+6.708203932499369*rdxFnu[1]*f[57]; 
  out[77] += 6.708203932499369*rdxFnu[0]*f[63]+6.708203932499369*rdxFnu[2]*f[54]; 
  out[78] += 6.708203932499369*rdxFnu[0]*f[65]+6.708203932499369*rdxFnu[1]*f[60]+6.708203932499369*rdxFnu[2]*f[55]; 
  out[79] += 6.708203932499369*rdxFnu[1]*f[61]+6.708203932499369*rdxFnu[2]*f[56]; 
  out[80] += 6.708203932499369*rdxFnu[0]*f[75]+6.708203932499369*rdxFnu[1]*f[73]+6.708203932499369*rdxFnu[2]*f[72]; 

  return (rdxFnu[0]+rdxFnu[1]+rdxFnu[2])*0.9;

} 
double ConstDiffusionVol4xTensorP2_diffDirs13(const double *w, const double *dx, const double *nu, const double *f, double *out) 
{ 
  // w[4]:   Cell-center coordinates.
  // dx[4]:  Cell spacing.
  // nu[4]:  diffusion coefficient (collisionality).
  // f:      Input distribution function.
  // out:    Incremented output 
  double rdxFnu[2]; 
  rdxFnu[0] = 4.0*nu[0]/(dx[0]*dx[0]); 
  rdxFnu[1] = 4.0*nu[2]/(dx[2]*dx[2]); 

  out[11] += 6.708203932499369*f[0]*rdxFnu[0]; 
  out[13] += 6.708203932499369*f[0]*rdxFnu[1]; 
  out[19] += 6.708203932499369*rdxFnu[0]*f[2]; 
  out[21] += 6.708203932499369*rdxFnu[0]*f[3]; 
  out[23] += 6.708203932499369*f[1]*rdxFnu[1]; 
  out[24] += 6.708203932499369*rdxFnu[1]*f[2]; 
  out[25] += 6.708203932499369*rdxFnu[0]*f[4]; 
  out[27] += 6.708203932499369*rdxFnu[1]*f[4]; 
  out[32] += 6.708203932499369*rdxFnu[0]*f[7]; 
  out[34] += 6.708203932499369*rdxFnu[1]*f[5]; 
  out[35] += 6.708203932499369*rdxFnu[0]*f[9]; 
  out[37] += 6.708203932499369*rdxFnu[0]*f[10]; 
  out[39] += 6.708203932499369*rdxFnu[1]*f[8]; 
  out[40] += 6.708203932499369*rdxFnu[1]*f[9]; 
  out[44] += 6.708203932499369*rdxFnu[0]*f[12]; 
  out[45] += 6.708203932499369*rdxFnu[0]*f[13]+6.708203932499369*rdxFnu[1]*f[11]; 
  out[46] += 6.708203932499369*rdxFnu[1]*f[12]; 
  out[47] += 6.708203932499369*rdxFnu[0]*f[14]; 
  out[49] += 6.708203932499369*rdxFnu[1]*f[14]; 
  out[50] += 6.708203932499369*rdxFnu[0]*f[18]; 
  out[52] += 6.708203932499369*rdxFnu[1]*f[16]; 
  out[54] += 6.708203932499369*rdxFnu[0]*f[22]; 
  out[55] += 6.708203932499369*rdxFnu[0]*f[24]+6.708203932499369*rdxFnu[1]*f[19]; 
  out[56] += 6.708203932499369*rdxFnu[1]*f[20]; 
  out[57] += 6.708203932499369*rdxFnu[0]*f[26]; 
  out[58] += 6.708203932499369*rdxFnu[0]*f[27]+6.708203932499369*rdxFnu[1]*f[25]; 
  out[59] += 6.708203932499369*rdxFnu[1]*f[26]; 
  out[60] += 6.708203932499369*rdxFnu[0]*f[29]; 
  out[62] += 6.708203932499369*rdxFnu[0]*f[30]; 
  out[64] += 6.708203932499369*rdxFnu[1]*f[28]; 
  out[65] += 6.708203932499369*rdxFnu[1]*f[29]; 
  out[66] += 6.708203932499369*rdxFnu[0]*f[38]; 
  out[67] += 6.708203932499369*rdxFnu[0]*f[40]+6.708203932499369*rdxFnu[1]*f[35]; 
  out[68] += 6.708203932499369*rdxFnu[1]*f[36]; 
  out[69] += 6.708203932499369*rdxFnu[0]*f[43]; 
  out[71] += 6.708203932499369*rdxFnu[1]*f[41]; 
  out[72] += 6.708203932499369*rdxFnu[0]*f[46]+6.708203932499369*rdxFnu[1]*f[44]; 
  out[73] += 6.708203932499369*rdxFnu[0]*f[48]; 
  out[74] += 6.708203932499369*rdxFnu[0]*f[49]+6.708203932499369*rdxFnu[1]*f[47]; 
  out[75] += 6.708203932499369*rdxFnu[1]*f[48]; 
  out[76] += 6.708203932499369*rdxFnu[0]*f[59]+6.708203932499369*rdxFnu[1]*f[57]; 
  out[77] += 6.708203932499369*rdxFnu[0]*f[63]; 
  out[78] += 6.708203932499369*rdxFnu[0]*f[65]+6.708203932499369*rdxFnu[1]*f[60]; 
  out[79] += 6.708203932499369*rdxFnu[1]*f[61]; 
  out[80] += 6.708203932499369*rdxFnu[0]*f[75]+6.708203932499369*rdxFnu[1]*f[73]; 

  return (rdxFnu[0]+rdxFnu[1])*0.9;

} 
double ConstDiffusionVol4xTensorP2_diffDirs4(const double *w, const double *dx, const double *nu, const double *f, double *out) 
{ 
  // w[4]:   Cell-center coordinates.
  // dx[4]:  Cell spacing.
  // nu[4]:  diffusion coefficient (collisionality).
  // f:      Input distribution function.
  // out:    Incremented output 
  double rdxFnu[1]; 
  rdxFnu[0] = 4.0*nu[3]/(dx[3]*dx[3]); 

  out[14] += 6.708203932499369*f[0]*rdxFnu[0]; 
  out[28] += 6.708203932499369*rdxFnu[0]*f[1]; 
  out[29] += 6.708203932499369*rdxFnu[0]*f[2]; 
  out[30] += 6.708203932499369*rdxFnu[0]*f[3]; 
  out[41] += 6.708203932499369*rdxFnu[0]*f[5]; 
  out[42] += 6.708203932499369*rdxFnu[0]*f[6]; 
  out[43] += 6.708203932499369*rdxFnu[0]*f[7]; 
  out[47] += 6.708203932499369*rdxFnu[0]*f[11]; 
  out[48] += 6.708203932499369*rdxFnu[0]*f[12]; 
  out[49] += 6.708203932499369*rdxFnu[0]*f[13]; 
  out[53] += 6.708203932499369*rdxFnu[0]*f[15]; 
  out[60] += 6.708203932499369*rdxFnu[0]*f[19]; 
  out[61] += 6.708203932499369*rdxFnu[0]*f[20]; 
  out[62] += 6.708203932499369*rdxFnu[0]*f[21]; 
  out[63] += 6.708203932499369*rdxFnu[0]*f[22]; 
  out[64] += 6.708203932499369*rdxFnu[0]*f[23]; 
  out[65] += 6.708203932499369*rdxFnu[0]*f[24]; 
  out[69] += 6.708203932499369*rdxFnu[0]*f[32]; 
  out[70] += 6.708203932499369*rdxFnu[0]*f[33]; 
  out[71] += 6.708203932499369*rdxFnu[0]*f[34]; 
  out[73] += 6.708203932499369*rdxFnu[0]*f[44]; 
  out[74] += 6.708203932499369*rdxFnu[0]*f[45]; 
  out[75] += 6.708203932499369*rdxFnu[0]*f[46]; 
  out[77] += 6.708203932499369*rdxFnu[0]*f[54]; 
  out[78] += 6.708203932499369*rdxFnu[0]*f[55]; 
  out[79] += 6.708203932499369*rdxFnu[0]*f[56]; 
  out[80] += 6.708203932499369*rdxFnu[0]*f[72]; 

  return (rdxFnu[0])*0.9;

} 
double ConstDiffusionVol4xTensorP2_diffDirs14(const double *w, const double *dx, const double *nu, const double *f, double *out) 
{ 
  // w[4]:   Cell-center coordinates.
  // dx[4]:  Cell spacing.
  // nu[4]:  diffusion coefficient (collisionality).
  // f:      Input distribution function.
  // out:    Incremented output 
  double rdxFnu[2]; 
  rdxFnu[0] = 4.0*nu[0]/(dx[0]*dx[0]); 
  rdxFnu[1] = 4.0*nu[3]/(dx[3]*dx[3]); 

  out[11] += 6.708203932499369*f[0]*rdxFnu[0]; 
  out[14] += 6.708203932499369*f[0]*rdxFnu[1]; 
  out[19] += 6.708203932499369*rdxFnu[0]*f[2]; 
  out[21] += 6.708203932499369*rdxFnu[0]*f[3]; 
  out[25] += 6.708203932499369*rdxFnu[0]*f[4]; 
  out[28] += 6.708203932499369*f[1]*rdxFnu[1]; 
  out[29] += 6.708203932499369*rdxFnu[1]*f[2]; 
  out[30] += 6.708203932499369*rdxFnu[1]*f[3]; 
  out[32] += 6.708203932499369*rdxFnu[0]*f[7]; 
  out[35] += 6.708203932499369*rdxFnu[0]*f[9]; 
  out[37] += 6.708203932499369*rdxFnu[0]*f[10]; 
  out[41] += 6.708203932499369*rdxFnu[1]*f[5]; 
  out[42] += 6.708203932499369*rdxFnu[1]*f[6]; 
  out[43] += 6.708203932499369*rdxFnu[1]*f[7]; 
  out[44] += 6.708203932499369*rdxFnu[0]*f[12]; 
  out[45] += 6.708203932499369*rdxFnu[0]*f[13]; 
  out[47] += 6.708203932499369*rdxFnu[0]*f[14]+6.708203932499369*rdxFnu[1]*f[11]; 
  out[48] += 6.708203932499369*rdxFnu[1]*f[12]; 
  out[49] += 6.708203932499369*rdxFnu[1]*f[13]; 
  out[50] += 6.708203932499369*rdxFnu[0]*f[18]; 
  out[53] += 6.708203932499369*rdxFnu[1]*f[15]; 
  out[54] += 6.708203932499369*rdxFnu[0]*f[22]; 
  out[55] += 6.708203932499369*rdxFnu[0]*f[24]; 
  out[57] += 6.708203932499369*rdxFnu[0]*f[26]; 
  out[58] += 6.708203932499369*rdxFnu[0]*f[27]; 
  out[60] += 6.708203932499369*rdxFnu[0]*f[29]+6.708203932499369*rdxFnu[1]*f[19]; 
  out[61] += 6.708203932499369*rdxFnu[1]*f[20]; 
  out[62] += 6.708203932499369*rdxFnu[0]*f[30]+6.708203932499369*rdxFnu[1]*f[21]; 
  out[63] += 6.708203932499369*rdxFnu[1]*f[22]; 
  out[64] += 6.708203932499369*rdxFnu[1]*f[23]; 
  out[65] += 6.708203932499369*rdxFnu[1]*f[24]; 
  out[66] += 6.708203932499369*rdxFnu[0]*f[38]; 
  out[67] += 6.708203932499369*rdxFnu[0]*f[40]; 
  out[69] += 6.708203932499369*rdxFnu[0]*f[43]+6.708203932499369*rdxFnu[1]*f[32]; 
  out[70] += 6.708203932499369*rdxFnu[1]*f[33]; 
  out[71] += 6.708203932499369*rdxFnu[1]*f[34]; 
  out[72] += 6.708203932499369*rdxFnu[0]*f[46]; 
  out[73] += 6.708203932499369*rdxFnu[0]*f[48]+6.708203932499369*rdxFnu[1]*f[44]; 
  out[74] += 6.708203932499369*rdxFnu[0]*f[49]+6.708203932499369*rdxFnu[1]*f[45]; 
  out[75] += 6.708203932499369*rdxFnu[1]*f[46]; 
  out[76] += 6.708203932499369*rdxFnu[0]*f[59]; 
  out[77] += 6.708203932499369*rdxFnu[0]*f[63]+6.708203932499369*rdxFnu[1]*f[54]; 
  out[78] += 6.708203932499369*rdxFnu[0]*f[65]+6.708203932499369*rdxFnu[1]*f[55]; 
  out[79] += 6.708203932499369*rdxFnu[1]*f[56]; 
  out[80] += 6.708203932499369*rdxFnu[0]*f[75]+6.708203932499369*rdxFnu[1]*f[72]; 

  return (rdxFnu[0]+rdxFnu[1])*0.9;

} 
double ConstDiffusionVol4xTensorP2_diffDirs1(const double *w, const double *dx, const double *nu, const double *f, double *out) 
{ 
  // w[4]:   Cell-center coordinates.
  // dx[4]:  Cell spacing.
  // nu[4]:  diffusion coefficient (collisionality).
  // f:      Input distribution function.
  // out:    Incremented output 
  double rdxFnu[1]; 
  rdxFnu[0] = 4.0*nu[0]/(dx[0]*dx[0]); 

  out[11] += 6.708203932499369*f[0]*rdxFnu[0]; 
  out[19] += 6.708203932499369*rdxFnu[0]*f[2]; 
  out[21] += 6.708203932499369*rdxFnu[0]*f[3]; 
  out[25] += 6.708203932499369*rdxFnu[0]*f[4]; 
  out[32] += 6.708203932499369*rdxFnu[0]*f[7]; 
  out[35] += 6.708203932499369*rdxFnu[0]*f[9]; 
  out[37] += 6.708203932499369*rdxFnu[0]*f[10]; 
  out[44] += 6.708203932499369*rdxFnu[0]*f[12]; 
  out[45] += 6.708203932499369*rdxFnu[0]*f[13]; 
  out[47] += 6.708203932499369*rdxFnu[0]*f[14]; 
  out[50] += 6.708203932499369*rdxFnu[0]*f[18]; 
  out[54] += 6.708203932499369*rdxFnu[0]*f[22]; 
  out[55] += 6.708203932499369*rdxFnu[0]*f[24]; 
  out[57] += 6.708203932499369*rdxFnu[0]*f[26]; 
  out[58] += 6.708203932499369*rdxFnu[0]*f[27]; 
  out[60] += 6.708203932499369*rdxFnu[0]*f[29]; 
  out[62] += 6.708203932499369*rdxFnu[0]*f[30]; 
  out[66] += 6.708203932499369*rdxFnu[0]*f[38]; 
  out[67] += 6.708203932499369*rdxFnu[0]*f[40]; 
  out[69] += 6.708203932499369*rdxFnu[0]*f[43]; 
  out[72] += 6.708203932499369*rdxFnu[0]*f[46]; 
  out[73] += 6.708203932499369*rdxFnu[0]*f[48]; 
  out[74] += 6.708203932499369*rdxFnu[0]*f[49]; 
  out[76] += 6.708203932499369*rdxFnu[0]*f[59]; 
  out[77] += 6.708203932499369*rdxFnu[0]*f[63]; 
  out[78] += 6.708203932499369*rdxFnu[0]*f[65]; 
  out[80] += 6.708203932499369*rdxFnu[0]*f[75]; 

  return (rdxFnu[0])*0.9;

} 
double ConstHyperDiffusion4Vol4xTensorP2_diffDirs2(const double *w, const double *dx, const double *nu, const double *f, double *out) 
{ 
  // w[4]:   Cell-center coordinates.
  // dx[4]:  Cell spacing.
  // nu[4]:  diffusion coefficient (collisionality).
  // f:      Input distribution function.
  // out:    Incremented output 
  double rdxFnu[1]; 
  rdxFnu[0] = 16.0*nu[1]/(dx[1]*dx[1]*dx[1]*dx[1]); 


  return (rdxFnu[0])*0.9;

} 
double ConstHyperDiffusion4Vol4xTensorP2_diffDirs23(const double *w, const double *dx, const double *nu, const double *f, double *out) 
{ 
  // w[4]:   Cell-center coordinates.
  // dx[4]:  Cell spacing.
  // nu[4]:  diffusion coefficient (collisionality).
  // f:      Input distribution function.
  // out:    Incremented output 
  double rdxFnu[2]; 
  rdxFnu[0] = 16.0*nu[1]/(dx[1]*dx[1]*dx[1]*dx[1]); 
  rdxFnu[1] = 16.0*nu[2]/(dx[2]*dx[2]*dx[2]*dx[2]); 


  return (rdxFnu[0]+rdxFnu[1])*0.9;

} 
double ConstHyperDiffusion4Vol4xTensorP2_diffDirs234(const double *w, const double *dx, const double *nu, const double *f, double *out) 
{ 
  // w[4]:   Cell-center coordinates.
  // dx[4]:  Cell spacing.
  // nu[4]:  diffusion coefficient (collisionality).
  // f:      Input distribution function.
  // out:    Incremented output 
  double rdxFnu[3]; 
  rdxFnu[0] = 16.0*nu[1]/(dx[1]*dx[1]*dx[1]*dx[1]); 
  rdxFnu[1] = 16.0*nu[2]/(dx[2]*dx[2]*dx[2]*dx[2]); 
  rdxFnu[2] = 16.0*nu[3]/(dx[3]*dx[3]*dx[3]*dx[3]); 


  return (rdxFnu[0]+rdxFnu[1]+rdxFnu[2])*0.9;

} 
double ConstHyperDiffusion4Vol4xTensorP2_diffDirs1234(const double *w, const double *dx, const double *nu, const double *f, double *out) 
{ 
  // w[4]:   Cell-center coordinates.
  // dx[4]:  Cell spacing.
  // nu[4]:  diffusion coefficient (collisionality).
  // f:      Input distribution function.
  // out:    Incremented output 
  double rdxFnu[4]; 
  rdxFnu[0] = 16.0*nu[0]/(dx[0]*dx[0]*dx[0]*dx[0]); 
  rdxFnu[1] = 16.0*nu[1]/(dx[1]*dx[1]*dx[1]*dx[1]); 
  rdxFnu[2] = 16.0*nu[2]/(dx[2]*dx[2]*dx[2]*dx[2]); 
  rdxFnu[3] = 16.0*nu[3]/(dx[3]*dx[3]*dx[3]*dx[3]); 


  return (rdxFnu[0]+rdxFnu[1]+rdxFnu[2]+rdxFnu[3])*0.9;

} 
double ConstHyperDiffusion4Vol4xTensorP2_diffDirs123(const double *w, const double *dx, const double *nu, const double *f, double *out) 
{ 
  // w[4]:   Cell-center coordinates.
  // dx[4]:  Cell spacing.
  // nu[4]:  diffusion coefficient (collisionality).
  // f:      Input distribution function.
  // out:    Incremented output 
  double rdxFnu[3]; 
  rdxFnu[0] = 16.0*nu[0]/(dx[0]*dx[0]*dx[0]*dx[0]); 
  rdxFnu[1] = 16.0*nu[1]/(dx[1]*dx[1]*dx[1]*dx[1]); 
  rdxFnu[2] = 16.0*nu[2]/(dx[2]*dx[2]*dx[2]*dx[2]); 


  return (rdxFnu[0]+rdxFnu[1]+rdxFnu[2])*0.9;

} 
double ConstHyperDiffusion4Vol4xTensorP2_diffDirs24(const double *w, const double *dx, const double *nu, const double *f, double *out) 
{ 
  // w[4]:   Cell-center coordinates.
  // dx[4]:  Cell spacing.
  // nu[4]:  diffusion coefficient (collisionality).
  // f:      Input distribution function.
  // out:    Incremented output 
  double rdxFnu[2]; 
  rdxFnu[0] = 16.0*nu[1]/(dx[1]*dx[1]*dx[1]*dx[1]); 
  rdxFnu[1] = 16.0*nu[3]/(dx[3]*dx[3]*dx[3]*dx[3]); 


  return (rdxFnu[0]+rdxFnu[1])*0.9;

} 
double ConstHyperDiffusion4Vol4xTensorP2_diffDirs124(const double *w, const double *dx, const double *nu, const double *f, double *out) 
{ 
  // w[4]:   Cell-center coordinates.
  // dx[4]:  Cell spacing.
  // nu[4]:  diffusion coefficient (collisionality).
  // f:      Input distribution function.
  // out:    Incremented output 
  double rdxFnu[3]; 
  rdxFnu[0] = 16.0*nu[0]/(dx[0]*dx[0]*dx[0]*dx[0]); 
  rdxFnu[1] = 16.0*nu[1]/(dx[1]*dx[1]*dx[1]*dx[1]); 
  rdxFnu[2] = 16.0*nu[3]/(dx[3]*dx[3]*dx[3]*dx[3]); 


  return (rdxFnu[0]+rdxFnu[1]+rdxFnu[2])*0.9;

} 
double ConstHyperDiffusion4Vol4xTensorP2_diffDirs12(const double *w, const double *dx, const double *nu, const double *f, double *out) 
{ 
  // w[4]:   Cell-center coordinates.
  // dx[4]:  Cell spacing.
  // nu[4]:  diffusion coefficient (collisionality).
  // f:      Input distribution function.
  // out:    Incremented output 
  double rdxFnu[2]; 
  rdxFnu[0] = 16.0*nu[0]/(dx[0]*dx[0]*dx[0]*dx[0]); 
  rdxFnu[1] = 16.0*nu[1]/(dx[1]*dx[1]*dx[1]*dx[1]); 


  return (rdxFnu[0]+rdxFnu[1])*0.9;

} 
double ConstHyperDiffusion4Vol4xTensorP2_diffDirs3(const double *w, const double *dx, const double *nu, const double *f, double *out) 
{ 
  // w[4]:   Cell-center coordinates.
  // dx[4]:  Cell spacing.
  // nu[4]:  diffusion coefficient (collisionality).
  // f:      Input distribution function.
  // out:    Incremented output 
  double rdxFnu[1]; 
  rdxFnu[0] = 16.0*nu[2]/(dx[2]*dx[2]*dx[2]*dx[2]); 


  return (rdxFnu[0])*0.9;

} 
double ConstHyperDiffusion4Vol4xTensorP2_diffDirs34(const double *w, const double *dx, const double *nu, const double *f, double *out) 
{ 
  // w[4]:   Cell-center coordinates.
  // dx[4]:  Cell spacing.
  // nu[4]:  diffusion coefficient (collisionality).
  // f:      Input distribution function.
  // out:    Incremented output 
  double rdxFnu[2]; 
  rdxFnu[0] = 16.0*nu[2]/(dx[2]*dx[2]*dx[2]*dx[2]); 
  rdxFnu[1] = 16.0*nu[3]/(dx[3]*dx[3]*dx[3]*dx[3]); 


  return (rdxFnu[0]+rdxFnu[1])*0.9;

} 
double ConstHyperDiffusion4Vol4xTensorP2_diffDirs134(const double *w, const double *dx, const double *nu, const double *f, double *out) 
{ 
  // w[4]:   Cell-center coordinates.
  // dx[4]:  Cell spacing.
  // nu[4]:  diffusion coefficient (collisionality).
  // f:      Input distribution function.
  // out:    Incremented output 
  double rdxFnu[3]; 
  rdxFnu[0] = 16.0*nu[0]/(dx[0]*dx[0]*dx[0]*dx[0]); 
  rdxFnu[1] = 16.0*nu[2]/(dx[2]*dx[2]*dx[2]*dx[2]); 
  rdxFnu[2] = 16.0*nu[3]/(dx[3]*dx[3]*dx[3]*dx[3]); 


  return (rdxFnu[0]+rdxFnu[1]+rdxFnu[2])*0.9;

} 
double ConstHyperDiffusion4Vol4xTensorP2_diffDirs13(const double *w, const double *dx, const double *nu, const double *f, double *out) 
{ 
  // w[4]:   Cell-center coordinates.
  // dx[4]:  Cell spacing.
  // nu[4]:  diffusion coefficient (collisionality).
  // f:      Input distribution function.
  // out:    Incremented output 
  double rdxFnu[2]; 
  rdxFnu[0] = 16.0*nu[0]/(dx[0]*dx[0]*dx[0]*dx[0]); 
  rdxFnu[1] = 16.0*nu[2]/(dx[2]*dx[2]*dx[2]*dx[2]); 


  return (rdxFnu[0]+rdxFnu[1])*0.9;

} 
double ConstHyperDiffusion4Vol4xTensorP2_diffDirs4(const double *w, const double *dx, const double *nu, const double *f, double *out) 
{ 
  // w[4]:   Cell-center coordinates.
  // dx[4]:  Cell spacing.
  // nu[4]:  diffusion coefficient (collisionality).
  // f:      Input distribution function.
  // out:    Incremented output 
  double rdxFnu[1]; 
  rdxFnu[0] = 16.0*nu[3]/(dx[3]*dx[3]*dx[3]*dx[3]); 


  return (rdxFnu[0])*0.9;

} 
double ConstHyperDiffusion4Vol4xTensorP2_diffDirs14(const double *w, const double *dx, const double *nu, const double *f, double *out) 
{ 
  // w[4]:   Cell-center coordinates.
  // dx[4]:  Cell spacing.
  // nu[4]:  diffusion coefficient (collisionality).
  // f:      Input distribution function.
  // out:    Incremented output 
  double rdxFnu[2]; 
  rdxFnu[0] = 16.0*nu[0]/(dx[0]*dx[0]*dx[0]*dx[0]); 
  rdxFnu[1] = 16.0*nu[3]/(dx[3]*dx[3]*dx[3]*dx[3]); 


  return (rdxFnu[0]+rdxFnu[1])*0.9;

} 
double ConstHyperDiffusion4Vol4xTensorP2_diffDirs1(const double *w, const double *dx, const double *nu, const double *f, double *out) 
{ 
  // w[4]:   Cell-center coordinates.
  // dx[4]:  Cell spacing.
  // nu[4]:  diffusion coefficient (collisionality).
  // f:      Input distribution function.
  // out:    Incremented output 
  double rdxFnu[1]; 
  rdxFnu[0] = 16.0*nu[0]/(dx[0]*dx[0]*dx[0]*dx[0]); 


  return (rdxFnu[0])*0.9;

} 
double ConstHyperDiffusion6Vol4xTensorP2_diffDirs2(const double *w, const double *dx, const double *nu, const double *f, double *out) 
{ 
  // w[4]:   Cell-center coordinates.
  // dx[4]:  Cell spacing.
  // nu[4]:  diffusion coefficient (collisionality).
  // f:      Input distribution function.
  // out:    Incremented output 
  double rdxFnu[1]; 
  rdxFnu[0] = 64.0*nu[1]/(dx[1]*dx[1]*dx[1]*dx[1]*dx[1]*dx[1]); 


  return (rdxFnu[0])*0.9;

} 
double ConstHyperDiffusion6Vol4xTensorP2_diffDirs23(const double *w, const double *dx, const double *nu, const double *f, double *out) 
{ 
  // w[4]:   Cell-center coordinates.
  // dx[4]:  Cell spacing.
  // nu[4]:  diffusion coefficient (collisionality).
  // f:      Input distribution function.
  // out:    Incremented output 
  double rdxFnu[2]; 
  rdxFnu[0] = 64.0*nu[1]/(dx[1]*dx[1]*dx[1]*dx[1]*dx[1]*dx[1]); 
  rdxFnu[1] = 64.0*nu[2]/(dx[2]*dx[2]*dx[2]*dx[2]*dx[2]*dx[2]); 


  return (rdxFnu[0]+rdxFnu[1])*0.9;

} 
double ConstHyperDiffusion6Vol4xTensorP2_diffDirs234(const double *w, const double *dx, const double *nu, const double *f, double *out) 
{ 
  // w[4]:   Cell-center coordinates.
  // dx[4]:  Cell spacing.
  // nu[4]:  diffusion coefficient (collisionality).
  // f:      Input distribution function.
  // out:    Incremented output 
  double rdxFnu[3]; 
  rdxFnu[0] = 64.0*nu[1]/(dx[1]*dx[1]*dx[1]*dx[1]*dx[1]*dx[1]); 
  rdxFnu[1] = 64.0*nu[2]/(dx[2]*dx[2]*dx[2]*dx[2]*dx[2]*dx[2]); 
  rdxFnu[2] = 64.0*nu[3]/(dx[3]*dx[3]*dx[3]*dx[3]*dx[3]*dx[3]); 


  return (rdxFnu[0]+rdxFnu[1]+rdxFnu[2])*0.9;

} 
double ConstHyperDiffusion6Vol4xTensorP2_diffDirs1234(const double *w, const double *dx, const double *nu, const double *f, double *out) 
{ 
  // w[4]:   Cell-center coordinates.
  // dx[4]:  Cell spacing.
  // nu[4]:  diffusion coefficient (collisionality).
  // f:      Input distribution function.
  // out:    Incremented output 
  double rdxFnu[4]; 
  rdxFnu[0] = 64.0*nu[0]/(dx[0]*dx[0]*dx[0]*dx[0]*dx[0]*dx[0]); 
  rdxFnu[1] = 64.0*nu[1]/(dx[1]*dx[1]*dx[1]*dx[1]*dx[1]*dx[1]); 
  rdxFnu[2] = 64.0*nu[2]/(dx[2]*dx[2]*dx[2]*dx[2]*dx[2]*dx[2]); 
  rdxFnu[3] = 64.0*nu[3]/(dx[3]*dx[3]*dx[3]*dx[3]*dx[3]*dx[3]); 


  return (rdxFnu[0]+rdxFnu[1]+rdxFnu[2]+rdxFnu[3])*0.9;

} 
double ConstHyperDiffusion6Vol4xTensorP2_diffDirs123(const double *w, const double *dx, const double *nu, const double *f, double *out) 
{ 
  // w[4]:   Cell-center coordinates.
  // dx[4]:  Cell spacing.
  // nu[4]:  diffusion coefficient (collisionality).
  // f:      Input distribution function.
  // out:    Incremented output 
  double rdxFnu[3]; 
  rdxFnu[0] = 64.0*nu[0]/(dx[0]*dx[0]*dx[0]*dx[0]*dx[0]*dx[0]); 
  rdxFnu[1] = 64.0*nu[1]/(dx[1]*dx[1]*dx[1]*dx[1]*dx[1]*dx[1]); 
  rdxFnu[2] = 64.0*nu[2]/(dx[2]*dx[2]*dx[2]*dx[2]*dx[2]*dx[2]); 


  return (rdxFnu[0]+rdxFnu[1]+rdxFnu[2])*0.9;

} 
double ConstHyperDiffusion6Vol4xTensorP2_diffDirs24(const double *w, const double *dx, const double *nu, const double *f, double *out) 
{ 
  // w[4]:   Cell-center coordinates.
  // dx[4]:  Cell spacing.
  // nu[4]:  diffusion coefficient (collisionality).
  // f:      Input distribution function.
  // out:    Incremented output 
  double rdxFnu[2]; 
  rdxFnu[0] = 64.0*nu[1]/(dx[1]*dx[1]*dx[1]*dx[1]*dx[1]*dx[1]); 
  rdxFnu[1] = 64.0*nu[3]/(dx[3]*dx[3]*dx[3]*dx[3]*dx[3]*dx[3]); 


  return (rdxFnu[0]+rdxFnu[1])*0.9;

} 
double ConstHyperDiffusion6Vol4xTensorP2_diffDirs124(const double *w, const double *dx, const double *nu, const double *f, double *out) 
{ 
  // w[4]:   Cell-center coordinates.
  // dx[4]:  Cell spacing.
  // nu[4]:  diffusion coefficient (collisionality).
  // f:      Input distribution function.
  // out:    Incremented output 
  double rdxFnu[3]; 
  rdxFnu[0] = 64.0*nu[0]/(dx[0]*dx[0]*dx[0]*dx[0]*dx[0]*dx[0]); 
  rdxFnu[1] = 64.0*nu[1]/(dx[1]*dx[1]*dx[1]*dx[1]*dx[1]*dx[1]); 
  rdxFnu[2] = 64.0*nu[3]/(dx[3]*dx[3]*dx[3]*dx[3]*dx[3]*dx[3]); 


  return (rdxFnu[0]+rdxFnu[1]+rdxFnu[2])*0.9;

} 
double ConstHyperDiffusion6Vol4xTensorP2_diffDirs12(const double *w, const double *dx, const double *nu, const double *f, double *out) 
{ 
  // w[4]:   Cell-center coordinates.
  // dx[4]:  Cell spacing.
  // nu[4]:  diffusion coefficient (collisionality).
  // f:      Input distribution function.
  // out:    Incremented output 
  double rdxFnu[2]; 
  rdxFnu[0] = 64.0*nu[0]/(dx[0]*dx[0]*dx[0]*dx[0]*dx[0]*dx[0]); 
  rdxFnu[1] = 64.0*nu[1]/(dx[1]*dx[1]*dx[1]*dx[1]*dx[1]*dx[1]); 


  return (rdxFnu[0]+rdxFnu[1])*0.9;

} 
double ConstHyperDiffusion6Vol4xTensorP2_diffDirs3(const double *w, const double *dx, const double *nu, const double *f, double *out) 
{ 
  // w[4]:   Cell-center coordinates.
  // dx[4]:  Cell spacing.
  // nu[4]:  diffusion coefficient (collisionality).
  // f:      Input distribution function.
  // out:    Incremented output 
  double rdxFnu[1]; 
  rdxFnu[0] = 64.0*nu[2]/(dx[2]*dx[2]*dx[2]*dx[2]*dx[2]*dx[2]); 


  return (rdxFnu[0])*0.9;

} 
double ConstHyperDiffusion6Vol4xTensorP2_diffDirs34(const double *w, const double *dx, const double *nu, const double *f, double *out) 
{ 
  // w[4]:   Cell-center coordinates.
  // dx[4]:  Cell spacing.
  // nu[4]:  diffusion coefficient (collisionality).
  // f:      Input distribution function.
  // out:    Incremented output 
  double rdxFnu[2]; 
  rdxFnu[0] = 64.0*nu[2]/(dx[2]*dx[2]*dx[2]*dx[2]*dx[2]*dx[2]); 
  rdxFnu[1] = 64.0*nu[3]/(dx[3]*dx[3]*dx[3]*dx[3]*dx[3]*dx[3]); 


  return (rdxFnu[0]+rdxFnu[1])*0.9;

} 
double ConstHyperDiffusion6Vol4xTensorP2_diffDirs134(const double *w, const double *dx, const double *nu, const double *f, double *out) 
{ 
  // w[4]:   Cell-center coordinates.
  // dx[4]:  Cell spacing.
  // nu[4]:  diffusion coefficient (collisionality).
  // f:      Input distribution function.
  // out:    Incremented output 
  double rdxFnu[3]; 
  rdxFnu[0] = 64.0*nu[0]/(dx[0]*dx[0]*dx[0]*dx[0]*dx[0]*dx[0]); 
  rdxFnu[1] = 64.0*nu[2]/(dx[2]*dx[2]*dx[2]*dx[2]*dx[2]*dx[2]); 
  rdxFnu[2] = 64.0*nu[3]/(dx[3]*dx[3]*dx[3]*dx[3]*dx[3]*dx[3]); 


  return (rdxFnu[0]+rdxFnu[1]+rdxFnu[2])*0.9;

} 
double ConstHyperDiffusion6Vol4xTensorP2_diffDirs13(const double *w, const double *dx, const double *nu, const double *f, double *out) 
{ 
  // w[4]:   Cell-center coordinates.
  // dx[4]:  Cell spacing.
  // nu[4]:  diffusion coefficient (collisionality).
  // f:      Input distribution function.
  // out:    Incremented output 
  double rdxFnu[2]; 
  rdxFnu[0] = 64.0*nu[0]/(dx[0]*dx[0]*dx[0]*dx[0]*dx[0]*dx[0]); 
  rdxFnu[1] = 64.0*nu[2]/(dx[2]*dx[2]*dx[2]*dx[2]*dx[2]*dx[2]); 


  return (rdxFnu[0]+rdxFnu[1])*0.9;

} 
double ConstHyperDiffusion6Vol4xTensorP2_diffDirs4(const double *w, const double *dx, const double *nu, const double *f, double *out) 
{ 
  // w[4]:   Cell-center coordinates.
  // dx[4]:  Cell spacing.
  // nu[4]:  diffusion coefficient (collisionality).
  // f:      Input distribution function.
  // out:    Incremented output 
  double rdxFnu[1]; 
  rdxFnu[0] = 64.0*nu[3]/(dx[3]*dx[3]*dx[3]*dx[3]*dx[3]*dx[3]); 


  return (rdxFnu[0])*0.9;

} 
double ConstHyperDiffusion6Vol4xTensorP2_diffDirs14(const double *w, const double *dx, const double *nu, const double *f, double *out) 
{ 
  // w[4]:   Cell-center coordinates.
  // dx[4]:  Cell spacing.
  // nu[4]:  diffusion coefficient (collisionality).
  // f:      Input distribution function.
  // out:    Incremented output 
  double rdxFnu[2]; 
  rdxFnu[0] = 64.0*nu[0]/(dx[0]*dx[0]*dx[0]*dx[0]*dx[0]*dx[0]); 
  rdxFnu[1] = 64.0*nu[3]/(dx[3]*dx[3]*dx[3]*dx[3]*dx[3]*dx[3]); 


  return (rdxFnu[0]+rdxFnu[1])*0.9;

} 
double ConstHyperDiffusion6Vol4xTensorP2_diffDirs1(const double *w, const double *dx, const double *nu, const double *f, double *out) 
{ 
  // w[4]:   Cell-center coordinates.
  // dx[4]:  Cell spacing.
  // nu[4]:  diffusion coefficient (collisionality).
  // f:      Input distribution function.
  // out:    Incremented output 
  double rdxFnu[1]; 
  rdxFnu[0] = 64.0*nu[0]/(dx[0]*dx[0]*dx[0]*dx[0]*dx[0]*dx[0]); 


  return (rdxFnu[0])*0.9;

} 
double ConstDiffusionVarCoeffVol4xTensorP2_diffDirs2(const double *w, const double *dx, const double *nu, const double *f, double *out) 
{ 
  // w[4]:   Cell-center coordinates.
  // dx[4]:  Cell spacing.
  // nu[324]:  diffusion coefficient.
  // f:      Input distribution function.
  // out:    Incremented output 
  double rdxF[1]; 
  rdxF[0] = 4.0/(dx[1]*dx[1]); 

  out[2] += 1.677050983124842*rdxF[0]*f[2]*nu[93]+0.75*f[0]*rdxF[0]*nu[83]; 
  out[5] += 1.677050983124842*rdxF[0]*f[5]*nu[93]+0.75*rdxF[0]*f[1]*nu[83]; 
  out[7] += 1.677050983124842*rdxF[0]*f[7]*nu[93]+0.75*rdxF[0]*f[3]*nu[83]; 
  out[9] += 1.677050983124842*rdxF[0]*f[9]*nu[93]+0.75*rdxF[0]*f[4]*nu[83]; 
  out[12] += 5.031152949374527*rdxF[0]*f[12]*nu[93]+3.75*f[0]*rdxF[0]*nu[93]+3.354101966249685*rdxF[0]*f[2]*nu[83]+1.677050983124842*f[0]*rdxF[0]*nu[81]; 
  out[15] += 1.677050983124842*rdxF[0]*f[15]*nu[93]+0.75*rdxF[0]*f[6]*nu[83]; 
  out[16] += 1.677050983124842*rdxF[0]*f[16]*nu[93]+0.75*rdxF[0]*f[8]*nu[83]; 
  out[18] += 1.677050983124842*rdxF[0]*f[18]*nu[93]+0.75*rdxF[0]*f[10]*nu[83]; 
  out[19] += 1.677050983124842*rdxF[0]*f[19]*nu[93]+0.75*rdxF[0]*f[11]*nu[83]; 
  out[20] += 5.031152949374527*rdxF[0]*f[20]*nu[93]+3.75*rdxF[0]*f[1]*nu[93]+3.354101966249684*rdxF[0]*f[5]*nu[83]+1.677050983124842*rdxF[0]*f[1]*nu[81]; 
  out[22] += 5.031152949374527*rdxF[0]*f[22]*nu[93]+3.75*rdxF[0]*f[3]*nu[93]+3.354101966249684*rdxF[0]*f[7]*nu[83]+1.677050983124842*rdxF[0]*f[3]*nu[81]; 
  out[24] += 1.677050983124842*rdxF[0]*f[24]*nu[93]+0.75*rdxF[0]*f[13]*nu[83]; 
  out[26] += 5.031152949374527*rdxF[0]*f[26]*nu[93]+3.75*rdxF[0]*f[4]*nu[93]+3.354101966249684*rdxF[0]*f[9]*nu[83]+1.677050983124842*rdxF[0]*f[4]*nu[81]; 
  out[29] += 1.677050983124842*rdxF[0]*f[29]*nu[93]+0.75*rdxF[0]*f[14]*nu[83]; 
  out[31] += 1.677050983124842*rdxF[0]*f[31]*nu[93]+0.75*rdxF[0]*f[17]*nu[83]; 
  out[32] += 1.677050983124842*rdxF[0]*f[32]*nu[93]+0.75*rdxF[0]*f[21]*nu[83]; 
  out[33] += 5.031152949374527*rdxF[0]*f[33]*nu[93]+3.75*rdxF[0]*f[6]*nu[93]+3.354101966249685*rdxF[0]*f[15]*nu[83]+1.677050983124842*rdxF[0]*f[6]*nu[81]; 
  out[34] += 1.677050983124842*rdxF[0]*f[34]*nu[93]+0.75*rdxF[0]*f[23]*nu[83]; 
  out[35] += 1.677050983124842*rdxF[0]*f[35]*nu[93]+0.75*rdxF[0]*f[25]*nu[83]; 
  out[36] += 5.031152949374527*rdxF[0]*f[36]*nu[93]+3.75*rdxF[0]*f[8]*nu[93]+3.354101966249685*rdxF[0]*f[16]*nu[83]+1.677050983124842*rdxF[0]*f[8]*nu[81]; 
  out[38] += 5.031152949374527*rdxF[0]*f[38]*nu[93]+3.75*rdxF[0]*f[10]*nu[93]+3.354101966249685*rdxF[0]*f[18]*nu[83]+1.677050983124842*rdxF[0]*f[10]*nu[81]; 
  out[40] += 1.677050983124842*rdxF[0]*f[40]*nu[93]+0.75*rdxF[0]*f[27]*nu[83]; 
  out[41] += 1.677050983124842*rdxF[0]*f[41]*nu[93]+0.75*rdxF[0]*f[28]*nu[83]; 
  out[43] += 1.677050983124842*rdxF[0]*f[43]*nu[93]+0.75*rdxF[0]*f[30]*nu[83]; 
  out[44] += 5.031152949374527*rdxF[0]*f[44]*nu[93]+3.75*rdxF[0]*f[11]*nu[93]+3.354101966249684*rdxF[0]*f[19]*nu[83]+1.677050983124842*rdxF[0]*f[11]*nu[81]; 
  out[46] += 5.031152949374527*rdxF[0]*f[46]*nu[93]+3.75*rdxF[0]*f[13]*nu[93]+3.354101966249684*rdxF[0]*f[24]*nu[83]+1.677050983124842*rdxF[0]*f[13]*nu[81]; 
  out[48] += 5.031152949374527*rdxF[0]*f[48]*nu[93]+3.75*rdxF[0]*f[14]*nu[93]+3.354101966249684*rdxF[0]*f[29]*nu[83]+1.677050983124842*rdxF[0]*f[14]*nu[81]; 
  out[50] += 1.677050983124842*rdxF[0]*f[50]*nu[93]+0.75*rdxF[0]*f[37]*nu[83]; 
  out[51] += 5.031152949374527*rdxF[0]*f[51]*nu[93]+3.75*rdxF[0]*f[17]*nu[93]+3.354101966249684*rdxF[0]*f[31]*nu[83]+1.677050983124842*rdxF[0]*f[17]*nu[81]; 
  out[52] += 1.677050983124842*rdxF[0]*f[52]*nu[93]+0.75*rdxF[0]*f[39]*nu[83]; 
  out[53] += 1.677050983124842*rdxF[0]*f[53]*nu[93]+0.75*rdxF[0]*f[42]*nu[83]; 
  out[54] += 5.031152949374527*rdxF[0]*f[54]*nu[93]+3.75*rdxF[0]*f[21]*nu[93]+3.354101966249685*rdxF[0]*f[32]*nu[83]+1.677050983124842*rdxF[0]*f[21]*nu[81]; 
  out[55] += 1.677050983124842*rdxF[0]*f[55]*nu[93]+0.75*rdxF[0]*f[45]*nu[83]; 
  out[56] += 5.031152949374527*rdxF[0]*f[56]*nu[93]+3.75*rdxF[0]*f[23]*nu[93]+3.354101966249685*rdxF[0]*f[34]*nu[83]+1.677050983124842*rdxF[0]*f[23]*nu[81]; 
  out[57] += 5.031152949374527*rdxF[0]*f[57]*nu[93]+3.75*rdxF[0]*f[25]*nu[93]+3.354101966249685*rdxF[0]*f[35]*nu[83]+1.677050983124842*rdxF[0]*f[25]*nu[81]; 
  out[59] += 5.031152949374527*rdxF[0]*f[59]*nu[93]+3.75*rdxF[0]*f[27]*nu[93]+3.354101966249685*rdxF[0]*f[40]*nu[83]+1.677050983124842*rdxF[0]*f[27]*nu[81]; 
  out[60] += 1.677050983124842*rdxF[0]*f[60]*nu[93]+0.75*rdxF[0]*f[47]*nu[83]; 
  out[61] += 5.031152949374527*rdxF[0]*f[61]*nu[93]+3.75*rdxF[0]*f[28]*nu[93]+3.354101966249685*rdxF[0]*f[41]*nu[83]+1.677050983124842*rdxF[0]*f[28]*nu[81]; 
  out[63] += 5.031152949374527*rdxF[0]*f[63]*nu[93]+3.75*rdxF[0]*f[30]*nu[93]+3.354101966249685*rdxF[0]*f[43]*nu[83]+1.677050983124842*rdxF[0]*f[30]*nu[81]; 
  out[65] += 1.677050983124842*rdxF[0]*f[65]*nu[93]+0.75*rdxF[0]*f[49]*nu[83]; 
  out[66] += 5.031152949374527*rdxF[0]*f[66]*nu[93]+3.75*rdxF[0]*f[37]*nu[93]+3.354101966249684*rdxF[0]*f[50]*nu[83]+1.677050983124842*rdxF[0]*f[37]*nu[81]; 
  out[67] += 1.677050983124842*rdxF[0]*f[67]*nu[93]+0.75*rdxF[0]*f[58]*nu[83]; 
  out[68] += 5.031152949374527*rdxF[0]*f[68]*nu[93]+3.75*rdxF[0]*f[39]*nu[93]+3.354101966249684*rdxF[0]*f[52]*nu[83]+1.677050983124842*rdxF[0]*f[39]*nu[81]; 
  out[69] += 1.677050983124842*rdxF[0]*f[69]*nu[93]+0.75*rdxF[0]*f[62]*nu[83]; 
  out[70] += 5.031152949374527*rdxF[0]*f[70]*nu[93]+3.75*rdxF[0]*f[42]*nu[93]+3.354101966249684*rdxF[0]*f[53]*nu[83]+1.677050983124842*rdxF[0]*f[42]*nu[81]; 
  out[71] += 1.677050983124842*rdxF[0]*f[71]*nu[93]+0.75*rdxF[0]*f[64]*nu[83]; 
  out[72] += 5.031152949374527*rdxF[0]*f[72]*nu[93]+3.75*rdxF[0]*f[45]*nu[93]+3.354101966249685*rdxF[0]*f[55]*nu[83]+1.677050983124842*rdxF[0]*f[45]*nu[81]; 
  out[73] += 5.031152949374527*rdxF[0]*f[73]*nu[93]+3.75*rdxF[0]*f[47]*nu[93]+3.354101966249685*rdxF[0]*f[60]*nu[83]+1.677050983124842*rdxF[0]*f[47]*nu[81]; 
  out[75] += 5.031152949374527*rdxF[0]*f[75]*nu[93]+3.75*rdxF[0]*f[49]*nu[93]+3.354101966249685*rdxF[0]*f[65]*nu[83]+1.677050983124842*rdxF[0]*f[49]*nu[81]; 
  out[76] += 5.031152949374527*rdxF[0]*f[76]*nu[93]+3.75*rdxF[0]*f[58]*nu[93]+3.354101966249684*rdxF[0]*f[67]*nu[83]+1.677050983124842*rdxF[0]*f[58]*nu[81]; 
  out[77] += 5.031152949374527*rdxF[0]*f[77]*nu[93]+3.75*rdxF[0]*f[62]*nu[93]+3.354101966249684*rdxF[0]*f[69]*nu[83]+1.677050983124842*rdxF[0]*f[62]*nu[81]; 
  out[78] += 1.677050983124842*rdxF[0]*f[78]*nu[93]+0.75*rdxF[0]*f[74]*nu[83]; 
  out[79] += 5.031152949374527*rdxF[0]*f[79]*nu[93]+3.75*rdxF[0]*f[64]*nu[93]+3.354101966249684*rdxF[0]*f[71]*nu[83]+1.677050983124842*rdxF[0]*f[64]*nu[81]; 
  out[80] += 5.031152949374527*rdxF[0]*f[80]*nu[93]+3.75*rdxF[0]*f[74]*nu[93]+3.354101966249684*rdxF[0]*f[78]*nu[83]+1.677050983124842*rdxF[0]*f[74]*nu[81]; 

  return (rdxF[0]*(0.390625*nu[161]-0.3493856214843422*nu[156]-0.3493856214843422*nu[155]-0.3493856214843422*nu[154]-0.3493856214843422*nu[153]+0.3125*nu[130]+0.3125*nu[129]+0.3125*nu[128]+0.3125*nu[127]+0.3125*nu[126]+0.3125*nu[125]-0.2795084971874737*nu[95]-0.2795084971874737*nu[94]-0.2795084971874737*nu[93]-0.2795084971874737*nu[92]+0.25*nu[81]))*0.9;

} 
double ConstDiffusionVarCoeffVol4xTensorP2_diffDirs23(const double *w, const double *dx, const double *nu, const double *f, double *out) 
{ 
  // w[4]:   Cell-center coordinates.
  // dx[4]:  Cell spacing.
  // nu[324]:  diffusion coefficient.
  // f:      Input distribution function.
  // out:    Incremented output 
  double rdxF[2]; 
  rdxF[0] = 4.0/(dx[1]*dx[1]); 
  rdxF[1] = 4.0/(dx[2]*dx[2]); 

  out[2] += 1.677050983124842*rdxF[0]*f[2]*nu[93]+0.75*f[0]*rdxF[0]*nu[83]; 
  out[3] += 1.677050983124842*rdxF[1]*f[3]*nu[175]+0.75*f[0]*rdxF[1]*nu[165]; 
  out[5] += 1.677050983124842*rdxF[0]*f[5]*nu[93]+0.75*rdxF[0]*f[1]*nu[83]; 
  out[6] += 1.677050983124842*rdxF[1]*f[6]*nu[175]+0.75*f[1]*rdxF[1]*nu[165]; 
  out[7] += 1.677050983124842*rdxF[1]*f[7]*nu[175]+0.75*rdxF[1]*f[2]*nu[165]+1.677050983124842*rdxF[0]*f[7]*nu[93]+0.75*rdxF[0]*f[3]*nu[83]; 
  out[9] += 1.677050983124842*rdxF[0]*f[9]*nu[93]+0.75*rdxF[0]*f[4]*nu[83]; 
  out[10] += 1.677050983124842*rdxF[1]*f[10]*nu[175]+0.75*rdxF[1]*f[4]*nu[165]; 
  out[12] += 5.031152949374527*rdxF[0]*f[12]*nu[93]+3.75*f[0]*rdxF[0]*nu[93]+3.354101966249685*rdxF[0]*f[2]*nu[83]+1.677050983124842*f[0]*rdxF[0]*nu[81]; 
  out[13] += 5.031152949374527*rdxF[1]*f[13]*nu[175]+3.75*f[0]*rdxF[1]*nu[175]+3.354101966249685*rdxF[1]*f[3]*nu[165]+1.677050983124842*f[0]*rdxF[1]*nu[162]; 
  out[15] += 1.677050983124842*rdxF[1]*f[15]*nu[175]+0.75*rdxF[1]*f[5]*nu[165]+1.677050983124842*rdxF[0]*f[15]*nu[93]+0.75*rdxF[0]*f[6]*nu[83]; 
  out[16] += 1.677050983124842*rdxF[0]*f[16]*nu[93]+0.75*rdxF[0]*f[8]*nu[83]; 
  out[17] += 1.677050983124842*rdxF[1]*f[17]*nu[175]+0.75*rdxF[1]*f[8]*nu[165]; 
  out[18] += 1.677050983124842*rdxF[1]*f[18]*nu[175]+0.75*rdxF[1]*f[9]*nu[165]+1.677050983124842*rdxF[0]*f[18]*nu[93]+0.75*rdxF[0]*f[10]*nu[83]; 
  out[19] += 1.677050983124842*rdxF[0]*f[19]*nu[93]+0.75*rdxF[0]*f[11]*nu[83]; 
  out[20] += 5.031152949374527*rdxF[0]*f[20]*nu[93]+3.75*rdxF[0]*f[1]*nu[93]+3.354101966249684*rdxF[0]*f[5]*nu[83]+1.677050983124842*rdxF[0]*f[1]*nu[81]; 
  out[21] += 1.677050983124842*rdxF[1]*f[21]*nu[175]+0.75*rdxF[1]*f[11]*nu[165]; 
  out[22] += 1.677050983124842*rdxF[1]*f[22]*nu[175]+0.75*rdxF[1]*f[12]*nu[165]+5.031152949374527*rdxF[0]*f[22]*nu[93]+3.75*rdxF[0]*f[3]*nu[93]+3.354101966249684*rdxF[0]*f[7]*nu[83]+1.677050983124842*rdxF[0]*f[3]*nu[81]; 
  out[23] += 5.031152949374527*rdxF[1]*f[23]*nu[175]+3.75*f[1]*rdxF[1]*nu[175]+3.354101966249684*rdxF[1]*f[6]*nu[165]+1.677050983124842*f[1]*rdxF[1]*nu[162]; 
  out[24] += 5.031152949374527*rdxF[1]*f[24]*nu[175]+3.75*rdxF[1]*f[2]*nu[175]+3.354101966249684*rdxF[1]*f[7]*nu[165]+1.677050983124842*rdxF[1]*f[2]*nu[162]+1.677050983124842*rdxF[0]*f[24]*nu[93]+0.75*rdxF[0]*f[13]*nu[83]; 
  out[26] += 5.031152949374527*rdxF[0]*f[26]*nu[93]+3.75*rdxF[0]*f[4]*nu[93]+3.354101966249684*rdxF[0]*f[9]*nu[83]+1.677050983124842*rdxF[0]*f[4]*nu[81]; 
  out[27] += 5.031152949374527*rdxF[1]*f[27]*nu[175]+3.75*rdxF[1]*f[4]*nu[175]+3.354101966249684*rdxF[1]*f[10]*nu[165]+1.677050983124842*rdxF[1]*f[4]*nu[162]; 
  out[29] += 1.677050983124842*rdxF[0]*f[29]*nu[93]+0.75*rdxF[0]*f[14]*nu[83]; 
  out[30] += 1.677050983124842*rdxF[1]*f[30]*nu[175]+0.75*rdxF[1]*f[14]*nu[165]; 
  out[31] += 1.677050983124842*rdxF[1]*f[31]*nu[175]+0.75*rdxF[1]*f[16]*nu[165]+1.677050983124842*rdxF[0]*f[31]*nu[93]+0.75*rdxF[0]*f[17]*nu[83]; 
  out[32] += 1.677050983124842*rdxF[1]*f[32]*nu[175]+0.75*rdxF[1]*f[19]*nu[165]+1.677050983124842*rdxF[0]*f[32]*nu[93]+0.75*rdxF[0]*f[21]*nu[83]; 
  out[33] += 1.677050983124842*rdxF[1]*f[33]*nu[175]+0.75*rdxF[1]*f[20]*nu[165]+5.031152949374527*rdxF[0]*f[33]*nu[93]+3.75*rdxF[0]*f[6]*nu[93]+3.354101966249685*rdxF[0]*f[15]*nu[83]+1.677050983124842*rdxF[0]*f[6]*nu[81]; 
  out[34] += 5.031152949374527*rdxF[1]*f[34]*nu[175]+3.75*rdxF[1]*f[5]*nu[175]+3.354101966249685*rdxF[1]*f[15]*nu[165]+1.677050983124842*rdxF[1]*f[5]*nu[162]+1.677050983124842*rdxF[0]*f[34]*nu[93]+0.75*rdxF[0]*f[23]*nu[83]; 
  out[35] += 1.677050983124842*rdxF[0]*f[35]*nu[93]+0.75*rdxF[0]*f[25]*nu[83]; 
  out[36] += 5.031152949374527*rdxF[0]*f[36]*nu[93]+3.75*rdxF[0]*f[8]*nu[93]+3.354101966249685*rdxF[0]*f[16]*nu[83]+1.677050983124842*rdxF[0]*f[8]*nu[81]; 
  out[37] += 1.677050983124842*rdxF[1]*f[37]*nu[175]+0.75*rdxF[1]*f[25]*nu[165]; 
  out[38] += 1.677050983124842*rdxF[1]*f[38]*nu[175]+0.75*rdxF[1]*f[26]*nu[165]+5.031152949374527*rdxF[0]*f[38]*nu[93]+3.75*rdxF[0]*f[10]*nu[93]+3.354101966249685*rdxF[0]*f[18]*nu[83]+1.677050983124842*rdxF[0]*f[10]*nu[81]; 
  out[39] += 5.031152949374527*rdxF[1]*f[39]*nu[175]+3.75*rdxF[1]*f[8]*nu[175]+3.354101966249685*rdxF[1]*f[17]*nu[165]+1.677050983124842*rdxF[1]*f[8]*nu[162]; 
  out[40] += 5.031152949374527*rdxF[1]*f[40]*nu[175]+3.75*rdxF[1]*f[9]*nu[175]+3.354101966249685*rdxF[1]*f[18]*nu[165]+1.677050983124842*rdxF[1]*f[9]*nu[162]+1.677050983124842*rdxF[0]*f[40]*nu[93]+0.75*rdxF[0]*f[27]*nu[83]; 
  out[41] += 1.677050983124842*rdxF[0]*f[41]*nu[93]+0.75*rdxF[0]*f[28]*nu[83]; 
  out[42] += 1.677050983124842*rdxF[1]*f[42]*nu[175]+0.75*rdxF[1]*f[28]*nu[165]; 
  out[43] += 1.677050983124842*rdxF[1]*f[43]*nu[175]+0.75*rdxF[1]*f[29]*nu[165]+1.677050983124842*rdxF[0]*f[43]*nu[93]+0.75*rdxF[0]*f[30]*nu[83]; 
  out[44] += 5.031152949374527*rdxF[0]*f[44]*nu[93]+3.75*rdxF[0]*f[11]*nu[93]+3.354101966249684*rdxF[0]*f[19]*nu[83]+1.677050983124842*rdxF[0]*f[11]*nu[81]; 
  out[45] += 5.031152949374527*rdxF[1]*f[45]*nu[175]+3.75*rdxF[1]*f[11]*nu[175]+3.354101966249684*rdxF[1]*f[21]*nu[165]+1.677050983124842*rdxF[1]*f[11]*nu[162]; 
  out[46] += 5.031152949374527*rdxF[1]*f[46]*nu[175]+3.75*rdxF[1]*f[12]*nu[175]+3.354101966249684*rdxF[1]*f[22]*nu[165]+1.677050983124842*rdxF[1]*f[12]*nu[162]+5.031152949374527*rdxF[0]*f[46]*nu[93]+3.75*rdxF[0]*f[13]*nu[93]+3.354101966249684*rdxF[0]*f[24]*nu[83]+1.677050983124842*rdxF[0]*f[13]*nu[81]; 
  out[48] += 5.031152949374527*rdxF[0]*f[48]*nu[93]+3.75*rdxF[0]*f[14]*nu[93]+3.354101966249684*rdxF[0]*f[29]*nu[83]+1.677050983124842*rdxF[0]*f[14]*nu[81]; 
  out[49] += 5.031152949374527*rdxF[1]*f[49]*nu[175]+3.75*rdxF[1]*f[14]*nu[175]+3.354101966249684*rdxF[1]*f[30]*nu[165]+1.677050983124842*rdxF[1]*f[14]*nu[162]; 
  out[50] += 1.677050983124842*rdxF[1]*f[50]*nu[175]+0.75*rdxF[1]*f[35]*nu[165]+1.677050983124842*rdxF[0]*f[50]*nu[93]+0.75*rdxF[0]*f[37]*nu[83]; 
  out[51] += 1.677050983124842*rdxF[1]*f[51]*nu[175]+0.75*rdxF[1]*f[36]*nu[165]+5.031152949374527*rdxF[0]*f[51]*nu[93]+3.75*rdxF[0]*f[17]*nu[93]+3.354101966249684*rdxF[0]*f[31]*nu[83]+1.677050983124842*rdxF[0]*f[17]*nu[81]; 
  out[52] += 5.031152949374527*rdxF[1]*f[52]*nu[175]+3.75*rdxF[1]*f[16]*nu[175]+3.354101966249684*rdxF[1]*f[31]*nu[165]+1.677050983124842*rdxF[1]*f[16]*nu[162]+1.677050983124842*rdxF[0]*f[52]*nu[93]+0.75*rdxF[0]*f[39]*nu[83]; 
  out[53] += 1.677050983124842*rdxF[1]*f[53]*nu[175]+0.75*rdxF[1]*f[41]*nu[165]+1.677050983124842*rdxF[0]*f[53]*nu[93]+0.75*rdxF[0]*f[42]*nu[83]; 
  out[54] += 1.677050983124842*rdxF[1]*f[54]*nu[175]+0.75*rdxF[1]*f[44]*nu[165]+5.031152949374527*rdxF[0]*f[54]*nu[93]+3.75*rdxF[0]*f[21]*nu[93]+3.354101966249685*rdxF[0]*f[32]*nu[83]+1.677050983124842*rdxF[0]*f[21]*nu[81]; 
  out[55] += 5.031152949374527*rdxF[1]*f[55]*nu[175]+3.75*rdxF[1]*f[19]*nu[175]+3.354101966249685*rdxF[1]*f[32]*nu[165]+1.677050983124842*rdxF[1]*f[19]*nu[162]+1.677050983124842*rdxF[0]*f[55]*nu[93]+0.75*rdxF[0]*f[45]*nu[83]; 
  out[56] += 5.031152949374527*rdxF[1]*f[56]*nu[175]+3.75*rdxF[1]*f[20]*nu[175]+3.354101966249685*rdxF[1]*f[33]*nu[165]+1.677050983124842*rdxF[1]*f[20]*nu[162]+5.031152949374527*rdxF[0]*f[56]*nu[93]+3.75*rdxF[0]*f[23]*nu[93]+3.354101966249685*rdxF[0]*f[34]*nu[83]+1.677050983124842*rdxF[0]*f[23]*nu[81]; 
  out[57] += 5.031152949374527*rdxF[0]*f[57]*nu[93]+3.75*rdxF[0]*f[25]*nu[93]+3.354101966249685*rdxF[0]*f[35]*nu[83]+1.677050983124842*rdxF[0]*f[25]*nu[81]; 
  out[58] += 5.031152949374527*rdxF[1]*f[58]*nu[175]+3.75*rdxF[1]*f[25]*nu[175]+3.354101966249685*rdxF[1]*f[37]*nu[165]+1.677050983124842*rdxF[1]*f[25]*nu[162]; 
  out[59] += 5.031152949374527*rdxF[1]*f[59]*nu[175]+3.75*rdxF[1]*f[26]*nu[175]+3.354101966249685*rdxF[1]*f[38]*nu[165]+1.677050983124842*rdxF[1]*f[26]*nu[162]+5.031152949374527*rdxF[0]*f[59]*nu[93]+3.75*rdxF[0]*f[27]*nu[93]+3.354101966249685*rdxF[0]*f[40]*nu[83]+1.677050983124842*rdxF[0]*f[27]*nu[81]; 
  out[60] += 1.677050983124842*rdxF[0]*f[60]*nu[93]+0.75*rdxF[0]*f[47]*nu[83]; 
  out[61] += 5.031152949374527*rdxF[0]*f[61]*nu[93]+3.75*rdxF[0]*f[28]*nu[93]+3.354101966249685*rdxF[0]*f[41]*nu[83]+1.677050983124842*rdxF[0]*f[28]*nu[81]; 
  out[62] += 1.677050983124842*rdxF[1]*f[62]*nu[175]+0.75*rdxF[1]*f[47]*nu[165]; 
  out[63] += 1.677050983124842*rdxF[1]*f[63]*nu[175]+0.75*rdxF[1]*f[48]*nu[165]+5.031152949374527*rdxF[0]*f[63]*nu[93]+3.75*rdxF[0]*f[30]*nu[93]+3.354101966249685*rdxF[0]*f[43]*nu[83]+1.677050983124842*rdxF[0]*f[30]*nu[81]; 
  out[64] += 5.031152949374527*rdxF[1]*f[64]*nu[175]+3.75*rdxF[1]*f[28]*nu[175]+3.354101966249685*rdxF[1]*f[42]*nu[165]+1.677050983124842*rdxF[1]*f[28]*nu[162]; 
  out[65] += 5.031152949374527*rdxF[1]*f[65]*nu[175]+3.75*rdxF[1]*f[29]*nu[175]+3.354101966249685*rdxF[1]*f[43]*nu[165]+1.677050983124842*rdxF[1]*f[29]*nu[162]+1.677050983124842*rdxF[0]*f[65]*nu[93]+0.75*rdxF[0]*f[49]*nu[83]; 
  out[66] += 1.677050983124842*rdxF[1]*f[66]*nu[175]+0.75*rdxF[1]*f[57]*nu[165]+5.031152949374527*rdxF[0]*f[66]*nu[93]+3.75*rdxF[0]*f[37]*nu[93]+3.354101966249684*rdxF[0]*f[50]*nu[83]+1.677050983124842*rdxF[0]*f[37]*nu[81]; 
  out[67] += 5.031152949374527*rdxF[1]*f[67]*nu[175]+3.75*rdxF[1]*f[35]*nu[175]+3.354101966249684*rdxF[1]*f[50]*nu[165]+1.677050983124842*rdxF[1]*f[35]*nu[162]+1.677050983124842*rdxF[0]*f[67]*nu[93]+0.75*rdxF[0]*f[58]*nu[83]; 
  out[68] += 5.031152949374527*rdxF[1]*f[68]*nu[175]+3.75*rdxF[1]*f[36]*nu[175]+3.354101966249684*rdxF[1]*f[51]*nu[165]+1.677050983124842*rdxF[1]*f[36]*nu[162]+5.031152949374527*rdxF[0]*f[68]*nu[93]+3.75*rdxF[0]*f[39]*nu[93]+3.354101966249684*rdxF[0]*f[52]*nu[83]+1.677050983124842*rdxF[0]*f[39]*nu[81]; 
  out[69] += 1.677050983124842*rdxF[1]*f[69]*nu[175]+0.75*rdxF[1]*f[60]*nu[165]+1.677050983124842*rdxF[0]*f[69]*nu[93]+0.75*rdxF[0]*f[62]*nu[83]; 
  out[70] += 1.677050983124842*rdxF[1]*f[70]*nu[175]+0.75*rdxF[1]*f[61]*nu[165]+5.031152949374527*rdxF[0]*f[70]*nu[93]+3.75*rdxF[0]*f[42]*nu[93]+3.354101966249684*rdxF[0]*f[53]*nu[83]+1.677050983124842*rdxF[0]*f[42]*nu[81]; 
  out[71] += 5.031152949374527*rdxF[1]*f[71]*nu[175]+3.75*rdxF[1]*f[41]*nu[175]+3.354101966249684*rdxF[1]*f[53]*nu[165]+1.677050983124842*rdxF[1]*f[41]*nu[162]+1.677050983124842*rdxF[0]*f[71]*nu[93]+0.75*rdxF[0]*f[64]*nu[83]; 
  out[72] += 5.031152949374527*rdxF[1]*f[72]*nu[175]+3.75*rdxF[1]*f[44]*nu[175]+3.354101966249685*rdxF[1]*f[54]*nu[165]+1.677050983124842*rdxF[1]*f[44]*nu[162]+5.031152949374527*rdxF[0]*f[72]*nu[93]+3.75*rdxF[0]*f[45]*nu[93]+3.354101966249685*rdxF[0]*f[55]*nu[83]+1.677050983124842*rdxF[0]*f[45]*nu[81]; 
  out[73] += 5.031152949374527*rdxF[0]*f[73]*nu[93]+3.75*rdxF[0]*f[47]*nu[93]+3.354101966249685*rdxF[0]*f[60]*nu[83]+1.677050983124842*rdxF[0]*f[47]*nu[81]; 
  out[74] += 5.031152949374527*rdxF[1]*f[74]*nu[175]+3.75*rdxF[1]*f[47]*nu[175]+3.354101966249685*rdxF[1]*f[62]*nu[165]+1.677050983124842*rdxF[1]*f[47]*nu[162]; 
  out[75] += 5.031152949374527*rdxF[1]*f[75]*nu[175]+3.75*rdxF[1]*f[48]*nu[175]+3.354101966249685*rdxF[1]*f[63]*nu[165]+1.677050983124842*rdxF[1]*f[48]*nu[162]+5.031152949374527*rdxF[0]*f[75]*nu[93]+3.75*rdxF[0]*f[49]*nu[93]+3.354101966249685*rdxF[0]*f[65]*nu[83]+1.677050983124842*rdxF[0]*f[49]*nu[81]; 
  out[76] += 5.031152949374527*rdxF[1]*f[76]*nu[175]+3.75*rdxF[1]*f[57]*nu[175]+3.354101966249684*rdxF[1]*f[66]*nu[165]+1.677050983124842*rdxF[1]*f[57]*nu[162]+5.031152949374527*rdxF[0]*f[76]*nu[93]+3.75*rdxF[0]*f[58]*nu[93]+3.354101966249684*rdxF[0]*f[67]*nu[83]+1.677050983124842*rdxF[0]*f[58]*nu[81]; 
  out[77] += 1.677050983124842*rdxF[1]*f[77]*nu[175]+0.75*rdxF[1]*f[73]*nu[165]+5.031152949374527*rdxF[0]*f[77]*nu[93]+3.75*rdxF[0]*f[62]*nu[93]+3.354101966249684*rdxF[0]*f[69]*nu[83]+1.677050983124842*rdxF[0]*f[62]*nu[81]; 
  out[78] += 5.031152949374527*rdxF[1]*f[78]*nu[175]+3.75*rdxF[1]*f[60]*nu[175]+3.354101966249684*rdxF[1]*f[69]*nu[165]+1.677050983124842*rdxF[1]*f[60]*nu[162]+1.677050983124842*rdxF[0]*f[78]*nu[93]+0.75*rdxF[0]*f[74]*nu[83]; 
  out[79] += 5.031152949374527*rdxF[1]*f[79]*nu[175]+3.75*rdxF[1]*f[61]*nu[175]+3.354101966249684*rdxF[1]*f[70]*nu[165]+1.677050983124842*rdxF[1]*f[61]*nu[162]+5.031152949374527*rdxF[0]*f[79]*nu[93]+3.75*rdxF[0]*f[64]*nu[93]+3.354101966249684*rdxF[0]*f[71]*nu[83]+1.677050983124842*rdxF[0]*f[64]*nu[81]; 
  out[80] += 5.031152949374527*rdxF[1]*f[80]*nu[175]+3.75*rdxF[1]*f[73]*nu[175]+3.354101966249684*rdxF[1]*f[77]*nu[165]+1.677050983124842*rdxF[1]*f[73]*nu[162]+5.031152949374527*rdxF[0]*f[80]*nu[93]+3.75*rdxF[0]*f[74]*nu[93]+3.354101966249684*rdxF[0]*f[78]*nu[83]+1.677050983124842*rdxF[0]*f[74]*nu[81]; 

  return (rdxF[0]*(0.390625*nu[161]-0.3493856214843422*nu[156]-0.3493856214843422*nu[155]-0.3493856214843422*nu[154]-0.3493856214843422*nu[153]+0.3125*nu[130]+0.3125*nu[129]+0.3125*nu[128]+0.3125*nu[127]+0.3125*nu[126]+0.3125*nu[125]-0.2795084971874737*nu[95]-0.2795084971874737*nu[94]-0.2795084971874737*nu[93]-0.2795084971874737*nu[92]+0.25*nu[81])+rdxF[1]*(0.390625*nu[242]-0.3493856214843422*nu[237]-0.3493856214843422*nu[236]-0.3493856214843422*nu[235]-0.3493856214843422*nu[234]+0.3125*nu[211]+0.3125*nu[210]+0.3125*nu[209]+0.3125*nu[208]+0.3125*nu[207]+0.3125*nu[206]-0.2795084971874737*nu[176]-0.2795084971874737*nu[175]-0.2795084971874737*nu[174]-0.2795084971874737*nu[173]+0.25*nu[162]))*0.9;

} 
double ConstDiffusionVarCoeffVol4xTensorP2_diffDirs234(const double *w, const double *dx, const double *nu, const double *f, double *out) 
{ 
  // w[4]:   Cell-center coordinates.
  // dx[4]:  Cell spacing.
  // nu[324]:  diffusion coefficient.
  // f:      Input distribution function.
  // out:    Incremented output 
  double rdxF[3]; 
  rdxF[0] = 4.0/(dx[1]*dx[1]); 
  rdxF[1] = 4.0/(dx[2]*dx[2]); 
  rdxF[2] = 4.0/(dx[3]*dx[3]); 

  out[2] += 1.677050983124842*rdxF[0]*f[2]*nu[93]+0.75*f[0]*rdxF[0]*nu[83]; 
  out[3] += 1.677050983124842*rdxF[1]*f[3]*nu[175]+0.75*f[0]*rdxF[1]*nu[165]; 
  out[4] += 1.677050983124842*rdxF[2]*f[4]*nu[257]+0.75*f[0]*rdxF[2]*nu[247]; 
  out[5] += 1.677050983124842*rdxF[0]*f[5]*nu[93]+0.75*rdxF[0]*f[1]*nu[83]; 
  out[6] += 1.677050983124842*rdxF[1]*f[6]*nu[175]+0.75*f[1]*rdxF[1]*nu[165]; 
  out[7] += 1.677050983124842*rdxF[1]*f[7]*nu[175]+0.75*rdxF[1]*f[2]*nu[165]+1.677050983124842*rdxF[0]*f[7]*nu[93]+0.75*rdxF[0]*f[3]*nu[83]; 
  out[8] += 1.677050983124842*rdxF[2]*f[8]*nu[257]+0.75*f[1]*rdxF[2]*nu[247]; 
  out[9] += 1.677050983124842*rdxF[2]*f[9]*nu[257]+0.75*f[2]*rdxF[2]*nu[247]+1.677050983124842*rdxF[0]*f[9]*nu[93]+0.75*rdxF[0]*f[4]*nu[83]; 
  out[10] += 1.677050983124842*rdxF[2]*f[10]*nu[257]+0.75*rdxF[2]*f[3]*nu[247]+1.677050983124842*rdxF[1]*f[10]*nu[175]+0.75*rdxF[1]*f[4]*nu[165]; 
  out[12] += 5.031152949374527*rdxF[0]*f[12]*nu[93]+3.75*f[0]*rdxF[0]*nu[93]+3.354101966249685*rdxF[0]*f[2]*nu[83]+1.677050983124842*f[0]*rdxF[0]*nu[81]; 
  out[13] += 5.031152949374527*rdxF[1]*f[13]*nu[175]+3.75*f[0]*rdxF[1]*nu[175]+3.354101966249685*rdxF[1]*f[3]*nu[165]+1.677050983124842*f[0]*rdxF[1]*nu[162]; 
  out[14] += 5.031152949374527*rdxF[2]*f[14]*nu[257]+3.75*f[0]*rdxF[2]*nu[257]+3.354101966249685*rdxF[2]*f[4]*nu[247]+1.677050983124842*f[0]*rdxF[2]*nu[243]; 
  out[15] += 1.677050983124842*rdxF[1]*f[15]*nu[175]+0.75*rdxF[1]*f[5]*nu[165]+1.677050983124842*rdxF[0]*f[15]*nu[93]+0.75*rdxF[0]*f[6]*nu[83]; 
  out[16] += 1.677050983124842*rdxF[2]*f[16]*nu[257]+0.75*rdxF[2]*f[5]*nu[247]+1.677050983124842*rdxF[0]*f[16]*nu[93]+0.75*rdxF[0]*f[8]*nu[83]; 
  out[17] += 1.677050983124842*rdxF[2]*f[17]*nu[257]+0.75*rdxF[2]*f[6]*nu[247]+1.677050983124842*rdxF[1]*f[17]*nu[175]+0.75*rdxF[1]*f[8]*nu[165]; 
  out[18] += 1.677050983124842*rdxF[2]*f[18]*nu[257]+0.75*rdxF[2]*f[7]*nu[247]+1.677050983124842*rdxF[1]*f[18]*nu[175]+0.75*rdxF[1]*f[9]*nu[165]+1.677050983124842*rdxF[0]*f[18]*nu[93]+0.75*rdxF[0]*f[10]*nu[83]; 
  out[19] += 1.677050983124842*rdxF[0]*f[19]*nu[93]+0.75*rdxF[0]*f[11]*nu[83]; 
  out[20] += 5.031152949374527*rdxF[0]*f[20]*nu[93]+3.75*rdxF[0]*f[1]*nu[93]+3.354101966249684*rdxF[0]*f[5]*nu[83]+1.677050983124842*rdxF[0]*f[1]*nu[81]; 
  out[21] += 1.677050983124842*rdxF[1]*f[21]*nu[175]+0.75*rdxF[1]*f[11]*nu[165]; 
  out[22] += 1.677050983124842*rdxF[1]*f[22]*nu[175]+0.75*rdxF[1]*f[12]*nu[165]+5.031152949374527*rdxF[0]*f[22]*nu[93]+3.75*rdxF[0]*f[3]*nu[93]+3.354101966249684*rdxF[0]*f[7]*nu[83]+1.677050983124842*rdxF[0]*f[3]*nu[81]; 
  out[23] += 5.031152949374527*rdxF[1]*f[23]*nu[175]+3.75*f[1]*rdxF[1]*nu[175]+3.354101966249684*rdxF[1]*f[6]*nu[165]+1.677050983124842*f[1]*rdxF[1]*nu[162]; 
  out[24] += 5.031152949374527*rdxF[1]*f[24]*nu[175]+3.75*rdxF[1]*f[2]*nu[175]+3.354101966249684*rdxF[1]*f[7]*nu[165]+1.677050983124842*rdxF[1]*f[2]*nu[162]+1.677050983124842*rdxF[0]*f[24]*nu[93]+0.75*rdxF[0]*f[13]*nu[83]; 
  out[25] += 1.677050983124842*rdxF[2]*f[25]*nu[257]+0.75*rdxF[2]*f[11]*nu[247]; 
  out[26] += 1.677050983124842*rdxF[2]*f[26]*nu[257]+0.75*rdxF[2]*f[12]*nu[247]+5.031152949374527*rdxF[0]*f[26]*nu[93]+3.75*rdxF[0]*f[4]*nu[93]+3.354101966249684*rdxF[0]*f[9]*nu[83]+1.677050983124842*rdxF[0]*f[4]*nu[81]; 
  out[27] += 1.677050983124842*rdxF[2]*f[27]*nu[257]+0.75*rdxF[2]*f[13]*nu[247]+5.031152949374527*rdxF[1]*f[27]*nu[175]+3.75*rdxF[1]*f[4]*nu[175]+3.354101966249684*rdxF[1]*f[10]*nu[165]+1.677050983124842*rdxF[1]*f[4]*nu[162]; 
  out[28] += 5.031152949374527*rdxF[2]*f[28]*nu[257]+3.75*f[1]*rdxF[2]*nu[257]+3.354101966249684*rdxF[2]*f[8]*nu[247]+1.677050983124842*f[1]*rdxF[2]*nu[243]; 
  out[29] += 5.031152949374527*rdxF[2]*f[29]*nu[257]+3.75*f[2]*rdxF[2]*nu[257]+3.354101966249684*rdxF[2]*f[9]*nu[247]+1.677050983124842*f[2]*rdxF[2]*nu[243]+1.677050983124842*rdxF[0]*f[29]*nu[93]+0.75*rdxF[0]*f[14]*nu[83]; 
  out[30] += 5.031152949374527*rdxF[2]*f[30]*nu[257]+3.75*rdxF[2]*f[3]*nu[257]+3.354101966249684*rdxF[2]*f[10]*nu[247]+1.677050983124842*rdxF[2]*f[3]*nu[243]+1.677050983124842*rdxF[1]*f[30]*nu[175]+0.75*rdxF[1]*f[14]*nu[165]; 
  out[31] += 1.677050983124842*rdxF[2]*f[31]*nu[257]+0.75*rdxF[2]*f[15]*nu[247]+1.677050983124842*rdxF[1]*f[31]*nu[175]+0.75*rdxF[1]*f[16]*nu[165]+1.677050983124842*rdxF[0]*f[31]*nu[93]+0.75*rdxF[0]*f[17]*nu[83]; 
  out[32] += 1.677050983124842*rdxF[1]*f[32]*nu[175]+0.75*rdxF[1]*f[19]*nu[165]+1.677050983124842*rdxF[0]*f[32]*nu[93]+0.75*rdxF[0]*f[21]*nu[83]; 
  out[33] += 1.677050983124842*rdxF[1]*f[33]*nu[175]+0.75*rdxF[1]*f[20]*nu[165]+5.031152949374527*rdxF[0]*f[33]*nu[93]+3.75*rdxF[0]*f[6]*nu[93]+3.354101966249685*rdxF[0]*f[15]*nu[83]+1.677050983124842*rdxF[0]*f[6]*nu[81]; 
  out[34] += 5.031152949374527*rdxF[1]*f[34]*nu[175]+3.75*rdxF[1]*f[5]*nu[175]+3.354101966249685*rdxF[1]*f[15]*nu[165]+1.677050983124842*rdxF[1]*f[5]*nu[162]+1.677050983124842*rdxF[0]*f[34]*nu[93]+0.75*rdxF[0]*f[23]*nu[83]; 
  out[35] += 1.677050983124842*rdxF[2]*f[35]*nu[257]+0.75*rdxF[2]*f[19]*nu[247]+1.677050983124842*rdxF[0]*f[35]*nu[93]+0.75*rdxF[0]*f[25]*nu[83]; 
  out[36] += 1.677050983124842*rdxF[2]*f[36]*nu[257]+0.75*rdxF[2]*f[20]*nu[247]+5.031152949374527*rdxF[0]*f[36]*nu[93]+3.75*rdxF[0]*f[8]*nu[93]+3.354101966249685*rdxF[0]*f[16]*nu[83]+1.677050983124842*rdxF[0]*f[8]*nu[81]; 
  out[37] += 1.677050983124842*rdxF[2]*f[37]*nu[257]+0.75*rdxF[2]*f[21]*nu[247]+1.677050983124842*rdxF[1]*f[37]*nu[175]+0.75*rdxF[1]*f[25]*nu[165]; 
  out[38] += 1.677050983124842*rdxF[2]*f[38]*nu[257]+0.75*rdxF[2]*f[22]*nu[247]+1.677050983124842*rdxF[1]*f[38]*nu[175]+0.75*rdxF[1]*f[26]*nu[165]+5.031152949374527*rdxF[0]*f[38]*nu[93]+3.75*rdxF[0]*f[10]*nu[93]+3.354101966249685*rdxF[0]*f[18]*nu[83]+1.677050983124842*rdxF[0]*f[10]*nu[81]; 
  out[39] += 1.677050983124842*rdxF[2]*f[39]*nu[257]+0.75*rdxF[2]*f[23]*nu[247]+5.031152949374527*rdxF[1]*f[39]*nu[175]+3.75*rdxF[1]*f[8]*nu[175]+3.354101966249685*rdxF[1]*f[17]*nu[165]+1.677050983124842*rdxF[1]*f[8]*nu[162]; 
  out[40] += 1.677050983124842*rdxF[2]*f[40]*nu[257]+0.75*rdxF[2]*f[24]*nu[247]+5.031152949374527*rdxF[1]*f[40]*nu[175]+3.75*rdxF[1]*f[9]*nu[175]+3.354101966249685*rdxF[1]*f[18]*nu[165]+1.677050983124842*rdxF[1]*f[9]*nu[162]+1.677050983124842*rdxF[0]*f[40]*nu[93]+0.75*rdxF[0]*f[27]*nu[83]; 
  out[41] += 5.031152949374527*rdxF[2]*f[41]*nu[257]+3.75*rdxF[2]*f[5]*nu[257]+3.354101966249685*rdxF[2]*f[16]*nu[247]+1.677050983124842*rdxF[2]*f[5]*nu[243]+1.677050983124842*rdxF[0]*f[41]*nu[93]+0.75*rdxF[0]*f[28]*nu[83]; 
  out[42] += 5.031152949374527*rdxF[2]*f[42]*nu[257]+3.75*rdxF[2]*f[6]*nu[257]+3.354101966249685*rdxF[2]*f[17]*nu[247]+1.677050983124842*rdxF[2]*f[6]*nu[243]+1.677050983124842*rdxF[1]*f[42]*nu[175]+0.75*rdxF[1]*f[28]*nu[165]; 
  out[43] += 5.031152949374527*rdxF[2]*f[43]*nu[257]+3.75*rdxF[2]*f[7]*nu[257]+3.354101966249685*rdxF[2]*f[18]*nu[247]+1.677050983124842*rdxF[2]*f[7]*nu[243]+1.677050983124842*rdxF[1]*f[43]*nu[175]+0.75*rdxF[1]*f[29]*nu[165]+1.677050983124842*rdxF[0]*f[43]*nu[93]+0.75*rdxF[0]*f[30]*nu[83]; 
  out[44] += 5.031152949374527*rdxF[0]*f[44]*nu[93]+3.75*rdxF[0]*f[11]*nu[93]+3.354101966249684*rdxF[0]*f[19]*nu[83]+1.677050983124842*rdxF[0]*f[11]*nu[81]; 
  out[45] += 5.031152949374527*rdxF[1]*f[45]*nu[175]+3.75*rdxF[1]*f[11]*nu[175]+3.354101966249684*rdxF[1]*f[21]*nu[165]+1.677050983124842*rdxF[1]*f[11]*nu[162]; 
  out[46] += 5.031152949374527*rdxF[1]*f[46]*nu[175]+3.75*rdxF[1]*f[12]*nu[175]+3.354101966249684*rdxF[1]*f[22]*nu[165]+1.677050983124842*rdxF[1]*f[12]*nu[162]+5.031152949374527*rdxF[0]*f[46]*nu[93]+3.75*rdxF[0]*f[13]*nu[93]+3.354101966249684*rdxF[0]*f[24]*nu[83]+1.677050983124842*rdxF[0]*f[13]*nu[81]; 
  out[47] += 5.031152949374527*rdxF[2]*f[47]*nu[257]+3.75*rdxF[2]*f[11]*nu[257]+3.354101966249684*rdxF[2]*f[25]*nu[247]+1.677050983124842*rdxF[2]*f[11]*nu[243]; 
  out[48] += 5.031152949374527*rdxF[2]*f[48]*nu[257]+3.75*rdxF[2]*f[12]*nu[257]+3.354101966249684*rdxF[2]*f[26]*nu[247]+1.677050983124842*rdxF[2]*f[12]*nu[243]+5.031152949374527*rdxF[0]*f[48]*nu[93]+3.75*rdxF[0]*f[14]*nu[93]+3.354101966249684*rdxF[0]*f[29]*nu[83]+1.677050983124842*rdxF[0]*f[14]*nu[81]; 
  out[49] += 5.031152949374527*rdxF[2]*f[49]*nu[257]+3.75*rdxF[2]*f[13]*nu[257]+3.354101966249684*rdxF[2]*f[27]*nu[247]+1.677050983124842*rdxF[2]*f[13]*nu[243]+5.031152949374527*rdxF[1]*f[49]*nu[175]+3.75*rdxF[1]*f[14]*nu[175]+3.354101966249684*rdxF[1]*f[30]*nu[165]+1.677050983124842*rdxF[1]*f[14]*nu[162]; 
  out[50] += 1.677050983124842*rdxF[2]*f[50]*nu[257]+0.75*rdxF[2]*f[32]*nu[247]+1.677050983124842*rdxF[1]*f[50]*nu[175]+0.75*rdxF[1]*f[35]*nu[165]+1.677050983124842*rdxF[0]*f[50]*nu[93]+0.75*rdxF[0]*f[37]*nu[83]; 
  out[51] += 1.677050983124842*rdxF[2]*f[51]*nu[257]+0.75*rdxF[2]*f[33]*nu[247]+1.677050983124842*rdxF[1]*f[51]*nu[175]+0.75*rdxF[1]*f[36]*nu[165]+5.031152949374527*rdxF[0]*f[51]*nu[93]+3.75*rdxF[0]*f[17]*nu[93]+3.354101966249684*rdxF[0]*f[31]*nu[83]+1.677050983124842*rdxF[0]*f[17]*nu[81]; 
  out[52] += 1.677050983124842*rdxF[2]*f[52]*nu[257]+0.75*rdxF[2]*f[34]*nu[247]+5.031152949374527*rdxF[1]*f[52]*nu[175]+3.75*rdxF[1]*f[16]*nu[175]+3.354101966249684*rdxF[1]*f[31]*nu[165]+1.677050983124842*rdxF[1]*f[16]*nu[162]+1.677050983124842*rdxF[0]*f[52]*nu[93]+0.75*rdxF[0]*f[39]*nu[83]; 
  out[53] += 5.031152949374527*rdxF[2]*f[53]*nu[257]+3.75*rdxF[2]*f[15]*nu[257]+3.354101966249684*rdxF[2]*f[31]*nu[247]+1.677050983124842*rdxF[2]*f[15]*nu[243]+1.677050983124842*rdxF[1]*f[53]*nu[175]+0.75*rdxF[1]*f[41]*nu[165]+1.677050983124842*rdxF[0]*f[53]*nu[93]+0.75*rdxF[0]*f[42]*nu[83]; 
  out[54] += 1.677050983124842*rdxF[1]*f[54]*nu[175]+0.75*rdxF[1]*f[44]*nu[165]+5.031152949374527*rdxF[0]*f[54]*nu[93]+3.75*rdxF[0]*f[21]*nu[93]+3.354101966249685*rdxF[0]*f[32]*nu[83]+1.677050983124842*rdxF[0]*f[21]*nu[81]; 
  out[55] += 5.031152949374527*rdxF[1]*f[55]*nu[175]+3.75*rdxF[1]*f[19]*nu[175]+3.354101966249685*rdxF[1]*f[32]*nu[165]+1.677050983124842*rdxF[1]*f[19]*nu[162]+1.677050983124842*rdxF[0]*f[55]*nu[93]+0.75*rdxF[0]*f[45]*nu[83]; 
  out[56] += 5.031152949374527*rdxF[1]*f[56]*nu[175]+3.75*rdxF[1]*f[20]*nu[175]+3.354101966249685*rdxF[1]*f[33]*nu[165]+1.677050983124842*rdxF[1]*f[20]*nu[162]+5.031152949374527*rdxF[0]*f[56]*nu[93]+3.75*rdxF[0]*f[23]*nu[93]+3.354101966249685*rdxF[0]*f[34]*nu[83]+1.677050983124842*rdxF[0]*f[23]*nu[81]; 
  out[57] += 1.677050983124842*rdxF[2]*f[57]*nu[257]+0.75*rdxF[2]*f[44]*nu[247]+5.031152949374527*rdxF[0]*f[57]*nu[93]+3.75*rdxF[0]*f[25]*nu[93]+3.354101966249685*rdxF[0]*f[35]*nu[83]+1.677050983124842*rdxF[0]*f[25]*nu[81]; 
  out[58] += 1.677050983124842*rdxF[2]*f[58]*nu[257]+0.75*rdxF[2]*f[45]*nu[247]+5.031152949374527*rdxF[1]*f[58]*nu[175]+3.75*rdxF[1]*f[25]*nu[175]+3.354101966249685*rdxF[1]*f[37]*nu[165]+1.677050983124842*rdxF[1]*f[25]*nu[162]; 
  out[59] += 1.677050983124842*rdxF[2]*f[59]*nu[257]+0.75*rdxF[2]*f[46]*nu[247]+5.031152949374527*rdxF[1]*f[59]*nu[175]+3.75*rdxF[1]*f[26]*nu[175]+3.354101966249685*rdxF[1]*f[38]*nu[165]+1.677050983124842*rdxF[1]*f[26]*nu[162]+5.031152949374527*rdxF[0]*f[59]*nu[93]+3.75*rdxF[0]*f[27]*nu[93]+3.354101966249685*rdxF[0]*f[40]*nu[83]+1.677050983124842*rdxF[0]*f[27]*nu[81]; 
  out[60] += 5.031152949374527*rdxF[2]*f[60]*nu[257]+3.75*rdxF[2]*f[19]*nu[257]+3.354101966249685*rdxF[2]*f[35]*nu[247]+1.677050983124842*rdxF[2]*f[19]*nu[243]+1.677050983124842*rdxF[0]*f[60]*nu[93]+0.75*rdxF[0]*f[47]*nu[83]; 
  out[61] += 5.031152949374527*rdxF[2]*f[61]*nu[257]+3.75*rdxF[2]*f[20]*nu[257]+3.354101966249685*rdxF[2]*f[36]*nu[247]+1.677050983124842*rdxF[2]*f[20]*nu[243]+5.031152949374527*rdxF[0]*f[61]*nu[93]+3.75*rdxF[0]*f[28]*nu[93]+3.354101966249685*rdxF[0]*f[41]*nu[83]+1.677050983124842*rdxF[0]*f[28]*nu[81]; 
  out[62] += 5.031152949374527*rdxF[2]*f[62]*nu[257]+3.75*rdxF[2]*f[21]*nu[257]+3.354101966249685*rdxF[2]*f[37]*nu[247]+1.677050983124842*rdxF[2]*f[21]*nu[243]+1.677050983124842*rdxF[1]*f[62]*nu[175]+0.75*rdxF[1]*f[47]*nu[165]; 
  out[63] += 5.031152949374527*rdxF[2]*f[63]*nu[257]+3.75*rdxF[2]*f[22]*nu[257]+3.354101966249685*rdxF[2]*f[38]*nu[247]+1.677050983124842*rdxF[2]*f[22]*nu[243]+1.677050983124842*rdxF[1]*f[63]*nu[175]+0.75*rdxF[1]*f[48]*nu[165]+5.031152949374527*rdxF[0]*f[63]*nu[93]+3.75*rdxF[0]*f[30]*nu[93]+3.354101966249685*rdxF[0]*f[43]*nu[83]+1.677050983124842*rdxF[0]*f[30]*nu[81]; 
  out[64] += 5.031152949374527*rdxF[2]*f[64]*nu[257]+3.75*rdxF[2]*f[23]*nu[257]+3.354101966249685*rdxF[2]*f[39]*nu[247]+1.677050983124842*rdxF[2]*f[23]*nu[243]+5.031152949374527*rdxF[1]*f[64]*nu[175]+3.75*rdxF[1]*f[28]*nu[175]+3.354101966249685*rdxF[1]*f[42]*nu[165]+1.677050983124842*rdxF[1]*f[28]*nu[162]; 
  out[65] += 5.031152949374527*rdxF[2]*f[65]*nu[257]+3.75*rdxF[2]*f[24]*nu[257]+3.354101966249685*rdxF[2]*f[40]*nu[247]+1.677050983124842*rdxF[2]*f[24]*nu[243]+5.031152949374527*rdxF[1]*f[65]*nu[175]+3.75*rdxF[1]*f[29]*nu[175]+3.354101966249685*rdxF[1]*f[43]*nu[165]+1.677050983124842*rdxF[1]*f[29]*nu[162]+1.677050983124842*rdxF[0]*f[65]*nu[93]+0.75*rdxF[0]*f[49]*nu[83]; 
  out[66] += 1.677050983124842*rdxF[2]*f[66]*nu[257]+0.75*rdxF[2]*f[54]*nu[247]+1.677050983124842*rdxF[1]*f[66]*nu[175]+0.75*rdxF[1]*f[57]*nu[165]+5.031152949374527*rdxF[0]*f[66]*nu[93]+3.75*rdxF[0]*f[37]*nu[93]+3.354101966249684*rdxF[0]*f[50]*nu[83]+1.677050983124842*rdxF[0]*f[37]*nu[81]; 
  out[67] += 1.677050983124842*rdxF[2]*f[67]*nu[257]+0.75*rdxF[2]*f[55]*nu[247]+5.031152949374527*rdxF[1]*f[67]*nu[175]+3.75*rdxF[1]*f[35]*nu[175]+3.354101966249684*rdxF[1]*f[50]*nu[165]+1.677050983124842*rdxF[1]*f[35]*nu[162]+1.677050983124842*rdxF[0]*f[67]*nu[93]+0.75*rdxF[0]*f[58]*nu[83]; 
  out[68] += 1.677050983124842*rdxF[2]*f[68]*nu[257]+0.75*rdxF[2]*f[56]*nu[247]+5.031152949374527*rdxF[1]*f[68]*nu[175]+3.75*rdxF[1]*f[36]*nu[175]+3.354101966249684*rdxF[1]*f[51]*nu[165]+1.677050983124842*rdxF[1]*f[36]*nu[162]+5.031152949374527*rdxF[0]*f[68]*nu[93]+3.75*rdxF[0]*f[39]*nu[93]+3.354101966249684*rdxF[0]*f[52]*nu[83]+1.677050983124842*rdxF[0]*f[39]*nu[81]; 
  out[69] += 5.031152949374527*rdxF[2]*f[69]*nu[257]+3.75*rdxF[2]*f[32]*nu[257]+3.354101966249684*rdxF[2]*f[50]*nu[247]+1.677050983124842*rdxF[2]*f[32]*nu[243]+1.677050983124842*rdxF[1]*f[69]*nu[175]+0.75*rdxF[1]*f[60]*nu[165]+1.677050983124842*rdxF[0]*f[69]*nu[93]+0.75*rdxF[0]*f[62]*nu[83]; 
  out[70] += 5.031152949374527*rdxF[2]*f[70]*nu[257]+3.75*rdxF[2]*f[33]*nu[257]+3.354101966249684*rdxF[2]*f[51]*nu[247]+1.677050983124842*rdxF[2]*f[33]*nu[243]+1.677050983124842*rdxF[1]*f[70]*nu[175]+0.75*rdxF[1]*f[61]*nu[165]+5.031152949374527*rdxF[0]*f[70]*nu[93]+3.75*rdxF[0]*f[42]*nu[93]+3.354101966249684*rdxF[0]*f[53]*nu[83]+1.677050983124842*rdxF[0]*f[42]*nu[81]; 
  out[71] += 5.031152949374527*rdxF[2]*f[71]*nu[257]+3.75*rdxF[2]*f[34]*nu[257]+3.354101966249684*rdxF[2]*f[52]*nu[247]+1.677050983124842*rdxF[2]*f[34]*nu[243]+5.031152949374527*rdxF[1]*f[71]*nu[175]+3.75*rdxF[1]*f[41]*nu[175]+3.354101966249684*rdxF[1]*f[53]*nu[165]+1.677050983124842*rdxF[1]*f[41]*nu[162]+1.677050983124842*rdxF[0]*f[71]*nu[93]+0.75*rdxF[0]*f[64]*nu[83]; 
  out[72] += 5.031152949374527*rdxF[1]*f[72]*nu[175]+3.75*rdxF[1]*f[44]*nu[175]+3.354101966249685*rdxF[1]*f[54]*nu[165]+1.677050983124842*rdxF[1]*f[44]*nu[162]+5.031152949374527*rdxF[0]*f[72]*nu[93]+3.75*rdxF[0]*f[45]*nu[93]+3.354101966249685*rdxF[0]*f[55]*nu[83]+1.677050983124842*rdxF[0]*f[45]*nu[81]; 
  out[73] += 5.031152949374527*rdxF[2]*f[73]*nu[257]+3.75*rdxF[2]*f[44]*nu[257]+3.354101966249685*rdxF[2]*f[57]*nu[247]+1.677050983124842*rdxF[2]*f[44]*nu[243]+5.031152949374527*rdxF[0]*f[73]*nu[93]+3.75*rdxF[0]*f[47]*nu[93]+3.354101966249685*rdxF[0]*f[60]*nu[83]+1.677050983124842*rdxF[0]*f[47]*nu[81]; 
  out[74] += 5.031152949374527*rdxF[2]*f[74]*nu[257]+3.75*rdxF[2]*f[45]*nu[257]+3.354101966249685*rdxF[2]*f[58]*nu[247]+1.677050983124842*rdxF[2]*f[45]*nu[243]+5.031152949374527*rdxF[1]*f[74]*nu[175]+3.75*rdxF[1]*f[47]*nu[175]+3.354101966249685*rdxF[1]*f[62]*nu[165]+1.677050983124842*rdxF[1]*f[47]*nu[162]; 
  out[75] += 5.031152949374527*rdxF[2]*f[75]*nu[257]+3.75*rdxF[2]*f[46]*nu[257]+3.354101966249685*rdxF[2]*f[59]*nu[247]+1.677050983124842*rdxF[2]*f[46]*nu[243]+5.031152949374527*rdxF[1]*f[75]*nu[175]+3.75*rdxF[1]*f[48]*nu[175]+3.354101966249685*rdxF[1]*f[63]*nu[165]+1.677050983124842*rdxF[1]*f[48]*nu[162]+5.031152949374527*rdxF[0]*f[75]*nu[93]+3.75*rdxF[0]*f[49]*nu[93]+3.354101966249685*rdxF[0]*f[65]*nu[83]+1.677050983124842*rdxF[0]*f[49]*nu[81]; 
  out[76] += 1.677050983124842*rdxF[2]*f[76]*nu[257]+0.75*rdxF[2]*f[72]*nu[247]+5.031152949374527*rdxF[1]*f[76]*nu[175]+3.75*rdxF[1]*f[57]*nu[175]+3.354101966249684*rdxF[1]*f[66]*nu[165]+1.677050983124842*rdxF[1]*f[57]*nu[162]+5.031152949374527*rdxF[0]*f[76]*nu[93]+3.75*rdxF[0]*f[58]*nu[93]+3.354101966249684*rdxF[0]*f[67]*nu[83]+1.677050983124842*rdxF[0]*f[58]*nu[81]; 
  out[77] += 5.031152949374527*rdxF[2]*f[77]*nu[257]+3.75*rdxF[2]*f[54]*nu[257]+3.354101966249684*rdxF[2]*f[66]*nu[247]+1.677050983124842*rdxF[2]*f[54]*nu[243]+1.677050983124842*rdxF[1]*f[77]*nu[175]+0.75*rdxF[1]*f[73]*nu[165]+5.031152949374527*rdxF[0]*f[77]*nu[93]+3.75*rdxF[0]*f[62]*nu[93]+3.354101966249684*rdxF[0]*f[69]*nu[83]+1.677050983124842*rdxF[0]*f[62]*nu[81]; 
  out[78] += 5.031152949374527*rdxF[2]*f[78]*nu[257]+3.75*rdxF[2]*f[55]*nu[257]+3.354101966249684*rdxF[2]*f[67]*nu[247]+1.677050983124842*rdxF[2]*f[55]*nu[243]+5.031152949374527*rdxF[1]*f[78]*nu[175]+3.75*rdxF[1]*f[60]*nu[175]+3.354101966249684*rdxF[1]*f[69]*nu[165]+1.677050983124842*rdxF[1]*f[60]*nu[162]+1.677050983124842*rdxF[0]*f[78]*nu[93]+0.75*rdxF[0]*f[74]*nu[83]; 
  out[79] += 5.031152949374527*rdxF[2]*f[79]*nu[257]+3.75*rdxF[2]*f[56]*nu[257]+3.354101966249684*rdxF[2]*f[68]*nu[247]+1.677050983124842*rdxF[2]*f[56]*nu[243]+5.031152949374527*rdxF[1]*f[79]*nu[175]+3.75*rdxF[1]*f[61]*nu[175]+3.354101966249684*rdxF[1]*f[70]*nu[165]+1.677050983124842*rdxF[1]*f[61]*nu[162]+5.031152949374527*rdxF[0]*f[79]*nu[93]+3.75*rdxF[0]*f[64]*nu[93]+3.354101966249684*rdxF[0]*f[71]*nu[83]+1.677050983124842*rdxF[0]*f[64]*nu[81]; 
  out[80] += 5.031152949374527*rdxF[2]*f[80]*nu[257]+3.75*rdxF[2]*f[72]*nu[257]+3.354101966249684*rdxF[2]*f[76]*nu[247]+1.677050983124842*rdxF[2]*f[72]*nu[243]+5.031152949374527*rdxF[1]*f[80]*nu[175]+3.75*rdxF[1]*f[73]*nu[175]+3.354101966249684*rdxF[1]*f[77]*nu[165]+1.677050983124842*rdxF[1]*f[73]*nu[162]+5.031152949374527*rdxF[0]*f[80]*nu[93]+3.75*rdxF[0]*f[74]*nu[93]+3.354101966249684*rdxF[0]*f[78]*nu[83]+1.677050983124842*rdxF[0]*f[74]*nu[81]; 

  return (rdxF[0]*(0.390625*nu[161]-0.3493856214843422*nu[156]-0.3493856214843422*nu[155]-0.3493856214843422*nu[154]-0.3493856214843422*nu[153]+0.3125*nu[130]+0.3125*nu[129]+0.3125*nu[128]+0.3125*nu[127]+0.3125*nu[126]+0.3125*nu[125]-0.2795084971874737*nu[95]-0.2795084971874737*nu[94]-0.2795084971874737*nu[93]-0.2795084971874737*nu[92]+0.25*nu[81])+rdxF[1]*(0.390625*nu[242]-0.3493856214843422*nu[237]-0.3493856214843422*nu[236]-0.3493856214843422*nu[235]-0.3493856214843422*nu[234]+0.3125*nu[211]+0.3125*nu[210]+0.3125*nu[209]+0.3125*nu[208]+0.3125*nu[207]+0.3125*nu[206]-0.2795084971874737*nu[176]-0.2795084971874737*nu[175]-0.2795084971874737*nu[174]-0.2795084971874737*nu[173]+0.25*nu[162])+rdxF[2]*(0.390625*nu[323]-0.3493856214843422*nu[318]-0.3493856214843422*nu[317]-0.3493856214843422*nu[316]-0.3493856214843422*nu[315]+0.3125*nu[292]+0.3125*nu[291]+0.3125*nu[290]+0.3125*nu[289]+0.3125*nu[288]+0.3125*nu[287]-0.2795084971874737*nu[257]-0.2795084971874737*nu[256]-0.2795084971874737*nu[255]-0.2795084971874737*nu[254]+0.25*nu[243]))*0.9;

} 
double ConstDiffusionVarCoeffVol4xTensorP2_diffDirs1234(const double *w, const double *dx, const double *nu, const double *f, double *out) 
{ 
  // w[4]:   Cell-center coordinates.
  // dx[4]:  Cell spacing.
  // nu[324]:  diffusion coefficient.
  // f:      Input distribution function.
  // out:    Incremented output 
  double rdxF[4]; 
  rdxF[0] = 4.0/(dx[0]*dx[0]); 
  rdxF[1] = 4.0/(dx[1]*dx[1]); 
  rdxF[2] = 4.0/(dx[2]*dx[2]); 
  rdxF[3] = 4.0/(dx[3]*dx[3]); 

  out[1] += 1.677050983124842*rdxF[0]*f[1]*nu[11]+0.75*f[0]*rdxF[0]*nu[1]; 
  out[2] += 1.677050983124842*rdxF[1]*f[2]*nu[93]+0.75*f[0]*rdxF[1]*nu[83]; 
  out[3] += 1.677050983124842*rdxF[2]*f[3]*nu[175]+0.75*f[0]*rdxF[2]*nu[165]; 
  out[4] += 1.677050983124842*rdxF[3]*f[4]*nu[257]+0.75*f[0]*rdxF[3]*nu[247]; 
  out[5] += 1.677050983124842*rdxF[1]*f[5]*nu[93]+0.75*f[1]*rdxF[1]*nu[83]+1.677050983124842*rdxF[0]*f[5]*nu[11]+0.75*rdxF[0]*nu[1]*f[2]; 
  out[6] += 1.677050983124842*rdxF[2]*f[6]*nu[175]+0.75*f[1]*rdxF[2]*nu[165]+1.677050983124842*rdxF[0]*f[6]*nu[11]+0.75*rdxF[0]*nu[1]*f[3]; 
  out[7] += 1.677050983124842*rdxF[2]*f[7]*nu[175]+0.75*f[2]*rdxF[2]*nu[165]+1.677050983124842*rdxF[1]*f[7]*nu[93]+0.75*rdxF[1]*f[3]*nu[83]; 
  out[8] += 1.677050983124842*rdxF[3]*f[8]*nu[257]+0.75*f[1]*rdxF[3]*nu[247]+1.677050983124842*rdxF[0]*f[8]*nu[11]+0.75*rdxF[0]*nu[1]*f[4]; 
  out[9] += 1.677050983124842*rdxF[3]*f[9]*nu[257]+0.75*f[2]*rdxF[3]*nu[247]+1.677050983124842*rdxF[1]*f[9]*nu[93]+0.75*rdxF[1]*f[4]*nu[83]; 
  out[10] += 1.677050983124842*rdxF[3]*f[10]*nu[257]+0.75*f[3]*rdxF[3]*nu[247]+1.677050983124842*rdxF[2]*f[10]*nu[175]+0.75*rdxF[2]*f[4]*nu[165]; 
  out[11] += 5.031152949374527*rdxF[0]*f[11]*nu[11]+3.75*f[0]*rdxF[0]*nu[11]+3.354101966249685*rdxF[0]*f[1]*nu[1]+1.677050983124842*f[0]*nu[0]*rdxF[0]; 
  out[12] += 5.031152949374527*rdxF[1]*f[12]*nu[93]+3.75*f[0]*rdxF[1]*nu[93]+3.354101966249685*rdxF[1]*f[2]*nu[83]+1.677050983124842*f[0]*rdxF[1]*nu[81]; 
  out[13] += 5.031152949374527*rdxF[2]*f[13]*nu[175]+3.75*f[0]*rdxF[2]*nu[175]+3.354101966249685*rdxF[2]*f[3]*nu[165]+1.677050983124842*f[0]*rdxF[2]*nu[162]; 
  out[14] += 5.031152949374527*rdxF[3]*f[14]*nu[257]+3.75*f[0]*rdxF[3]*nu[257]+3.354101966249685*rdxF[3]*f[4]*nu[247]+1.677050983124842*f[0]*rdxF[3]*nu[243]; 
  out[15] += 1.677050983124842*rdxF[2]*f[15]*nu[175]+0.75*rdxF[2]*f[5]*nu[165]+1.677050983124842*rdxF[1]*f[15]*nu[93]+0.75*rdxF[1]*f[6]*nu[83]+1.677050983124842*rdxF[0]*nu[11]*f[15]+0.75*rdxF[0]*nu[1]*f[7]; 
  out[16] += 1.677050983124842*rdxF[3]*f[16]*nu[257]+0.75*rdxF[3]*f[5]*nu[247]+1.677050983124842*rdxF[1]*f[16]*nu[93]+0.75*rdxF[1]*f[8]*nu[83]+1.677050983124842*rdxF[0]*nu[11]*f[16]+0.75*rdxF[0]*nu[1]*f[9]; 
  out[17] += 1.677050983124842*rdxF[3]*f[17]*nu[257]+0.75*rdxF[3]*f[6]*nu[247]+1.677050983124842*rdxF[2]*f[17]*nu[175]+0.75*rdxF[2]*f[8]*nu[165]+1.677050983124842*rdxF[0]*nu[11]*f[17]+0.75*rdxF[0]*nu[1]*f[10]; 
  out[18] += 1.677050983124842*rdxF[3]*f[18]*nu[257]+0.75*rdxF[3]*f[7]*nu[247]+1.677050983124842*rdxF[2]*f[18]*nu[175]+0.75*rdxF[2]*f[9]*nu[165]+1.677050983124842*rdxF[1]*f[18]*nu[93]+0.75*rdxF[1]*f[10]*nu[83]; 
  out[19] += 1.677050983124842*rdxF[1]*f[19]*nu[93]+0.75*rdxF[1]*f[11]*nu[83]+5.031152949374527*rdxF[0]*nu[11]*f[19]+3.75*rdxF[0]*f[2]*nu[11]+3.354101966249684*rdxF[0]*nu[1]*f[5]+1.677050983124842*nu[0]*rdxF[0]*f[2]; 
  out[20] += 5.031152949374527*rdxF[1]*f[20]*nu[93]+3.75*f[1]*rdxF[1]*nu[93]+3.354101966249684*rdxF[1]*f[5]*nu[83]+1.677050983124842*f[1]*rdxF[1]*nu[81]+1.677050983124842*rdxF[0]*nu[11]*f[20]+0.75*rdxF[0]*nu[1]*f[12]; 
  out[21] += 1.677050983124842*rdxF[2]*f[21]*nu[175]+0.75*rdxF[2]*f[11]*nu[165]+5.031152949374527*rdxF[0]*nu[11]*f[21]+3.75*rdxF[0]*f[3]*nu[11]+3.354101966249684*rdxF[0]*nu[1]*f[6]+1.677050983124842*nu[0]*rdxF[0]*f[3]; 
  out[22] += 1.677050983124842*rdxF[2]*f[22]*nu[175]+0.75*rdxF[2]*f[12]*nu[165]+5.031152949374527*rdxF[1]*f[22]*nu[93]+3.75*rdxF[1]*f[3]*nu[93]+3.354101966249684*rdxF[1]*f[7]*nu[83]+1.677050983124842*rdxF[1]*f[3]*nu[81]; 
  out[23] += 5.031152949374527*rdxF[2]*f[23]*nu[175]+3.75*f[1]*rdxF[2]*nu[175]+3.354101966249684*rdxF[2]*f[6]*nu[165]+1.677050983124842*f[1]*rdxF[2]*nu[162]+1.677050983124842*rdxF[0]*nu[11]*f[23]+0.75*rdxF[0]*nu[1]*f[13]; 
  out[24] += 5.031152949374527*rdxF[2]*f[24]*nu[175]+3.75*f[2]*rdxF[2]*nu[175]+3.354101966249684*rdxF[2]*f[7]*nu[165]+1.677050983124842*f[2]*rdxF[2]*nu[162]+1.677050983124842*rdxF[1]*f[24]*nu[93]+0.75*rdxF[1]*f[13]*nu[83]; 
  out[25] += 1.677050983124842*rdxF[3]*f[25]*nu[257]+0.75*rdxF[3]*f[11]*nu[247]+5.031152949374527*rdxF[0]*nu[11]*f[25]+3.75*rdxF[0]*f[4]*nu[11]+3.354101966249684*rdxF[0]*nu[1]*f[8]+1.677050983124842*nu[0]*rdxF[0]*f[4]; 
  out[26] += 1.677050983124842*rdxF[3]*f[26]*nu[257]+0.75*rdxF[3]*f[12]*nu[247]+5.031152949374527*rdxF[1]*f[26]*nu[93]+3.75*rdxF[1]*f[4]*nu[93]+3.354101966249684*rdxF[1]*f[9]*nu[83]+1.677050983124842*rdxF[1]*f[4]*nu[81]; 
  out[27] += 1.677050983124842*rdxF[3]*f[27]*nu[257]+0.75*rdxF[3]*f[13]*nu[247]+5.031152949374527*rdxF[2]*f[27]*nu[175]+3.75*rdxF[2]*f[4]*nu[175]+3.354101966249684*rdxF[2]*f[10]*nu[165]+1.677050983124842*rdxF[2]*f[4]*nu[162]; 
  out[28] += 5.031152949374527*rdxF[3]*f[28]*nu[257]+3.75*f[1]*rdxF[3]*nu[257]+3.354101966249684*rdxF[3]*f[8]*nu[247]+1.677050983124842*f[1]*rdxF[3]*nu[243]+1.677050983124842*rdxF[0]*nu[11]*f[28]+0.75*rdxF[0]*nu[1]*f[14]; 
  out[29] += 5.031152949374527*rdxF[3]*f[29]*nu[257]+3.75*f[2]*rdxF[3]*nu[257]+3.354101966249684*rdxF[3]*f[9]*nu[247]+1.677050983124842*f[2]*rdxF[3]*nu[243]+1.677050983124842*rdxF[1]*f[29]*nu[93]+0.75*rdxF[1]*f[14]*nu[83]; 
  out[30] += 5.031152949374527*rdxF[3]*f[30]*nu[257]+3.75*f[3]*rdxF[3]*nu[257]+3.354101966249684*rdxF[3]*f[10]*nu[247]+1.677050983124842*f[3]*rdxF[3]*nu[243]+1.677050983124842*rdxF[2]*f[30]*nu[175]+0.75*rdxF[2]*f[14]*nu[165]; 
  out[31] += 1.677050983124842*rdxF[3]*f[31]*nu[257]+0.75*rdxF[3]*f[15]*nu[247]+1.677050983124842*rdxF[2]*f[31]*nu[175]+0.75*rdxF[2]*f[16]*nu[165]+1.677050983124842*rdxF[1]*f[31]*nu[93]+0.75*rdxF[1]*f[17]*nu[83]+1.677050983124842*rdxF[0]*nu[11]*f[31]+0.75*rdxF[0]*nu[1]*f[18]; 
  out[32] += 1.677050983124842*rdxF[2]*f[32]*nu[175]+0.75*rdxF[2]*f[19]*nu[165]+1.677050983124842*rdxF[1]*f[32]*nu[93]+0.75*rdxF[1]*f[21]*nu[83]+5.031152949374527*rdxF[0]*nu[11]*f[32]+3.354101966249685*rdxF[0]*nu[1]*f[15]+3.75*rdxF[0]*f[7]*nu[11]+1.677050983124842*nu[0]*rdxF[0]*f[7]; 
  out[33] += 1.677050983124842*rdxF[2]*f[33]*nu[175]+0.75*rdxF[2]*f[20]*nu[165]+5.031152949374527*rdxF[1]*f[33]*nu[93]+3.75*rdxF[1]*f[6]*nu[93]+3.354101966249685*rdxF[1]*f[15]*nu[83]+1.677050983124842*rdxF[1]*f[6]*nu[81]+1.677050983124842*rdxF[0]*nu[11]*f[33]+0.75*rdxF[0]*nu[1]*f[22]; 
  out[34] += 5.031152949374527*rdxF[2]*f[34]*nu[175]+3.75*rdxF[2]*f[5]*nu[175]+3.354101966249685*rdxF[2]*f[15]*nu[165]+1.677050983124842*rdxF[2]*f[5]*nu[162]+1.677050983124842*rdxF[1]*f[34]*nu[93]+0.75*rdxF[1]*f[23]*nu[83]+1.677050983124842*rdxF[0]*nu[11]*f[34]+0.75*rdxF[0]*nu[1]*f[24]; 
  out[35] += 1.677050983124842*rdxF[3]*f[35]*nu[257]+0.75*rdxF[3]*f[19]*nu[247]+1.677050983124842*rdxF[1]*f[35]*nu[93]+0.75*rdxF[1]*f[25]*nu[83]+5.031152949374527*rdxF[0]*nu[11]*f[35]+3.354101966249685*rdxF[0]*nu[1]*f[16]+3.75*rdxF[0]*f[9]*nu[11]+1.677050983124842*nu[0]*rdxF[0]*f[9]; 
  out[36] += 1.677050983124842*rdxF[3]*f[36]*nu[257]+0.75*rdxF[3]*f[20]*nu[247]+5.031152949374527*rdxF[1]*f[36]*nu[93]+3.75*rdxF[1]*f[8]*nu[93]+3.354101966249685*rdxF[1]*f[16]*nu[83]+1.677050983124842*rdxF[1]*f[8]*nu[81]+1.677050983124842*rdxF[0]*nu[11]*f[36]+0.75*rdxF[0]*nu[1]*f[26]; 
  out[37] += 1.677050983124842*rdxF[3]*f[37]*nu[257]+0.75*rdxF[3]*f[21]*nu[247]+1.677050983124842*rdxF[2]*f[37]*nu[175]+0.75*rdxF[2]*f[25]*nu[165]+5.031152949374527*rdxF[0]*nu[11]*f[37]+3.354101966249685*rdxF[0]*nu[1]*f[17]+3.75*rdxF[0]*f[10]*nu[11]+1.677050983124842*nu[0]*rdxF[0]*f[10]; 
  out[38] += 1.677050983124842*rdxF[3]*f[38]*nu[257]+0.75*rdxF[3]*f[22]*nu[247]+1.677050983124842*rdxF[2]*f[38]*nu[175]+0.75*rdxF[2]*f[26]*nu[165]+5.031152949374527*rdxF[1]*f[38]*nu[93]+3.75*rdxF[1]*f[10]*nu[93]+3.354101966249685*rdxF[1]*f[18]*nu[83]+1.677050983124842*rdxF[1]*f[10]*nu[81]; 
  out[39] += 1.677050983124842*rdxF[3]*f[39]*nu[257]+0.75*rdxF[3]*f[23]*nu[247]+5.031152949374527*rdxF[2]*f[39]*nu[175]+3.75*rdxF[2]*f[8]*nu[175]+3.354101966249685*rdxF[2]*f[17]*nu[165]+1.677050983124842*rdxF[2]*f[8]*nu[162]+1.677050983124842*rdxF[0]*nu[11]*f[39]+0.75*rdxF[0]*nu[1]*f[27]; 
  out[40] += 1.677050983124842*rdxF[3]*f[40]*nu[257]+0.75*rdxF[3]*f[24]*nu[247]+5.031152949374527*rdxF[2]*f[40]*nu[175]+3.75*rdxF[2]*f[9]*nu[175]+3.354101966249685*rdxF[2]*f[18]*nu[165]+1.677050983124842*rdxF[2]*f[9]*nu[162]+1.677050983124842*rdxF[1]*f[40]*nu[93]+0.75*rdxF[1]*f[27]*nu[83]; 
  out[41] += 5.031152949374527*rdxF[3]*f[41]*nu[257]+3.75*rdxF[3]*f[5]*nu[257]+3.354101966249685*rdxF[3]*f[16]*nu[247]+1.677050983124842*rdxF[3]*f[5]*nu[243]+1.677050983124842*rdxF[1]*f[41]*nu[93]+0.75*rdxF[1]*f[28]*nu[83]+1.677050983124842*rdxF[0]*nu[11]*f[41]+0.75*rdxF[0]*nu[1]*f[29]; 
  out[42] += 5.031152949374527*rdxF[3]*f[42]*nu[257]+3.75*rdxF[3]*f[6]*nu[257]+3.354101966249685*rdxF[3]*f[17]*nu[247]+1.677050983124842*rdxF[3]*f[6]*nu[243]+1.677050983124842*rdxF[2]*f[42]*nu[175]+0.75*rdxF[2]*f[28]*nu[165]+1.677050983124842*rdxF[0]*nu[11]*f[42]+0.75*rdxF[0]*nu[1]*f[30]; 
  out[43] += 5.031152949374527*rdxF[3]*f[43]*nu[257]+3.75*rdxF[3]*f[7]*nu[257]+3.354101966249685*rdxF[3]*f[18]*nu[247]+1.677050983124842*rdxF[3]*f[7]*nu[243]+1.677050983124842*rdxF[2]*f[43]*nu[175]+0.75*rdxF[2]*f[29]*nu[165]+1.677050983124842*rdxF[1]*f[43]*nu[93]+0.75*rdxF[1]*f[30]*nu[83]; 
  out[44] += 5.031152949374527*rdxF[1]*f[44]*nu[93]+3.75*rdxF[1]*f[11]*nu[93]+3.354101966249684*rdxF[1]*f[19]*nu[83]+1.677050983124842*rdxF[1]*f[11]*nu[81]+5.031152949374527*rdxF[0]*nu[11]*f[44]+3.354101966249684*rdxF[0]*nu[1]*f[20]+3.75*rdxF[0]*nu[11]*f[12]+1.677050983124842*nu[0]*rdxF[0]*f[12]; 
  out[45] += 5.031152949374527*rdxF[2]*f[45]*nu[175]+3.75*rdxF[2]*f[11]*nu[175]+3.354101966249684*rdxF[2]*f[21]*nu[165]+1.677050983124842*rdxF[2]*f[11]*nu[162]+5.031152949374527*rdxF[0]*nu[11]*f[45]+3.354101966249684*rdxF[0]*nu[1]*f[23]+3.75*rdxF[0]*nu[11]*f[13]+1.677050983124842*nu[0]*rdxF[0]*f[13]; 
  out[46] += 5.031152949374527*rdxF[2]*f[46]*nu[175]+3.75*rdxF[2]*f[12]*nu[175]+3.354101966249684*rdxF[2]*f[22]*nu[165]+1.677050983124842*rdxF[2]*f[12]*nu[162]+5.031152949374527*rdxF[1]*f[46]*nu[93]+3.75*rdxF[1]*f[13]*nu[93]+3.354101966249684*rdxF[1]*f[24]*nu[83]+1.677050983124842*rdxF[1]*f[13]*nu[81]; 
  out[47] += 5.031152949374527*rdxF[3]*f[47]*nu[257]+3.75*rdxF[3]*f[11]*nu[257]+3.354101966249684*rdxF[3]*f[25]*nu[247]+1.677050983124842*rdxF[3]*f[11]*nu[243]+5.031152949374527*rdxF[0]*nu[11]*f[47]+3.354101966249684*rdxF[0]*nu[1]*f[28]+3.75*rdxF[0]*nu[11]*f[14]+1.677050983124842*nu[0]*rdxF[0]*f[14]; 
  out[48] += 5.031152949374527*rdxF[3]*f[48]*nu[257]+3.75*rdxF[3]*f[12]*nu[257]+3.354101966249684*rdxF[3]*f[26]*nu[247]+1.677050983124842*rdxF[3]*f[12]*nu[243]+5.031152949374527*rdxF[1]*f[48]*nu[93]+3.75*rdxF[1]*f[14]*nu[93]+3.354101966249684*rdxF[1]*f[29]*nu[83]+1.677050983124842*rdxF[1]*f[14]*nu[81]; 
  out[49] += 5.031152949374527*rdxF[3]*f[49]*nu[257]+3.75*rdxF[3]*f[13]*nu[257]+3.354101966249684*rdxF[3]*f[27]*nu[247]+1.677050983124842*rdxF[3]*f[13]*nu[243]+5.031152949374527*rdxF[2]*f[49]*nu[175]+3.75*rdxF[2]*f[14]*nu[175]+3.354101966249684*rdxF[2]*f[30]*nu[165]+1.677050983124842*rdxF[2]*f[14]*nu[162]; 
  out[50] += 1.677050983124842*rdxF[3]*f[50]*nu[257]+0.75*rdxF[3]*f[32]*nu[247]+1.677050983124842*rdxF[2]*f[50]*nu[175]+0.75*rdxF[2]*f[35]*nu[165]+1.677050983124842*rdxF[1]*f[50]*nu[93]+0.75*rdxF[1]*f[37]*nu[83]+5.031152949374527*rdxF[0]*nu[11]*f[50]+3.354101966249684*rdxF[0]*nu[1]*f[31]+3.75*rdxF[0]*nu[11]*f[18]+1.677050983124842*nu[0]*rdxF[0]*f[18]; 
  out[51] += 1.677050983124842*rdxF[3]*f[51]*nu[257]+0.75*rdxF[3]*f[33]*nu[247]+1.677050983124842*rdxF[2]*f[51]*nu[175]+0.75*rdxF[2]*f[36]*nu[165]+5.031152949374527*rdxF[1]*f[51]*nu[93]+3.75*rdxF[1]*f[17]*nu[93]+3.354101966249684*rdxF[1]*f[31]*nu[83]+1.677050983124842*rdxF[1]*f[17]*nu[81]+1.677050983124842*rdxF[0]*nu[11]*f[51]+0.75*rdxF[0]*nu[1]*f[38]; 
  out[52] += 1.677050983124842*rdxF[3]*f[52]*nu[257]+0.75*rdxF[3]*f[34]*nu[247]+5.031152949374527*rdxF[2]*f[52]*nu[175]+3.75*rdxF[2]*f[16]*nu[175]+3.354101966249684*rdxF[2]*f[31]*nu[165]+1.677050983124842*rdxF[2]*f[16]*nu[162]+1.677050983124842*rdxF[1]*f[52]*nu[93]+0.75*rdxF[1]*f[39]*nu[83]+1.677050983124842*rdxF[0]*nu[11]*f[52]+0.75*rdxF[0]*nu[1]*f[40]; 
  out[53] += 5.031152949374527*rdxF[3]*f[53]*nu[257]+3.75*rdxF[3]*f[15]*nu[257]+3.354101966249684*rdxF[3]*f[31]*nu[247]+1.677050983124842*rdxF[3]*f[15]*nu[243]+1.677050983124842*rdxF[2]*f[53]*nu[175]+0.75*rdxF[2]*f[41]*nu[165]+1.677050983124842*rdxF[1]*f[53]*nu[93]+0.75*rdxF[1]*f[42]*nu[83]+1.677050983124842*rdxF[0]*nu[11]*f[53]+0.75*rdxF[0]*nu[1]*f[43]; 
  out[54] += 1.677050983124842*rdxF[2]*f[54]*nu[175]+0.75*rdxF[2]*f[44]*nu[165]+5.031152949374527*rdxF[1]*f[54]*nu[93]+3.75*rdxF[1]*f[21]*nu[93]+3.354101966249685*rdxF[1]*f[32]*nu[83]+1.677050983124842*rdxF[1]*f[21]*nu[81]+5.031152949374527*rdxF[0]*nu[11]*f[54]+3.354101966249685*rdxF[0]*nu[1]*f[33]+3.75*rdxF[0]*nu[11]*f[22]+1.677050983124842*nu[0]*rdxF[0]*f[22]; 
  out[55] += 5.031152949374527*rdxF[2]*f[55]*nu[175]+3.75*rdxF[2]*f[19]*nu[175]+3.354101966249685*rdxF[2]*f[32]*nu[165]+1.677050983124842*rdxF[2]*f[19]*nu[162]+1.677050983124842*rdxF[1]*f[55]*nu[93]+0.75*rdxF[1]*f[45]*nu[83]+5.031152949374527*rdxF[0]*nu[11]*f[55]+3.354101966249685*rdxF[0]*nu[1]*f[34]+3.75*rdxF[0]*nu[11]*f[24]+1.677050983124842*nu[0]*rdxF[0]*f[24]; 
  out[56] += 5.031152949374527*rdxF[2]*f[56]*nu[175]+3.75*rdxF[2]*f[20]*nu[175]+3.354101966249685*rdxF[2]*f[33]*nu[165]+1.677050983124842*rdxF[2]*f[20]*nu[162]+5.031152949374527*rdxF[1]*f[56]*nu[93]+3.75*rdxF[1]*f[23]*nu[93]+3.354101966249685*rdxF[1]*f[34]*nu[83]+1.677050983124842*rdxF[1]*f[23]*nu[81]+1.677050983124842*rdxF[0]*nu[11]*f[56]+0.75*rdxF[0]*nu[1]*f[46]; 
  out[57] += 1.677050983124842*rdxF[3]*f[57]*nu[257]+0.75*rdxF[3]*f[44]*nu[247]+5.031152949374527*rdxF[1]*f[57]*nu[93]+3.75*rdxF[1]*f[25]*nu[93]+3.354101966249685*rdxF[1]*f[35]*nu[83]+1.677050983124842*rdxF[1]*f[25]*nu[81]+5.031152949374527*rdxF[0]*nu[11]*f[57]+3.354101966249685*rdxF[0]*nu[1]*f[36]+3.75*rdxF[0]*nu[11]*f[26]+1.677050983124842*nu[0]*rdxF[0]*f[26]; 
  out[58] += 1.677050983124842*rdxF[3]*f[58]*nu[257]+0.75*rdxF[3]*f[45]*nu[247]+5.031152949374527*rdxF[2]*f[58]*nu[175]+3.75*rdxF[2]*f[25]*nu[175]+3.354101966249685*rdxF[2]*f[37]*nu[165]+1.677050983124842*rdxF[2]*f[25]*nu[162]+5.031152949374527*rdxF[0]*nu[11]*f[58]+3.354101966249685*rdxF[0]*nu[1]*f[39]+3.75*rdxF[0]*nu[11]*f[27]+1.677050983124842*nu[0]*rdxF[0]*f[27]; 
  out[59] += 1.677050983124842*rdxF[3]*f[59]*nu[257]+0.75*rdxF[3]*f[46]*nu[247]+5.031152949374527*rdxF[2]*f[59]*nu[175]+3.75*rdxF[2]*f[26]*nu[175]+3.354101966249685*rdxF[2]*f[38]*nu[165]+1.677050983124842*rdxF[2]*f[26]*nu[162]+5.031152949374527*rdxF[1]*f[59]*nu[93]+3.75*rdxF[1]*f[27]*nu[93]+3.354101966249685*rdxF[1]*f[40]*nu[83]+1.677050983124842*rdxF[1]*f[27]*nu[81]; 
  out[60] += 5.031152949374527*rdxF[3]*f[60]*nu[257]+3.75*rdxF[3]*f[19]*nu[257]+3.354101966249685*rdxF[3]*f[35]*nu[247]+1.677050983124842*rdxF[3]*f[19]*nu[243]+1.677050983124842*rdxF[1]*f[60]*nu[93]+0.75*rdxF[1]*f[47]*nu[83]+5.031152949374527*rdxF[0]*nu[11]*f[60]+3.354101966249685*rdxF[0]*nu[1]*f[41]+3.75*rdxF[0]*nu[11]*f[29]+1.677050983124842*nu[0]*rdxF[0]*f[29]; 
  out[61] += 5.031152949374527*rdxF[3]*f[61]*nu[257]+3.75*rdxF[3]*f[20]*nu[257]+3.354101966249685*rdxF[3]*f[36]*nu[247]+1.677050983124842*rdxF[3]*f[20]*nu[243]+5.031152949374527*rdxF[1]*f[61]*nu[93]+3.75*rdxF[1]*f[28]*nu[93]+3.354101966249685*rdxF[1]*f[41]*nu[83]+1.677050983124842*rdxF[1]*f[28]*nu[81]+1.677050983124842*rdxF[0]*nu[11]*f[61]+0.75*rdxF[0]*nu[1]*f[48]; 
  out[62] += 5.031152949374527*rdxF[3]*f[62]*nu[257]+3.75*rdxF[3]*f[21]*nu[257]+3.354101966249685*rdxF[3]*f[37]*nu[247]+1.677050983124842*rdxF[3]*f[21]*nu[243]+1.677050983124842*rdxF[2]*f[62]*nu[175]+0.75*rdxF[2]*f[47]*nu[165]+5.031152949374527*rdxF[0]*nu[11]*f[62]+3.354101966249685*rdxF[0]*nu[1]*f[42]+3.75*rdxF[0]*nu[11]*f[30]+1.677050983124842*nu[0]*rdxF[0]*f[30]; 
  out[63] += 5.031152949374527*rdxF[3]*f[63]*nu[257]+3.75*rdxF[3]*f[22]*nu[257]+3.354101966249685*rdxF[3]*f[38]*nu[247]+1.677050983124842*rdxF[3]*f[22]*nu[243]+1.677050983124842*rdxF[2]*f[63]*nu[175]+0.75*rdxF[2]*f[48]*nu[165]+5.031152949374527*rdxF[1]*f[63]*nu[93]+3.75*rdxF[1]*f[30]*nu[93]+3.354101966249685*rdxF[1]*f[43]*nu[83]+1.677050983124842*rdxF[1]*f[30]*nu[81]; 
  out[64] += 5.031152949374527*rdxF[3]*f[64]*nu[257]+3.75*rdxF[3]*f[23]*nu[257]+3.354101966249685*rdxF[3]*f[39]*nu[247]+1.677050983124842*rdxF[3]*f[23]*nu[243]+5.031152949374527*rdxF[2]*f[64]*nu[175]+3.75*rdxF[2]*f[28]*nu[175]+3.354101966249685*rdxF[2]*f[42]*nu[165]+1.677050983124842*rdxF[2]*f[28]*nu[162]+1.677050983124842*rdxF[0]*nu[11]*f[64]+0.75*rdxF[0]*nu[1]*f[49]; 
  out[65] += 5.031152949374527*rdxF[3]*f[65]*nu[257]+3.75*rdxF[3]*f[24]*nu[257]+3.354101966249685*rdxF[3]*f[40]*nu[247]+1.677050983124842*rdxF[3]*f[24]*nu[243]+5.031152949374527*rdxF[2]*f[65]*nu[175]+3.75*rdxF[2]*f[29]*nu[175]+3.354101966249685*rdxF[2]*f[43]*nu[165]+1.677050983124842*rdxF[2]*f[29]*nu[162]+1.677050983124842*rdxF[1]*f[65]*nu[93]+0.75*rdxF[1]*f[49]*nu[83]; 
  out[66] += 1.677050983124842*rdxF[3]*f[66]*nu[257]+0.75*rdxF[3]*f[54]*nu[247]+1.677050983124842*rdxF[2]*f[66]*nu[175]+0.75*rdxF[2]*f[57]*nu[165]+5.031152949374527*rdxF[1]*f[66]*nu[93]+3.75*rdxF[1]*f[37]*nu[93]+3.354101966249684*rdxF[1]*f[50]*nu[83]+1.677050983124842*rdxF[1]*f[37]*nu[81]+5.031152949374527*rdxF[0]*nu[11]*f[66]+3.354101966249684*rdxF[0]*nu[1]*f[51]+3.75*rdxF[0]*nu[11]*f[38]+1.677050983124842*nu[0]*rdxF[0]*f[38]; 
  out[67] += 1.677050983124842*rdxF[3]*f[67]*nu[257]+0.75*rdxF[3]*f[55]*nu[247]+5.031152949374527*rdxF[2]*f[67]*nu[175]+3.75*rdxF[2]*f[35]*nu[175]+3.354101966249684*rdxF[2]*f[50]*nu[165]+1.677050983124842*rdxF[2]*f[35]*nu[162]+1.677050983124842*rdxF[1]*f[67]*nu[93]+0.75*rdxF[1]*f[58]*nu[83]+5.031152949374527*rdxF[0]*nu[11]*f[67]+3.354101966249684*rdxF[0]*nu[1]*f[52]+3.75*rdxF[0]*nu[11]*f[40]+1.677050983124842*nu[0]*rdxF[0]*f[40]; 
  out[68] += 1.677050983124842*rdxF[3]*f[68]*nu[257]+0.75*rdxF[3]*f[56]*nu[247]+5.031152949374527*rdxF[2]*f[68]*nu[175]+3.75*rdxF[2]*f[36]*nu[175]+3.354101966249684*rdxF[2]*f[51]*nu[165]+1.677050983124842*rdxF[2]*f[36]*nu[162]+5.031152949374527*rdxF[1]*f[68]*nu[93]+3.75*rdxF[1]*f[39]*nu[93]+3.354101966249684*rdxF[1]*f[52]*nu[83]+1.677050983124842*rdxF[1]*f[39]*nu[81]+1.677050983124842*rdxF[0]*nu[11]*f[68]+0.75*rdxF[0]*nu[1]*f[59]; 
  out[69] += 5.031152949374527*rdxF[3]*f[69]*nu[257]+3.75*rdxF[3]*f[32]*nu[257]+3.354101966249684*rdxF[3]*f[50]*nu[247]+1.677050983124842*rdxF[3]*f[32]*nu[243]+1.677050983124842*rdxF[2]*f[69]*nu[175]+0.75*rdxF[2]*f[60]*nu[165]+1.677050983124842*rdxF[1]*f[69]*nu[93]+0.75*rdxF[1]*f[62]*nu[83]+5.031152949374527*rdxF[0]*nu[11]*f[69]+3.354101966249684*rdxF[0]*nu[1]*f[53]+3.75*rdxF[0]*nu[11]*f[43]+1.677050983124842*nu[0]*rdxF[0]*f[43]; 
  out[70] += 5.031152949374527*rdxF[3]*f[70]*nu[257]+3.75*rdxF[3]*f[33]*nu[257]+3.354101966249684*rdxF[3]*f[51]*nu[247]+1.677050983124842*rdxF[3]*f[33]*nu[243]+1.677050983124842*rdxF[2]*f[70]*nu[175]+0.75*rdxF[2]*f[61]*nu[165]+5.031152949374527*rdxF[1]*f[70]*nu[93]+3.75*rdxF[1]*f[42]*nu[93]+3.354101966249684*rdxF[1]*f[53]*nu[83]+1.677050983124842*rdxF[1]*f[42]*nu[81]+1.677050983124842*rdxF[0]*nu[11]*f[70]+0.75*rdxF[0]*nu[1]*f[63]; 
  out[71] += 5.031152949374527*rdxF[3]*f[71]*nu[257]+3.75*rdxF[3]*f[34]*nu[257]+3.354101966249684*rdxF[3]*f[52]*nu[247]+1.677050983124842*rdxF[3]*f[34]*nu[243]+5.031152949374527*rdxF[2]*f[71]*nu[175]+3.75*rdxF[2]*f[41]*nu[175]+3.354101966249684*rdxF[2]*f[53]*nu[165]+1.677050983124842*rdxF[2]*f[41]*nu[162]+1.677050983124842*rdxF[1]*f[71]*nu[93]+0.75*rdxF[1]*f[64]*nu[83]+1.677050983124842*rdxF[0]*nu[11]*f[71]+0.75*rdxF[0]*nu[1]*f[65]; 
  out[72] += 5.031152949374527*rdxF[2]*f[72]*nu[175]+3.75*rdxF[2]*f[44]*nu[175]+3.354101966249685*rdxF[2]*f[54]*nu[165]+1.677050983124842*rdxF[2]*f[44]*nu[162]+5.031152949374527*rdxF[1]*f[72]*nu[93]+3.75*rdxF[1]*f[45]*nu[93]+3.354101966249685*rdxF[1]*f[55]*nu[83]+1.677050983124842*rdxF[1]*f[45]*nu[81]+5.031152949374527*rdxF[0]*nu[11]*f[72]+3.354101966249685*rdxF[0]*nu[1]*f[56]+3.75*rdxF[0]*nu[11]*f[46]+1.677050983124842*nu[0]*rdxF[0]*f[46]; 
  out[73] += 5.031152949374527*rdxF[3]*f[73]*nu[257]+3.75*rdxF[3]*f[44]*nu[257]+3.354101966249685*rdxF[3]*f[57]*nu[247]+1.677050983124842*rdxF[3]*f[44]*nu[243]+5.031152949374527*rdxF[1]*f[73]*nu[93]+3.75*rdxF[1]*f[47]*nu[93]+3.354101966249685*rdxF[1]*f[60]*nu[83]+1.677050983124842*rdxF[1]*f[47]*nu[81]+5.031152949374527*rdxF[0]*nu[11]*f[73]+3.354101966249685*rdxF[0]*nu[1]*f[61]+3.75*rdxF[0]*nu[11]*f[48]+1.677050983124842*nu[0]*rdxF[0]*f[48]; 
  out[74] += 5.031152949374527*rdxF[3]*f[74]*nu[257]+3.75*rdxF[3]*f[45]*nu[257]+3.354101966249685*rdxF[3]*f[58]*nu[247]+1.677050983124842*rdxF[3]*f[45]*nu[243]+5.031152949374527*rdxF[2]*f[74]*nu[175]+3.75*rdxF[2]*f[47]*nu[175]+3.354101966249685*rdxF[2]*f[62]*nu[165]+1.677050983124842*rdxF[2]*f[47]*nu[162]+5.031152949374527*rdxF[0]*nu[11]*f[74]+3.354101966249685*rdxF[0]*nu[1]*f[64]+3.75*rdxF[0]*nu[11]*f[49]+1.677050983124842*nu[0]*rdxF[0]*f[49]; 
  out[75] += 5.031152949374527*rdxF[3]*f[75]*nu[257]+3.75*rdxF[3]*f[46]*nu[257]+3.354101966249685*rdxF[3]*f[59]*nu[247]+1.677050983124842*rdxF[3]*f[46]*nu[243]+5.031152949374527*rdxF[2]*f[75]*nu[175]+3.75*rdxF[2]*f[48]*nu[175]+3.354101966249685*rdxF[2]*f[63]*nu[165]+1.677050983124842*rdxF[2]*f[48]*nu[162]+5.031152949374527*rdxF[1]*f[75]*nu[93]+3.75*rdxF[1]*f[49]*nu[93]+3.354101966249685*rdxF[1]*f[65]*nu[83]+1.677050983124842*rdxF[1]*f[49]*nu[81]; 
  out[76] += 1.677050983124842*rdxF[3]*f[76]*nu[257]+0.75*rdxF[3]*f[72]*nu[247]+5.031152949374527*rdxF[2]*f[76]*nu[175]+3.75*rdxF[2]*f[57]*nu[175]+3.354101966249684*rdxF[2]*f[66]*nu[165]+1.677050983124842*rdxF[2]*f[57]*nu[162]+5.031152949374527*rdxF[1]*f[76]*nu[93]+3.75*rdxF[1]*f[58]*nu[93]+3.354101966249684*rdxF[1]*f[67]*nu[83]+1.677050983124842*rdxF[1]*f[58]*nu[81]+5.031152949374527*rdxF[0]*nu[11]*f[76]+3.354101966249684*rdxF[0]*nu[1]*f[68]+3.75*rdxF[0]*nu[11]*f[59]+1.677050983124842*nu[0]*rdxF[0]*f[59]; 
  out[77] += 5.031152949374527*rdxF[3]*f[77]*nu[257]+3.75*rdxF[3]*f[54]*nu[257]+3.354101966249684*rdxF[3]*f[66]*nu[247]+1.677050983124842*rdxF[3]*f[54]*nu[243]+1.677050983124842*rdxF[2]*f[77]*nu[175]+0.75*rdxF[2]*f[73]*nu[165]+5.031152949374527*rdxF[1]*f[77]*nu[93]+3.75*rdxF[1]*f[62]*nu[93]+3.354101966249684*rdxF[1]*f[69]*nu[83]+1.677050983124842*rdxF[1]*f[62]*nu[81]+5.031152949374527*rdxF[0]*nu[11]*f[77]+3.354101966249684*rdxF[0]*nu[1]*f[70]+3.75*rdxF[0]*nu[11]*f[63]+1.677050983124842*nu[0]*rdxF[0]*f[63]; 
  out[78] += 5.031152949374527*rdxF[3]*f[78]*nu[257]+3.75*rdxF[3]*f[55]*nu[257]+3.354101966249684*rdxF[3]*f[67]*nu[247]+1.677050983124842*rdxF[3]*f[55]*nu[243]+5.031152949374527*rdxF[2]*f[78]*nu[175]+3.75*rdxF[2]*f[60]*nu[175]+3.354101966249684*rdxF[2]*f[69]*nu[165]+1.677050983124842*rdxF[2]*f[60]*nu[162]+1.677050983124842*rdxF[1]*f[78]*nu[93]+0.75*rdxF[1]*f[74]*nu[83]+5.031152949374527*rdxF[0]*nu[11]*f[78]+3.354101966249684*rdxF[0]*nu[1]*f[71]+3.75*rdxF[0]*nu[11]*f[65]+1.677050983124842*nu[0]*rdxF[0]*f[65]; 
  out[79] += 5.031152949374527*rdxF[3]*f[79]*nu[257]+3.75*rdxF[3]*f[56]*nu[257]+3.354101966249684*rdxF[3]*f[68]*nu[247]+1.677050983124842*rdxF[3]*f[56]*nu[243]+5.031152949374527*rdxF[2]*f[79]*nu[175]+3.75*rdxF[2]*f[61]*nu[175]+3.354101966249684*rdxF[2]*f[70]*nu[165]+1.677050983124842*rdxF[2]*f[61]*nu[162]+5.031152949374527*rdxF[1]*f[79]*nu[93]+3.75*rdxF[1]*f[64]*nu[93]+3.354101966249684*rdxF[1]*f[71]*nu[83]+1.677050983124842*rdxF[1]*f[64]*nu[81]+1.677050983124842*rdxF[0]*nu[11]*f[79]+0.75*rdxF[0]*nu[1]*f[75]; 
  out[80] += 5.031152949374527*rdxF[3]*f[80]*nu[257]+3.75*rdxF[3]*f[72]*nu[257]+3.354101966249684*rdxF[3]*f[76]*nu[247]+1.677050983124842*rdxF[3]*f[72]*nu[243]+5.031152949374527*rdxF[2]*f[80]*nu[175]+3.75*rdxF[2]*f[73]*nu[175]+3.354101966249684*rdxF[2]*f[77]*nu[165]+1.677050983124842*rdxF[2]*f[73]*nu[162]+5.031152949374527*rdxF[1]*f[80]*nu[93]+3.75*rdxF[1]*f[74]*nu[93]+3.354101966249684*rdxF[1]*f[78]*nu[83]+1.677050983124842*rdxF[1]*f[74]*nu[81]+5.031152949374527*rdxF[0]*nu[11]*f[80]+3.354101966249684*rdxF[0]*nu[1]*f[79]+3.75*rdxF[0]*nu[11]*f[75]+1.677050983124842*nu[0]*rdxF[0]*f[75]; 

  return (rdxF[0]*(0.390625*nu[80]-0.3493856214843422*nu[75]-0.3493856214843422*nu[74]-0.3493856214843422*nu[73]-0.3493856214843422*nu[72]+0.3125*nu[49]+0.3125*nu[48]+0.3125*nu[47]+0.3125*nu[46]+0.3125*nu[45]+0.3125*nu[44]-0.2795084971874737*nu[14]-0.2795084971874737*nu[13]-0.2795084971874737*nu[12]-0.2795084971874737*nu[11]+0.25*nu[0])+rdxF[1]*(0.390625*nu[161]-0.3493856214843422*nu[156]-0.3493856214843422*nu[155]-0.3493856214843422*nu[154]-0.3493856214843422*nu[153]+0.3125*nu[130]+0.3125*nu[129]+0.3125*nu[128]+0.3125*nu[127]+0.3125*nu[126]+0.3125*nu[125]-0.2795084971874737*nu[95]-0.2795084971874737*nu[94]-0.2795084971874737*nu[93]-0.2795084971874737*nu[92]+0.25*nu[81])+rdxF[2]*(0.390625*nu[242]-0.3493856214843422*nu[237]-0.3493856214843422*nu[236]-0.3493856214843422*nu[235]-0.3493856214843422*nu[234]+0.3125*nu[211]+0.3125*nu[210]+0.3125*nu[209]+0.3125*nu[208]+0.3125*nu[207]+0.3125*nu[206]-0.2795084971874737*nu[176]-0.2795084971874737*nu[175]-0.2795084971874737*nu[174]-0.2795084971874737*nu[173]+0.25*nu[162])+rdxF[3]*(0.390625*nu[323]-0.3493856214843422*nu[318]-0.3493856214843422*nu[317]-0.3493856214843422*nu[316]-0.3493856214843422*nu[315]+0.3125*nu[292]+0.3125*nu[291]+0.3125*nu[290]+0.3125*nu[289]+0.3125*nu[288]+0.3125*nu[287]-0.2795084971874737*nu[257]-0.2795084971874737*nu[256]-0.2795084971874737*nu[255]-0.2795084971874737*nu[254]+0.25*nu[243]))*0.9;

} 
double ConstDiffusionVarCoeffVol4xTensorP2_diffDirs123(const double *w, const double *dx, const double *nu, const double *f, double *out) 
{ 
  // w[4]:   Cell-center coordinates.
  // dx[4]:  Cell spacing.
  // nu[324]:  diffusion coefficient.
  // f:      Input distribution function.
  // out:    Incremented output 
  double rdxF[3]; 
  rdxF[0] = 4.0/(dx[0]*dx[0]); 
  rdxF[1] = 4.0/(dx[1]*dx[1]); 
  rdxF[2] = 4.0/(dx[2]*dx[2]); 

  out[1] += 1.677050983124842*rdxF[0]*f[1]*nu[11]+0.75*f[0]*rdxF[0]*nu[1]; 
  out[2] += 1.677050983124842*rdxF[1]*f[2]*nu[93]+0.75*f[0]*rdxF[1]*nu[83]; 
  out[3] += 1.677050983124842*rdxF[2]*f[3]*nu[175]+0.75*f[0]*rdxF[2]*nu[165]; 
  out[5] += 1.677050983124842*rdxF[1]*f[5]*nu[93]+0.75*f[1]*rdxF[1]*nu[83]+1.677050983124842*rdxF[0]*f[5]*nu[11]+0.75*rdxF[0]*nu[1]*f[2]; 
  out[6] += 1.677050983124842*rdxF[2]*f[6]*nu[175]+0.75*f[1]*rdxF[2]*nu[165]+1.677050983124842*rdxF[0]*f[6]*nu[11]+0.75*rdxF[0]*nu[1]*f[3]; 
  out[7] += 1.677050983124842*rdxF[2]*f[7]*nu[175]+0.75*f[2]*rdxF[2]*nu[165]+1.677050983124842*rdxF[1]*f[7]*nu[93]+0.75*rdxF[1]*f[3]*nu[83]; 
  out[8] += 1.677050983124842*rdxF[0]*f[8]*nu[11]+0.75*rdxF[0]*nu[1]*f[4]; 
  out[9] += 1.677050983124842*rdxF[1]*f[9]*nu[93]+0.75*rdxF[1]*f[4]*nu[83]; 
  out[10] += 1.677050983124842*rdxF[2]*f[10]*nu[175]+0.75*rdxF[2]*f[4]*nu[165]; 
  out[11] += 5.031152949374527*rdxF[0]*f[11]*nu[11]+3.75*f[0]*rdxF[0]*nu[11]+3.354101966249685*rdxF[0]*f[1]*nu[1]+1.677050983124842*f[0]*nu[0]*rdxF[0]; 
  out[12] += 5.031152949374527*rdxF[1]*f[12]*nu[93]+3.75*f[0]*rdxF[1]*nu[93]+3.354101966249685*rdxF[1]*f[2]*nu[83]+1.677050983124842*f[0]*rdxF[1]*nu[81]; 
  out[13] += 5.031152949374527*rdxF[2]*f[13]*nu[175]+3.75*f[0]*rdxF[2]*nu[175]+3.354101966249685*rdxF[2]*f[3]*nu[165]+1.677050983124842*f[0]*rdxF[2]*nu[162]; 
  out[15] += 1.677050983124842*rdxF[2]*f[15]*nu[175]+0.75*rdxF[2]*f[5]*nu[165]+1.677050983124842*rdxF[1]*f[15]*nu[93]+0.75*rdxF[1]*f[6]*nu[83]+1.677050983124842*rdxF[0]*nu[11]*f[15]+0.75*rdxF[0]*nu[1]*f[7]; 
  out[16] += 1.677050983124842*rdxF[1]*f[16]*nu[93]+0.75*rdxF[1]*f[8]*nu[83]+1.677050983124842*rdxF[0]*nu[11]*f[16]+0.75*rdxF[0]*nu[1]*f[9]; 
  out[17] += 1.677050983124842*rdxF[2]*f[17]*nu[175]+0.75*rdxF[2]*f[8]*nu[165]+1.677050983124842*rdxF[0]*nu[11]*f[17]+0.75*rdxF[0]*nu[1]*f[10]; 
  out[18] += 1.677050983124842*rdxF[2]*f[18]*nu[175]+0.75*rdxF[2]*f[9]*nu[165]+1.677050983124842*rdxF[1]*f[18]*nu[93]+0.75*rdxF[1]*f[10]*nu[83]; 
  out[19] += 1.677050983124842*rdxF[1]*f[19]*nu[93]+0.75*rdxF[1]*f[11]*nu[83]+5.031152949374527*rdxF[0]*nu[11]*f[19]+3.75*rdxF[0]*f[2]*nu[11]+3.354101966249684*rdxF[0]*nu[1]*f[5]+1.677050983124842*nu[0]*rdxF[0]*f[2]; 
  out[20] += 5.031152949374527*rdxF[1]*f[20]*nu[93]+3.75*f[1]*rdxF[1]*nu[93]+3.354101966249684*rdxF[1]*f[5]*nu[83]+1.677050983124842*f[1]*rdxF[1]*nu[81]+1.677050983124842*rdxF[0]*nu[11]*f[20]+0.75*rdxF[0]*nu[1]*f[12]; 
  out[21] += 1.677050983124842*rdxF[2]*f[21]*nu[175]+0.75*rdxF[2]*f[11]*nu[165]+5.031152949374527*rdxF[0]*nu[11]*f[21]+3.75*rdxF[0]*f[3]*nu[11]+3.354101966249684*rdxF[0]*nu[1]*f[6]+1.677050983124842*nu[0]*rdxF[0]*f[3]; 
  out[22] += 1.677050983124842*rdxF[2]*f[22]*nu[175]+0.75*rdxF[2]*f[12]*nu[165]+5.031152949374527*rdxF[1]*f[22]*nu[93]+3.75*rdxF[1]*f[3]*nu[93]+3.354101966249684*rdxF[1]*f[7]*nu[83]+1.677050983124842*rdxF[1]*f[3]*nu[81]; 
  out[23] += 5.031152949374527*rdxF[2]*f[23]*nu[175]+3.75*f[1]*rdxF[2]*nu[175]+3.354101966249684*rdxF[2]*f[6]*nu[165]+1.677050983124842*f[1]*rdxF[2]*nu[162]+1.677050983124842*rdxF[0]*nu[11]*f[23]+0.75*rdxF[0]*nu[1]*f[13]; 
  out[24] += 5.031152949374527*rdxF[2]*f[24]*nu[175]+3.75*f[2]*rdxF[2]*nu[175]+3.354101966249684*rdxF[2]*f[7]*nu[165]+1.677050983124842*f[2]*rdxF[2]*nu[162]+1.677050983124842*rdxF[1]*f[24]*nu[93]+0.75*rdxF[1]*f[13]*nu[83]; 
  out[25] += 5.031152949374527*rdxF[0]*nu[11]*f[25]+3.75*rdxF[0]*f[4]*nu[11]+3.354101966249684*rdxF[0]*nu[1]*f[8]+1.677050983124842*nu[0]*rdxF[0]*f[4]; 
  out[26] += 5.031152949374527*rdxF[1]*f[26]*nu[93]+3.75*rdxF[1]*f[4]*nu[93]+3.354101966249684*rdxF[1]*f[9]*nu[83]+1.677050983124842*rdxF[1]*f[4]*nu[81]; 
  out[27] += 5.031152949374527*rdxF[2]*f[27]*nu[175]+3.75*rdxF[2]*f[4]*nu[175]+3.354101966249684*rdxF[2]*f[10]*nu[165]+1.677050983124842*rdxF[2]*f[4]*nu[162]; 
  out[28] += 1.677050983124842*rdxF[0]*nu[11]*f[28]+0.75*rdxF[0]*nu[1]*f[14]; 
  out[29] += 1.677050983124842*rdxF[1]*f[29]*nu[93]+0.75*rdxF[1]*f[14]*nu[83]; 
  out[30] += 1.677050983124842*rdxF[2]*f[30]*nu[175]+0.75*rdxF[2]*f[14]*nu[165]; 
  out[31] += 1.677050983124842*rdxF[2]*f[31]*nu[175]+0.75*rdxF[2]*f[16]*nu[165]+1.677050983124842*rdxF[1]*f[31]*nu[93]+0.75*rdxF[1]*f[17]*nu[83]+1.677050983124842*rdxF[0]*nu[11]*f[31]+0.75*rdxF[0]*nu[1]*f[18]; 
  out[32] += 1.677050983124842*rdxF[2]*f[32]*nu[175]+0.75*rdxF[2]*f[19]*nu[165]+1.677050983124842*rdxF[1]*f[32]*nu[93]+0.75*rdxF[1]*f[21]*nu[83]+5.031152949374527*rdxF[0]*nu[11]*f[32]+3.354101966249685*rdxF[0]*nu[1]*f[15]+3.75*rdxF[0]*f[7]*nu[11]+1.677050983124842*nu[0]*rdxF[0]*f[7]; 
  out[33] += 1.677050983124842*rdxF[2]*f[33]*nu[175]+0.75*rdxF[2]*f[20]*nu[165]+5.031152949374527*rdxF[1]*f[33]*nu[93]+3.75*rdxF[1]*f[6]*nu[93]+3.354101966249685*rdxF[1]*f[15]*nu[83]+1.677050983124842*rdxF[1]*f[6]*nu[81]+1.677050983124842*rdxF[0]*nu[11]*f[33]+0.75*rdxF[0]*nu[1]*f[22]; 
  out[34] += 5.031152949374527*rdxF[2]*f[34]*nu[175]+3.75*rdxF[2]*f[5]*nu[175]+3.354101966249685*rdxF[2]*f[15]*nu[165]+1.677050983124842*rdxF[2]*f[5]*nu[162]+1.677050983124842*rdxF[1]*f[34]*nu[93]+0.75*rdxF[1]*f[23]*nu[83]+1.677050983124842*rdxF[0]*nu[11]*f[34]+0.75*rdxF[0]*nu[1]*f[24]; 
  out[35] += 1.677050983124842*rdxF[1]*f[35]*nu[93]+0.75*rdxF[1]*f[25]*nu[83]+5.031152949374527*rdxF[0]*nu[11]*f[35]+3.354101966249685*rdxF[0]*nu[1]*f[16]+3.75*rdxF[0]*f[9]*nu[11]+1.677050983124842*nu[0]*rdxF[0]*f[9]; 
  out[36] += 5.031152949374527*rdxF[1]*f[36]*nu[93]+3.75*rdxF[1]*f[8]*nu[93]+3.354101966249685*rdxF[1]*f[16]*nu[83]+1.677050983124842*rdxF[1]*f[8]*nu[81]+1.677050983124842*rdxF[0]*nu[11]*f[36]+0.75*rdxF[0]*nu[1]*f[26]; 
  out[37] += 1.677050983124842*rdxF[2]*f[37]*nu[175]+0.75*rdxF[2]*f[25]*nu[165]+5.031152949374527*rdxF[0]*nu[11]*f[37]+3.354101966249685*rdxF[0]*nu[1]*f[17]+3.75*rdxF[0]*f[10]*nu[11]+1.677050983124842*nu[0]*rdxF[0]*f[10]; 
  out[38] += 1.677050983124842*rdxF[2]*f[38]*nu[175]+0.75*rdxF[2]*f[26]*nu[165]+5.031152949374527*rdxF[1]*f[38]*nu[93]+3.75*rdxF[1]*f[10]*nu[93]+3.354101966249685*rdxF[1]*f[18]*nu[83]+1.677050983124842*rdxF[1]*f[10]*nu[81]; 
  out[39] += 5.031152949374527*rdxF[2]*f[39]*nu[175]+3.75*rdxF[2]*f[8]*nu[175]+3.354101966249685*rdxF[2]*f[17]*nu[165]+1.677050983124842*rdxF[2]*f[8]*nu[162]+1.677050983124842*rdxF[0]*nu[11]*f[39]+0.75*rdxF[0]*nu[1]*f[27]; 
  out[40] += 5.031152949374527*rdxF[2]*f[40]*nu[175]+3.75*rdxF[2]*f[9]*nu[175]+3.354101966249685*rdxF[2]*f[18]*nu[165]+1.677050983124842*rdxF[2]*f[9]*nu[162]+1.677050983124842*rdxF[1]*f[40]*nu[93]+0.75*rdxF[1]*f[27]*nu[83]; 
  out[41] += 1.677050983124842*rdxF[1]*f[41]*nu[93]+0.75*rdxF[1]*f[28]*nu[83]+1.677050983124842*rdxF[0]*nu[11]*f[41]+0.75*rdxF[0]*nu[1]*f[29]; 
  out[42] += 1.677050983124842*rdxF[2]*f[42]*nu[175]+0.75*rdxF[2]*f[28]*nu[165]+1.677050983124842*rdxF[0]*nu[11]*f[42]+0.75*rdxF[0]*nu[1]*f[30]; 
  out[43] += 1.677050983124842*rdxF[2]*f[43]*nu[175]+0.75*rdxF[2]*f[29]*nu[165]+1.677050983124842*rdxF[1]*f[43]*nu[93]+0.75*rdxF[1]*f[30]*nu[83]; 
  out[44] += 5.031152949374527*rdxF[1]*f[44]*nu[93]+3.75*rdxF[1]*f[11]*nu[93]+3.354101966249684*rdxF[1]*f[19]*nu[83]+1.677050983124842*rdxF[1]*f[11]*nu[81]+5.031152949374527*rdxF[0]*nu[11]*f[44]+3.354101966249684*rdxF[0]*nu[1]*f[20]+3.75*rdxF[0]*nu[11]*f[12]+1.677050983124842*nu[0]*rdxF[0]*f[12]; 
  out[45] += 5.031152949374527*rdxF[2]*f[45]*nu[175]+3.75*rdxF[2]*f[11]*nu[175]+3.354101966249684*rdxF[2]*f[21]*nu[165]+1.677050983124842*rdxF[2]*f[11]*nu[162]+5.031152949374527*rdxF[0]*nu[11]*f[45]+3.354101966249684*rdxF[0]*nu[1]*f[23]+3.75*rdxF[0]*nu[11]*f[13]+1.677050983124842*nu[0]*rdxF[0]*f[13]; 
  out[46] += 5.031152949374527*rdxF[2]*f[46]*nu[175]+3.75*rdxF[2]*f[12]*nu[175]+3.354101966249684*rdxF[2]*f[22]*nu[165]+1.677050983124842*rdxF[2]*f[12]*nu[162]+5.031152949374527*rdxF[1]*f[46]*nu[93]+3.75*rdxF[1]*f[13]*nu[93]+3.354101966249684*rdxF[1]*f[24]*nu[83]+1.677050983124842*rdxF[1]*f[13]*nu[81]; 
  out[47] += 5.031152949374527*rdxF[0]*nu[11]*f[47]+3.354101966249684*rdxF[0]*nu[1]*f[28]+3.75*rdxF[0]*nu[11]*f[14]+1.677050983124842*nu[0]*rdxF[0]*f[14]; 
  out[48] += 5.031152949374527*rdxF[1]*f[48]*nu[93]+3.75*rdxF[1]*f[14]*nu[93]+3.354101966249684*rdxF[1]*f[29]*nu[83]+1.677050983124842*rdxF[1]*f[14]*nu[81]; 
  out[49] += 5.031152949374527*rdxF[2]*f[49]*nu[175]+3.75*rdxF[2]*f[14]*nu[175]+3.354101966249684*rdxF[2]*f[30]*nu[165]+1.677050983124842*rdxF[2]*f[14]*nu[162]; 
  out[50] += 1.677050983124842*rdxF[2]*f[50]*nu[175]+0.75*rdxF[2]*f[35]*nu[165]+1.677050983124842*rdxF[1]*f[50]*nu[93]+0.75*rdxF[1]*f[37]*nu[83]+5.031152949374527*rdxF[0]*nu[11]*f[50]+3.354101966249684*rdxF[0]*nu[1]*f[31]+3.75*rdxF[0]*nu[11]*f[18]+1.677050983124842*nu[0]*rdxF[0]*f[18]; 
  out[51] += 1.677050983124842*rdxF[2]*f[51]*nu[175]+0.75*rdxF[2]*f[36]*nu[165]+5.031152949374527*rdxF[1]*f[51]*nu[93]+3.75*rdxF[1]*f[17]*nu[93]+3.354101966249684*rdxF[1]*f[31]*nu[83]+1.677050983124842*rdxF[1]*f[17]*nu[81]+1.677050983124842*rdxF[0]*nu[11]*f[51]+0.75*rdxF[0]*nu[1]*f[38]; 
  out[52] += 5.031152949374527*rdxF[2]*f[52]*nu[175]+3.75*rdxF[2]*f[16]*nu[175]+3.354101966249684*rdxF[2]*f[31]*nu[165]+1.677050983124842*rdxF[2]*f[16]*nu[162]+1.677050983124842*rdxF[1]*f[52]*nu[93]+0.75*rdxF[1]*f[39]*nu[83]+1.677050983124842*rdxF[0]*nu[11]*f[52]+0.75*rdxF[0]*nu[1]*f[40]; 
  out[53] += 1.677050983124842*rdxF[2]*f[53]*nu[175]+0.75*rdxF[2]*f[41]*nu[165]+1.677050983124842*rdxF[1]*f[53]*nu[93]+0.75*rdxF[1]*f[42]*nu[83]+1.677050983124842*rdxF[0]*nu[11]*f[53]+0.75*rdxF[0]*nu[1]*f[43]; 
  out[54] += 1.677050983124842*rdxF[2]*f[54]*nu[175]+0.75*rdxF[2]*f[44]*nu[165]+5.031152949374527*rdxF[1]*f[54]*nu[93]+3.75*rdxF[1]*f[21]*nu[93]+3.354101966249685*rdxF[1]*f[32]*nu[83]+1.677050983124842*rdxF[1]*f[21]*nu[81]+5.031152949374527*rdxF[0]*nu[11]*f[54]+3.354101966249685*rdxF[0]*nu[1]*f[33]+3.75*rdxF[0]*nu[11]*f[22]+1.677050983124842*nu[0]*rdxF[0]*f[22]; 
  out[55] += 5.031152949374527*rdxF[2]*f[55]*nu[175]+3.75*rdxF[2]*f[19]*nu[175]+3.354101966249685*rdxF[2]*f[32]*nu[165]+1.677050983124842*rdxF[2]*f[19]*nu[162]+1.677050983124842*rdxF[1]*f[55]*nu[93]+0.75*rdxF[1]*f[45]*nu[83]+5.031152949374527*rdxF[0]*nu[11]*f[55]+3.354101966249685*rdxF[0]*nu[1]*f[34]+3.75*rdxF[0]*nu[11]*f[24]+1.677050983124842*nu[0]*rdxF[0]*f[24]; 
  out[56] += 5.031152949374527*rdxF[2]*f[56]*nu[175]+3.75*rdxF[2]*f[20]*nu[175]+3.354101966249685*rdxF[2]*f[33]*nu[165]+1.677050983124842*rdxF[2]*f[20]*nu[162]+5.031152949374527*rdxF[1]*f[56]*nu[93]+3.75*rdxF[1]*f[23]*nu[93]+3.354101966249685*rdxF[1]*f[34]*nu[83]+1.677050983124842*rdxF[1]*f[23]*nu[81]+1.677050983124842*rdxF[0]*nu[11]*f[56]+0.75*rdxF[0]*nu[1]*f[46]; 
  out[57] += 5.031152949374527*rdxF[1]*f[57]*nu[93]+3.75*rdxF[1]*f[25]*nu[93]+3.354101966249685*rdxF[1]*f[35]*nu[83]+1.677050983124842*rdxF[1]*f[25]*nu[81]+5.031152949374527*rdxF[0]*nu[11]*f[57]+3.354101966249685*rdxF[0]*nu[1]*f[36]+3.75*rdxF[0]*nu[11]*f[26]+1.677050983124842*nu[0]*rdxF[0]*f[26]; 
  out[58] += 5.031152949374527*rdxF[2]*f[58]*nu[175]+3.75*rdxF[2]*f[25]*nu[175]+3.354101966249685*rdxF[2]*f[37]*nu[165]+1.677050983124842*rdxF[2]*f[25]*nu[162]+5.031152949374527*rdxF[0]*nu[11]*f[58]+3.354101966249685*rdxF[0]*nu[1]*f[39]+3.75*rdxF[0]*nu[11]*f[27]+1.677050983124842*nu[0]*rdxF[0]*f[27]; 
  out[59] += 5.031152949374527*rdxF[2]*f[59]*nu[175]+3.75*rdxF[2]*f[26]*nu[175]+3.354101966249685*rdxF[2]*f[38]*nu[165]+1.677050983124842*rdxF[2]*f[26]*nu[162]+5.031152949374527*rdxF[1]*f[59]*nu[93]+3.75*rdxF[1]*f[27]*nu[93]+3.354101966249685*rdxF[1]*f[40]*nu[83]+1.677050983124842*rdxF[1]*f[27]*nu[81]; 
  out[60] += 1.677050983124842*rdxF[1]*f[60]*nu[93]+0.75*rdxF[1]*f[47]*nu[83]+5.031152949374527*rdxF[0]*nu[11]*f[60]+3.354101966249685*rdxF[0]*nu[1]*f[41]+3.75*rdxF[0]*nu[11]*f[29]+1.677050983124842*nu[0]*rdxF[0]*f[29]; 
  out[61] += 5.031152949374527*rdxF[1]*f[61]*nu[93]+3.75*rdxF[1]*f[28]*nu[93]+3.354101966249685*rdxF[1]*f[41]*nu[83]+1.677050983124842*rdxF[1]*f[28]*nu[81]+1.677050983124842*rdxF[0]*nu[11]*f[61]+0.75*rdxF[0]*nu[1]*f[48]; 
  out[62] += 1.677050983124842*rdxF[2]*f[62]*nu[175]+0.75*rdxF[2]*f[47]*nu[165]+5.031152949374527*rdxF[0]*nu[11]*f[62]+3.354101966249685*rdxF[0]*nu[1]*f[42]+3.75*rdxF[0]*nu[11]*f[30]+1.677050983124842*nu[0]*rdxF[0]*f[30]; 
  out[63] += 1.677050983124842*rdxF[2]*f[63]*nu[175]+0.75*rdxF[2]*f[48]*nu[165]+5.031152949374527*rdxF[1]*f[63]*nu[93]+3.75*rdxF[1]*f[30]*nu[93]+3.354101966249685*rdxF[1]*f[43]*nu[83]+1.677050983124842*rdxF[1]*f[30]*nu[81]; 
  out[64] += 5.031152949374527*rdxF[2]*f[64]*nu[175]+3.75*rdxF[2]*f[28]*nu[175]+3.354101966249685*rdxF[2]*f[42]*nu[165]+1.677050983124842*rdxF[2]*f[28]*nu[162]+1.677050983124842*rdxF[0]*nu[11]*f[64]+0.75*rdxF[0]*nu[1]*f[49]; 
  out[65] += 5.031152949374527*rdxF[2]*f[65]*nu[175]+3.75*rdxF[2]*f[29]*nu[175]+3.354101966249685*rdxF[2]*f[43]*nu[165]+1.677050983124842*rdxF[2]*f[29]*nu[162]+1.677050983124842*rdxF[1]*f[65]*nu[93]+0.75*rdxF[1]*f[49]*nu[83]; 
  out[66] += 1.677050983124842*rdxF[2]*f[66]*nu[175]+0.75*rdxF[2]*f[57]*nu[165]+5.031152949374527*rdxF[1]*f[66]*nu[93]+3.75*rdxF[1]*f[37]*nu[93]+3.354101966249684*rdxF[1]*f[50]*nu[83]+1.677050983124842*rdxF[1]*f[37]*nu[81]+5.031152949374527*rdxF[0]*nu[11]*f[66]+3.354101966249684*rdxF[0]*nu[1]*f[51]+3.75*rdxF[0]*nu[11]*f[38]+1.677050983124842*nu[0]*rdxF[0]*f[38]; 
  out[67] += 5.031152949374527*rdxF[2]*f[67]*nu[175]+3.75*rdxF[2]*f[35]*nu[175]+3.354101966249684*rdxF[2]*f[50]*nu[165]+1.677050983124842*rdxF[2]*f[35]*nu[162]+1.677050983124842*rdxF[1]*f[67]*nu[93]+0.75*rdxF[1]*f[58]*nu[83]+5.031152949374527*rdxF[0]*nu[11]*f[67]+3.354101966249684*rdxF[0]*nu[1]*f[52]+3.75*rdxF[0]*nu[11]*f[40]+1.677050983124842*nu[0]*rdxF[0]*f[40]; 
  out[68] += 5.031152949374527*rdxF[2]*f[68]*nu[175]+3.75*rdxF[2]*f[36]*nu[175]+3.354101966249684*rdxF[2]*f[51]*nu[165]+1.677050983124842*rdxF[2]*f[36]*nu[162]+5.031152949374527*rdxF[1]*f[68]*nu[93]+3.75*rdxF[1]*f[39]*nu[93]+3.354101966249684*rdxF[1]*f[52]*nu[83]+1.677050983124842*rdxF[1]*f[39]*nu[81]+1.677050983124842*rdxF[0]*nu[11]*f[68]+0.75*rdxF[0]*nu[1]*f[59]; 
  out[69] += 1.677050983124842*rdxF[2]*f[69]*nu[175]+0.75*rdxF[2]*f[60]*nu[165]+1.677050983124842*rdxF[1]*f[69]*nu[93]+0.75*rdxF[1]*f[62]*nu[83]+5.031152949374527*rdxF[0]*nu[11]*f[69]+3.354101966249684*rdxF[0]*nu[1]*f[53]+3.75*rdxF[0]*nu[11]*f[43]+1.677050983124842*nu[0]*rdxF[0]*f[43]; 
  out[70] += 1.677050983124842*rdxF[2]*f[70]*nu[175]+0.75*rdxF[2]*f[61]*nu[165]+5.031152949374527*rdxF[1]*f[70]*nu[93]+3.75*rdxF[1]*f[42]*nu[93]+3.354101966249684*rdxF[1]*f[53]*nu[83]+1.677050983124842*rdxF[1]*f[42]*nu[81]+1.677050983124842*rdxF[0]*nu[11]*f[70]+0.75*rdxF[0]*nu[1]*f[63]; 
  out[71] += 5.031152949374527*rdxF[2]*f[71]*nu[175]+3.75*rdxF[2]*f[41]*nu[175]+3.354101966249684*rdxF[2]*f[53]*nu[165]+1.677050983124842*rdxF[2]*f[41]*nu[162]+1.677050983124842*rdxF[1]*f[71]*nu[93]+0.75*rdxF[1]*f[64]*nu[83]+1.677050983124842*rdxF[0]*nu[11]*f[71]+0.75*rdxF[0]*nu[1]*f[65]; 
  out[72] += 5.031152949374527*rdxF[2]*f[72]*nu[175]+3.75*rdxF[2]*f[44]*nu[175]+3.354101966249685*rdxF[2]*f[54]*nu[165]+1.677050983124842*rdxF[2]*f[44]*nu[162]+5.031152949374527*rdxF[1]*f[72]*nu[93]+3.75*rdxF[1]*f[45]*nu[93]+3.354101966249685*rdxF[1]*f[55]*nu[83]+1.677050983124842*rdxF[1]*f[45]*nu[81]+5.031152949374527*rdxF[0]*nu[11]*f[72]+3.354101966249685*rdxF[0]*nu[1]*f[56]+3.75*rdxF[0]*nu[11]*f[46]+1.677050983124842*nu[0]*rdxF[0]*f[46]; 
  out[73] += 5.031152949374527*rdxF[1]*f[73]*nu[93]+3.75*rdxF[1]*f[47]*nu[93]+3.354101966249685*rdxF[1]*f[60]*nu[83]+1.677050983124842*rdxF[1]*f[47]*nu[81]+5.031152949374527*rdxF[0]*nu[11]*f[73]+3.354101966249685*rdxF[0]*nu[1]*f[61]+3.75*rdxF[0]*nu[11]*f[48]+1.677050983124842*nu[0]*rdxF[0]*f[48]; 
  out[74] += 5.031152949374527*rdxF[2]*f[74]*nu[175]+3.75*rdxF[2]*f[47]*nu[175]+3.354101966249685*rdxF[2]*f[62]*nu[165]+1.677050983124842*rdxF[2]*f[47]*nu[162]+5.031152949374527*rdxF[0]*nu[11]*f[74]+3.354101966249685*rdxF[0]*nu[1]*f[64]+3.75*rdxF[0]*nu[11]*f[49]+1.677050983124842*nu[0]*rdxF[0]*f[49]; 
  out[75] += 5.031152949374527*rdxF[2]*f[75]*nu[175]+3.75*rdxF[2]*f[48]*nu[175]+3.354101966249685*rdxF[2]*f[63]*nu[165]+1.677050983124842*rdxF[2]*f[48]*nu[162]+5.031152949374527*rdxF[1]*f[75]*nu[93]+3.75*rdxF[1]*f[49]*nu[93]+3.354101966249685*rdxF[1]*f[65]*nu[83]+1.677050983124842*rdxF[1]*f[49]*nu[81]; 
  out[76] += 5.031152949374527*rdxF[2]*f[76]*nu[175]+3.75*rdxF[2]*f[57]*nu[175]+3.354101966249684*rdxF[2]*f[66]*nu[165]+1.677050983124842*rdxF[2]*f[57]*nu[162]+5.031152949374527*rdxF[1]*f[76]*nu[93]+3.75*rdxF[1]*f[58]*nu[93]+3.354101966249684*rdxF[1]*f[67]*nu[83]+1.677050983124842*rdxF[1]*f[58]*nu[81]+5.031152949374527*rdxF[0]*nu[11]*f[76]+3.354101966249684*rdxF[0]*nu[1]*f[68]+3.75*rdxF[0]*nu[11]*f[59]+1.677050983124842*nu[0]*rdxF[0]*f[59]; 
  out[77] += 1.677050983124842*rdxF[2]*f[77]*nu[175]+0.75*rdxF[2]*f[73]*nu[165]+5.031152949374527*rdxF[1]*f[77]*nu[93]+3.75*rdxF[1]*f[62]*nu[93]+3.354101966249684*rdxF[1]*f[69]*nu[83]+1.677050983124842*rdxF[1]*f[62]*nu[81]+5.031152949374527*rdxF[0]*nu[11]*f[77]+3.354101966249684*rdxF[0]*nu[1]*f[70]+3.75*rdxF[0]*nu[11]*f[63]+1.677050983124842*nu[0]*rdxF[0]*f[63]; 
  out[78] += 5.031152949374527*rdxF[2]*f[78]*nu[175]+3.75*rdxF[2]*f[60]*nu[175]+3.354101966249684*rdxF[2]*f[69]*nu[165]+1.677050983124842*rdxF[2]*f[60]*nu[162]+1.677050983124842*rdxF[1]*f[78]*nu[93]+0.75*rdxF[1]*f[74]*nu[83]+5.031152949374527*rdxF[0]*nu[11]*f[78]+3.354101966249684*rdxF[0]*nu[1]*f[71]+3.75*rdxF[0]*nu[11]*f[65]+1.677050983124842*nu[0]*rdxF[0]*f[65]; 
  out[79] += 5.031152949374527*rdxF[2]*f[79]*nu[175]+3.75*rdxF[2]*f[61]*nu[175]+3.354101966249684*rdxF[2]*f[70]*nu[165]+1.677050983124842*rdxF[2]*f[61]*nu[162]+5.031152949374527*rdxF[1]*f[79]*nu[93]+3.75*rdxF[1]*f[64]*nu[93]+3.354101966249684*rdxF[1]*f[71]*nu[83]+1.677050983124842*rdxF[1]*f[64]*nu[81]+1.677050983124842*rdxF[0]*nu[11]*f[79]+0.75*rdxF[0]*nu[1]*f[75]; 
  out[80] += 5.031152949374527*rdxF[2]*f[80]*nu[175]+3.75*rdxF[2]*f[73]*nu[175]+3.354101966249684*rdxF[2]*f[77]*nu[165]+1.677050983124842*rdxF[2]*f[73]*nu[162]+5.031152949374527*rdxF[1]*f[80]*nu[93]+3.75*rdxF[1]*f[74]*nu[93]+3.354101966249684*rdxF[1]*f[78]*nu[83]+1.677050983124842*rdxF[1]*f[74]*nu[81]+5.031152949374527*rdxF[0]*nu[11]*f[80]+3.354101966249684*rdxF[0]*nu[1]*f[79]+3.75*rdxF[0]*nu[11]*f[75]+1.677050983124842*nu[0]*rdxF[0]*f[75]; 

  return (rdxF[0]*(0.390625*nu[80]-0.3493856214843422*nu[75]-0.3493856214843422*nu[74]-0.3493856214843422*nu[73]-0.3493856214843422*nu[72]+0.3125*nu[49]+0.3125*nu[48]+0.3125*nu[47]+0.3125*nu[46]+0.3125*nu[45]+0.3125*nu[44]-0.2795084971874737*nu[14]-0.2795084971874737*nu[13]-0.2795084971874737*nu[12]-0.2795084971874737*nu[11]+0.25*nu[0])+rdxF[1]*(0.390625*nu[161]-0.3493856214843422*nu[156]-0.3493856214843422*nu[155]-0.3493856214843422*nu[154]-0.3493856214843422*nu[153]+0.3125*nu[130]+0.3125*nu[129]+0.3125*nu[128]+0.3125*nu[127]+0.3125*nu[126]+0.3125*nu[125]-0.2795084971874737*nu[95]-0.2795084971874737*nu[94]-0.2795084971874737*nu[93]-0.2795084971874737*nu[92]+0.25*nu[81])+rdxF[2]*(0.390625*nu[242]-0.3493856214843422*nu[237]-0.3493856214843422*nu[236]-0.3493856214843422*nu[235]-0.3493856214843422*nu[234]+0.3125*nu[211]+0.3125*nu[210]+0.3125*nu[209]+0.3125*nu[208]+0.3125*nu[207]+0.3125*nu[206]-0.2795084971874737*nu[176]-0.2795084971874737*nu[175]-0.2795084971874737*nu[174]-0.2795084971874737*nu[173]+0.25*nu[162]))*0.9;

} 
double ConstDiffusionVarCoeffVol4xTensorP2_diffDirs24(const double *w, const double *dx, const double *nu, const double *f, double *out) 
{ 
  // w[4]:   Cell-center coordinates.
  // dx[4]:  Cell spacing.
  // nu[324]:  diffusion coefficient.
  // f:      Input distribution function.
  // out:    Incremented output 
  double rdxF[2]; 
  rdxF[0] = 4.0/(dx[1]*dx[1]); 
  rdxF[1] = 4.0/(dx[3]*dx[3]); 

  out[2] += 1.677050983124842*rdxF[0]*f[2]*nu[93]+0.75*f[0]*rdxF[0]*nu[83]; 
  out[4] += 1.677050983124842*rdxF[1]*f[4]*nu[257]+0.75*f[0]*rdxF[1]*nu[247]; 
  out[5] += 1.677050983124842*rdxF[0]*f[5]*nu[93]+0.75*rdxF[0]*f[1]*nu[83]; 
  out[7] += 1.677050983124842*rdxF[0]*f[7]*nu[93]+0.75*rdxF[0]*f[3]*nu[83]; 
  out[8] += 1.677050983124842*rdxF[1]*f[8]*nu[257]+0.75*f[1]*rdxF[1]*nu[247]; 
  out[9] += 1.677050983124842*rdxF[1]*f[9]*nu[257]+0.75*rdxF[1]*f[2]*nu[247]+1.677050983124842*rdxF[0]*f[9]*nu[93]+0.75*rdxF[0]*f[4]*nu[83]; 
  out[10] += 1.677050983124842*rdxF[1]*f[10]*nu[257]+0.75*rdxF[1]*f[3]*nu[247]; 
  out[12] += 5.031152949374527*rdxF[0]*f[12]*nu[93]+3.75*f[0]*rdxF[0]*nu[93]+3.354101966249685*rdxF[0]*f[2]*nu[83]+1.677050983124842*f[0]*rdxF[0]*nu[81]; 
  out[14] += 5.031152949374527*rdxF[1]*f[14]*nu[257]+3.75*f[0]*rdxF[1]*nu[257]+3.354101966249685*rdxF[1]*f[4]*nu[247]+1.677050983124842*f[0]*rdxF[1]*nu[243]; 
  out[15] += 1.677050983124842*rdxF[0]*f[15]*nu[93]+0.75*rdxF[0]*f[6]*nu[83]; 
  out[16] += 1.677050983124842*rdxF[1]*f[16]*nu[257]+0.75*rdxF[1]*f[5]*nu[247]+1.677050983124842*rdxF[0]*f[16]*nu[93]+0.75*rdxF[0]*f[8]*nu[83]; 
  out[17] += 1.677050983124842*rdxF[1]*f[17]*nu[257]+0.75*rdxF[1]*f[6]*nu[247]; 
  out[18] += 1.677050983124842*rdxF[1]*f[18]*nu[257]+0.75*rdxF[1]*f[7]*nu[247]+1.677050983124842*rdxF[0]*f[18]*nu[93]+0.75*rdxF[0]*f[10]*nu[83]; 
  out[19] += 1.677050983124842*rdxF[0]*f[19]*nu[93]+0.75*rdxF[0]*f[11]*nu[83]; 
  out[20] += 5.031152949374527*rdxF[0]*f[20]*nu[93]+3.75*rdxF[0]*f[1]*nu[93]+3.354101966249684*rdxF[0]*f[5]*nu[83]+1.677050983124842*rdxF[0]*f[1]*nu[81]; 
  out[22] += 5.031152949374527*rdxF[0]*f[22]*nu[93]+3.75*rdxF[0]*f[3]*nu[93]+3.354101966249684*rdxF[0]*f[7]*nu[83]+1.677050983124842*rdxF[0]*f[3]*nu[81]; 
  out[24] += 1.677050983124842*rdxF[0]*f[24]*nu[93]+0.75*rdxF[0]*f[13]*nu[83]; 
  out[25] += 1.677050983124842*rdxF[1]*f[25]*nu[257]+0.75*rdxF[1]*f[11]*nu[247]; 
  out[26] += 1.677050983124842*rdxF[1]*f[26]*nu[257]+0.75*rdxF[1]*f[12]*nu[247]+5.031152949374527*rdxF[0]*f[26]*nu[93]+3.75*rdxF[0]*f[4]*nu[93]+3.354101966249684*rdxF[0]*f[9]*nu[83]+1.677050983124842*rdxF[0]*f[4]*nu[81]; 
  out[27] += 1.677050983124842*rdxF[1]*f[27]*nu[257]+0.75*rdxF[1]*f[13]*nu[247]; 
  out[28] += 5.031152949374527*rdxF[1]*f[28]*nu[257]+3.75*f[1]*rdxF[1]*nu[257]+3.354101966249684*rdxF[1]*f[8]*nu[247]+1.677050983124842*f[1]*rdxF[1]*nu[243]; 
  out[29] += 5.031152949374527*rdxF[1]*f[29]*nu[257]+3.75*rdxF[1]*f[2]*nu[257]+3.354101966249684*rdxF[1]*f[9]*nu[247]+1.677050983124842*rdxF[1]*f[2]*nu[243]+1.677050983124842*rdxF[0]*f[29]*nu[93]+0.75*rdxF[0]*f[14]*nu[83]; 
  out[30] += 5.031152949374527*rdxF[1]*f[30]*nu[257]+3.75*rdxF[1]*f[3]*nu[257]+3.354101966249684*rdxF[1]*f[10]*nu[247]+1.677050983124842*rdxF[1]*f[3]*nu[243]; 
  out[31] += 1.677050983124842*rdxF[1]*f[31]*nu[257]+0.75*rdxF[1]*f[15]*nu[247]+1.677050983124842*rdxF[0]*f[31]*nu[93]+0.75*rdxF[0]*f[17]*nu[83]; 
  out[32] += 1.677050983124842*rdxF[0]*f[32]*nu[93]+0.75*rdxF[0]*f[21]*nu[83]; 
  out[33] += 5.031152949374527*rdxF[0]*f[33]*nu[93]+3.75*rdxF[0]*f[6]*nu[93]+3.354101966249685*rdxF[0]*f[15]*nu[83]+1.677050983124842*rdxF[0]*f[6]*nu[81]; 
  out[34] += 1.677050983124842*rdxF[0]*f[34]*nu[93]+0.75*rdxF[0]*f[23]*nu[83]; 
  out[35] += 1.677050983124842*rdxF[1]*f[35]*nu[257]+0.75*rdxF[1]*f[19]*nu[247]+1.677050983124842*rdxF[0]*f[35]*nu[93]+0.75*rdxF[0]*f[25]*nu[83]; 
  out[36] += 1.677050983124842*rdxF[1]*f[36]*nu[257]+0.75*rdxF[1]*f[20]*nu[247]+5.031152949374527*rdxF[0]*f[36]*nu[93]+3.75*rdxF[0]*f[8]*nu[93]+3.354101966249685*rdxF[0]*f[16]*nu[83]+1.677050983124842*rdxF[0]*f[8]*nu[81]; 
  out[37] += 1.677050983124842*rdxF[1]*f[37]*nu[257]+0.75*rdxF[1]*f[21]*nu[247]; 
  out[38] += 1.677050983124842*rdxF[1]*f[38]*nu[257]+0.75*rdxF[1]*f[22]*nu[247]+5.031152949374527*rdxF[0]*f[38]*nu[93]+3.75*rdxF[0]*f[10]*nu[93]+3.354101966249685*rdxF[0]*f[18]*nu[83]+1.677050983124842*rdxF[0]*f[10]*nu[81]; 
  out[39] += 1.677050983124842*rdxF[1]*f[39]*nu[257]+0.75*rdxF[1]*f[23]*nu[247]; 
  out[40] += 1.677050983124842*rdxF[1]*f[40]*nu[257]+0.75*rdxF[1]*f[24]*nu[247]+1.677050983124842*rdxF[0]*f[40]*nu[93]+0.75*rdxF[0]*f[27]*nu[83]; 
  out[41] += 5.031152949374527*rdxF[1]*f[41]*nu[257]+3.75*rdxF[1]*f[5]*nu[257]+3.354101966249685*rdxF[1]*f[16]*nu[247]+1.677050983124842*rdxF[1]*f[5]*nu[243]+1.677050983124842*rdxF[0]*f[41]*nu[93]+0.75*rdxF[0]*f[28]*nu[83]; 
  out[42] += 5.031152949374527*rdxF[1]*f[42]*nu[257]+3.75*rdxF[1]*f[6]*nu[257]+3.354101966249685*rdxF[1]*f[17]*nu[247]+1.677050983124842*rdxF[1]*f[6]*nu[243]; 
  out[43] += 5.031152949374527*rdxF[1]*f[43]*nu[257]+3.75*rdxF[1]*f[7]*nu[257]+3.354101966249685*rdxF[1]*f[18]*nu[247]+1.677050983124842*rdxF[1]*f[7]*nu[243]+1.677050983124842*rdxF[0]*f[43]*nu[93]+0.75*rdxF[0]*f[30]*nu[83]; 
  out[44] += 5.031152949374527*rdxF[0]*f[44]*nu[93]+3.75*rdxF[0]*f[11]*nu[93]+3.354101966249684*rdxF[0]*f[19]*nu[83]+1.677050983124842*rdxF[0]*f[11]*nu[81]; 
  out[46] += 5.031152949374527*rdxF[0]*f[46]*nu[93]+3.75*rdxF[0]*f[13]*nu[93]+3.354101966249684*rdxF[0]*f[24]*nu[83]+1.677050983124842*rdxF[0]*f[13]*nu[81]; 
  out[47] += 5.031152949374527*rdxF[1]*f[47]*nu[257]+3.75*rdxF[1]*f[11]*nu[257]+3.354101966249684*rdxF[1]*f[25]*nu[247]+1.677050983124842*rdxF[1]*f[11]*nu[243]; 
  out[48] += 5.031152949374527*rdxF[1]*f[48]*nu[257]+3.75*rdxF[1]*f[12]*nu[257]+3.354101966249684*rdxF[1]*f[26]*nu[247]+1.677050983124842*rdxF[1]*f[12]*nu[243]+5.031152949374527*rdxF[0]*f[48]*nu[93]+3.75*rdxF[0]*f[14]*nu[93]+3.354101966249684*rdxF[0]*f[29]*nu[83]+1.677050983124842*rdxF[0]*f[14]*nu[81]; 
  out[49] += 5.031152949374527*rdxF[1]*f[49]*nu[257]+3.75*rdxF[1]*f[13]*nu[257]+3.354101966249684*rdxF[1]*f[27]*nu[247]+1.677050983124842*rdxF[1]*f[13]*nu[243]; 
  out[50] += 1.677050983124842*rdxF[1]*f[50]*nu[257]+0.75*rdxF[1]*f[32]*nu[247]+1.677050983124842*rdxF[0]*f[50]*nu[93]+0.75*rdxF[0]*f[37]*nu[83]; 
  out[51] += 1.677050983124842*rdxF[1]*f[51]*nu[257]+0.75*rdxF[1]*f[33]*nu[247]+5.031152949374527*rdxF[0]*f[51]*nu[93]+3.75*rdxF[0]*f[17]*nu[93]+3.354101966249684*rdxF[0]*f[31]*nu[83]+1.677050983124842*rdxF[0]*f[17]*nu[81]; 
  out[52] += 1.677050983124842*rdxF[1]*f[52]*nu[257]+0.75*rdxF[1]*f[34]*nu[247]+1.677050983124842*rdxF[0]*f[52]*nu[93]+0.75*rdxF[0]*f[39]*nu[83]; 
  out[53] += 5.031152949374527*rdxF[1]*f[53]*nu[257]+3.75*rdxF[1]*f[15]*nu[257]+3.354101966249684*rdxF[1]*f[31]*nu[247]+1.677050983124842*rdxF[1]*f[15]*nu[243]+1.677050983124842*rdxF[0]*f[53]*nu[93]+0.75*rdxF[0]*f[42]*nu[83]; 
  out[54] += 5.031152949374527*rdxF[0]*f[54]*nu[93]+3.75*rdxF[0]*f[21]*nu[93]+3.354101966249685*rdxF[0]*f[32]*nu[83]+1.677050983124842*rdxF[0]*f[21]*nu[81]; 
  out[55] += 1.677050983124842*rdxF[0]*f[55]*nu[93]+0.75*rdxF[0]*f[45]*nu[83]; 
  out[56] += 5.031152949374527*rdxF[0]*f[56]*nu[93]+3.75*rdxF[0]*f[23]*nu[93]+3.354101966249685*rdxF[0]*f[34]*nu[83]+1.677050983124842*rdxF[0]*f[23]*nu[81]; 
  out[57] += 1.677050983124842*rdxF[1]*f[57]*nu[257]+0.75*rdxF[1]*f[44]*nu[247]+5.031152949374527*rdxF[0]*f[57]*nu[93]+3.75*rdxF[0]*f[25]*nu[93]+3.354101966249685*rdxF[0]*f[35]*nu[83]+1.677050983124842*rdxF[0]*f[25]*nu[81]; 
  out[58] += 1.677050983124842*rdxF[1]*f[58]*nu[257]+0.75*rdxF[1]*f[45]*nu[247]; 
  out[59] += 1.677050983124842*rdxF[1]*f[59]*nu[257]+0.75*rdxF[1]*f[46]*nu[247]+5.031152949374527*rdxF[0]*f[59]*nu[93]+3.75*rdxF[0]*f[27]*nu[93]+3.354101966249685*rdxF[0]*f[40]*nu[83]+1.677050983124842*rdxF[0]*f[27]*nu[81]; 
  out[60] += 5.031152949374527*rdxF[1]*f[60]*nu[257]+3.75*rdxF[1]*f[19]*nu[257]+3.354101966249685*rdxF[1]*f[35]*nu[247]+1.677050983124842*rdxF[1]*f[19]*nu[243]+1.677050983124842*rdxF[0]*f[60]*nu[93]+0.75*rdxF[0]*f[47]*nu[83]; 
  out[61] += 5.031152949374527*rdxF[1]*f[61]*nu[257]+3.75*rdxF[1]*f[20]*nu[257]+3.354101966249685*rdxF[1]*f[36]*nu[247]+1.677050983124842*rdxF[1]*f[20]*nu[243]+5.031152949374527*rdxF[0]*f[61]*nu[93]+3.75*rdxF[0]*f[28]*nu[93]+3.354101966249685*rdxF[0]*f[41]*nu[83]+1.677050983124842*rdxF[0]*f[28]*nu[81]; 
  out[62] += 5.031152949374527*rdxF[1]*f[62]*nu[257]+3.75*rdxF[1]*f[21]*nu[257]+3.354101966249685*rdxF[1]*f[37]*nu[247]+1.677050983124842*rdxF[1]*f[21]*nu[243]; 
  out[63] += 5.031152949374527*rdxF[1]*f[63]*nu[257]+3.75*rdxF[1]*f[22]*nu[257]+3.354101966249685*rdxF[1]*f[38]*nu[247]+1.677050983124842*rdxF[1]*f[22]*nu[243]+5.031152949374527*rdxF[0]*f[63]*nu[93]+3.75*rdxF[0]*f[30]*nu[93]+3.354101966249685*rdxF[0]*f[43]*nu[83]+1.677050983124842*rdxF[0]*f[30]*nu[81]; 
  out[64] += 5.031152949374527*rdxF[1]*f[64]*nu[257]+3.75*rdxF[1]*f[23]*nu[257]+3.354101966249685*rdxF[1]*f[39]*nu[247]+1.677050983124842*rdxF[1]*f[23]*nu[243]; 
  out[65] += 5.031152949374527*rdxF[1]*f[65]*nu[257]+3.75*rdxF[1]*f[24]*nu[257]+3.354101966249685*rdxF[1]*f[40]*nu[247]+1.677050983124842*rdxF[1]*f[24]*nu[243]+1.677050983124842*rdxF[0]*f[65]*nu[93]+0.75*rdxF[0]*f[49]*nu[83]; 
  out[66] += 1.677050983124842*rdxF[1]*f[66]*nu[257]+0.75*rdxF[1]*f[54]*nu[247]+5.031152949374527*rdxF[0]*f[66]*nu[93]+3.75*rdxF[0]*f[37]*nu[93]+3.354101966249684*rdxF[0]*f[50]*nu[83]+1.677050983124842*rdxF[0]*f[37]*nu[81]; 
  out[67] += 1.677050983124842*rdxF[1]*f[67]*nu[257]+0.75*rdxF[1]*f[55]*nu[247]+1.677050983124842*rdxF[0]*f[67]*nu[93]+0.75*rdxF[0]*f[58]*nu[83]; 
  out[68] += 1.677050983124842*rdxF[1]*f[68]*nu[257]+0.75*rdxF[1]*f[56]*nu[247]+5.031152949374527*rdxF[0]*f[68]*nu[93]+3.75*rdxF[0]*f[39]*nu[93]+3.354101966249684*rdxF[0]*f[52]*nu[83]+1.677050983124842*rdxF[0]*f[39]*nu[81]; 
  out[69] += 5.031152949374527*rdxF[1]*f[69]*nu[257]+3.75*rdxF[1]*f[32]*nu[257]+3.354101966249684*rdxF[1]*f[50]*nu[247]+1.677050983124842*rdxF[1]*f[32]*nu[243]+1.677050983124842*rdxF[0]*f[69]*nu[93]+0.75*rdxF[0]*f[62]*nu[83]; 
  out[70] += 5.031152949374527*rdxF[1]*f[70]*nu[257]+3.75*rdxF[1]*f[33]*nu[257]+3.354101966249684*rdxF[1]*f[51]*nu[247]+1.677050983124842*rdxF[1]*f[33]*nu[243]+5.031152949374527*rdxF[0]*f[70]*nu[93]+3.75*rdxF[0]*f[42]*nu[93]+3.354101966249684*rdxF[0]*f[53]*nu[83]+1.677050983124842*rdxF[0]*f[42]*nu[81]; 
  out[71] += 5.031152949374527*rdxF[1]*f[71]*nu[257]+3.75*rdxF[1]*f[34]*nu[257]+3.354101966249684*rdxF[1]*f[52]*nu[247]+1.677050983124842*rdxF[1]*f[34]*nu[243]+1.677050983124842*rdxF[0]*f[71]*nu[93]+0.75*rdxF[0]*f[64]*nu[83]; 
  out[72] += 5.031152949374527*rdxF[0]*f[72]*nu[93]+3.75*rdxF[0]*f[45]*nu[93]+3.354101966249685*rdxF[0]*f[55]*nu[83]+1.677050983124842*rdxF[0]*f[45]*nu[81]; 
  out[73] += 5.031152949374527*rdxF[1]*f[73]*nu[257]+3.75*rdxF[1]*f[44]*nu[257]+3.354101966249685*rdxF[1]*f[57]*nu[247]+1.677050983124842*rdxF[1]*f[44]*nu[243]+5.031152949374527*rdxF[0]*f[73]*nu[93]+3.75*rdxF[0]*f[47]*nu[93]+3.354101966249685*rdxF[0]*f[60]*nu[83]+1.677050983124842*rdxF[0]*f[47]*nu[81]; 
  out[74] += 5.031152949374527*rdxF[1]*f[74]*nu[257]+3.75*rdxF[1]*f[45]*nu[257]+3.354101966249685*rdxF[1]*f[58]*nu[247]+1.677050983124842*rdxF[1]*f[45]*nu[243]; 
  out[75] += 5.031152949374527*rdxF[1]*f[75]*nu[257]+3.75*rdxF[1]*f[46]*nu[257]+3.354101966249685*rdxF[1]*f[59]*nu[247]+1.677050983124842*rdxF[1]*f[46]*nu[243]+5.031152949374527*rdxF[0]*f[75]*nu[93]+3.75*rdxF[0]*f[49]*nu[93]+3.354101966249685*rdxF[0]*f[65]*nu[83]+1.677050983124842*rdxF[0]*f[49]*nu[81]; 
  out[76] += 1.677050983124842*rdxF[1]*f[76]*nu[257]+0.75*rdxF[1]*f[72]*nu[247]+5.031152949374527*rdxF[0]*f[76]*nu[93]+3.75*rdxF[0]*f[58]*nu[93]+3.354101966249684*rdxF[0]*f[67]*nu[83]+1.677050983124842*rdxF[0]*f[58]*nu[81]; 
  out[77] += 5.031152949374527*rdxF[1]*f[77]*nu[257]+3.75*rdxF[1]*f[54]*nu[257]+3.354101966249684*rdxF[1]*f[66]*nu[247]+1.677050983124842*rdxF[1]*f[54]*nu[243]+5.031152949374527*rdxF[0]*f[77]*nu[93]+3.75*rdxF[0]*f[62]*nu[93]+3.354101966249684*rdxF[0]*f[69]*nu[83]+1.677050983124842*rdxF[0]*f[62]*nu[81]; 
  out[78] += 5.031152949374527*rdxF[1]*f[78]*nu[257]+3.75*rdxF[1]*f[55]*nu[257]+3.354101966249684*rdxF[1]*f[67]*nu[247]+1.677050983124842*rdxF[1]*f[55]*nu[243]+1.677050983124842*rdxF[0]*f[78]*nu[93]+0.75*rdxF[0]*f[74]*nu[83]; 
  out[79] += 5.031152949374527*rdxF[1]*f[79]*nu[257]+3.75*rdxF[1]*f[56]*nu[257]+3.354101966249684*rdxF[1]*f[68]*nu[247]+1.677050983124842*rdxF[1]*f[56]*nu[243]+5.031152949374527*rdxF[0]*f[79]*nu[93]+3.75*rdxF[0]*f[64]*nu[93]+3.354101966249684*rdxF[0]*f[71]*nu[83]+1.677050983124842*rdxF[0]*f[64]*nu[81]; 
  out[80] += 5.031152949374527*rdxF[1]*f[80]*nu[257]+3.75*rdxF[1]*f[72]*nu[257]+3.354101966249684*rdxF[1]*f[76]*nu[247]+1.677050983124842*rdxF[1]*f[72]*nu[243]+5.031152949374527*rdxF[0]*f[80]*nu[93]+3.75*rdxF[0]*f[74]*nu[93]+3.354101966249684*rdxF[0]*f[78]*nu[83]+1.677050983124842*rdxF[0]*f[74]*nu[81]; 

  return (rdxF[0]*(0.390625*nu[161]-0.3493856214843422*nu[156]-0.3493856214843422*nu[155]-0.3493856214843422*nu[154]-0.3493856214843422*nu[153]+0.3125*nu[130]+0.3125*nu[129]+0.3125*nu[128]+0.3125*nu[127]+0.3125*nu[126]+0.3125*nu[125]-0.2795084971874737*nu[95]-0.2795084971874737*nu[94]-0.2795084971874737*nu[93]-0.2795084971874737*nu[92]+0.25*nu[81])+rdxF[1]*(0.390625*nu[323]-0.3493856214843422*nu[318]-0.3493856214843422*nu[317]-0.3493856214843422*nu[316]-0.3493856214843422*nu[315]+0.3125*nu[292]+0.3125*nu[291]+0.3125*nu[290]+0.3125*nu[289]+0.3125*nu[288]+0.3125*nu[287]-0.2795084971874737*nu[257]-0.2795084971874737*nu[256]-0.2795084971874737*nu[255]-0.2795084971874737*nu[254]+0.25*nu[243]))*0.9;

} 
double ConstDiffusionVarCoeffVol4xTensorP2_diffDirs124(const double *w, const double *dx, const double *nu, const double *f, double *out) 
{ 
  // w[4]:   Cell-center coordinates.
  // dx[4]:  Cell spacing.
  // nu[324]:  diffusion coefficient.
  // f:      Input distribution function.
  // out:    Incremented output 
  double rdxF[3]; 
  rdxF[0] = 4.0/(dx[0]*dx[0]); 
  rdxF[1] = 4.0/(dx[1]*dx[1]); 
  rdxF[2] = 4.0/(dx[3]*dx[3]); 

  out[1] += 1.677050983124842*rdxF[0]*f[1]*nu[11]+0.75*f[0]*rdxF[0]*nu[1]; 
  out[2] += 1.677050983124842*rdxF[1]*f[2]*nu[93]+0.75*f[0]*rdxF[1]*nu[83]; 
  out[4] += 1.677050983124842*rdxF[2]*f[4]*nu[257]+0.75*f[0]*rdxF[2]*nu[247]; 
  out[5] += 1.677050983124842*rdxF[1]*f[5]*nu[93]+0.75*f[1]*rdxF[1]*nu[83]+1.677050983124842*rdxF[0]*f[5]*nu[11]+0.75*rdxF[0]*nu[1]*f[2]; 
  out[6] += 1.677050983124842*rdxF[0]*f[6]*nu[11]+0.75*rdxF[0]*nu[1]*f[3]; 
  out[7] += 1.677050983124842*rdxF[1]*f[7]*nu[93]+0.75*rdxF[1]*f[3]*nu[83]; 
  out[8] += 1.677050983124842*rdxF[2]*f[8]*nu[257]+0.75*f[1]*rdxF[2]*nu[247]+1.677050983124842*rdxF[0]*f[8]*nu[11]+0.75*rdxF[0]*nu[1]*f[4]; 
  out[9] += 1.677050983124842*rdxF[2]*f[9]*nu[257]+0.75*f[2]*rdxF[2]*nu[247]+1.677050983124842*rdxF[1]*f[9]*nu[93]+0.75*rdxF[1]*f[4]*nu[83]; 
  out[10] += 1.677050983124842*rdxF[2]*f[10]*nu[257]+0.75*rdxF[2]*f[3]*nu[247]; 
  out[11] += 5.031152949374527*rdxF[0]*f[11]*nu[11]+3.75*f[0]*rdxF[0]*nu[11]+3.354101966249685*rdxF[0]*f[1]*nu[1]+1.677050983124842*f[0]*nu[0]*rdxF[0]; 
  out[12] += 5.031152949374527*rdxF[1]*f[12]*nu[93]+3.75*f[0]*rdxF[1]*nu[93]+3.354101966249685*rdxF[1]*f[2]*nu[83]+1.677050983124842*f[0]*rdxF[1]*nu[81]; 
  out[14] += 5.031152949374527*rdxF[2]*f[14]*nu[257]+3.75*f[0]*rdxF[2]*nu[257]+3.354101966249685*rdxF[2]*f[4]*nu[247]+1.677050983124842*f[0]*rdxF[2]*nu[243]; 
  out[15] += 1.677050983124842*rdxF[1]*f[15]*nu[93]+0.75*rdxF[1]*f[6]*nu[83]+1.677050983124842*rdxF[0]*nu[11]*f[15]+0.75*rdxF[0]*nu[1]*f[7]; 
  out[16] += 1.677050983124842*rdxF[2]*f[16]*nu[257]+0.75*rdxF[2]*f[5]*nu[247]+1.677050983124842*rdxF[1]*f[16]*nu[93]+0.75*rdxF[1]*f[8]*nu[83]+1.677050983124842*rdxF[0]*nu[11]*f[16]+0.75*rdxF[0]*nu[1]*f[9]; 
  out[17] += 1.677050983124842*rdxF[2]*f[17]*nu[257]+0.75*rdxF[2]*f[6]*nu[247]+1.677050983124842*rdxF[0]*nu[11]*f[17]+0.75*rdxF[0]*nu[1]*f[10]; 
  out[18] += 1.677050983124842*rdxF[2]*f[18]*nu[257]+0.75*rdxF[2]*f[7]*nu[247]+1.677050983124842*rdxF[1]*f[18]*nu[93]+0.75*rdxF[1]*f[10]*nu[83]; 
  out[19] += 1.677050983124842*rdxF[1]*f[19]*nu[93]+0.75*rdxF[1]*f[11]*nu[83]+5.031152949374527*rdxF[0]*nu[11]*f[19]+3.75*rdxF[0]*f[2]*nu[11]+3.354101966249684*rdxF[0]*nu[1]*f[5]+1.677050983124842*nu[0]*rdxF[0]*f[2]; 
  out[20] += 5.031152949374527*rdxF[1]*f[20]*nu[93]+3.75*f[1]*rdxF[1]*nu[93]+3.354101966249684*rdxF[1]*f[5]*nu[83]+1.677050983124842*f[1]*rdxF[1]*nu[81]+1.677050983124842*rdxF[0]*nu[11]*f[20]+0.75*rdxF[0]*nu[1]*f[12]; 
  out[21] += 5.031152949374527*rdxF[0]*nu[11]*f[21]+3.75*rdxF[0]*f[3]*nu[11]+3.354101966249684*rdxF[0]*nu[1]*f[6]+1.677050983124842*nu[0]*rdxF[0]*f[3]; 
  out[22] += 5.031152949374527*rdxF[1]*f[22]*nu[93]+3.75*rdxF[1]*f[3]*nu[93]+3.354101966249684*rdxF[1]*f[7]*nu[83]+1.677050983124842*rdxF[1]*f[3]*nu[81]; 
  out[23] += 1.677050983124842*rdxF[0]*nu[11]*f[23]+0.75*rdxF[0]*nu[1]*f[13]; 
  out[24] += 1.677050983124842*rdxF[1]*f[24]*nu[93]+0.75*rdxF[1]*f[13]*nu[83]; 
  out[25] += 1.677050983124842*rdxF[2]*f[25]*nu[257]+0.75*rdxF[2]*f[11]*nu[247]+5.031152949374527*rdxF[0]*nu[11]*f[25]+3.75*rdxF[0]*f[4]*nu[11]+3.354101966249684*rdxF[0]*nu[1]*f[8]+1.677050983124842*nu[0]*rdxF[0]*f[4]; 
  out[26] += 1.677050983124842*rdxF[2]*f[26]*nu[257]+0.75*rdxF[2]*f[12]*nu[247]+5.031152949374527*rdxF[1]*f[26]*nu[93]+3.75*rdxF[1]*f[4]*nu[93]+3.354101966249684*rdxF[1]*f[9]*nu[83]+1.677050983124842*rdxF[1]*f[4]*nu[81]; 
  out[27] += 1.677050983124842*rdxF[2]*f[27]*nu[257]+0.75*rdxF[2]*f[13]*nu[247]; 
  out[28] += 5.031152949374527*rdxF[2]*f[28]*nu[257]+3.75*f[1]*rdxF[2]*nu[257]+3.354101966249684*rdxF[2]*f[8]*nu[247]+1.677050983124842*f[1]*rdxF[2]*nu[243]+1.677050983124842*rdxF[0]*nu[11]*f[28]+0.75*rdxF[0]*nu[1]*f[14]; 
  out[29] += 5.031152949374527*rdxF[2]*f[29]*nu[257]+3.75*f[2]*rdxF[2]*nu[257]+3.354101966249684*rdxF[2]*f[9]*nu[247]+1.677050983124842*f[2]*rdxF[2]*nu[243]+1.677050983124842*rdxF[1]*f[29]*nu[93]+0.75*rdxF[1]*f[14]*nu[83]; 
  out[30] += 5.031152949374527*rdxF[2]*f[30]*nu[257]+3.75*rdxF[2]*f[3]*nu[257]+3.354101966249684*rdxF[2]*f[10]*nu[247]+1.677050983124842*rdxF[2]*f[3]*nu[243]; 
  out[31] += 1.677050983124842*rdxF[2]*f[31]*nu[257]+0.75*rdxF[2]*f[15]*nu[247]+1.677050983124842*rdxF[1]*f[31]*nu[93]+0.75*rdxF[1]*f[17]*nu[83]+1.677050983124842*rdxF[0]*nu[11]*f[31]+0.75*rdxF[0]*nu[1]*f[18]; 
  out[32] += 1.677050983124842*rdxF[1]*f[32]*nu[93]+0.75*rdxF[1]*f[21]*nu[83]+5.031152949374527*rdxF[0]*nu[11]*f[32]+3.354101966249685*rdxF[0]*nu[1]*f[15]+3.75*rdxF[0]*f[7]*nu[11]+1.677050983124842*nu[0]*rdxF[0]*f[7]; 
  out[33] += 5.031152949374527*rdxF[1]*f[33]*nu[93]+3.75*rdxF[1]*f[6]*nu[93]+3.354101966249685*rdxF[1]*f[15]*nu[83]+1.677050983124842*rdxF[1]*f[6]*nu[81]+1.677050983124842*rdxF[0]*nu[11]*f[33]+0.75*rdxF[0]*nu[1]*f[22]; 
  out[34] += 1.677050983124842*rdxF[1]*f[34]*nu[93]+0.75*rdxF[1]*f[23]*nu[83]+1.677050983124842*rdxF[0]*nu[11]*f[34]+0.75*rdxF[0]*nu[1]*f[24]; 
  out[35] += 1.677050983124842*rdxF[2]*f[35]*nu[257]+0.75*rdxF[2]*f[19]*nu[247]+1.677050983124842*rdxF[1]*f[35]*nu[93]+0.75*rdxF[1]*f[25]*nu[83]+5.031152949374527*rdxF[0]*nu[11]*f[35]+3.354101966249685*rdxF[0]*nu[1]*f[16]+3.75*rdxF[0]*f[9]*nu[11]+1.677050983124842*nu[0]*rdxF[0]*f[9]; 
  out[36] += 1.677050983124842*rdxF[2]*f[36]*nu[257]+0.75*rdxF[2]*f[20]*nu[247]+5.031152949374527*rdxF[1]*f[36]*nu[93]+3.75*rdxF[1]*f[8]*nu[93]+3.354101966249685*rdxF[1]*f[16]*nu[83]+1.677050983124842*rdxF[1]*f[8]*nu[81]+1.677050983124842*rdxF[0]*nu[11]*f[36]+0.75*rdxF[0]*nu[1]*f[26]; 
  out[37] += 1.677050983124842*rdxF[2]*f[37]*nu[257]+0.75*rdxF[2]*f[21]*nu[247]+5.031152949374527*rdxF[0]*nu[11]*f[37]+3.354101966249685*rdxF[0]*nu[1]*f[17]+3.75*rdxF[0]*f[10]*nu[11]+1.677050983124842*nu[0]*rdxF[0]*f[10]; 
  out[38] += 1.677050983124842*rdxF[2]*f[38]*nu[257]+0.75*rdxF[2]*f[22]*nu[247]+5.031152949374527*rdxF[1]*f[38]*nu[93]+3.75*rdxF[1]*f[10]*nu[93]+3.354101966249685*rdxF[1]*f[18]*nu[83]+1.677050983124842*rdxF[1]*f[10]*nu[81]; 
  out[39] += 1.677050983124842*rdxF[2]*f[39]*nu[257]+0.75*rdxF[2]*f[23]*nu[247]+1.677050983124842*rdxF[0]*nu[11]*f[39]+0.75*rdxF[0]*nu[1]*f[27]; 
  out[40] += 1.677050983124842*rdxF[2]*f[40]*nu[257]+0.75*rdxF[2]*f[24]*nu[247]+1.677050983124842*rdxF[1]*f[40]*nu[93]+0.75*rdxF[1]*f[27]*nu[83]; 
  out[41] += 5.031152949374527*rdxF[2]*f[41]*nu[257]+3.75*rdxF[2]*f[5]*nu[257]+3.354101966249685*rdxF[2]*f[16]*nu[247]+1.677050983124842*rdxF[2]*f[5]*nu[243]+1.677050983124842*rdxF[1]*f[41]*nu[93]+0.75*rdxF[1]*f[28]*nu[83]+1.677050983124842*rdxF[0]*nu[11]*f[41]+0.75*rdxF[0]*nu[1]*f[29]; 
  out[42] += 5.031152949374527*rdxF[2]*f[42]*nu[257]+3.75*rdxF[2]*f[6]*nu[257]+3.354101966249685*rdxF[2]*f[17]*nu[247]+1.677050983124842*rdxF[2]*f[6]*nu[243]+1.677050983124842*rdxF[0]*nu[11]*f[42]+0.75*rdxF[0]*nu[1]*f[30]; 
  out[43] += 5.031152949374527*rdxF[2]*f[43]*nu[257]+3.75*rdxF[2]*f[7]*nu[257]+3.354101966249685*rdxF[2]*f[18]*nu[247]+1.677050983124842*rdxF[2]*f[7]*nu[243]+1.677050983124842*rdxF[1]*f[43]*nu[93]+0.75*rdxF[1]*f[30]*nu[83]; 
  out[44] += 5.031152949374527*rdxF[1]*f[44]*nu[93]+3.75*rdxF[1]*f[11]*nu[93]+3.354101966249684*rdxF[1]*f[19]*nu[83]+1.677050983124842*rdxF[1]*f[11]*nu[81]+5.031152949374527*rdxF[0]*nu[11]*f[44]+3.354101966249684*rdxF[0]*nu[1]*f[20]+3.75*rdxF[0]*nu[11]*f[12]+1.677050983124842*nu[0]*rdxF[0]*f[12]; 
  out[45] += 5.031152949374527*rdxF[0]*nu[11]*f[45]+3.354101966249684*rdxF[0]*nu[1]*f[23]+3.75*rdxF[0]*nu[11]*f[13]+1.677050983124842*nu[0]*rdxF[0]*f[13]; 
  out[46] += 5.031152949374527*rdxF[1]*f[46]*nu[93]+3.75*rdxF[1]*f[13]*nu[93]+3.354101966249684*rdxF[1]*f[24]*nu[83]+1.677050983124842*rdxF[1]*f[13]*nu[81]; 
  out[47] += 5.031152949374527*rdxF[2]*f[47]*nu[257]+3.75*rdxF[2]*f[11]*nu[257]+3.354101966249684*rdxF[2]*f[25]*nu[247]+1.677050983124842*rdxF[2]*f[11]*nu[243]+5.031152949374527*rdxF[0]*nu[11]*f[47]+3.354101966249684*rdxF[0]*nu[1]*f[28]+3.75*rdxF[0]*nu[11]*f[14]+1.677050983124842*nu[0]*rdxF[0]*f[14]; 
  out[48] += 5.031152949374527*rdxF[2]*f[48]*nu[257]+3.75*rdxF[2]*f[12]*nu[257]+3.354101966249684*rdxF[2]*f[26]*nu[247]+1.677050983124842*rdxF[2]*f[12]*nu[243]+5.031152949374527*rdxF[1]*f[48]*nu[93]+3.75*rdxF[1]*f[14]*nu[93]+3.354101966249684*rdxF[1]*f[29]*nu[83]+1.677050983124842*rdxF[1]*f[14]*nu[81]; 
  out[49] += 5.031152949374527*rdxF[2]*f[49]*nu[257]+3.75*rdxF[2]*f[13]*nu[257]+3.354101966249684*rdxF[2]*f[27]*nu[247]+1.677050983124842*rdxF[2]*f[13]*nu[243]; 
  out[50] += 1.677050983124842*rdxF[2]*f[50]*nu[257]+0.75*rdxF[2]*f[32]*nu[247]+1.677050983124842*rdxF[1]*f[50]*nu[93]+0.75*rdxF[1]*f[37]*nu[83]+5.031152949374527*rdxF[0]*nu[11]*f[50]+3.354101966249684*rdxF[0]*nu[1]*f[31]+3.75*rdxF[0]*nu[11]*f[18]+1.677050983124842*nu[0]*rdxF[0]*f[18]; 
  out[51] += 1.677050983124842*rdxF[2]*f[51]*nu[257]+0.75*rdxF[2]*f[33]*nu[247]+5.031152949374527*rdxF[1]*f[51]*nu[93]+3.75*rdxF[1]*f[17]*nu[93]+3.354101966249684*rdxF[1]*f[31]*nu[83]+1.677050983124842*rdxF[1]*f[17]*nu[81]+1.677050983124842*rdxF[0]*nu[11]*f[51]+0.75*rdxF[0]*nu[1]*f[38]; 
  out[52] += 1.677050983124842*rdxF[2]*f[52]*nu[257]+0.75*rdxF[2]*f[34]*nu[247]+1.677050983124842*rdxF[1]*f[52]*nu[93]+0.75*rdxF[1]*f[39]*nu[83]+1.677050983124842*rdxF[0]*nu[11]*f[52]+0.75*rdxF[0]*nu[1]*f[40]; 
  out[53] += 5.031152949374527*rdxF[2]*f[53]*nu[257]+3.75*rdxF[2]*f[15]*nu[257]+3.354101966249684*rdxF[2]*f[31]*nu[247]+1.677050983124842*rdxF[2]*f[15]*nu[243]+1.677050983124842*rdxF[1]*f[53]*nu[93]+0.75*rdxF[1]*f[42]*nu[83]+1.677050983124842*rdxF[0]*nu[11]*f[53]+0.75*rdxF[0]*nu[1]*f[43]; 
  out[54] += 5.031152949374527*rdxF[1]*f[54]*nu[93]+3.75*rdxF[1]*f[21]*nu[93]+3.354101966249685*rdxF[1]*f[32]*nu[83]+1.677050983124842*rdxF[1]*f[21]*nu[81]+5.031152949374527*rdxF[0]*nu[11]*f[54]+3.354101966249685*rdxF[0]*nu[1]*f[33]+3.75*rdxF[0]*nu[11]*f[22]+1.677050983124842*nu[0]*rdxF[0]*f[22]; 
  out[55] += 1.677050983124842*rdxF[1]*f[55]*nu[93]+0.75*rdxF[1]*f[45]*nu[83]+5.031152949374527*rdxF[0]*nu[11]*f[55]+3.354101966249685*rdxF[0]*nu[1]*f[34]+3.75*rdxF[0]*nu[11]*f[24]+1.677050983124842*nu[0]*rdxF[0]*f[24]; 
  out[56] += 5.031152949374527*rdxF[1]*f[56]*nu[93]+3.75*rdxF[1]*f[23]*nu[93]+3.354101966249685*rdxF[1]*f[34]*nu[83]+1.677050983124842*rdxF[1]*f[23]*nu[81]+1.677050983124842*rdxF[0]*nu[11]*f[56]+0.75*rdxF[0]*nu[1]*f[46]; 
  out[57] += 1.677050983124842*rdxF[2]*f[57]*nu[257]+0.75*rdxF[2]*f[44]*nu[247]+5.031152949374527*rdxF[1]*f[57]*nu[93]+3.75*rdxF[1]*f[25]*nu[93]+3.354101966249685*rdxF[1]*f[35]*nu[83]+1.677050983124842*rdxF[1]*f[25]*nu[81]+5.031152949374527*rdxF[0]*nu[11]*f[57]+3.354101966249685*rdxF[0]*nu[1]*f[36]+3.75*rdxF[0]*nu[11]*f[26]+1.677050983124842*nu[0]*rdxF[0]*f[26]; 
  out[58] += 1.677050983124842*rdxF[2]*f[58]*nu[257]+0.75*rdxF[2]*f[45]*nu[247]+5.031152949374527*rdxF[0]*nu[11]*f[58]+3.354101966249685*rdxF[0]*nu[1]*f[39]+3.75*rdxF[0]*nu[11]*f[27]+1.677050983124842*nu[0]*rdxF[0]*f[27]; 
  out[59] += 1.677050983124842*rdxF[2]*f[59]*nu[257]+0.75*rdxF[2]*f[46]*nu[247]+5.031152949374527*rdxF[1]*f[59]*nu[93]+3.75*rdxF[1]*f[27]*nu[93]+3.354101966249685*rdxF[1]*f[40]*nu[83]+1.677050983124842*rdxF[1]*f[27]*nu[81]; 
  out[60] += 5.031152949374527*rdxF[2]*f[60]*nu[257]+3.75*rdxF[2]*f[19]*nu[257]+3.354101966249685*rdxF[2]*f[35]*nu[247]+1.677050983124842*rdxF[2]*f[19]*nu[243]+1.677050983124842*rdxF[1]*f[60]*nu[93]+0.75*rdxF[1]*f[47]*nu[83]+5.031152949374527*rdxF[0]*nu[11]*f[60]+3.354101966249685*rdxF[0]*nu[1]*f[41]+3.75*rdxF[0]*nu[11]*f[29]+1.677050983124842*nu[0]*rdxF[0]*f[29]; 
  out[61] += 5.031152949374527*rdxF[2]*f[61]*nu[257]+3.75*rdxF[2]*f[20]*nu[257]+3.354101966249685*rdxF[2]*f[36]*nu[247]+1.677050983124842*rdxF[2]*f[20]*nu[243]+5.031152949374527*rdxF[1]*f[61]*nu[93]+3.75*rdxF[1]*f[28]*nu[93]+3.354101966249685*rdxF[1]*f[41]*nu[83]+1.677050983124842*rdxF[1]*f[28]*nu[81]+1.677050983124842*rdxF[0]*nu[11]*f[61]+0.75*rdxF[0]*nu[1]*f[48]; 
  out[62] += 5.031152949374527*rdxF[2]*f[62]*nu[257]+3.75*rdxF[2]*f[21]*nu[257]+3.354101966249685*rdxF[2]*f[37]*nu[247]+1.677050983124842*rdxF[2]*f[21]*nu[243]+5.031152949374527*rdxF[0]*nu[11]*f[62]+3.354101966249685*rdxF[0]*nu[1]*f[42]+3.75*rdxF[0]*nu[11]*f[30]+1.677050983124842*nu[0]*rdxF[0]*f[30]; 
  out[63] += 5.031152949374527*rdxF[2]*f[63]*nu[257]+3.75*rdxF[2]*f[22]*nu[257]+3.354101966249685*rdxF[2]*f[38]*nu[247]+1.677050983124842*rdxF[2]*f[22]*nu[243]+5.031152949374527*rdxF[1]*f[63]*nu[93]+3.75*rdxF[1]*f[30]*nu[93]+3.354101966249685*rdxF[1]*f[43]*nu[83]+1.677050983124842*rdxF[1]*f[30]*nu[81]; 
  out[64] += 5.031152949374527*rdxF[2]*f[64]*nu[257]+3.75*rdxF[2]*f[23]*nu[257]+3.354101966249685*rdxF[2]*f[39]*nu[247]+1.677050983124842*rdxF[2]*f[23]*nu[243]+1.677050983124842*rdxF[0]*nu[11]*f[64]+0.75*rdxF[0]*nu[1]*f[49]; 
  out[65] += 5.031152949374527*rdxF[2]*f[65]*nu[257]+3.75*rdxF[2]*f[24]*nu[257]+3.354101966249685*rdxF[2]*f[40]*nu[247]+1.677050983124842*rdxF[2]*f[24]*nu[243]+1.677050983124842*rdxF[1]*f[65]*nu[93]+0.75*rdxF[1]*f[49]*nu[83]; 
  out[66] += 1.677050983124842*rdxF[2]*f[66]*nu[257]+0.75*rdxF[2]*f[54]*nu[247]+5.031152949374527*rdxF[1]*f[66]*nu[93]+3.75*rdxF[1]*f[37]*nu[93]+3.354101966249684*rdxF[1]*f[50]*nu[83]+1.677050983124842*rdxF[1]*f[37]*nu[81]+5.031152949374527*rdxF[0]*nu[11]*f[66]+3.354101966249684*rdxF[0]*nu[1]*f[51]+3.75*rdxF[0]*nu[11]*f[38]+1.677050983124842*nu[0]*rdxF[0]*f[38]; 
  out[67] += 1.677050983124842*rdxF[2]*f[67]*nu[257]+0.75*rdxF[2]*f[55]*nu[247]+1.677050983124842*rdxF[1]*f[67]*nu[93]+0.75*rdxF[1]*f[58]*nu[83]+5.031152949374527*rdxF[0]*nu[11]*f[67]+3.354101966249684*rdxF[0]*nu[1]*f[52]+3.75*rdxF[0]*nu[11]*f[40]+1.677050983124842*nu[0]*rdxF[0]*f[40]; 
  out[68] += 1.677050983124842*rdxF[2]*f[68]*nu[257]+0.75*rdxF[2]*f[56]*nu[247]+5.031152949374527*rdxF[1]*f[68]*nu[93]+3.75*rdxF[1]*f[39]*nu[93]+3.354101966249684*rdxF[1]*f[52]*nu[83]+1.677050983124842*rdxF[1]*f[39]*nu[81]+1.677050983124842*rdxF[0]*nu[11]*f[68]+0.75*rdxF[0]*nu[1]*f[59]; 
  out[69] += 5.031152949374527*rdxF[2]*f[69]*nu[257]+3.75*rdxF[2]*f[32]*nu[257]+3.354101966249684*rdxF[2]*f[50]*nu[247]+1.677050983124842*rdxF[2]*f[32]*nu[243]+1.677050983124842*rdxF[1]*f[69]*nu[93]+0.75*rdxF[1]*f[62]*nu[83]+5.031152949374527*rdxF[0]*nu[11]*f[69]+3.354101966249684*rdxF[0]*nu[1]*f[53]+3.75*rdxF[0]*nu[11]*f[43]+1.677050983124842*nu[0]*rdxF[0]*f[43]; 
  out[70] += 5.031152949374527*rdxF[2]*f[70]*nu[257]+3.75*rdxF[2]*f[33]*nu[257]+3.354101966249684*rdxF[2]*f[51]*nu[247]+1.677050983124842*rdxF[2]*f[33]*nu[243]+5.031152949374527*rdxF[1]*f[70]*nu[93]+3.75*rdxF[1]*f[42]*nu[93]+3.354101966249684*rdxF[1]*f[53]*nu[83]+1.677050983124842*rdxF[1]*f[42]*nu[81]+1.677050983124842*rdxF[0]*nu[11]*f[70]+0.75*rdxF[0]*nu[1]*f[63]; 
  out[71] += 5.031152949374527*rdxF[2]*f[71]*nu[257]+3.75*rdxF[2]*f[34]*nu[257]+3.354101966249684*rdxF[2]*f[52]*nu[247]+1.677050983124842*rdxF[2]*f[34]*nu[243]+1.677050983124842*rdxF[1]*f[71]*nu[93]+0.75*rdxF[1]*f[64]*nu[83]+1.677050983124842*rdxF[0]*nu[11]*f[71]+0.75*rdxF[0]*nu[1]*f[65]; 
  out[72] += 5.031152949374527*rdxF[1]*f[72]*nu[93]+3.75*rdxF[1]*f[45]*nu[93]+3.354101966249685*rdxF[1]*f[55]*nu[83]+1.677050983124842*rdxF[1]*f[45]*nu[81]+5.031152949374527*rdxF[0]*nu[11]*f[72]+3.354101966249685*rdxF[0]*nu[1]*f[56]+3.75*rdxF[0]*nu[11]*f[46]+1.677050983124842*nu[0]*rdxF[0]*f[46]; 
  out[73] += 5.031152949374527*rdxF[2]*f[73]*nu[257]+3.75*rdxF[2]*f[44]*nu[257]+3.354101966249685*rdxF[2]*f[57]*nu[247]+1.677050983124842*rdxF[2]*f[44]*nu[243]+5.031152949374527*rdxF[1]*f[73]*nu[93]+3.75*rdxF[1]*f[47]*nu[93]+3.354101966249685*rdxF[1]*f[60]*nu[83]+1.677050983124842*rdxF[1]*f[47]*nu[81]+5.031152949374527*rdxF[0]*nu[11]*f[73]+3.354101966249685*rdxF[0]*nu[1]*f[61]+3.75*rdxF[0]*nu[11]*f[48]+1.677050983124842*nu[0]*rdxF[0]*f[48]; 
  out[74] += 5.031152949374527*rdxF[2]*f[74]*nu[257]+3.75*rdxF[2]*f[45]*nu[257]+3.354101966249685*rdxF[2]*f[58]*nu[247]+1.677050983124842*rdxF[2]*f[45]*nu[243]+5.031152949374527*rdxF[0]*nu[11]*f[74]+3.354101966249685*rdxF[0]*nu[1]*f[64]+3.75*rdxF[0]*nu[11]*f[49]+1.677050983124842*nu[0]*rdxF[0]*f[49]; 
  out[75] += 5.031152949374527*rdxF[2]*f[75]*nu[257]+3.75*rdxF[2]*f[46]*nu[257]+3.354101966249685*rdxF[2]*f[59]*nu[247]+1.677050983124842*rdxF[2]*f[46]*nu[243]+5.031152949374527*rdxF[1]*f[75]*nu[93]+3.75*rdxF[1]*f[49]*nu[93]+3.354101966249685*rdxF[1]*f[65]*nu[83]+1.677050983124842*rdxF[1]*f[49]*nu[81]; 
  out[76] += 1.677050983124842*rdxF[2]*f[76]*nu[257]+0.75*rdxF[2]*f[72]*nu[247]+5.031152949374527*rdxF[1]*f[76]*nu[93]+3.75*rdxF[1]*f[58]*nu[93]+3.354101966249684*rdxF[1]*f[67]*nu[83]+1.677050983124842*rdxF[1]*f[58]*nu[81]+5.031152949374527*rdxF[0]*nu[11]*f[76]+3.354101966249684*rdxF[0]*nu[1]*f[68]+3.75*rdxF[0]*nu[11]*f[59]+1.677050983124842*nu[0]*rdxF[0]*f[59]; 
  out[77] += 5.031152949374527*rdxF[2]*f[77]*nu[257]+3.75*rdxF[2]*f[54]*nu[257]+3.354101966249684*rdxF[2]*f[66]*nu[247]+1.677050983124842*rdxF[2]*f[54]*nu[243]+5.031152949374527*rdxF[1]*f[77]*nu[93]+3.75*rdxF[1]*f[62]*nu[93]+3.354101966249684*rdxF[1]*f[69]*nu[83]+1.677050983124842*rdxF[1]*f[62]*nu[81]+5.031152949374527*rdxF[0]*nu[11]*f[77]+3.354101966249684*rdxF[0]*nu[1]*f[70]+3.75*rdxF[0]*nu[11]*f[63]+1.677050983124842*nu[0]*rdxF[0]*f[63]; 
  out[78] += 5.031152949374527*rdxF[2]*f[78]*nu[257]+3.75*rdxF[2]*f[55]*nu[257]+3.354101966249684*rdxF[2]*f[67]*nu[247]+1.677050983124842*rdxF[2]*f[55]*nu[243]+1.677050983124842*rdxF[1]*f[78]*nu[93]+0.75*rdxF[1]*f[74]*nu[83]+5.031152949374527*rdxF[0]*nu[11]*f[78]+3.354101966249684*rdxF[0]*nu[1]*f[71]+3.75*rdxF[0]*nu[11]*f[65]+1.677050983124842*nu[0]*rdxF[0]*f[65]; 
  out[79] += 5.031152949374527*rdxF[2]*f[79]*nu[257]+3.75*rdxF[2]*f[56]*nu[257]+3.354101966249684*rdxF[2]*f[68]*nu[247]+1.677050983124842*rdxF[2]*f[56]*nu[243]+5.031152949374527*rdxF[1]*f[79]*nu[93]+3.75*rdxF[1]*f[64]*nu[93]+3.354101966249684*rdxF[1]*f[71]*nu[83]+1.677050983124842*rdxF[1]*f[64]*nu[81]+1.677050983124842*rdxF[0]*nu[11]*f[79]+0.75*rdxF[0]*nu[1]*f[75]; 
  out[80] += 5.031152949374527*rdxF[2]*f[80]*nu[257]+3.75*rdxF[2]*f[72]*nu[257]+3.354101966249684*rdxF[2]*f[76]*nu[247]+1.677050983124842*rdxF[2]*f[72]*nu[243]+5.031152949374527*rdxF[1]*f[80]*nu[93]+3.75*rdxF[1]*f[74]*nu[93]+3.354101966249684*rdxF[1]*f[78]*nu[83]+1.677050983124842*rdxF[1]*f[74]*nu[81]+5.031152949374527*rdxF[0]*nu[11]*f[80]+3.354101966249684*rdxF[0]*nu[1]*f[79]+3.75*rdxF[0]*nu[11]*f[75]+1.677050983124842*nu[0]*rdxF[0]*f[75]; 

  return (rdxF[0]*(0.390625*nu[80]-0.3493856214843422*nu[75]-0.3493856214843422*nu[74]-0.3493856214843422*nu[73]-0.3493856214843422*nu[72]+0.3125*nu[49]+0.3125*nu[48]+0.3125*nu[47]+0.3125*nu[46]+0.3125*nu[45]+0.3125*nu[44]-0.2795084971874737*nu[14]-0.2795084971874737*nu[13]-0.2795084971874737*nu[12]-0.2795084971874737*nu[11]+0.25*nu[0])+rdxF[1]*(0.390625*nu[161]-0.3493856214843422*nu[156]-0.3493856214843422*nu[155]-0.3493856214843422*nu[154]-0.3493856214843422*nu[153]+0.3125*nu[130]+0.3125*nu[129]+0.3125*nu[128]+0.3125*nu[127]+0.3125*nu[126]+0.3125*nu[125]-0.2795084971874737*nu[95]-0.2795084971874737*nu[94]-0.2795084971874737*nu[93]-0.2795084971874737*nu[92]+0.25*nu[81])+rdxF[2]*(0.390625*nu[323]-0.3493856214843422*nu[318]-0.3493856214843422*nu[317]-0.3493856214843422*nu[316]-0.3493856214843422*nu[315]+0.3125*nu[292]+0.3125*nu[291]+0.3125*nu[290]+0.3125*nu[289]+0.3125*nu[288]+0.3125*nu[287]-0.2795084971874737*nu[257]-0.2795084971874737*nu[256]-0.2795084971874737*nu[255]-0.2795084971874737*nu[254]+0.25*nu[243]))*0.9;

} 
double ConstDiffusionVarCoeffVol4xTensorP2_diffDirs12(const double *w, const double *dx, const double *nu, const double *f, double *out) 
{ 
  // w[4]:   Cell-center coordinates.
  // dx[4]:  Cell spacing.
  // nu[324]:  diffusion coefficient.
  // f:      Input distribution function.
  // out:    Incremented output 
  double rdxF[2]; 
  rdxF[0] = 4.0/(dx[0]*dx[0]); 
  rdxF[1] = 4.0/(dx[1]*dx[1]); 

  out[1] += 1.677050983124842*rdxF[0]*f[1]*nu[11]+0.75*f[0]*rdxF[0]*nu[1]; 
  out[2] += 1.677050983124842*rdxF[1]*f[2]*nu[93]+0.75*f[0]*rdxF[1]*nu[83]; 
  out[5] += 1.677050983124842*rdxF[1]*f[5]*nu[93]+0.75*f[1]*rdxF[1]*nu[83]+1.677050983124842*rdxF[0]*f[5]*nu[11]+0.75*rdxF[0]*nu[1]*f[2]; 
  out[6] += 1.677050983124842*rdxF[0]*f[6]*nu[11]+0.75*rdxF[0]*nu[1]*f[3]; 
  out[7] += 1.677050983124842*rdxF[1]*f[7]*nu[93]+0.75*rdxF[1]*f[3]*nu[83]; 
  out[8] += 1.677050983124842*rdxF[0]*f[8]*nu[11]+0.75*rdxF[0]*nu[1]*f[4]; 
  out[9] += 1.677050983124842*rdxF[1]*f[9]*nu[93]+0.75*rdxF[1]*f[4]*nu[83]; 
  out[11] += 5.031152949374527*rdxF[0]*f[11]*nu[11]+3.75*f[0]*rdxF[0]*nu[11]+3.354101966249685*rdxF[0]*f[1]*nu[1]+1.677050983124842*f[0]*nu[0]*rdxF[0]; 
  out[12] += 5.031152949374527*rdxF[1]*f[12]*nu[93]+3.75*f[0]*rdxF[1]*nu[93]+3.354101966249685*rdxF[1]*f[2]*nu[83]+1.677050983124842*f[0]*rdxF[1]*nu[81]; 
  out[15] += 1.677050983124842*rdxF[1]*f[15]*nu[93]+0.75*rdxF[1]*f[6]*nu[83]+1.677050983124842*rdxF[0]*nu[11]*f[15]+0.75*rdxF[0]*nu[1]*f[7]; 
  out[16] += 1.677050983124842*rdxF[1]*f[16]*nu[93]+0.75*rdxF[1]*f[8]*nu[83]+1.677050983124842*rdxF[0]*nu[11]*f[16]+0.75*rdxF[0]*nu[1]*f[9]; 
  out[17] += 1.677050983124842*rdxF[0]*nu[11]*f[17]+0.75*rdxF[0]*nu[1]*f[10]; 
  out[18] += 1.677050983124842*rdxF[1]*f[18]*nu[93]+0.75*rdxF[1]*f[10]*nu[83]; 
  out[19] += 1.677050983124842*rdxF[1]*f[19]*nu[93]+0.75*rdxF[1]*f[11]*nu[83]+5.031152949374527*rdxF[0]*nu[11]*f[19]+3.75*rdxF[0]*f[2]*nu[11]+3.354101966249684*rdxF[0]*nu[1]*f[5]+1.677050983124842*nu[0]*rdxF[0]*f[2]; 
  out[20] += 5.031152949374527*rdxF[1]*f[20]*nu[93]+3.75*f[1]*rdxF[1]*nu[93]+3.354101966249684*rdxF[1]*f[5]*nu[83]+1.677050983124842*f[1]*rdxF[1]*nu[81]+1.677050983124842*rdxF[0]*nu[11]*f[20]+0.75*rdxF[0]*nu[1]*f[12]; 
  out[21] += 5.031152949374527*rdxF[0]*nu[11]*f[21]+3.75*rdxF[0]*f[3]*nu[11]+3.354101966249684*rdxF[0]*nu[1]*f[6]+1.677050983124842*nu[0]*rdxF[0]*f[3]; 
  out[22] += 5.031152949374527*rdxF[1]*f[22]*nu[93]+3.75*rdxF[1]*f[3]*nu[93]+3.354101966249684*rdxF[1]*f[7]*nu[83]+1.677050983124842*rdxF[1]*f[3]*nu[81]; 
  out[23] += 1.677050983124842*rdxF[0]*nu[11]*f[23]+0.75*rdxF[0]*nu[1]*f[13]; 
  out[24] += 1.677050983124842*rdxF[1]*f[24]*nu[93]+0.75*rdxF[1]*f[13]*nu[83]; 
  out[25] += 5.031152949374527*rdxF[0]*nu[11]*f[25]+3.75*rdxF[0]*f[4]*nu[11]+3.354101966249684*rdxF[0]*nu[1]*f[8]+1.677050983124842*nu[0]*rdxF[0]*f[4]; 
  out[26] += 5.031152949374527*rdxF[1]*f[26]*nu[93]+3.75*rdxF[1]*f[4]*nu[93]+3.354101966249684*rdxF[1]*f[9]*nu[83]+1.677050983124842*rdxF[1]*f[4]*nu[81]; 
  out[28] += 1.677050983124842*rdxF[0]*nu[11]*f[28]+0.75*rdxF[0]*nu[1]*f[14]; 
  out[29] += 1.677050983124842*rdxF[1]*f[29]*nu[93]+0.75*rdxF[1]*f[14]*nu[83]; 
  out[31] += 1.677050983124842*rdxF[1]*f[31]*nu[93]+0.75*rdxF[1]*f[17]*nu[83]+1.677050983124842*rdxF[0]*nu[11]*f[31]+0.75*rdxF[0]*nu[1]*f[18]; 
  out[32] += 1.677050983124842*rdxF[1]*f[32]*nu[93]+0.75*rdxF[1]*f[21]*nu[83]+5.031152949374527*rdxF[0]*nu[11]*f[32]+3.354101966249685*rdxF[0]*nu[1]*f[15]+3.75*rdxF[0]*f[7]*nu[11]+1.677050983124842*nu[0]*rdxF[0]*f[7]; 
  out[33] += 5.031152949374527*rdxF[1]*f[33]*nu[93]+3.75*rdxF[1]*f[6]*nu[93]+3.354101966249685*rdxF[1]*f[15]*nu[83]+1.677050983124842*rdxF[1]*f[6]*nu[81]+1.677050983124842*rdxF[0]*nu[11]*f[33]+0.75*rdxF[0]*nu[1]*f[22]; 
  out[34] += 1.677050983124842*rdxF[1]*f[34]*nu[93]+0.75*rdxF[1]*f[23]*nu[83]+1.677050983124842*rdxF[0]*nu[11]*f[34]+0.75*rdxF[0]*nu[1]*f[24]; 
  out[35] += 1.677050983124842*rdxF[1]*f[35]*nu[93]+0.75*rdxF[1]*f[25]*nu[83]+5.031152949374527*rdxF[0]*nu[11]*f[35]+3.354101966249685*rdxF[0]*nu[1]*f[16]+3.75*rdxF[0]*f[9]*nu[11]+1.677050983124842*nu[0]*rdxF[0]*f[9]; 
  out[36] += 5.031152949374527*rdxF[1]*f[36]*nu[93]+3.75*rdxF[1]*f[8]*nu[93]+3.354101966249685*rdxF[1]*f[16]*nu[83]+1.677050983124842*rdxF[1]*f[8]*nu[81]+1.677050983124842*rdxF[0]*nu[11]*f[36]+0.75*rdxF[0]*nu[1]*f[26]; 
  out[37] += 5.031152949374527*rdxF[0]*nu[11]*f[37]+3.354101966249685*rdxF[0]*nu[1]*f[17]+3.75*rdxF[0]*f[10]*nu[11]+1.677050983124842*nu[0]*rdxF[0]*f[10]; 
  out[38] += 5.031152949374527*rdxF[1]*f[38]*nu[93]+3.75*rdxF[1]*f[10]*nu[93]+3.354101966249685*rdxF[1]*f[18]*nu[83]+1.677050983124842*rdxF[1]*f[10]*nu[81]; 
  out[39] += 1.677050983124842*rdxF[0]*nu[11]*f[39]+0.75*rdxF[0]*nu[1]*f[27]; 
  out[40] += 1.677050983124842*rdxF[1]*f[40]*nu[93]+0.75*rdxF[1]*f[27]*nu[83]; 
  out[41] += 1.677050983124842*rdxF[1]*f[41]*nu[93]+0.75*rdxF[1]*f[28]*nu[83]+1.677050983124842*rdxF[0]*nu[11]*f[41]+0.75*rdxF[0]*nu[1]*f[29]; 
  out[42] += 1.677050983124842*rdxF[0]*nu[11]*f[42]+0.75*rdxF[0]*nu[1]*f[30]; 
  out[43] += 1.677050983124842*rdxF[1]*f[43]*nu[93]+0.75*rdxF[1]*f[30]*nu[83]; 
  out[44] += 5.031152949374527*rdxF[1]*f[44]*nu[93]+3.75*rdxF[1]*f[11]*nu[93]+3.354101966249684*rdxF[1]*f[19]*nu[83]+1.677050983124842*rdxF[1]*f[11]*nu[81]+5.031152949374527*rdxF[0]*nu[11]*f[44]+3.354101966249684*rdxF[0]*nu[1]*f[20]+3.75*rdxF[0]*nu[11]*f[12]+1.677050983124842*nu[0]*rdxF[0]*f[12]; 
  out[45] += 5.031152949374527*rdxF[0]*nu[11]*f[45]+3.354101966249684*rdxF[0]*nu[1]*f[23]+3.75*rdxF[0]*nu[11]*f[13]+1.677050983124842*nu[0]*rdxF[0]*f[13]; 
  out[46] += 5.031152949374527*rdxF[1]*f[46]*nu[93]+3.75*rdxF[1]*f[13]*nu[93]+3.354101966249684*rdxF[1]*f[24]*nu[83]+1.677050983124842*rdxF[1]*f[13]*nu[81]; 
  out[47] += 5.031152949374527*rdxF[0]*nu[11]*f[47]+3.354101966249684*rdxF[0]*nu[1]*f[28]+3.75*rdxF[0]*nu[11]*f[14]+1.677050983124842*nu[0]*rdxF[0]*f[14]; 
  out[48] += 5.031152949374527*rdxF[1]*f[48]*nu[93]+3.75*rdxF[1]*f[14]*nu[93]+3.354101966249684*rdxF[1]*f[29]*nu[83]+1.677050983124842*rdxF[1]*f[14]*nu[81]; 
  out[50] += 1.677050983124842*rdxF[1]*f[50]*nu[93]+0.75*rdxF[1]*f[37]*nu[83]+5.031152949374527*rdxF[0]*nu[11]*f[50]+3.354101966249684*rdxF[0]*nu[1]*f[31]+3.75*rdxF[0]*nu[11]*f[18]+1.677050983124842*nu[0]*rdxF[0]*f[18]; 
  out[51] += 5.031152949374527*rdxF[1]*f[51]*nu[93]+3.75*rdxF[1]*f[17]*nu[93]+3.354101966249684*rdxF[1]*f[31]*nu[83]+1.677050983124842*rdxF[1]*f[17]*nu[81]+1.677050983124842*rdxF[0]*nu[11]*f[51]+0.75*rdxF[0]*nu[1]*f[38]; 
  out[52] += 1.677050983124842*rdxF[1]*f[52]*nu[93]+0.75*rdxF[1]*f[39]*nu[83]+1.677050983124842*rdxF[0]*nu[11]*f[52]+0.75*rdxF[0]*nu[1]*f[40]; 
  out[53] += 1.677050983124842*rdxF[1]*f[53]*nu[93]+0.75*rdxF[1]*f[42]*nu[83]+1.677050983124842*rdxF[0]*nu[11]*f[53]+0.75*rdxF[0]*nu[1]*f[43]; 
  out[54] += 5.031152949374527*rdxF[1]*f[54]*nu[93]+3.75*rdxF[1]*f[21]*nu[93]+3.354101966249685*rdxF[1]*f[32]*nu[83]+1.677050983124842*rdxF[1]*f[21]*nu[81]+5.031152949374527*rdxF[0]*nu[11]*f[54]+3.354101966249685*rdxF[0]*nu[1]*f[33]+3.75*rdxF[0]*nu[11]*f[22]+1.677050983124842*nu[0]*rdxF[0]*f[22]; 
  out[55] += 1.677050983124842*rdxF[1]*f[55]*nu[93]+0.75*rdxF[1]*f[45]*nu[83]+5.031152949374527*rdxF[0]*nu[11]*f[55]+3.354101966249685*rdxF[0]*nu[1]*f[34]+3.75*rdxF[0]*nu[11]*f[24]+1.677050983124842*nu[0]*rdxF[0]*f[24]; 
  out[56] += 5.031152949374527*rdxF[1]*f[56]*nu[93]+3.75*rdxF[1]*f[23]*nu[93]+3.354101966249685*rdxF[1]*f[34]*nu[83]+1.677050983124842*rdxF[1]*f[23]*nu[81]+1.677050983124842*rdxF[0]*nu[11]*f[56]+0.75*rdxF[0]*nu[1]*f[46]; 
  out[57] += 5.031152949374527*rdxF[1]*f[57]*nu[93]+3.75*rdxF[1]*f[25]*nu[93]+3.354101966249685*rdxF[1]*f[35]*nu[83]+1.677050983124842*rdxF[1]*f[25]*nu[81]+5.031152949374527*rdxF[0]*nu[11]*f[57]+3.354101966249685*rdxF[0]*nu[1]*f[36]+3.75*rdxF[0]*nu[11]*f[26]+1.677050983124842*nu[0]*rdxF[0]*f[26]; 
  out[58] += 5.031152949374527*rdxF[0]*nu[11]*f[58]+3.354101966249685*rdxF[0]*nu[1]*f[39]+3.75*rdxF[0]*nu[11]*f[27]+1.677050983124842*nu[0]*rdxF[0]*f[27]; 
  out[59] += 5.031152949374527*rdxF[1]*f[59]*nu[93]+3.75*rdxF[1]*f[27]*nu[93]+3.354101966249685*rdxF[1]*f[40]*nu[83]+1.677050983124842*rdxF[1]*f[27]*nu[81]; 
  out[60] += 1.677050983124842*rdxF[1]*f[60]*nu[93]+0.75*rdxF[1]*f[47]*nu[83]+5.031152949374527*rdxF[0]*nu[11]*f[60]+3.354101966249685*rdxF[0]*nu[1]*f[41]+3.75*rdxF[0]*nu[11]*f[29]+1.677050983124842*nu[0]*rdxF[0]*f[29]; 
  out[61] += 5.031152949374527*rdxF[1]*f[61]*nu[93]+3.75*rdxF[1]*f[28]*nu[93]+3.354101966249685*rdxF[1]*f[41]*nu[83]+1.677050983124842*rdxF[1]*f[28]*nu[81]+1.677050983124842*rdxF[0]*nu[11]*f[61]+0.75*rdxF[0]*nu[1]*f[48]; 
  out[62] += 5.031152949374527*rdxF[0]*nu[11]*f[62]+3.354101966249685*rdxF[0]*nu[1]*f[42]+3.75*rdxF[0]*nu[11]*f[30]+1.677050983124842*nu[0]*rdxF[0]*f[30]; 
  out[63] += 5.031152949374527*rdxF[1]*f[63]*nu[93]+3.75*rdxF[1]*f[30]*nu[93]+3.354101966249685*rdxF[1]*f[43]*nu[83]+1.677050983124842*rdxF[1]*f[30]*nu[81]; 
  out[64] += 1.677050983124842*rdxF[0]*nu[11]*f[64]+0.75*rdxF[0]*nu[1]*f[49]; 
  out[65] += 1.677050983124842*rdxF[1]*f[65]*nu[93]+0.75*rdxF[1]*f[49]*nu[83]; 
  out[66] += 5.031152949374527*rdxF[1]*f[66]*nu[93]+3.75*rdxF[1]*f[37]*nu[93]+3.354101966249684*rdxF[1]*f[50]*nu[83]+1.677050983124842*rdxF[1]*f[37]*nu[81]+5.031152949374527*rdxF[0]*nu[11]*f[66]+3.354101966249684*rdxF[0]*nu[1]*f[51]+3.75*rdxF[0]*nu[11]*f[38]+1.677050983124842*nu[0]*rdxF[0]*f[38]; 
  out[67] += 1.677050983124842*rdxF[1]*f[67]*nu[93]+0.75*rdxF[1]*f[58]*nu[83]+5.031152949374527*rdxF[0]*nu[11]*f[67]+3.354101966249684*rdxF[0]*nu[1]*f[52]+3.75*rdxF[0]*nu[11]*f[40]+1.677050983124842*nu[0]*rdxF[0]*f[40]; 
  out[68] += 5.031152949374527*rdxF[1]*f[68]*nu[93]+3.75*rdxF[1]*f[39]*nu[93]+3.354101966249684*rdxF[1]*f[52]*nu[83]+1.677050983124842*rdxF[1]*f[39]*nu[81]+1.677050983124842*rdxF[0]*nu[11]*f[68]+0.75*rdxF[0]*nu[1]*f[59]; 
  out[69] += 1.677050983124842*rdxF[1]*f[69]*nu[93]+0.75*rdxF[1]*f[62]*nu[83]+5.031152949374527*rdxF[0]*nu[11]*f[69]+3.354101966249684*rdxF[0]*nu[1]*f[53]+3.75*rdxF[0]*nu[11]*f[43]+1.677050983124842*nu[0]*rdxF[0]*f[43]; 
  out[70] += 5.031152949374527*rdxF[1]*f[70]*nu[93]+3.75*rdxF[1]*f[42]*nu[93]+3.354101966249684*rdxF[1]*f[53]*nu[83]+1.677050983124842*rdxF[1]*f[42]*nu[81]+1.677050983124842*rdxF[0]*nu[11]*f[70]+0.75*rdxF[0]*nu[1]*f[63]; 
  out[71] += 1.677050983124842*rdxF[1]*f[71]*nu[93]+0.75*rdxF[1]*f[64]*nu[83]+1.677050983124842*rdxF[0]*nu[11]*f[71]+0.75*rdxF[0]*nu[1]*f[65]; 
  out[72] += 5.031152949374527*rdxF[1]*f[72]*nu[93]+3.75*rdxF[1]*f[45]*nu[93]+3.354101966249685*rdxF[1]*f[55]*nu[83]+1.677050983124842*rdxF[1]*f[45]*nu[81]+5.031152949374527*rdxF[0]*nu[11]*f[72]+3.354101966249685*rdxF[0]*nu[1]*f[56]+3.75*rdxF[0]*nu[11]*f[46]+1.677050983124842*nu[0]*rdxF[0]*f[46]; 
  out[73] += 5.031152949374527*rdxF[1]*f[73]*nu[93]+3.75*rdxF[1]*f[47]*nu[93]+3.354101966249685*rdxF[1]*f[60]*nu[83]+1.677050983124842*rdxF[1]*f[47]*nu[81]+5.031152949374527*rdxF[0]*nu[11]*f[73]+3.354101966249685*rdxF[0]*nu[1]*f[61]+3.75*rdxF[0]*nu[11]*f[48]+1.677050983124842*nu[0]*rdxF[0]*f[48]; 
  out[74] += 5.031152949374527*rdxF[0]*nu[11]*f[74]+3.354101966249685*rdxF[0]*nu[1]*f[64]+3.75*rdxF[0]*nu[11]*f[49]+1.677050983124842*nu[0]*rdxF[0]*f[49]; 
  out[75] += 5.031152949374527*rdxF[1]*f[75]*nu[93]+3.75*rdxF[1]*f[49]*nu[93]+3.354101966249685*rdxF[1]*f[65]*nu[83]+1.677050983124842*rdxF[1]*f[49]*nu[81]; 
  out[76] += 5.031152949374527*rdxF[1]*f[76]*nu[93]+3.75*rdxF[1]*f[58]*nu[93]+3.354101966249684*rdxF[1]*f[67]*nu[83]+1.677050983124842*rdxF[1]*f[58]*nu[81]+5.031152949374527*rdxF[0]*nu[11]*f[76]+3.354101966249684*rdxF[0]*nu[1]*f[68]+3.75*rdxF[0]*nu[11]*f[59]+1.677050983124842*nu[0]*rdxF[0]*f[59]; 
  out[77] += 5.031152949374527*rdxF[1]*f[77]*nu[93]+3.75*rdxF[1]*f[62]*nu[93]+3.354101966249684*rdxF[1]*f[69]*nu[83]+1.677050983124842*rdxF[1]*f[62]*nu[81]+5.031152949374527*rdxF[0]*nu[11]*f[77]+3.354101966249684*rdxF[0]*nu[1]*f[70]+3.75*rdxF[0]*nu[11]*f[63]+1.677050983124842*nu[0]*rdxF[0]*f[63]; 
  out[78] += 1.677050983124842*rdxF[1]*f[78]*nu[93]+0.75*rdxF[1]*f[74]*nu[83]+5.031152949374527*rdxF[0]*nu[11]*f[78]+3.354101966249684*rdxF[0]*nu[1]*f[71]+3.75*rdxF[0]*nu[11]*f[65]+1.677050983124842*nu[0]*rdxF[0]*f[65]; 
  out[79] += 5.031152949374527*rdxF[1]*f[79]*nu[93]+3.75*rdxF[1]*f[64]*nu[93]+3.354101966249684*rdxF[1]*f[71]*nu[83]+1.677050983124842*rdxF[1]*f[64]*nu[81]+1.677050983124842*rdxF[0]*nu[11]*f[79]+0.75*rdxF[0]*nu[1]*f[75]; 
  out[80] += 5.031152949374527*rdxF[1]*f[80]*nu[93]+3.75*rdxF[1]*f[74]*nu[93]+3.354101966249684*rdxF[1]*f[78]*nu[83]+1.677050983124842*rdxF[1]*f[74]*nu[81]+5.031152949374527*rdxF[0]*nu[11]*f[80]+3.354101966249684*rdxF[0]*nu[1]*f[79]+3.75*rdxF[0]*nu[11]*f[75]+1.677050983124842*nu[0]*rdxF[0]*f[75]; 

  return (rdxF[0]*(0.390625*nu[80]-0.3493856214843422*nu[75]-0.3493856214843422*nu[74]-0.3493856214843422*nu[73]-0.3493856214843422*nu[72]+0.3125*nu[49]+0.3125*nu[48]+0.3125*nu[47]+0.3125*nu[46]+0.3125*nu[45]+0.3125*nu[44]-0.2795084971874737*nu[14]-0.2795084971874737*nu[13]-0.2795084971874737*nu[12]-0.2795084971874737*nu[11]+0.25*nu[0])+rdxF[1]*(0.390625*nu[161]-0.3493856214843422*nu[156]-0.3493856214843422*nu[155]-0.3493856214843422*nu[154]-0.3493856214843422*nu[153]+0.3125*nu[130]+0.3125*nu[129]+0.3125*nu[128]+0.3125*nu[127]+0.3125*nu[126]+0.3125*nu[125]-0.2795084971874737*nu[95]-0.2795084971874737*nu[94]-0.2795084971874737*nu[93]-0.2795084971874737*nu[92]+0.25*nu[81]))*0.9;

} 
double ConstDiffusionVarCoeffVol4xTensorP2_diffDirs3(const double *w, const double *dx, const double *nu, const double *f, double *out) 
{ 
  // w[4]:   Cell-center coordinates.
  // dx[4]:  Cell spacing.
  // nu[324]:  diffusion coefficient.
  // f:      Input distribution function.
  // out:    Incremented output 
  double rdxF[1]; 
  rdxF[0] = 4.0/(dx[2]*dx[2]); 

  out[3] += 1.677050983124842*rdxF[0]*f[3]*nu[175]+0.75*f[0]*rdxF[0]*nu[165]; 
  out[6] += 1.677050983124842*rdxF[0]*f[6]*nu[175]+0.75*rdxF[0]*f[1]*nu[165]; 
  out[7] += 1.677050983124842*rdxF[0]*f[7]*nu[175]+0.75*rdxF[0]*f[2]*nu[165]; 
  out[10] += 1.677050983124842*rdxF[0]*f[10]*nu[175]+0.75*rdxF[0]*f[4]*nu[165]; 
  out[13] += 5.031152949374527*rdxF[0]*f[13]*nu[175]+3.75*f[0]*rdxF[0]*nu[175]+3.354101966249685*rdxF[0]*f[3]*nu[165]+1.677050983124842*f[0]*rdxF[0]*nu[162]; 
  out[15] += 1.677050983124842*rdxF[0]*f[15]*nu[175]+0.75*rdxF[0]*f[5]*nu[165]; 
  out[17] += 1.677050983124842*rdxF[0]*f[17]*nu[175]+0.75*rdxF[0]*f[8]*nu[165]; 
  out[18] += 1.677050983124842*rdxF[0]*f[18]*nu[175]+0.75*rdxF[0]*f[9]*nu[165]; 
  out[21] += 1.677050983124842*rdxF[0]*f[21]*nu[175]+0.75*rdxF[0]*f[11]*nu[165]; 
  out[22] += 1.677050983124842*rdxF[0]*f[22]*nu[175]+0.75*rdxF[0]*f[12]*nu[165]; 
  out[23] += 5.031152949374527*rdxF[0]*f[23]*nu[175]+3.75*rdxF[0]*f[1]*nu[175]+3.354101966249684*rdxF[0]*f[6]*nu[165]+1.677050983124842*rdxF[0]*f[1]*nu[162]; 
  out[24] += 5.031152949374527*rdxF[0]*f[24]*nu[175]+3.75*rdxF[0]*f[2]*nu[175]+3.354101966249684*rdxF[0]*f[7]*nu[165]+1.677050983124842*rdxF[0]*f[2]*nu[162]; 
  out[27] += 5.031152949374527*rdxF[0]*f[27]*nu[175]+3.75*rdxF[0]*f[4]*nu[175]+3.354101966249684*rdxF[0]*f[10]*nu[165]+1.677050983124842*rdxF[0]*f[4]*nu[162]; 
  out[30] += 1.677050983124842*rdxF[0]*f[30]*nu[175]+0.75*rdxF[0]*f[14]*nu[165]; 
  out[31] += 1.677050983124842*rdxF[0]*f[31]*nu[175]+0.75*rdxF[0]*f[16]*nu[165]; 
  out[32] += 1.677050983124842*rdxF[0]*f[32]*nu[175]+0.75*rdxF[0]*f[19]*nu[165]; 
  out[33] += 1.677050983124842*rdxF[0]*f[33]*nu[175]+0.75*rdxF[0]*f[20]*nu[165]; 
  out[34] += 5.031152949374527*rdxF[0]*f[34]*nu[175]+3.75*rdxF[0]*f[5]*nu[175]+3.354101966249685*rdxF[0]*f[15]*nu[165]+1.677050983124842*rdxF[0]*f[5]*nu[162]; 
  out[37] += 1.677050983124842*rdxF[0]*f[37]*nu[175]+0.75*rdxF[0]*f[25]*nu[165]; 
  out[38] += 1.677050983124842*rdxF[0]*f[38]*nu[175]+0.75*rdxF[0]*f[26]*nu[165]; 
  out[39] += 5.031152949374527*rdxF[0]*f[39]*nu[175]+3.75*rdxF[0]*f[8]*nu[175]+3.354101966249685*rdxF[0]*f[17]*nu[165]+1.677050983124842*rdxF[0]*f[8]*nu[162]; 
  out[40] += 5.031152949374527*rdxF[0]*f[40]*nu[175]+3.75*rdxF[0]*f[9]*nu[175]+3.354101966249685*rdxF[0]*f[18]*nu[165]+1.677050983124842*rdxF[0]*f[9]*nu[162]; 
  out[42] += 1.677050983124842*rdxF[0]*f[42]*nu[175]+0.75*rdxF[0]*f[28]*nu[165]; 
  out[43] += 1.677050983124842*rdxF[0]*f[43]*nu[175]+0.75*rdxF[0]*f[29]*nu[165]; 
  out[45] += 5.031152949374527*rdxF[0]*f[45]*nu[175]+3.75*rdxF[0]*f[11]*nu[175]+3.354101966249684*rdxF[0]*f[21]*nu[165]+1.677050983124842*rdxF[0]*f[11]*nu[162]; 
  out[46] += 5.031152949374527*rdxF[0]*f[46]*nu[175]+3.75*rdxF[0]*f[12]*nu[175]+3.354101966249684*rdxF[0]*f[22]*nu[165]+1.677050983124842*rdxF[0]*f[12]*nu[162]; 
  out[49] += 5.031152949374527*rdxF[0]*f[49]*nu[175]+3.75*rdxF[0]*f[14]*nu[175]+3.354101966249684*rdxF[0]*f[30]*nu[165]+1.677050983124842*rdxF[0]*f[14]*nu[162]; 
  out[50] += 1.677050983124842*rdxF[0]*f[50]*nu[175]+0.75*rdxF[0]*f[35]*nu[165]; 
  out[51] += 1.677050983124842*rdxF[0]*f[51]*nu[175]+0.75*rdxF[0]*f[36]*nu[165]; 
  out[52] += 5.031152949374527*rdxF[0]*f[52]*nu[175]+3.75*rdxF[0]*f[16]*nu[175]+3.354101966249684*rdxF[0]*f[31]*nu[165]+1.677050983124842*rdxF[0]*f[16]*nu[162]; 
  out[53] += 1.677050983124842*rdxF[0]*f[53]*nu[175]+0.75*rdxF[0]*f[41]*nu[165]; 
  out[54] += 1.677050983124842*rdxF[0]*f[54]*nu[175]+0.75*rdxF[0]*f[44]*nu[165]; 
  out[55] += 5.031152949374527*rdxF[0]*f[55]*nu[175]+3.75*rdxF[0]*f[19]*nu[175]+3.354101966249685*rdxF[0]*f[32]*nu[165]+1.677050983124842*rdxF[0]*f[19]*nu[162]; 
  out[56] += 5.031152949374527*rdxF[0]*f[56]*nu[175]+3.75*rdxF[0]*f[20]*nu[175]+3.354101966249685*rdxF[0]*f[33]*nu[165]+1.677050983124842*rdxF[0]*f[20]*nu[162]; 
  out[58] += 5.031152949374527*rdxF[0]*f[58]*nu[175]+3.75*rdxF[0]*f[25]*nu[175]+3.354101966249685*rdxF[0]*f[37]*nu[165]+1.677050983124842*rdxF[0]*f[25]*nu[162]; 
  out[59] += 5.031152949374527*rdxF[0]*f[59]*nu[175]+3.75*rdxF[0]*f[26]*nu[175]+3.354101966249685*rdxF[0]*f[38]*nu[165]+1.677050983124842*rdxF[0]*f[26]*nu[162]; 
  out[62] += 1.677050983124842*rdxF[0]*f[62]*nu[175]+0.75*rdxF[0]*f[47]*nu[165]; 
  out[63] += 1.677050983124842*rdxF[0]*f[63]*nu[175]+0.75*rdxF[0]*f[48]*nu[165]; 
  out[64] += 5.031152949374527*rdxF[0]*f[64]*nu[175]+3.75*rdxF[0]*f[28]*nu[175]+3.354101966249685*rdxF[0]*f[42]*nu[165]+1.677050983124842*rdxF[0]*f[28]*nu[162]; 
  out[65] += 5.031152949374527*rdxF[0]*f[65]*nu[175]+3.75*rdxF[0]*f[29]*nu[175]+3.354101966249685*rdxF[0]*f[43]*nu[165]+1.677050983124842*rdxF[0]*f[29]*nu[162]; 
  out[66] += 1.677050983124842*rdxF[0]*f[66]*nu[175]+0.75*rdxF[0]*f[57]*nu[165]; 
  out[67] += 5.031152949374527*rdxF[0]*f[67]*nu[175]+3.75*rdxF[0]*f[35]*nu[175]+3.354101966249684*rdxF[0]*f[50]*nu[165]+1.677050983124842*rdxF[0]*f[35]*nu[162]; 
  out[68] += 5.031152949374527*rdxF[0]*f[68]*nu[175]+3.75*rdxF[0]*f[36]*nu[175]+3.354101966249684*rdxF[0]*f[51]*nu[165]+1.677050983124842*rdxF[0]*f[36]*nu[162]; 
  out[69] += 1.677050983124842*rdxF[0]*f[69]*nu[175]+0.75*rdxF[0]*f[60]*nu[165]; 
  out[70] += 1.677050983124842*rdxF[0]*f[70]*nu[175]+0.75*rdxF[0]*f[61]*nu[165]; 
  out[71] += 5.031152949374527*rdxF[0]*f[71]*nu[175]+3.75*rdxF[0]*f[41]*nu[175]+3.354101966249684*rdxF[0]*f[53]*nu[165]+1.677050983124842*rdxF[0]*f[41]*nu[162]; 
  out[72] += 5.031152949374527*rdxF[0]*f[72]*nu[175]+3.75*rdxF[0]*f[44]*nu[175]+3.354101966249685*rdxF[0]*f[54]*nu[165]+1.677050983124842*rdxF[0]*f[44]*nu[162]; 
  out[74] += 5.031152949374527*rdxF[0]*f[74]*nu[175]+3.75*rdxF[0]*f[47]*nu[175]+3.354101966249685*rdxF[0]*f[62]*nu[165]+1.677050983124842*rdxF[0]*f[47]*nu[162]; 
  out[75] += 5.031152949374527*rdxF[0]*f[75]*nu[175]+3.75*rdxF[0]*f[48]*nu[175]+3.354101966249685*rdxF[0]*f[63]*nu[165]+1.677050983124842*rdxF[0]*f[48]*nu[162]; 
  out[76] += 5.031152949374527*rdxF[0]*f[76]*nu[175]+3.75*rdxF[0]*f[57]*nu[175]+3.354101966249684*rdxF[0]*f[66]*nu[165]+1.677050983124842*rdxF[0]*f[57]*nu[162]; 
  out[77] += 1.677050983124842*rdxF[0]*f[77]*nu[175]+0.75*rdxF[0]*f[73]*nu[165]; 
  out[78] += 5.031152949374527*rdxF[0]*f[78]*nu[175]+3.75*rdxF[0]*f[60]*nu[175]+3.354101966249684*rdxF[0]*f[69]*nu[165]+1.677050983124842*rdxF[0]*f[60]*nu[162]; 
  out[79] += 5.031152949374527*rdxF[0]*f[79]*nu[175]+3.75*rdxF[0]*f[61]*nu[175]+3.354101966249684*rdxF[0]*f[70]*nu[165]+1.677050983124842*rdxF[0]*f[61]*nu[162]; 
  out[80] += 5.031152949374527*rdxF[0]*f[80]*nu[175]+3.75*rdxF[0]*f[73]*nu[175]+3.354101966249684*rdxF[0]*f[77]*nu[165]+1.677050983124842*rdxF[0]*f[73]*nu[162]; 

  return (rdxF[0]*(0.390625*nu[242]-0.3493856214843422*nu[237]-0.3493856214843422*nu[236]-0.3493856214843422*nu[235]-0.3493856214843422*nu[234]+0.3125*nu[211]+0.3125*nu[210]+0.3125*nu[209]+0.3125*nu[208]+0.3125*nu[207]+0.3125*nu[206]-0.2795084971874737*nu[176]-0.2795084971874737*nu[175]-0.2795084971874737*nu[174]-0.2795084971874737*nu[173]+0.25*nu[162]))*0.9;

} 
double ConstDiffusionVarCoeffVol4xTensorP2_diffDirs34(const double *w, const double *dx, const double *nu, const double *f, double *out) 
{ 
  // w[4]:   Cell-center coordinates.
  // dx[4]:  Cell spacing.
  // nu[324]:  diffusion coefficient.
  // f:      Input distribution function.
  // out:    Incremented output 
  double rdxF[2]; 
  rdxF[0] = 4.0/(dx[2]*dx[2]); 
  rdxF[1] = 4.0/(dx[3]*dx[3]); 

  out[3] += 1.677050983124842*rdxF[0]*f[3]*nu[175]+0.75*f[0]*rdxF[0]*nu[165]; 
  out[4] += 1.677050983124842*rdxF[1]*f[4]*nu[257]+0.75*f[0]*rdxF[1]*nu[247]; 
  out[6] += 1.677050983124842*rdxF[0]*f[6]*nu[175]+0.75*rdxF[0]*f[1]*nu[165]; 
  out[7] += 1.677050983124842*rdxF[0]*f[7]*nu[175]+0.75*rdxF[0]*f[2]*nu[165]; 
  out[8] += 1.677050983124842*rdxF[1]*f[8]*nu[257]+0.75*f[1]*rdxF[1]*nu[247]; 
  out[9] += 1.677050983124842*rdxF[1]*f[9]*nu[257]+0.75*rdxF[1]*f[2]*nu[247]; 
  out[10] += 1.677050983124842*rdxF[1]*f[10]*nu[257]+0.75*rdxF[1]*f[3]*nu[247]+1.677050983124842*rdxF[0]*f[10]*nu[175]+0.75*rdxF[0]*f[4]*nu[165]; 
  out[13] += 5.031152949374527*rdxF[0]*f[13]*nu[175]+3.75*f[0]*rdxF[0]*nu[175]+3.354101966249685*rdxF[0]*f[3]*nu[165]+1.677050983124842*f[0]*rdxF[0]*nu[162]; 
  out[14] += 5.031152949374527*rdxF[1]*f[14]*nu[257]+3.75*f[0]*rdxF[1]*nu[257]+3.354101966249685*rdxF[1]*f[4]*nu[247]+1.677050983124842*f[0]*rdxF[1]*nu[243]; 
  out[15] += 1.677050983124842*rdxF[0]*f[15]*nu[175]+0.75*rdxF[0]*f[5]*nu[165]; 
  out[16] += 1.677050983124842*rdxF[1]*f[16]*nu[257]+0.75*rdxF[1]*f[5]*nu[247]; 
  out[17] += 1.677050983124842*rdxF[1]*f[17]*nu[257]+0.75*rdxF[1]*f[6]*nu[247]+1.677050983124842*rdxF[0]*f[17]*nu[175]+0.75*rdxF[0]*f[8]*nu[165]; 
  out[18] += 1.677050983124842*rdxF[1]*f[18]*nu[257]+0.75*rdxF[1]*f[7]*nu[247]+1.677050983124842*rdxF[0]*f[18]*nu[175]+0.75*rdxF[0]*f[9]*nu[165]; 
  out[21] += 1.677050983124842*rdxF[0]*f[21]*nu[175]+0.75*rdxF[0]*f[11]*nu[165]; 
  out[22] += 1.677050983124842*rdxF[0]*f[22]*nu[175]+0.75*rdxF[0]*f[12]*nu[165]; 
  out[23] += 5.031152949374527*rdxF[0]*f[23]*nu[175]+3.75*rdxF[0]*f[1]*nu[175]+3.354101966249684*rdxF[0]*f[6]*nu[165]+1.677050983124842*rdxF[0]*f[1]*nu[162]; 
  out[24] += 5.031152949374527*rdxF[0]*f[24]*nu[175]+3.75*rdxF[0]*f[2]*nu[175]+3.354101966249684*rdxF[0]*f[7]*nu[165]+1.677050983124842*rdxF[0]*f[2]*nu[162]; 
  out[25] += 1.677050983124842*rdxF[1]*f[25]*nu[257]+0.75*rdxF[1]*f[11]*nu[247]; 
  out[26] += 1.677050983124842*rdxF[1]*f[26]*nu[257]+0.75*rdxF[1]*f[12]*nu[247]; 
  out[27] += 1.677050983124842*rdxF[1]*f[27]*nu[257]+0.75*rdxF[1]*f[13]*nu[247]+5.031152949374527*rdxF[0]*f[27]*nu[175]+3.75*rdxF[0]*f[4]*nu[175]+3.354101966249684*rdxF[0]*f[10]*nu[165]+1.677050983124842*rdxF[0]*f[4]*nu[162]; 
  out[28] += 5.031152949374527*rdxF[1]*f[28]*nu[257]+3.75*f[1]*rdxF[1]*nu[257]+3.354101966249684*rdxF[1]*f[8]*nu[247]+1.677050983124842*f[1]*rdxF[1]*nu[243]; 
  out[29] += 5.031152949374527*rdxF[1]*f[29]*nu[257]+3.75*rdxF[1]*f[2]*nu[257]+3.354101966249684*rdxF[1]*f[9]*nu[247]+1.677050983124842*rdxF[1]*f[2]*nu[243]; 
  out[30] += 5.031152949374527*rdxF[1]*f[30]*nu[257]+3.75*rdxF[1]*f[3]*nu[257]+3.354101966249684*rdxF[1]*f[10]*nu[247]+1.677050983124842*rdxF[1]*f[3]*nu[243]+1.677050983124842*rdxF[0]*f[30]*nu[175]+0.75*rdxF[0]*f[14]*nu[165]; 
  out[31] += 1.677050983124842*rdxF[1]*f[31]*nu[257]+0.75*rdxF[1]*f[15]*nu[247]+1.677050983124842*rdxF[0]*f[31]*nu[175]+0.75*rdxF[0]*f[16]*nu[165]; 
  out[32] += 1.677050983124842*rdxF[0]*f[32]*nu[175]+0.75*rdxF[0]*f[19]*nu[165]; 
  out[33] += 1.677050983124842*rdxF[0]*f[33]*nu[175]+0.75*rdxF[0]*f[20]*nu[165]; 
  out[34] += 5.031152949374527*rdxF[0]*f[34]*nu[175]+3.75*rdxF[0]*f[5]*nu[175]+3.354101966249685*rdxF[0]*f[15]*nu[165]+1.677050983124842*rdxF[0]*f[5]*nu[162]; 
  out[35] += 1.677050983124842*rdxF[1]*f[35]*nu[257]+0.75*rdxF[1]*f[19]*nu[247]; 
  out[36] += 1.677050983124842*rdxF[1]*f[36]*nu[257]+0.75*rdxF[1]*f[20]*nu[247]; 
  out[37] += 1.677050983124842*rdxF[1]*f[37]*nu[257]+0.75*rdxF[1]*f[21]*nu[247]+1.677050983124842*rdxF[0]*f[37]*nu[175]+0.75*rdxF[0]*f[25]*nu[165]; 
  out[38] += 1.677050983124842*rdxF[1]*f[38]*nu[257]+0.75*rdxF[1]*f[22]*nu[247]+1.677050983124842*rdxF[0]*f[38]*nu[175]+0.75*rdxF[0]*f[26]*nu[165]; 
  out[39] += 1.677050983124842*rdxF[1]*f[39]*nu[257]+0.75*rdxF[1]*f[23]*nu[247]+5.031152949374527*rdxF[0]*f[39]*nu[175]+3.75*rdxF[0]*f[8]*nu[175]+3.354101966249685*rdxF[0]*f[17]*nu[165]+1.677050983124842*rdxF[0]*f[8]*nu[162]; 
  out[40] += 1.677050983124842*rdxF[1]*f[40]*nu[257]+0.75*rdxF[1]*f[24]*nu[247]+5.031152949374527*rdxF[0]*f[40]*nu[175]+3.75*rdxF[0]*f[9]*nu[175]+3.354101966249685*rdxF[0]*f[18]*nu[165]+1.677050983124842*rdxF[0]*f[9]*nu[162]; 
  out[41] += 5.031152949374527*rdxF[1]*f[41]*nu[257]+3.75*rdxF[1]*f[5]*nu[257]+3.354101966249685*rdxF[1]*f[16]*nu[247]+1.677050983124842*rdxF[1]*f[5]*nu[243]; 
  out[42] += 5.031152949374527*rdxF[1]*f[42]*nu[257]+3.75*rdxF[1]*f[6]*nu[257]+3.354101966249685*rdxF[1]*f[17]*nu[247]+1.677050983124842*rdxF[1]*f[6]*nu[243]+1.677050983124842*rdxF[0]*f[42]*nu[175]+0.75*rdxF[0]*f[28]*nu[165]; 
  out[43] += 5.031152949374527*rdxF[1]*f[43]*nu[257]+3.75*rdxF[1]*f[7]*nu[257]+3.354101966249685*rdxF[1]*f[18]*nu[247]+1.677050983124842*rdxF[1]*f[7]*nu[243]+1.677050983124842*rdxF[0]*f[43]*nu[175]+0.75*rdxF[0]*f[29]*nu[165]; 
  out[45] += 5.031152949374527*rdxF[0]*f[45]*nu[175]+3.75*rdxF[0]*f[11]*nu[175]+3.354101966249684*rdxF[0]*f[21]*nu[165]+1.677050983124842*rdxF[0]*f[11]*nu[162]; 
  out[46] += 5.031152949374527*rdxF[0]*f[46]*nu[175]+3.75*rdxF[0]*f[12]*nu[175]+3.354101966249684*rdxF[0]*f[22]*nu[165]+1.677050983124842*rdxF[0]*f[12]*nu[162]; 
  out[47] += 5.031152949374527*rdxF[1]*f[47]*nu[257]+3.75*rdxF[1]*f[11]*nu[257]+3.354101966249684*rdxF[1]*f[25]*nu[247]+1.677050983124842*rdxF[1]*f[11]*nu[243]; 
  out[48] += 5.031152949374527*rdxF[1]*f[48]*nu[257]+3.75*rdxF[1]*f[12]*nu[257]+3.354101966249684*rdxF[1]*f[26]*nu[247]+1.677050983124842*rdxF[1]*f[12]*nu[243]; 
  out[49] += 5.031152949374527*rdxF[1]*f[49]*nu[257]+3.75*rdxF[1]*f[13]*nu[257]+3.354101966249684*rdxF[1]*f[27]*nu[247]+1.677050983124842*rdxF[1]*f[13]*nu[243]+5.031152949374527*rdxF[0]*f[49]*nu[175]+3.75*rdxF[0]*f[14]*nu[175]+3.354101966249684*rdxF[0]*f[30]*nu[165]+1.677050983124842*rdxF[0]*f[14]*nu[162]; 
  out[50] += 1.677050983124842*rdxF[1]*f[50]*nu[257]+0.75*rdxF[1]*f[32]*nu[247]+1.677050983124842*rdxF[0]*f[50]*nu[175]+0.75*rdxF[0]*f[35]*nu[165]; 
  out[51] += 1.677050983124842*rdxF[1]*f[51]*nu[257]+0.75*rdxF[1]*f[33]*nu[247]+1.677050983124842*rdxF[0]*f[51]*nu[175]+0.75*rdxF[0]*f[36]*nu[165]; 
  out[52] += 1.677050983124842*rdxF[1]*f[52]*nu[257]+0.75*rdxF[1]*f[34]*nu[247]+5.031152949374527*rdxF[0]*f[52]*nu[175]+3.75*rdxF[0]*f[16]*nu[175]+3.354101966249684*rdxF[0]*f[31]*nu[165]+1.677050983124842*rdxF[0]*f[16]*nu[162]; 
  out[53] += 5.031152949374527*rdxF[1]*f[53]*nu[257]+3.75*rdxF[1]*f[15]*nu[257]+3.354101966249684*rdxF[1]*f[31]*nu[247]+1.677050983124842*rdxF[1]*f[15]*nu[243]+1.677050983124842*rdxF[0]*f[53]*nu[175]+0.75*rdxF[0]*f[41]*nu[165]; 
  out[54] += 1.677050983124842*rdxF[0]*f[54]*nu[175]+0.75*rdxF[0]*f[44]*nu[165]; 
  out[55] += 5.031152949374527*rdxF[0]*f[55]*nu[175]+3.75*rdxF[0]*f[19]*nu[175]+3.354101966249685*rdxF[0]*f[32]*nu[165]+1.677050983124842*rdxF[0]*f[19]*nu[162]; 
  out[56] += 5.031152949374527*rdxF[0]*f[56]*nu[175]+3.75*rdxF[0]*f[20]*nu[175]+3.354101966249685*rdxF[0]*f[33]*nu[165]+1.677050983124842*rdxF[0]*f[20]*nu[162]; 
  out[57] += 1.677050983124842*rdxF[1]*f[57]*nu[257]+0.75*rdxF[1]*f[44]*nu[247]; 
  out[58] += 1.677050983124842*rdxF[1]*f[58]*nu[257]+0.75*rdxF[1]*f[45]*nu[247]+5.031152949374527*rdxF[0]*f[58]*nu[175]+3.75*rdxF[0]*f[25]*nu[175]+3.354101966249685*rdxF[0]*f[37]*nu[165]+1.677050983124842*rdxF[0]*f[25]*nu[162]; 
  out[59] += 1.677050983124842*rdxF[1]*f[59]*nu[257]+0.75*rdxF[1]*f[46]*nu[247]+5.031152949374527*rdxF[0]*f[59]*nu[175]+3.75*rdxF[0]*f[26]*nu[175]+3.354101966249685*rdxF[0]*f[38]*nu[165]+1.677050983124842*rdxF[0]*f[26]*nu[162]; 
  out[60] += 5.031152949374527*rdxF[1]*f[60]*nu[257]+3.75*rdxF[1]*f[19]*nu[257]+3.354101966249685*rdxF[1]*f[35]*nu[247]+1.677050983124842*rdxF[1]*f[19]*nu[243]; 
  out[61] += 5.031152949374527*rdxF[1]*f[61]*nu[257]+3.75*rdxF[1]*f[20]*nu[257]+3.354101966249685*rdxF[1]*f[36]*nu[247]+1.677050983124842*rdxF[1]*f[20]*nu[243]; 
  out[62] += 5.031152949374527*rdxF[1]*f[62]*nu[257]+3.75*rdxF[1]*f[21]*nu[257]+3.354101966249685*rdxF[1]*f[37]*nu[247]+1.677050983124842*rdxF[1]*f[21]*nu[243]+1.677050983124842*rdxF[0]*f[62]*nu[175]+0.75*rdxF[0]*f[47]*nu[165]; 
  out[63] += 5.031152949374527*rdxF[1]*f[63]*nu[257]+3.75*rdxF[1]*f[22]*nu[257]+3.354101966249685*rdxF[1]*f[38]*nu[247]+1.677050983124842*rdxF[1]*f[22]*nu[243]+1.677050983124842*rdxF[0]*f[63]*nu[175]+0.75*rdxF[0]*f[48]*nu[165]; 
  out[64] += 5.031152949374527*rdxF[1]*f[64]*nu[257]+3.75*rdxF[1]*f[23]*nu[257]+3.354101966249685*rdxF[1]*f[39]*nu[247]+1.677050983124842*rdxF[1]*f[23]*nu[243]+5.031152949374527*rdxF[0]*f[64]*nu[175]+3.75*rdxF[0]*f[28]*nu[175]+3.354101966249685*rdxF[0]*f[42]*nu[165]+1.677050983124842*rdxF[0]*f[28]*nu[162]; 
  out[65] += 5.031152949374527*rdxF[1]*f[65]*nu[257]+3.75*rdxF[1]*f[24]*nu[257]+3.354101966249685*rdxF[1]*f[40]*nu[247]+1.677050983124842*rdxF[1]*f[24]*nu[243]+5.031152949374527*rdxF[0]*f[65]*nu[175]+3.75*rdxF[0]*f[29]*nu[175]+3.354101966249685*rdxF[0]*f[43]*nu[165]+1.677050983124842*rdxF[0]*f[29]*nu[162]; 
  out[66] += 1.677050983124842*rdxF[1]*f[66]*nu[257]+0.75*rdxF[1]*f[54]*nu[247]+1.677050983124842*rdxF[0]*f[66]*nu[175]+0.75*rdxF[0]*f[57]*nu[165]; 
  out[67] += 1.677050983124842*rdxF[1]*f[67]*nu[257]+0.75*rdxF[1]*f[55]*nu[247]+5.031152949374527*rdxF[0]*f[67]*nu[175]+3.75*rdxF[0]*f[35]*nu[175]+3.354101966249684*rdxF[0]*f[50]*nu[165]+1.677050983124842*rdxF[0]*f[35]*nu[162]; 
  out[68] += 1.677050983124842*rdxF[1]*f[68]*nu[257]+0.75*rdxF[1]*f[56]*nu[247]+5.031152949374527*rdxF[0]*f[68]*nu[175]+3.75*rdxF[0]*f[36]*nu[175]+3.354101966249684*rdxF[0]*f[51]*nu[165]+1.677050983124842*rdxF[0]*f[36]*nu[162]; 
  out[69] += 5.031152949374527*rdxF[1]*f[69]*nu[257]+3.75*rdxF[1]*f[32]*nu[257]+3.354101966249684*rdxF[1]*f[50]*nu[247]+1.677050983124842*rdxF[1]*f[32]*nu[243]+1.677050983124842*rdxF[0]*f[69]*nu[175]+0.75*rdxF[0]*f[60]*nu[165]; 
  out[70] += 5.031152949374527*rdxF[1]*f[70]*nu[257]+3.75*rdxF[1]*f[33]*nu[257]+3.354101966249684*rdxF[1]*f[51]*nu[247]+1.677050983124842*rdxF[1]*f[33]*nu[243]+1.677050983124842*rdxF[0]*f[70]*nu[175]+0.75*rdxF[0]*f[61]*nu[165]; 
  out[71] += 5.031152949374527*rdxF[1]*f[71]*nu[257]+3.75*rdxF[1]*f[34]*nu[257]+3.354101966249684*rdxF[1]*f[52]*nu[247]+1.677050983124842*rdxF[1]*f[34]*nu[243]+5.031152949374527*rdxF[0]*f[71]*nu[175]+3.75*rdxF[0]*f[41]*nu[175]+3.354101966249684*rdxF[0]*f[53]*nu[165]+1.677050983124842*rdxF[0]*f[41]*nu[162]; 
  out[72] += 5.031152949374527*rdxF[0]*f[72]*nu[175]+3.75*rdxF[0]*f[44]*nu[175]+3.354101966249685*rdxF[0]*f[54]*nu[165]+1.677050983124842*rdxF[0]*f[44]*nu[162]; 
  out[73] += 5.031152949374527*rdxF[1]*f[73]*nu[257]+3.75*rdxF[1]*f[44]*nu[257]+3.354101966249685*rdxF[1]*f[57]*nu[247]+1.677050983124842*rdxF[1]*f[44]*nu[243]; 
  out[74] += 5.031152949374527*rdxF[1]*f[74]*nu[257]+3.75*rdxF[1]*f[45]*nu[257]+3.354101966249685*rdxF[1]*f[58]*nu[247]+1.677050983124842*rdxF[1]*f[45]*nu[243]+5.031152949374527*rdxF[0]*f[74]*nu[175]+3.75*rdxF[0]*f[47]*nu[175]+3.354101966249685*rdxF[0]*f[62]*nu[165]+1.677050983124842*rdxF[0]*f[47]*nu[162]; 
  out[75] += 5.031152949374527*rdxF[1]*f[75]*nu[257]+3.75*rdxF[1]*f[46]*nu[257]+3.354101966249685*rdxF[1]*f[59]*nu[247]+1.677050983124842*rdxF[1]*f[46]*nu[243]+5.031152949374527*rdxF[0]*f[75]*nu[175]+3.75*rdxF[0]*f[48]*nu[175]+3.354101966249685*rdxF[0]*f[63]*nu[165]+1.677050983124842*rdxF[0]*f[48]*nu[162]; 
  out[76] += 1.677050983124842*rdxF[1]*f[76]*nu[257]+0.75*rdxF[1]*f[72]*nu[247]+5.031152949374527*rdxF[0]*f[76]*nu[175]+3.75*rdxF[0]*f[57]*nu[175]+3.354101966249684*rdxF[0]*f[66]*nu[165]+1.677050983124842*rdxF[0]*f[57]*nu[162]; 
  out[77] += 5.031152949374527*rdxF[1]*f[77]*nu[257]+3.75*rdxF[1]*f[54]*nu[257]+3.354101966249684*rdxF[1]*f[66]*nu[247]+1.677050983124842*rdxF[1]*f[54]*nu[243]+1.677050983124842*rdxF[0]*f[77]*nu[175]+0.75*rdxF[0]*f[73]*nu[165]; 
  out[78] += 5.031152949374527*rdxF[1]*f[78]*nu[257]+3.75*rdxF[1]*f[55]*nu[257]+3.354101966249684*rdxF[1]*f[67]*nu[247]+1.677050983124842*rdxF[1]*f[55]*nu[243]+5.031152949374527*rdxF[0]*f[78]*nu[175]+3.75*rdxF[0]*f[60]*nu[175]+3.354101966249684*rdxF[0]*f[69]*nu[165]+1.677050983124842*rdxF[0]*f[60]*nu[162]; 
  out[79] += 5.031152949374527*rdxF[1]*f[79]*nu[257]+3.75*rdxF[1]*f[56]*nu[257]+3.354101966249684*rdxF[1]*f[68]*nu[247]+1.677050983124842*rdxF[1]*f[56]*nu[243]+5.031152949374527*rdxF[0]*f[79]*nu[175]+3.75*rdxF[0]*f[61]*nu[175]+3.354101966249684*rdxF[0]*f[70]*nu[165]+1.677050983124842*rdxF[0]*f[61]*nu[162]; 
  out[80] += 5.031152949374527*rdxF[1]*f[80]*nu[257]+3.75*rdxF[1]*f[72]*nu[257]+3.354101966249684*rdxF[1]*f[76]*nu[247]+1.677050983124842*rdxF[1]*f[72]*nu[243]+5.031152949374527*rdxF[0]*f[80]*nu[175]+3.75*rdxF[0]*f[73]*nu[175]+3.354101966249684*rdxF[0]*f[77]*nu[165]+1.677050983124842*rdxF[0]*f[73]*nu[162]; 

  return (rdxF[0]*(0.390625*nu[242]-0.3493856214843422*nu[237]-0.3493856214843422*nu[236]-0.3493856214843422*nu[235]-0.3493856214843422*nu[234]+0.3125*nu[211]+0.3125*nu[210]+0.3125*nu[209]+0.3125*nu[208]+0.3125*nu[207]+0.3125*nu[206]-0.2795084971874737*nu[176]-0.2795084971874737*nu[175]-0.2795084971874737*nu[174]-0.2795084971874737*nu[173]+0.25*nu[162])+rdxF[1]*(0.390625*nu[323]-0.3493856214843422*nu[318]-0.3493856214843422*nu[317]-0.3493856214843422*nu[316]-0.3493856214843422*nu[315]+0.3125*nu[292]+0.3125*nu[291]+0.3125*nu[290]+0.3125*nu[289]+0.3125*nu[288]+0.3125*nu[287]-0.2795084971874737*nu[257]-0.2795084971874737*nu[256]-0.2795084971874737*nu[255]-0.2795084971874737*nu[254]+0.25*nu[243]))*0.9;

} 
double ConstDiffusionVarCoeffVol4xTensorP2_diffDirs134(const double *w, const double *dx, const double *nu, const double *f, double *out) 
{ 
  // w[4]:   Cell-center coordinates.
  // dx[4]:  Cell spacing.
  // nu[324]:  diffusion coefficient.
  // f:      Input distribution function.
  // out:    Incremented output 
  double rdxF[3]; 
  rdxF[0] = 4.0/(dx[0]*dx[0]); 
  rdxF[1] = 4.0/(dx[2]*dx[2]); 
  rdxF[2] = 4.0/(dx[3]*dx[3]); 

  out[1] += 1.677050983124842*rdxF[0]*f[1]*nu[11]+0.75*f[0]*rdxF[0]*nu[1]; 
  out[3] += 1.677050983124842*rdxF[1]*f[3]*nu[175]+0.75*f[0]*rdxF[1]*nu[165]; 
  out[4] += 1.677050983124842*rdxF[2]*f[4]*nu[257]+0.75*f[0]*rdxF[2]*nu[247]; 
  out[5] += 1.677050983124842*rdxF[0]*f[5]*nu[11]+0.75*rdxF[0]*nu[1]*f[2]; 
  out[6] += 1.677050983124842*rdxF[1]*f[6]*nu[175]+0.75*f[1]*rdxF[1]*nu[165]+1.677050983124842*rdxF[0]*f[6]*nu[11]+0.75*rdxF[0]*nu[1]*f[3]; 
  out[7] += 1.677050983124842*rdxF[1]*f[7]*nu[175]+0.75*rdxF[1]*f[2]*nu[165]; 
  out[8] += 1.677050983124842*rdxF[2]*f[8]*nu[257]+0.75*f[1]*rdxF[2]*nu[247]+1.677050983124842*rdxF[0]*f[8]*nu[11]+0.75*rdxF[0]*nu[1]*f[4]; 
  out[9] += 1.677050983124842*rdxF[2]*f[9]*nu[257]+0.75*f[2]*rdxF[2]*nu[247]; 
  out[10] += 1.677050983124842*rdxF[2]*f[10]*nu[257]+0.75*rdxF[2]*f[3]*nu[247]+1.677050983124842*rdxF[1]*f[10]*nu[175]+0.75*rdxF[1]*f[4]*nu[165]; 
  out[11] += 5.031152949374527*rdxF[0]*f[11]*nu[11]+3.75*f[0]*rdxF[0]*nu[11]+3.354101966249685*rdxF[0]*f[1]*nu[1]+1.677050983124842*f[0]*nu[0]*rdxF[0]; 
  out[13] += 5.031152949374527*rdxF[1]*f[13]*nu[175]+3.75*f[0]*rdxF[1]*nu[175]+3.354101966249685*rdxF[1]*f[3]*nu[165]+1.677050983124842*f[0]*rdxF[1]*nu[162]; 
  out[14] += 5.031152949374527*rdxF[2]*f[14]*nu[257]+3.75*f[0]*rdxF[2]*nu[257]+3.354101966249685*rdxF[2]*f[4]*nu[247]+1.677050983124842*f[0]*rdxF[2]*nu[243]; 
  out[15] += 1.677050983124842*rdxF[1]*f[15]*nu[175]+0.75*rdxF[1]*f[5]*nu[165]+1.677050983124842*rdxF[0]*nu[11]*f[15]+0.75*rdxF[0]*nu[1]*f[7]; 
  out[16] += 1.677050983124842*rdxF[2]*f[16]*nu[257]+0.75*rdxF[2]*f[5]*nu[247]+1.677050983124842*rdxF[0]*nu[11]*f[16]+0.75*rdxF[0]*nu[1]*f[9]; 
  out[17] += 1.677050983124842*rdxF[2]*f[17]*nu[257]+0.75*rdxF[2]*f[6]*nu[247]+1.677050983124842*rdxF[1]*f[17]*nu[175]+0.75*rdxF[1]*f[8]*nu[165]+1.677050983124842*rdxF[0]*nu[11]*f[17]+0.75*rdxF[0]*nu[1]*f[10]; 
  out[18] += 1.677050983124842*rdxF[2]*f[18]*nu[257]+0.75*rdxF[2]*f[7]*nu[247]+1.677050983124842*rdxF[1]*f[18]*nu[175]+0.75*rdxF[1]*f[9]*nu[165]; 
  out[19] += 5.031152949374527*rdxF[0]*nu[11]*f[19]+3.75*rdxF[0]*f[2]*nu[11]+3.354101966249684*rdxF[0]*nu[1]*f[5]+1.677050983124842*nu[0]*rdxF[0]*f[2]; 
  out[20] += 1.677050983124842*rdxF[0]*nu[11]*f[20]+0.75*rdxF[0]*nu[1]*f[12]; 
  out[21] += 1.677050983124842*rdxF[1]*f[21]*nu[175]+0.75*rdxF[1]*f[11]*nu[165]+5.031152949374527*rdxF[0]*nu[11]*f[21]+3.75*rdxF[0]*f[3]*nu[11]+3.354101966249684*rdxF[0]*nu[1]*f[6]+1.677050983124842*nu[0]*rdxF[0]*f[3]; 
  out[22] += 1.677050983124842*rdxF[1]*f[22]*nu[175]+0.75*rdxF[1]*f[12]*nu[165]; 
  out[23] += 5.031152949374527*rdxF[1]*f[23]*nu[175]+3.75*f[1]*rdxF[1]*nu[175]+3.354101966249684*rdxF[1]*f[6]*nu[165]+1.677050983124842*f[1]*rdxF[1]*nu[162]+1.677050983124842*rdxF[0]*nu[11]*f[23]+0.75*rdxF[0]*nu[1]*f[13]; 
  out[24] += 5.031152949374527*rdxF[1]*f[24]*nu[175]+3.75*rdxF[1]*f[2]*nu[175]+3.354101966249684*rdxF[1]*f[7]*nu[165]+1.677050983124842*rdxF[1]*f[2]*nu[162]; 
  out[25] += 1.677050983124842*rdxF[2]*f[25]*nu[257]+0.75*rdxF[2]*f[11]*nu[247]+5.031152949374527*rdxF[0]*nu[11]*f[25]+3.75*rdxF[0]*f[4]*nu[11]+3.354101966249684*rdxF[0]*nu[1]*f[8]+1.677050983124842*nu[0]*rdxF[0]*f[4]; 
  out[26] += 1.677050983124842*rdxF[2]*f[26]*nu[257]+0.75*rdxF[2]*f[12]*nu[247]; 
  out[27] += 1.677050983124842*rdxF[2]*f[27]*nu[257]+0.75*rdxF[2]*f[13]*nu[247]+5.031152949374527*rdxF[1]*f[27]*nu[175]+3.75*rdxF[1]*f[4]*nu[175]+3.354101966249684*rdxF[1]*f[10]*nu[165]+1.677050983124842*rdxF[1]*f[4]*nu[162]; 
  out[28] += 5.031152949374527*rdxF[2]*f[28]*nu[257]+3.75*f[1]*rdxF[2]*nu[257]+3.354101966249684*rdxF[2]*f[8]*nu[247]+1.677050983124842*f[1]*rdxF[2]*nu[243]+1.677050983124842*rdxF[0]*nu[11]*f[28]+0.75*rdxF[0]*nu[1]*f[14]; 
  out[29] += 5.031152949374527*rdxF[2]*f[29]*nu[257]+3.75*f[2]*rdxF[2]*nu[257]+3.354101966249684*rdxF[2]*f[9]*nu[247]+1.677050983124842*f[2]*rdxF[2]*nu[243]; 
  out[30] += 5.031152949374527*rdxF[2]*f[30]*nu[257]+3.75*rdxF[2]*f[3]*nu[257]+3.354101966249684*rdxF[2]*f[10]*nu[247]+1.677050983124842*rdxF[2]*f[3]*nu[243]+1.677050983124842*rdxF[1]*f[30]*nu[175]+0.75*rdxF[1]*f[14]*nu[165]; 
  out[31] += 1.677050983124842*rdxF[2]*f[31]*nu[257]+0.75*rdxF[2]*f[15]*nu[247]+1.677050983124842*rdxF[1]*f[31]*nu[175]+0.75*rdxF[1]*f[16]*nu[165]+1.677050983124842*rdxF[0]*nu[11]*f[31]+0.75*rdxF[0]*nu[1]*f[18]; 
  out[32] += 1.677050983124842*rdxF[1]*f[32]*nu[175]+0.75*rdxF[1]*f[19]*nu[165]+5.031152949374527*rdxF[0]*nu[11]*f[32]+3.354101966249685*rdxF[0]*nu[1]*f[15]+3.75*rdxF[0]*f[7]*nu[11]+1.677050983124842*nu[0]*rdxF[0]*f[7]; 
  out[33] += 1.677050983124842*rdxF[1]*f[33]*nu[175]+0.75*rdxF[1]*f[20]*nu[165]+1.677050983124842*rdxF[0]*nu[11]*f[33]+0.75*rdxF[0]*nu[1]*f[22]; 
  out[34] += 5.031152949374527*rdxF[1]*f[34]*nu[175]+3.75*rdxF[1]*f[5]*nu[175]+3.354101966249685*rdxF[1]*f[15]*nu[165]+1.677050983124842*rdxF[1]*f[5]*nu[162]+1.677050983124842*rdxF[0]*nu[11]*f[34]+0.75*rdxF[0]*nu[1]*f[24]; 
  out[35] += 1.677050983124842*rdxF[2]*f[35]*nu[257]+0.75*rdxF[2]*f[19]*nu[247]+5.031152949374527*rdxF[0]*nu[11]*f[35]+3.354101966249685*rdxF[0]*nu[1]*f[16]+3.75*rdxF[0]*f[9]*nu[11]+1.677050983124842*nu[0]*rdxF[0]*f[9]; 
  out[36] += 1.677050983124842*rdxF[2]*f[36]*nu[257]+0.75*rdxF[2]*f[20]*nu[247]+1.677050983124842*rdxF[0]*nu[11]*f[36]+0.75*rdxF[0]*nu[1]*f[26]; 
  out[37] += 1.677050983124842*rdxF[2]*f[37]*nu[257]+0.75*rdxF[2]*f[21]*nu[247]+1.677050983124842*rdxF[1]*f[37]*nu[175]+0.75*rdxF[1]*f[25]*nu[165]+5.031152949374527*rdxF[0]*nu[11]*f[37]+3.354101966249685*rdxF[0]*nu[1]*f[17]+3.75*rdxF[0]*f[10]*nu[11]+1.677050983124842*nu[0]*rdxF[0]*f[10]; 
  out[38] += 1.677050983124842*rdxF[2]*f[38]*nu[257]+0.75*rdxF[2]*f[22]*nu[247]+1.677050983124842*rdxF[1]*f[38]*nu[175]+0.75*rdxF[1]*f[26]*nu[165]; 
  out[39] += 1.677050983124842*rdxF[2]*f[39]*nu[257]+0.75*rdxF[2]*f[23]*nu[247]+5.031152949374527*rdxF[1]*f[39]*nu[175]+3.75*rdxF[1]*f[8]*nu[175]+3.354101966249685*rdxF[1]*f[17]*nu[165]+1.677050983124842*rdxF[1]*f[8]*nu[162]+1.677050983124842*rdxF[0]*nu[11]*f[39]+0.75*rdxF[0]*nu[1]*f[27]; 
  out[40] += 1.677050983124842*rdxF[2]*f[40]*nu[257]+0.75*rdxF[2]*f[24]*nu[247]+5.031152949374527*rdxF[1]*f[40]*nu[175]+3.75*rdxF[1]*f[9]*nu[175]+3.354101966249685*rdxF[1]*f[18]*nu[165]+1.677050983124842*rdxF[1]*f[9]*nu[162]; 
  out[41] += 5.031152949374527*rdxF[2]*f[41]*nu[257]+3.75*rdxF[2]*f[5]*nu[257]+3.354101966249685*rdxF[2]*f[16]*nu[247]+1.677050983124842*rdxF[2]*f[5]*nu[243]+1.677050983124842*rdxF[0]*nu[11]*f[41]+0.75*rdxF[0]*nu[1]*f[29]; 
  out[42] += 5.031152949374527*rdxF[2]*f[42]*nu[257]+3.75*rdxF[2]*f[6]*nu[257]+3.354101966249685*rdxF[2]*f[17]*nu[247]+1.677050983124842*rdxF[2]*f[6]*nu[243]+1.677050983124842*rdxF[1]*f[42]*nu[175]+0.75*rdxF[1]*f[28]*nu[165]+1.677050983124842*rdxF[0]*nu[11]*f[42]+0.75*rdxF[0]*nu[1]*f[30]; 
  out[43] += 5.031152949374527*rdxF[2]*f[43]*nu[257]+3.75*rdxF[2]*f[7]*nu[257]+3.354101966249685*rdxF[2]*f[18]*nu[247]+1.677050983124842*rdxF[2]*f[7]*nu[243]+1.677050983124842*rdxF[1]*f[43]*nu[175]+0.75*rdxF[1]*f[29]*nu[165]; 
  out[44] += 5.031152949374527*rdxF[0]*nu[11]*f[44]+3.354101966249684*rdxF[0]*nu[1]*f[20]+3.75*rdxF[0]*nu[11]*f[12]+1.677050983124842*nu[0]*rdxF[0]*f[12]; 
  out[45] += 5.031152949374527*rdxF[1]*f[45]*nu[175]+3.75*rdxF[1]*f[11]*nu[175]+3.354101966249684*rdxF[1]*f[21]*nu[165]+1.677050983124842*rdxF[1]*f[11]*nu[162]+5.031152949374527*rdxF[0]*nu[11]*f[45]+3.354101966249684*rdxF[0]*nu[1]*f[23]+3.75*rdxF[0]*nu[11]*f[13]+1.677050983124842*nu[0]*rdxF[0]*f[13]; 
  out[46] += 5.031152949374527*rdxF[1]*f[46]*nu[175]+3.75*rdxF[1]*f[12]*nu[175]+3.354101966249684*rdxF[1]*f[22]*nu[165]+1.677050983124842*rdxF[1]*f[12]*nu[162]; 
  out[47] += 5.031152949374527*rdxF[2]*f[47]*nu[257]+3.75*rdxF[2]*f[11]*nu[257]+3.354101966249684*rdxF[2]*f[25]*nu[247]+1.677050983124842*rdxF[2]*f[11]*nu[243]+5.031152949374527*rdxF[0]*nu[11]*f[47]+3.354101966249684*rdxF[0]*nu[1]*f[28]+3.75*rdxF[0]*nu[11]*f[14]+1.677050983124842*nu[0]*rdxF[0]*f[14]; 
  out[48] += 5.031152949374527*rdxF[2]*f[48]*nu[257]+3.75*rdxF[2]*f[12]*nu[257]+3.354101966249684*rdxF[2]*f[26]*nu[247]+1.677050983124842*rdxF[2]*f[12]*nu[243]; 
  out[49] += 5.031152949374527*rdxF[2]*f[49]*nu[257]+3.75*rdxF[2]*f[13]*nu[257]+3.354101966249684*rdxF[2]*f[27]*nu[247]+1.677050983124842*rdxF[2]*f[13]*nu[243]+5.031152949374527*rdxF[1]*f[49]*nu[175]+3.75*rdxF[1]*f[14]*nu[175]+3.354101966249684*rdxF[1]*f[30]*nu[165]+1.677050983124842*rdxF[1]*f[14]*nu[162]; 
  out[50] += 1.677050983124842*rdxF[2]*f[50]*nu[257]+0.75*rdxF[2]*f[32]*nu[247]+1.677050983124842*rdxF[1]*f[50]*nu[175]+0.75*rdxF[1]*f[35]*nu[165]+5.031152949374527*rdxF[0]*nu[11]*f[50]+3.354101966249684*rdxF[0]*nu[1]*f[31]+3.75*rdxF[0]*nu[11]*f[18]+1.677050983124842*nu[0]*rdxF[0]*f[18]; 
  out[51] += 1.677050983124842*rdxF[2]*f[51]*nu[257]+0.75*rdxF[2]*f[33]*nu[247]+1.677050983124842*rdxF[1]*f[51]*nu[175]+0.75*rdxF[1]*f[36]*nu[165]+1.677050983124842*rdxF[0]*nu[11]*f[51]+0.75*rdxF[0]*nu[1]*f[38]; 
  out[52] += 1.677050983124842*rdxF[2]*f[52]*nu[257]+0.75*rdxF[2]*f[34]*nu[247]+5.031152949374527*rdxF[1]*f[52]*nu[175]+3.75*rdxF[1]*f[16]*nu[175]+3.354101966249684*rdxF[1]*f[31]*nu[165]+1.677050983124842*rdxF[1]*f[16]*nu[162]+1.677050983124842*rdxF[0]*nu[11]*f[52]+0.75*rdxF[0]*nu[1]*f[40]; 
  out[53] += 5.031152949374527*rdxF[2]*f[53]*nu[257]+3.75*rdxF[2]*f[15]*nu[257]+3.354101966249684*rdxF[2]*f[31]*nu[247]+1.677050983124842*rdxF[2]*f[15]*nu[243]+1.677050983124842*rdxF[1]*f[53]*nu[175]+0.75*rdxF[1]*f[41]*nu[165]+1.677050983124842*rdxF[0]*nu[11]*f[53]+0.75*rdxF[0]*nu[1]*f[43]; 
  out[54] += 1.677050983124842*rdxF[1]*f[54]*nu[175]+0.75*rdxF[1]*f[44]*nu[165]+5.031152949374527*rdxF[0]*nu[11]*f[54]+3.354101966249685*rdxF[0]*nu[1]*f[33]+3.75*rdxF[0]*nu[11]*f[22]+1.677050983124842*nu[0]*rdxF[0]*f[22]; 
  out[55] += 5.031152949374527*rdxF[1]*f[55]*nu[175]+3.75*rdxF[1]*f[19]*nu[175]+3.354101966249685*rdxF[1]*f[32]*nu[165]+1.677050983124842*rdxF[1]*f[19]*nu[162]+5.031152949374527*rdxF[0]*nu[11]*f[55]+3.354101966249685*rdxF[0]*nu[1]*f[34]+3.75*rdxF[0]*nu[11]*f[24]+1.677050983124842*nu[0]*rdxF[0]*f[24]; 
  out[56] += 5.031152949374527*rdxF[1]*f[56]*nu[175]+3.75*rdxF[1]*f[20]*nu[175]+3.354101966249685*rdxF[1]*f[33]*nu[165]+1.677050983124842*rdxF[1]*f[20]*nu[162]+1.677050983124842*rdxF[0]*nu[11]*f[56]+0.75*rdxF[0]*nu[1]*f[46]; 
  out[57] += 1.677050983124842*rdxF[2]*f[57]*nu[257]+0.75*rdxF[2]*f[44]*nu[247]+5.031152949374527*rdxF[0]*nu[11]*f[57]+3.354101966249685*rdxF[0]*nu[1]*f[36]+3.75*rdxF[0]*nu[11]*f[26]+1.677050983124842*nu[0]*rdxF[0]*f[26]; 
  out[58] += 1.677050983124842*rdxF[2]*f[58]*nu[257]+0.75*rdxF[2]*f[45]*nu[247]+5.031152949374527*rdxF[1]*f[58]*nu[175]+3.75*rdxF[1]*f[25]*nu[175]+3.354101966249685*rdxF[1]*f[37]*nu[165]+1.677050983124842*rdxF[1]*f[25]*nu[162]+5.031152949374527*rdxF[0]*nu[11]*f[58]+3.354101966249685*rdxF[0]*nu[1]*f[39]+3.75*rdxF[0]*nu[11]*f[27]+1.677050983124842*nu[0]*rdxF[0]*f[27]; 
  out[59] += 1.677050983124842*rdxF[2]*f[59]*nu[257]+0.75*rdxF[2]*f[46]*nu[247]+5.031152949374527*rdxF[1]*f[59]*nu[175]+3.75*rdxF[1]*f[26]*nu[175]+3.354101966249685*rdxF[1]*f[38]*nu[165]+1.677050983124842*rdxF[1]*f[26]*nu[162]; 
  out[60] += 5.031152949374527*rdxF[2]*f[60]*nu[257]+3.75*rdxF[2]*f[19]*nu[257]+3.354101966249685*rdxF[2]*f[35]*nu[247]+1.677050983124842*rdxF[2]*f[19]*nu[243]+5.031152949374527*rdxF[0]*nu[11]*f[60]+3.354101966249685*rdxF[0]*nu[1]*f[41]+3.75*rdxF[0]*nu[11]*f[29]+1.677050983124842*nu[0]*rdxF[0]*f[29]; 
  out[61] += 5.031152949374527*rdxF[2]*f[61]*nu[257]+3.75*rdxF[2]*f[20]*nu[257]+3.354101966249685*rdxF[2]*f[36]*nu[247]+1.677050983124842*rdxF[2]*f[20]*nu[243]+1.677050983124842*rdxF[0]*nu[11]*f[61]+0.75*rdxF[0]*nu[1]*f[48]; 
  out[62] += 5.031152949374527*rdxF[2]*f[62]*nu[257]+3.75*rdxF[2]*f[21]*nu[257]+3.354101966249685*rdxF[2]*f[37]*nu[247]+1.677050983124842*rdxF[2]*f[21]*nu[243]+1.677050983124842*rdxF[1]*f[62]*nu[175]+0.75*rdxF[1]*f[47]*nu[165]+5.031152949374527*rdxF[0]*nu[11]*f[62]+3.354101966249685*rdxF[0]*nu[1]*f[42]+3.75*rdxF[0]*nu[11]*f[30]+1.677050983124842*nu[0]*rdxF[0]*f[30]; 
  out[63] += 5.031152949374527*rdxF[2]*f[63]*nu[257]+3.75*rdxF[2]*f[22]*nu[257]+3.354101966249685*rdxF[2]*f[38]*nu[247]+1.677050983124842*rdxF[2]*f[22]*nu[243]+1.677050983124842*rdxF[1]*f[63]*nu[175]+0.75*rdxF[1]*f[48]*nu[165]; 
  out[64] += 5.031152949374527*rdxF[2]*f[64]*nu[257]+3.75*rdxF[2]*f[23]*nu[257]+3.354101966249685*rdxF[2]*f[39]*nu[247]+1.677050983124842*rdxF[2]*f[23]*nu[243]+5.031152949374527*rdxF[1]*f[64]*nu[175]+3.75*rdxF[1]*f[28]*nu[175]+3.354101966249685*rdxF[1]*f[42]*nu[165]+1.677050983124842*rdxF[1]*f[28]*nu[162]+1.677050983124842*rdxF[0]*nu[11]*f[64]+0.75*rdxF[0]*nu[1]*f[49]; 
  out[65] += 5.031152949374527*rdxF[2]*f[65]*nu[257]+3.75*rdxF[2]*f[24]*nu[257]+3.354101966249685*rdxF[2]*f[40]*nu[247]+1.677050983124842*rdxF[2]*f[24]*nu[243]+5.031152949374527*rdxF[1]*f[65]*nu[175]+3.75*rdxF[1]*f[29]*nu[175]+3.354101966249685*rdxF[1]*f[43]*nu[165]+1.677050983124842*rdxF[1]*f[29]*nu[162]; 
  out[66] += 1.677050983124842*rdxF[2]*f[66]*nu[257]+0.75*rdxF[2]*f[54]*nu[247]+1.677050983124842*rdxF[1]*f[66]*nu[175]+0.75*rdxF[1]*f[57]*nu[165]+5.031152949374527*rdxF[0]*nu[11]*f[66]+3.354101966249684*rdxF[0]*nu[1]*f[51]+3.75*rdxF[0]*nu[11]*f[38]+1.677050983124842*nu[0]*rdxF[0]*f[38]; 
  out[67] += 1.677050983124842*rdxF[2]*f[67]*nu[257]+0.75*rdxF[2]*f[55]*nu[247]+5.031152949374527*rdxF[1]*f[67]*nu[175]+3.75*rdxF[1]*f[35]*nu[175]+3.354101966249684*rdxF[1]*f[50]*nu[165]+1.677050983124842*rdxF[1]*f[35]*nu[162]+5.031152949374527*rdxF[0]*nu[11]*f[67]+3.354101966249684*rdxF[0]*nu[1]*f[52]+3.75*rdxF[0]*nu[11]*f[40]+1.677050983124842*nu[0]*rdxF[0]*f[40]; 
  out[68] += 1.677050983124842*rdxF[2]*f[68]*nu[257]+0.75*rdxF[2]*f[56]*nu[247]+5.031152949374527*rdxF[1]*f[68]*nu[175]+3.75*rdxF[1]*f[36]*nu[175]+3.354101966249684*rdxF[1]*f[51]*nu[165]+1.677050983124842*rdxF[1]*f[36]*nu[162]+1.677050983124842*rdxF[0]*nu[11]*f[68]+0.75*rdxF[0]*nu[1]*f[59]; 
  out[69] += 5.031152949374527*rdxF[2]*f[69]*nu[257]+3.75*rdxF[2]*f[32]*nu[257]+3.354101966249684*rdxF[2]*f[50]*nu[247]+1.677050983124842*rdxF[2]*f[32]*nu[243]+1.677050983124842*rdxF[1]*f[69]*nu[175]+0.75*rdxF[1]*f[60]*nu[165]+5.031152949374527*rdxF[0]*nu[11]*f[69]+3.354101966249684*rdxF[0]*nu[1]*f[53]+3.75*rdxF[0]*nu[11]*f[43]+1.677050983124842*nu[0]*rdxF[0]*f[43]; 
  out[70] += 5.031152949374527*rdxF[2]*f[70]*nu[257]+3.75*rdxF[2]*f[33]*nu[257]+3.354101966249684*rdxF[2]*f[51]*nu[247]+1.677050983124842*rdxF[2]*f[33]*nu[243]+1.677050983124842*rdxF[1]*f[70]*nu[175]+0.75*rdxF[1]*f[61]*nu[165]+1.677050983124842*rdxF[0]*nu[11]*f[70]+0.75*rdxF[0]*nu[1]*f[63]; 
  out[71] += 5.031152949374527*rdxF[2]*f[71]*nu[257]+3.75*rdxF[2]*f[34]*nu[257]+3.354101966249684*rdxF[2]*f[52]*nu[247]+1.677050983124842*rdxF[2]*f[34]*nu[243]+5.031152949374527*rdxF[1]*f[71]*nu[175]+3.75*rdxF[1]*f[41]*nu[175]+3.354101966249684*rdxF[1]*f[53]*nu[165]+1.677050983124842*rdxF[1]*f[41]*nu[162]+1.677050983124842*rdxF[0]*nu[11]*f[71]+0.75*rdxF[0]*nu[1]*f[65]; 
  out[72] += 5.031152949374527*rdxF[1]*f[72]*nu[175]+3.75*rdxF[1]*f[44]*nu[175]+3.354101966249685*rdxF[1]*f[54]*nu[165]+1.677050983124842*rdxF[1]*f[44]*nu[162]+5.031152949374527*rdxF[0]*nu[11]*f[72]+3.354101966249685*rdxF[0]*nu[1]*f[56]+3.75*rdxF[0]*nu[11]*f[46]+1.677050983124842*nu[0]*rdxF[0]*f[46]; 
  out[73] += 5.031152949374527*rdxF[2]*f[73]*nu[257]+3.75*rdxF[2]*f[44]*nu[257]+3.354101966249685*rdxF[2]*f[57]*nu[247]+1.677050983124842*rdxF[2]*f[44]*nu[243]+5.031152949374527*rdxF[0]*nu[11]*f[73]+3.354101966249685*rdxF[0]*nu[1]*f[61]+3.75*rdxF[0]*nu[11]*f[48]+1.677050983124842*nu[0]*rdxF[0]*f[48]; 
  out[74] += 5.031152949374527*rdxF[2]*f[74]*nu[257]+3.75*rdxF[2]*f[45]*nu[257]+3.354101966249685*rdxF[2]*f[58]*nu[247]+1.677050983124842*rdxF[2]*f[45]*nu[243]+5.031152949374527*rdxF[1]*f[74]*nu[175]+3.75*rdxF[1]*f[47]*nu[175]+3.354101966249685*rdxF[1]*f[62]*nu[165]+1.677050983124842*rdxF[1]*f[47]*nu[162]+5.031152949374527*rdxF[0]*nu[11]*f[74]+3.354101966249685*rdxF[0]*nu[1]*f[64]+3.75*rdxF[0]*nu[11]*f[49]+1.677050983124842*nu[0]*rdxF[0]*f[49]; 
  out[75] += 5.031152949374527*rdxF[2]*f[75]*nu[257]+3.75*rdxF[2]*f[46]*nu[257]+3.354101966249685*rdxF[2]*f[59]*nu[247]+1.677050983124842*rdxF[2]*f[46]*nu[243]+5.031152949374527*rdxF[1]*f[75]*nu[175]+3.75*rdxF[1]*f[48]*nu[175]+3.354101966249685*rdxF[1]*f[63]*nu[165]+1.677050983124842*rdxF[1]*f[48]*nu[162]; 
  out[76] += 1.677050983124842*rdxF[2]*f[76]*nu[257]+0.75*rdxF[2]*f[72]*nu[247]+5.031152949374527*rdxF[1]*f[76]*nu[175]+3.75*rdxF[1]*f[57]*nu[175]+3.354101966249684*rdxF[1]*f[66]*nu[165]+1.677050983124842*rdxF[1]*f[57]*nu[162]+5.031152949374527*rdxF[0]*nu[11]*f[76]+3.354101966249684*rdxF[0]*nu[1]*f[68]+3.75*rdxF[0]*nu[11]*f[59]+1.677050983124842*nu[0]*rdxF[0]*f[59]; 
  out[77] += 5.031152949374527*rdxF[2]*f[77]*nu[257]+3.75*rdxF[2]*f[54]*nu[257]+3.354101966249684*rdxF[2]*f[66]*nu[247]+1.677050983124842*rdxF[2]*f[54]*nu[243]+1.677050983124842*rdxF[1]*f[77]*nu[175]+0.75*rdxF[1]*f[73]*nu[165]+5.031152949374527*rdxF[0]*nu[11]*f[77]+3.354101966249684*rdxF[0]*nu[1]*f[70]+3.75*rdxF[0]*nu[11]*f[63]+1.677050983124842*nu[0]*rdxF[0]*f[63]; 
  out[78] += 5.031152949374527*rdxF[2]*f[78]*nu[257]+3.75*rdxF[2]*f[55]*nu[257]+3.354101966249684*rdxF[2]*f[67]*nu[247]+1.677050983124842*rdxF[2]*f[55]*nu[243]+5.031152949374527*rdxF[1]*f[78]*nu[175]+3.75*rdxF[1]*f[60]*nu[175]+3.354101966249684*rdxF[1]*f[69]*nu[165]+1.677050983124842*rdxF[1]*f[60]*nu[162]+5.031152949374527*rdxF[0]*nu[11]*f[78]+3.354101966249684*rdxF[0]*nu[1]*f[71]+3.75*rdxF[0]*nu[11]*f[65]+1.677050983124842*nu[0]*rdxF[0]*f[65]; 
  out[79] += 5.031152949374527*rdxF[2]*f[79]*nu[257]+3.75*rdxF[2]*f[56]*nu[257]+3.354101966249684*rdxF[2]*f[68]*nu[247]+1.677050983124842*rdxF[2]*f[56]*nu[243]+5.031152949374527*rdxF[1]*f[79]*nu[175]+3.75*rdxF[1]*f[61]*nu[175]+3.354101966249684*rdxF[1]*f[70]*nu[165]+1.677050983124842*rdxF[1]*f[61]*nu[162]+1.677050983124842*rdxF[0]*nu[11]*f[79]+0.75*rdxF[0]*nu[1]*f[75]; 
  out[80] += 5.031152949374527*rdxF[2]*f[80]*nu[257]+3.75*rdxF[2]*f[72]*nu[257]+3.354101966249684*rdxF[2]*f[76]*nu[247]+1.677050983124842*rdxF[2]*f[72]*nu[243]+5.031152949374527*rdxF[1]*f[80]*nu[175]+3.75*rdxF[1]*f[73]*nu[175]+3.354101966249684*rdxF[1]*f[77]*nu[165]+1.677050983124842*rdxF[1]*f[73]*nu[162]+5.031152949374527*rdxF[0]*nu[11]*f[80]+3.354101966249684*rdxF[0]*nu[1]*f[79]+3.75*rdxF[0]*nu[11]*f[75]+1.677050983124842*nu[0]*rdxF[0]*f[75]; 

  return (rdxF[0]*(0.390625*nu[80]-0.3493856214843422*nu[75]-0.3493856214843422*nu[74]-0.3493856214843422*nu[73]-0.3493856214843422*nu[72]+0.3125*nu[49]+0.3125*nu[48]+0.3125*nu[47]+0.3125*nu[46]+0.3125*nu[45]+0.3125*nu[44]-0.2795084971874737*nu[14]-0.2795084971874737*nu[13]-0.2795084971874737*nu[12]-0.2795084971874737*nu[11]+0.25*nu[0])+rdxF[1]*(0.390625*nu[242]-0.3493856214843422*nu[237]-0.3493856214843422*nu[236]-0.3493856214843422*nu[235]-0.3493856214843422*nu[234]+0.3125*nu[211]+0.3125*nu[210]+0.3125*nu[209]+0.3125*nu[208]+0.3125*nu[207]+0.3125*nu[206]-0.2795084971874737*nu[176]-0.2795084971874737*nu[175]-0.2795084971874737*nu[174]-0.2795084971874737*nu[173]+0.25*nu[162])+rdxF[2]*(0.390625*nu[323]-0.3493856214843422*nu[318]-0.3493856214843422*nu[317]-0.3493856214843422*nu[316]-0.3493856214843422*nu[315]+0.3125*nu[292]+0.3125*nu[291]+0.3125*nu[290]+0.3125*nu[289]+0.3125*nu[288]+0.3125*nu[287]-0.2795084971874737*nu[257]-0.2795084971874737*nu[256]-0.2795084971874737*nu[255]-0.2795084971874737*nu[254]+0.25*nu[243]))*0.9;

} 
double ConstDiffusionVarCoeffVol4xTensorP2_diffDirs13(const double *w, const double *dx, const double *nu, const double *f, double *out) 
{ 
  // w[4]:   Cell-center coordinates.
  // dx[4]:  Cell spacing.
  // nu[324]:  diffusion coefficient.
  // f:      Input distribution function.
  // out:    Incremented output 
  double rdxF[2]; 
  rdxF[0] = 4.0/(dx[0]*dx[0]); 
  rdxF[1] = 4.0/(dx[2]*dx[2]); 

  out[1] += 1.677050983124842*rdxF[0]*f[1]*nu[11]+0.75*f[0]*rdxF[0]*nu[1]; 
  out[3] += 1.677050983124842*rdxF[1]*f[3]*nu[175]+0.75*f[0]*rdxF[1]*nu[165]; 
  out[5] += 1.677050983124842*rdxF[0]*f[5]*nu[11]+0.75*rdxF[0]*nu[1]*f[2]; 
  out[6] += 1.677050983124842*rdxF[1]*f[6]*nu[175]+0.75*f[1]*rdxF[1]*nu[165]+1.677050983124842*rdxF[0]*f[6]*nu[11]+0.75*rdxF[0]*nu[1]*f[3]; 
  out[7] += 1.677050983124842*rdxF[1]*f[7]*nu[175]+0.75*rdxF[1]*f[2]*nu[165]; 
  out[8] += 1.677050983124842*rdxF[0]*f[8]*nu[11]+0.75*rdxF[0]*nu[1]*f[4]; 
  out[10] += 1.677050983124842*rdxF[1]*f[10]*nu[175]+0.75*rdxF[1]*f[4]*nu[165]; 
  out[11] += 5.031152949374527*rdxF[0]*f[11]*nu[11]+3.75*f[0]*rdxF[0]*nu[11]+3.354101966249685*rdxF[0]*f[1]*nu[1]+1.677050983124842*f[0]*nu[0]*rdxF[0]; 
  out[13] += 5.031152949374527*rdxF[1]*f[13]*nu[175]+3.75*f[0]*rdxF[1]*nu[175]+3.354101966249685*rdxF[1]*f[3]*nu[165]+1.677050983124842*f[0]*rdxF[1]*nu[162]; 
  out[15] += 1.677050983124842*rdxF[1]*f[15]*nu[175]+0.75*rdxF[1]*f[5]*nu[165]+1.677050983124842*rdxF[0]*nu[11]*f[15]+0.75*rdxF[0]*nu[1]*f[7]; 
  out[16] += 1.677050983124842*rdxF[0]*nu[11]*f[16]+0.75*rdxF[0]*nu[1]*f[9]; 
  out[17] += 1.677050983124842*rdxF[1]*f[17]*nu[175]+0.75*rdxF[1]*f[8]*nu[165]+1.677050983124842*rdxF[0]*nu[11]*f[17]+0.75*rdxF[0]*nu[1]*f[10]; 
  out[18] += 1.677050983124842*rdxF[1]*f[18]*nu[175]+0.75*rdxF[1]*f[9]*nu[165]; 
  out[19] += 5.031152949374527*rdxF[0]*nu[11]*f[19]+3.75*rdxF[0]*f[2]*nu[11]+3.354101966249684*rdxF[0]*nu[1]*f[5]+1.677050983124842*nu[0]*rdxF[0]*f[2]; 
  out[20] += 1.677050983124842*rdxF[0]*nu[11]*f[20]+0.75*rdxF[0]*nu[1]*f[12]; 
  out[21] += 1.677050983124842*rdxF[1]*f[21]*nu[175]+0.75*rdxF[1]*f[11]*nu[165]+5.031152949374527*rdxF[0]*nu[11]*f[21]+3.75*rdxF[0]*f[3]*nu[11]+3.354101966249684*rdxF[0]*nu[1]*f[6]+1.677050983124842*nu[0]*rdxF[0]*f[3]; 
  out[22] += 1.677050983124842*rdxF[1]*f[22]*nu[175]+0.75*rdxF[1]*f[12]*nu[165]; 
  out[23] += 5.031152949374527*rdxF[1]*f[23]*nu[175]+3.75*f[1]*rdxF[1]*nu[175]+3.354101966249684*rdxF[1]*f[6]*nu[165]+1.677050983124842*f[1]*rdxF[1]*nu[162]+1.677050983124842*rdxF[0]*nu[11]*f[23]+0.75*rdxF[0]*nu[1]*f[13]; 
  out[24] += 5.031152949374527*rdxF[1]*f[24]*nu[175]+3.75*rdxF[1]*f[2]*nu[175]+3.354101966249684*rdxF[1]*f[7]*nu[165]+1.677050983124842*rdxF[1]*f[2]*nu[162]; 
  out[25] += 5.031152949374527*rdxF[0]*nu[11]*f[25]+3.75*rdxF[0]*f[4]*nu[11]+3.354101966249684*rdxF[0]*nu[1]*f[8]+1.677050983124842*nu[0]*rdxF[0]*f[4]; 
  out[27] += 5.031152949374527*rdxF[1]*f[27]*nu[175]+3.75*rdxF[1]*f[4]*nu[175]+3.354101966249684*rdxF[1]*f[10]*nu[165]+1.677050983124842*rdxF[1]*f[4]*nu[162]; 
  out[28] += 1.677050983124842*rdxF[0]*nu[11]*f[28]+0.75*rdxF[0]*nu[1]*f[14]; 
  out[30] += 1.677050983124842*rdxF[1]*f[30]*nu[175]+0.75*rdxF[1]*f[14]*nu[165]; 
  out[31] += 1.677050983124842*rdxF[1]*f[31]*nu[175]+0.75*rdxF[1]*f[16]*nu[165]+1.677050983124842*rdxF[0]*nu[11]*f[31]+0.75*rdxF[0]*nu[1]*f[18]; 
  out[32] += 1.677050983124842*rdxF[1]*f[32]*nu[175]+0.75*rdxF[1]*f[19]*nu[165]+5.031152949374527*rdxF[0]*nu[11]*f[32]+3.354101966249685*rdxF[0]*nu[1]*f[15]+3.75*rdxF[0]*f[7]*nu[11]+1.677050983124842*nu[0]*rdxF[0]*f[7]; 
  out[33] += 1.677050983124842*rdxF[1]*f[33]*nu[175]+0.75*rdxF[1]*f[20]*nu[165]+1.677050983124842*rdxF[0]*nu[11]*f[33]+0.75*rdxF[0]*nu[1]*f[22]; 
  out[34] += 5.031152949374527*rdxF[1]*f[34]*nu[175]+3.75*rdxF[1]*f[5]*nu[175]+3.354101966249685*rdxF[1]*f[15]*nu[165]+1.677050983124842*rdxF[1]*f[5]*nu[162]+1.677050983124842*rdxF[0]*nu[11]*f[34]+0.75*rdxF[0]*nu[1]*f[24]; 
  out[35] += 5.031152949374527*rdxF[0]*nu[11]*f[35]+3.354101966249685*rdxF[0]*nu[1]*f[16]+3.75*rdxF[0]*f[9]*nu[11]+1.677050983124842*nu[0]*rdxF[0]*f[9]; 
  out[36] += 1.677050983124842*rdxF[0]*nu[11]*f[36]+0.75*rdxF[0]*nu[1]*f[26]; 
  out[37] += 1.677050983124842*rdxF[1]*f[37]*nu[175]+0.75*rdxF[1]*f[25]*nu[165]+5.031152949374527*rdxF[0]*nu[11]*f[37]+3.354101966249685*rdxF[0]*nu[1]*f[17]+3.75*rdxF[0]*f[10]*nu[11]+1.677050983124842*nu[0]*rdxF[0]*f[10]; 
  out[38] += 1.677050983124842*rdxF[1]*f[38]*nu[175]+0.75*rdxF[1]*f[26]*nu[165]; 
  out[39] += 5.031152949374527*rdxF[1]*f[39]*nu[175]+3.75*rdxF[1]*f[8]*nu[175]+3.354101966249685*rdxF[1]*f[17]*nu[165]+1.677050983124842*rdxF[1]*f[8]*nu[162]+1.677050983124842*rdxF[0]*nu[11]*f[39]+0.75*rdxF[0]*nu[1]*f[27]; 
  out[40] += 5.031152949374527*rdxF[1]*f[40]*nu[175]+3.75*rdxF[1]*f[9]*nu[175]+3.354101966249685*rdxF[1]*f[18]*nu[165]+1.677050983124842*rdxF[1]*f[9]*nu[162]; 
  out[41] += 1.677050983124842*rdxF[0]*nu[11]*f[41]+0.75*rdxF[0]*nu[1]*f[29]; 
  out[42] += 1.677050983124842*rdxF[1]*f[42]*nu[175]+0.75*rdxF[1]*f[28]*nu[165]+1.677050983124842*rdxF[0]*nu[11]*f[42]+0.75*rdxF[0]*nu[1]*f[30]; 
  out[43] += 1.677050983124842*rdxF[1]*f[43]*nu[175]+0.75*rdxF[1]*f[29]*nu[165]; 
  out[44] += 5.031152949374527*rdxF[0]*nu[11]*f[44]+3.354101966249684*rdxF[0]*nu[1]*f[20]+3.75*rdxF[0]*nu[11]*f[12]+1.677050983124842*nu[0]*rdxF[0]*f[12]; 
  out[45] += 5.031152949374527*rdxF[1]*f[45]*nu[175]+3.75*rdxF[1]*f[11]*nu[175]+3.354101966249684*rdxF[1]*f[21]*nu[165]+1.677050983124842*rdxF[1]*f[11]*nu[162]+5.031152949374527*rdxF[0]*nu[11]*f[45]+3.354101966249684*rdxF[0]*nu[1]*f[23]+3.75*rdxF[0]*nu[11]*f[13]+1.677050983124842*nu[0]*rdxF[0]*f[13]; 
  out[46] += 5.031152949374527*rdxF[1]*f[46]*nu[175]+3.75*rdxF[1]*f[12]*nu[175]+3.354101966249684*rdxF[1]*f[22]*nu[165]+1.677050983124842*rdxF[1]*f[12]*nu[162]; 
  out[47] += 5.031152949374527*rdxF[0]*nu[11]*f[47]+3.354101966249684*rdxF[0]*nu[1]*f[28]+3.75*rdxF[0]*nu[11]*f[14]+1.677050983124842*nu[0]*rdxF[0]*f[14]; 
  out[49] += 5.031152949374527*rdxF[1]*f[49]*nu[175]+3.75*rdxF[1]*f[14]*nu[175]+3.354101966249684*rdxF[1]*f[30]*nu[165]+1.677050983124842*rdxF[1]*f[14]*nu[162]; 
  out[50] += 1.677050983124842*rdxF[1]*f[50]*nu[175]+0.75*rdxF[1]*f[35]*nu[165]+5.031152949374527*rdxF[0]*nu[11]*f[50]+3.354101966249684*rdxF[0]*nu[1]*f[31]+3.75*rdxF[0]*nu[11]*f[18]+1.677050983124842*nu[0]*rdxF[0]*f[18]; 
  out[51] += 1.677050983124842*rdxF[1]*f[51]*nu[175]+0.75*rdxF[1]*f[36]*nu[165]+1.677050983124842*rdxF[0]*nu[11]*f[51]+0.75*rdxF[0]*nu[1]*f[38]; 
  out[52] += 5.031152949374527*rdxF[1]*f[52]*nu[175]+3.75*rdxF[1]*f[16]*nu[175]+3.354101966249684*rdxF[1]*f[31]*nu[165]+1.677050983124842*rdxF[1]*f[16]*nu[162]+1.677050983124842*rdxF[0]*nu[11]*f[52]+0.75*rdxF[0]*nu[1]*f[40]; 
  out[53] += 1.677050983124842*rdxF[1]*f[53]*nu[175]+0.75*rdxF[1]*f[41]*nu[165]+1.677050983124842*rdxF[0]*nu[11]*f[53]+0.75*rdxF[0]*nu[1]*f[43]; 
  out[54] += 1.677050983124842*rdxF[1]*f[54]*nu[175]+0.75*rdxF[1]*f[44]*nu[165]+5.031152949374527*rdxF[0]*nu[11]*f[54]+3.354101966249685*rdxF[0]*nu[1]*f[33]+3.75*rdxF[0]*nu[11]*f[22]+1.677050983124842*nu[0]*rdxF[0]*f[22]; 
  out[55] += 5.031152949374527*rdxF[1]*f[55]*nu[175]+3.75*rdxF[1]*f[19]*nu[175]+3.354101966249685*rdxF[1]*f[32]*nu[165]+1.677050983124842*rdxF[1]*f[19]*nu[162]+5.031152949374527*rdxF[0]*nu[11]*f[55]+3.354101966249685*rdxF[0]*nu[1]*f[34]+3.75*rdxF[0]*nu[11]*f[24]+1.677050983124842*nu[0]*rdxF[0]*f[24]; 
  out[56] += 5.031152949374527*rdxF[1]*f[56]*nu[175]+3.75*rdxF[1]*f[20]*nu[175]+3.354101966249685*rdxF[1]*f[33]*nu[165]+1.677050983124842*rdxF[1]*f[20]*nu[162]+1.677050983124842*rdxF[0]*nu[11]*f[56]+0.75*rdxF[0]*nu[1]*f[46]; 
  out[57] += 5.031152949374527*rdxF[0]*nu[11]*f[57]+3.354101966249685*rdxF[0]*nu[1]*f[36]+3.75*rdxF[0]*nu[11]*f[26]+1.677050983124842*nu[0]*rdxF[0]*f[26]; 
  out[58] += 5.031152949374527*rdxF[1]*f[58]*nu[175]+3.75*rdxF[1]*f[25]*nu[175]+3.354101966249685*rdxF[1]*f[37]*nu[165]+1.677050983124842*rdxF[1]*f[25]*nu[162]+5.031152949374527*rdxF[0]*nu[11]*f[58]+3.354101966249685*rdxF[0]*nu[1]*f[39]+3.75*rdxF[0]*nu[11]*f[27]+1.677050983124842*nu[0]*rdxF[0]*f[27]; 
  out[59] += 5.031152949374527*rdxF[1]*f[59]*nu[175]+3.75*rdxF[1]*f[26]*nu[175]+3.354101966249685*rdxF[1]*f[38]*nu[165]+1.677050983124842*rdxF[1]*f[26]*nu[162]; 
  out[60] += 5.031152949374527*rdxF[0]*nu[11]*f[60]+3.354101966249685*rdxF[0]*nu[1]*f[41]+3.75*rdxF[0]*nu[11]*f[29]+1.677050983124842*nu[0]*rdxF[0]*f[29]; 
  out[61] += 1.677050983124842*rdxF[0]*nu[11]*f[61]+0.75*rdxF[0]*nu[1]*f[48]; 
  out[62] += 1.677050983124842*rdxF[1]*f[62]*nu[175]+0.75*rdxF[1]*f[47]*nu[165]+5.031152949374527*rdxF[0]*nu[11]*f[62]+3.354101966249685*rdxF[0]*nu[1]*f[42]+3.75*rdxF[0]*nu[11]*f[30]+1.677050983124842*nu[0]*rdxF[0]*f[30]; 
  out[63] += 1.677050983124842*rdxF[1]*f[63]*nu[175]+0.75*rdxF[1]*f[48]*nu[165]; 
  out[64] += 5.031152949374527*rdxF[1]*f[64]*nu[175]+3.75*rdxF[1]*f[28]*nu[175]+3.354101966249685*rdxF[1]*f[42]*nu[165]+1.677050983124842*rdxF[1]*f[28]*nu[162]+1.677050983124842*rdxF[0]*nu[11]*f[64]+0.75*rdxF[0]*nu[1]*f[49]; 
  out[65] += 5.031152949374527*rdxF[1]*f[65]*nu[175]+3.75*rdxF[1]*f[29]*nu[175]+3.354101966249685*rdxF[1]*f[43]*nu[165]+1.677050983124842*rdxF[1]*f[29]*nu[162]; 
  out[66] += 1.677050983124842*rdxF[1]*f[66]*nu[175]+0.75*rdxF[1]*f[57]*nu[165]+5.031152949374527*rdxF[0]*nu[11]*f[66]+3.354101966249684*rdxF[0]*nu[1]*f[51]+3.75*rdxF[0]*nu[11]*f[38]+1.677050983124842*nu[0]*rdxF[0]*f[38]; 
  out[67] += 5.031152949374527*rdxF[1]*f[67]*nu[175]+3.75*rdxF[1]*f[35]*nu[175]+3.354101966249684*rdxF[1]*f[50]*nu[165]+1.677050983124842*rdxF[1]*f[35]*nu[162]+5.031152949374527*rdxF[0]*nu[11]*f[67]+3.354101966249684*rdxF[0]*nu[1]*f[52]+3.75*rdxF[0]*nu[11]*f[40]+1.677050983124842*nu[0]*rdxF[0]*f[40]; 
  out[68] += 5.031152949374527*rdxF[1]*f[68]*nu[175]+3.75*rdxF[1]*f[36]*nu[175]+3.354101966249684*rdxF[1]*f[51]*nu[165]+1.677050983124842*rdxF[1]*f[36]*nu[162]+1.677050983124842*rdxF[0]*nu[11]*f[68]+0.75*rdxF[0]*nu[1]*f[59]; 
  out[69] += 1.677050983124842*rdxF[1]*f[69]*nu[175]+0.75*rdxF[1]*f[60]*nu[165]+5.031152949374527*rdxF[0]*nu[11]*f[69]+3.354101966249684*rdxF[0]*nu[1]*f[53]+3.75*rdxF[0]*nu[11]*f[43]+1.677050983124842*nu[0]*rdxF[0]*f[43]; 
  out[70] += 1.677050983124842*rdxF[1]*f[70]*nu[175]+0.75*rdxF[1]*f[61]*nu[165]+1.677050983124842*rdxF[0]*nu[11]*f[70]+0.75*rdxF[0]*nu[1]*f[63]; 
  out[71] += 5.031152949374527*rdxF[1]*f[71]*nu[175]+3.75*rdxF[1]*f[41]*nu[175]+3.354101966249684*rdxF[1]*f[53]*nu[165]+1.677050983124842*rdxF[1]*f[41]*nu[162]+1.677050983124842*rdxF[0]*nu[11]*f[71]+0.75*rdxF[0]*nu[1]*f[65]; 
  out[72] += 5.031152949374527*rdxF[1]*f[72]*nu[175]+3.75*rdxF[1]*f[44]*nu[175]+3.354101966249685*rdxF[1]*f[54]*nu[165]+1.677050983124842*rdxF[1]*f[44]*nu[162]+5.031152949374527*rdxF[0]*nu[11]*f[72]+3.354101966249685*rdxF[0]*nu[1]*f[56]+3.75*rdxF[0]*nu[11]*f[46]+1.677050983124842*nu[0]*rdxF[0]*f[46]; 
  out[73] += 5.031152949374527*rdxF[0]*nu[11]*f[73]+3.354101966249685*rdxF[0]*nu[1]*f[61]+3.75*rdxF[0]*nu[11]*f[48]+1.677050983124842*nu[0]*rdxF[0]*f[48]; 
  out[74] += 5.031152949374527*rdxF[1]*f[74]*nu[175]+3.75*rdxF[1]*f[47]*nu[175]+3.354101966249685*rdxF[1]*f[62]*nu[165]+1.677050983124842*rdxF[1]*f[47]*nu[162]+5.031152949374527*rdxF[0]*nu[11]*f[74]+3.354101966249685*rdxF[0]*nu[1]*f[64]+3.75*rdxF[0]*nu[11]*f[49]+1.677050983124842*nu[0]*rdxF[0]*f[49]; 
  out[75] += 5.031152949374527*rdxF[1]*f[75]*nu[175]+3.75*rdxF[1]*f[48]*nu[175]+3.354101966249685*rdxF[1]*f[63]*nu[165]+1.677050983124842*rdxF[1]*f[48]*nu[162]; 
  out[76] += 5.031152949374527*rdxF[1]*f[76]*nu[175]+3.75*rdxF[1]*f[57]*nu[175]+3.354101966249684*rdxF[1]*f[66]*nu[165]+1.677050983124842*rdxF[1]*f[57]*nu[162]+5.031152949374527*rdxF[0]*nu[11]*f[76]+3.354101966249684*rdxF[0]*nu[1]*f[68]+3.75*rdxF[0]*nu[11]*f[59]+1.677050983124842*nu[0]*rdxF[0]*f[59]; 
  out[77] += 1.677050983124842*rdxF[1]*f[77]*nu[175]+0.75*rdxF[1]*f[73]*nu[165]+5.031152949374527*rdxF[0]*nu[11]*f[77]+3.354101966249684*rdxF[0]*nu[1]*f[70]+3.75*rdxF[0]*nu[11]*f[63]+1.677050983124842*nu[0]*rdxF[0]*f[63]; 
  out[78] += 5.031152949374527*rdxF[1]*f[78]*nu[175]+3.75*rdxF[1]*f[60]*nu[175]+3.354101966249684*rdxF[1]*f[69]*nu[165]+1.677050983124842*rdxF[1]*f[60]*nu[162]+5.031152949374527*rdxF[0]*nu[11]*f[78]+3.354101966249684*rdxF[0]*nu[1]*f[71]+3.75*rdxF[0]*nu[11]*f[65]+1.677050983124842*nu[0]*rdxF[0]*f[65]; 
  out[79] += 5.031152949374527*rdxF[1]*f[79]*nu[175]+3.75*rdxF[1]*f[61]*nu[175]+3.354101966249684*rdxF[1]*f[70]*nu[165]+1.677050983124842*rdxF[1]*f[61]*nu[162]+1.677050983124842*rdxF[0]*nu[11]*f[79]+0.75*rdxF[0]*nu[1]*f[75]; 
  out[80] += 5.031152949374527*rdxF[1]*f[80]*nu[175]+3.75*rdxF[1]*f[73]*nu[175]+3.354101966249684*rdxF[1]*f[77]*nu[165]+1.677050983124842*rdxF[1]*f[73]*nu[162]+5.031152949374527*rdxF[0]*nu[11]*f[80]+3.354101966249684*rdxF[0]*nu[1]*f[79]+3.75*rdxF[0]*nu[11]*f[75]+1.677050983124842*nu[0]*rdxF[0]*f[75]; 

  return (rdxF[0]*(0.390625*nu[80]-0.3493856214843422*nu[75]-0.3493856214843422*nu[74]-0.3493856214843422*nu[73]-0.3493856214843422*nu[72]+0.3125*nu[49]+0.3125*nu[48]+0.3125*nu[47]+0.3125*nu[46]+0.3125*nu[45]+0.3125*nu[44]-0.2795084971874737*nu[14]-0.2795084971874737*nu[13]-0.2795084971874737*nu[12]-0.2795084971874737*nu[11]+0.25*nu[0])+rdxF[1]*(0.390625*nu[242]-0.3493856214843422*nu[237]-0.3493856214843422*nu[236]-0.3493856214843422*nu[235]-0.3493856214843422*nu[234]+0.3125*nu[211]+0.3125*nu[210]+0.3125*nu[209]+0.3125*nu[208]+0.3125*nu[207]+0.3125*nu[206]-0.2795084971874737*nu[176]-0.2795084971874737*nu[175]-0.2795084971874737*nu[174]-0.2795084971874737*nu[173]+0.25*nu[162]))*0.9;

} 
double ConstDiffusionVarCoeffVol4xTensorP2_diffDirs4(const double *w, const double *dx, const double *nu, const double *f, double *out) 
{ 
  // w[4]:   Cell-center coordinates.
  // dx[4]:  Cell spacing.
  // nu[324]:  diffusion coefficient.
  // f:      Input distribution function.
  // out:    Incremented output 
  double rdxF[1]; 
  rdxF[0] = 4.0/(dx[3]*dx[3]); 

  out[4] += 1.677050983124842*rdxF[0]*f[4]*nu[257]+0.75*f[0]*rdxF[0]*nu[247]; 
  out[8] += 1.677050983124842*rdxF[0]*f[8]*nu[257]+0.75*rdxF[0]*f[1]*nu[247]; 
  out[9] += 1.677050983124842*rdxF[0]*f[9]*nu[257]+0.75*rdxF[0]*f[2]*nu[247]; 
  out[10] += 1.677050983124842*rdxF[0]*f[10]*nu[257]+0.75*rdxF[0]*f[3]*nu[247]; 
  out[14] += 5.031152949374527*rdxF[0]*f[14]*nu[257]+3.75*f[0]*rdxF[0]*nu[257]+3.354101966249685*rdxF[0]*f[4]*nu[247]+1.677050983124842*f[0]*rdxF[0]*nu[243]; 
  out[16] += 1.677050983124842*rdxF[0]*f[16]*nu[257]+0.75*rdxF[0]*f[5]*nu[247]; 
  out[17] += 1.677050983124842*rdxF[0]*f[17]*nu[257]+0.75*rdxF[0]*f[6]*nu[247]; 
  out[18] += 1.677050983124842*rdxF[0]*f[18]*nu[257]+0.75*rdxF[0]*f[7]*nu[247]; 
  out[25] += 1.677050983124842*rdxF[0]*f[25]*nu[257]+0.75*rdxF[0]*f[11]*nu[247]; 
  out[26] += 1.677050983124842*rdxF[0]*f[26]*nu[257]+0.75*rdxF[0]*f[12]*nu[247]; 
  out[27] += 1.677050983124842*rdxF[0]*f[27]*nu[257]+0.75*rdxF[0]*f[13]*nu[247]; 
  out[28] += 5.031152949374527*rdxF[0]*f[28]*nu[257]+3.75*rdxF[0]*f[1]*nu[257]+3.354101966249684*rdxF[0]*f[8]*nu[247]+1.677050983124842*rdxF[0]*f[1]*nu[243]; 
  out[29] += 5.031152949374527*rdxF[0]*f[29]*nu[257]+3.75*rdxF[0]*f[2]*nu[257]+3.354101966249684*rdxF[0]*f[9]*nu[247]+1.677050983124842*rdxF[0]*f[2]*nu[243]; 
  out[30] += 5.031152949374527*rdxF[0]*f[30]*nu[257]+3.75*rdxF[0]*f[3]*nu[257]+3.354101966249684*rdxF[0]*f[10]*nu[247]+1.677050983124842*rdxF[0]*f[3]*nu[243]; 
  out[31] += 1.677050983124842*rdxF[0]*f[31]*nu[257]+0.75*rdxF[0]*f[15]*nu[247]; 
  out[35] += 1.677050983124842*rdxF[0]*f[35]*nu[257]+0.75*rdxF[0]*f[19]*nu[247]; 
  out[36] += 1.677050983124842*rdxF[0]*f[36]*nu[257]+0.75*rdxF[0]*f[20]*nu[247]; 
  out[37] += 1.677050983124842*rdxF[0]*f[37]*nu[257]+0.75*rdxF[0]*f[21]*nu[247]; 
  out[38] += 1.677050983124842*rdxF[0]*f[38]*nu[257]+0.75*rdxF[0]*f[22]*nu[247]; 
  out[39] += 1.677050983124842*rdxF[0]*f[39]*nu[257]+0.75*rdxF[0]*f[23]*nu[247]; 
  out[40] += 1.677050983124842*rdxF[0]*f[40]*nu[257]+0.75*rdxF[0]*f[24]*nu[247]; 
  out[41] += 5.031152949374527*rdxF[0]*f[41]*nu[257]+3.75*rdxF[0]*f[5]*nu[257]+3.354101966249685*rdxF[0]*f[16]*nu[247]+1.677050983124842*rdxF[0]*f[5]*nu[243]; 
  out[42] += 5.031152949374527*rdxF[0]*f[42]*nu[257]+3.75*rdxF[0]*f[6]*nu[257]+3.354101966249685*rdxF[0]*f[17]*nu[247]+1.677050983124842*rdxF[0]*f[6]*nu[243]; 
  out[43] += 5.031152949374527*rdxF[0]*f[43]*nu[257]+3.75*rdxF[0]*f[7]*nu[257]+3.354101966249685*rdxF[0]*f[18]*nu[247]+1.677050983124842*rdxF[0]*f[7]*nu[243]; 
  out[47] += 5.031152949374527*rdxF[0]*f[47]*nu[257]+3.75*rdxF[0]*f[11]*nu[257]+3.354101966249684*rdxF[0]*f[25]*nu[247]+1.677050983124842*rdxF[0]*f[11]*nu[243]; 
  out[48] += 5.031152949374527*rdxF[0]*f[48]*nu[257]+3.75*rdxF[0]*f[12]*nu[257]+3.354101966249684*rdxF[0]*f[26]*nu[247]+1.677050983124842*rdxF[0]*f[12]*nu[243]; 
  out[49] += 5.031152949374527*rdxF[0]*f[49]*nu[257]+3.75*rdxF[0]*f[13]*nu[257]+3.354101966249684*rdxF[0]*f[27]*nu[247]+1.677050983124842*rdxF[0]*f[13]*nu[243]; 
  out[50] += 1.677050983124842*rdxF[0]*f[50]*nu[257]+0.75*rdxF[0]*f[32]*nu[247]; 
  out[51] += 1.677050983124842*rdxF[0]*f[51]*nu[257]+0.75*rdxF[0]*f[33]*nu[247]; 
  out[52] += 1.677050983124842*rdxF[0]*f[52]*nu[257]+0.75*rdxF[0]*f[34]*nu[247]; 
  out[53] += 5.031152949374527*rdxF[0]*f[53]*nu[257]+3.75*rdxF[0]*f[15]*nu[257]+3.354101966249684*rdxF[0]*f[31]*nu[247]+1.677050983124842*rdxF[0]*f[15]*nu[243]; 
  out[57] += 1.677050983124842*rdxF[0]*f[57]*nu[257]+0.75*rdxF[0]*f[44]*nu[247]; 
  out[58] += 1.677050983124842*rdxF[0]*f[58]*nu[257]+0.75*rdxF[0]*f[45]*nu[247]; 
  out[59] += 1.677050983124842*rdxF[0]*f[59]*nu[257]+0.75*rdxF[0]*f[46]*nu[247]; 
  out[60] += 5.031152949374527*rdxF[0]*f[60]*nu[257]+3.75*rdxF[0]*f[19]*nu[257]+3.354101966249685*rdxF[0]*f[35]*nu[247]+1.677050983124842*rdxF[0]*f[19]*nu[243]; 
  out[61] += 5.031152949374527*rdxF[0]*f[61]*nu[257]+3.75*rdxF[0]*f[20]*nu[257]+3.354101966249685*rdxF[0]*f[36]*nu[247]+1.677050983124842*rdxF[0]*f[20]*nu[243]; 
  out[62] += 5.031152949374527*rdxF[0]*f[62]*nu[257]+3.75*rdxF[0]*f[21]*nu[257]+3.354101966249685*rdxF[0]*f[37]*nu[247]+1.677050983124842*rdxF[0]*f[21]*nu[243]; 
  out[63] += 5.031152949374527*rdxF[0]*f[63]*nu[257]+3.75*rdxF[0]*f[22]*nu[257]+3.354101966249685*rdxF[0]*f[38]*nu[247]+1.677050983124842*rdxF[0]*f[22]*nu[243]; 
  out[64] += 5.031152949374527*rdxF[0]*f[64]*nu[257]+3.75*rdxF[0]*f[23]*nu[257]+3.354101966249685*rdxF[0]*f[39]*nu[247]+1.677050983124842*rdxF[0]*f[23]*nu[243]; 
  out[65] += 5.031152949374527*rdxF[0]*f[65]*nu[257]+3.75*rdxF[0]*f[24]*nu[257]+3.354101966249685*rdxF[0]*f[40]*nu[247]+1.677050983124842*rdxF[0]*f[24]*nu[243]; 
  out[66] += 1.677050983124842*rdxF[0]*f[66]*nu[257]+0.75*rdxF[0]*f[54]*nu[247]; 
  out[67] += 1.677050983124842*rdxF[0]*f[67]*nu[257]+0.75*rdxF[0]*f[55]*nu[247]; 
  out[68] += 1.677050983124842*rdxF[0]*f[68]*nu[257]+0.75*rdxF[0]*f[56]*nu[247]; 
  out[69] += 5.031152949374527*rdxF[0]*f[69]*nu[257]+3.75*rdxF[0]*f[32]*nu[257]+3.354101966249684*rdxF[0]*f[50]*nu[247]+1.677050983124842*rdxF[0]*f[32]*nu[243]; 
  out[70] += 5.031152949374527*rdxF[0]*f[70]*nu[257]+3.75*rdxF[0]*f[33]*nu[257]+3.354101966249684*rdxF[0]*f[51]*nu[247]+1.677050983124842*rdxF[0]*f[33]*nu[243]; 
  out[71] += 5.031152949374527*rdxF[0]*f[71]*nu[257]+3.75*rdxF[0]*f[34]*nu[257]+3.354101966249684*rdxF[0]*f[52]*nu[247]+1.677050983124842*rdxF[0]*f[34]*nu[243]; 
  out[73] += 5.031152949374527*rdxF[0]*f[73]*nu[257]+3.75*rdxF[0]*f[44]*nu[257]+3.354101966249685*rdxF[0]*f[57]*nu[247]+1.677050983124842*rdxF[0]*f[44]*nu[243]; 
  out[74] += 5.031152949374527*rdxF[0]*f[74]*nu[257]+3.75*rdxF[0]*f[45]*nu[257]+3.354101966249685*rdxF[0]*f[58]*nu[247]+1.677050983124842*rdxF[0]*f[45]*nu[243]; 
  out[75] += 5.031152949374527*rdxF[0]*f[75]*nu[257]+3.75*rdxF[0]*f[46]*nu[257]+3.354101966249685*rdxF[0]*f[59]*nu[247]+1.677050983124842*rdxF[0]*f[46]*nu[243]; 
  out[76] += 1.677050983124842*rdxF[0]*f[76]*nu[257]+0.75*rdxF[0]*f[72]*nu[247]; 
  out[77] += 5.031152949374527*rdxF[0]*f[77]*nu[257]+3.75*rdxF[0]*f[54]*nu[257]+3.354101966249684*rdxF[0]*f[66]*nu[247]+1.677050983124842*rdxF[0]*f[54]*nu[243]; 
  out[78] += 5.031152949374527*rdxF[0]*f[78]*nu[257]+3.75*rdxF[0]*f[55]*nu[257]+3.354101966249684*rdxF[0]*f[67]*nu[247]+1.677050983124842*rdxF[0]*f[55]*nu[243]; 
  out[79] += 5.031152949374527*rdxF[0]*f[79]*nu[257]+3.75*rdxF[0]*f[56]*nu[257]+3.354101966249684*rdxF[0]*f[68]*nu[247]+1.677050983124842*rdxF[0]*f[56]*nu[243]; 
  out[80] += 5.031152949374527*rdxF[0]*f[80]*nu[257]+3.75*rdxF[0]*f[72]*nu[257]+3.354101966249684*rdxF[0]*f[76]*nu[247]+1.677050983124842*rdxF[0]*f[72]*nu[243]; 

  return (rdxF[0]*(0.390625*nu[323]-0.3493856214843422*nu[318]-0.3493856214843422*nu[317]-0.3493856214843422*nu[316]-0.3493856214843422*nu[315]+0.3125*nu[292]+0.3125*nu[291]+0.3125*nu[290]+0.3125*nu[289]+0.3125*nu[288]+0.3125*nu[287]-0.2795084971874737*nu[257]-0.2795084971874737*nu[256]-0.2795084971874737*nu[255]-0.2795084971874737*nu[254]+0.25*nu[243]))*0.9;

} 
double ConstDiffusionVarCoeffVol4xTensorP2_diffDirs14(const double *w, const double *dx, const double *nu, const double *f, double *out) 
{ 
  // w[4]:   Cell-center coordinates.
  // dx[4]:  Cell spacing.
  // nu[324]:  diffusion coefficient.
  // f:      Input distribution function.
  // out:    Incremented output 
  double rdxF[2]; 
  rdxF[0] = 4.0/(dx[0]*dx[0]); 
  rdxF[1] = 4.0/(dx[3]*dx[3]); 

  out[1] += 1.677050983124842*rdxF[0]*f[1]*nu[11]+0.75*f[0]*rdxF[0]*nu[1]; 
  out[4] += 1.677050983124842*rdxF[1]*f[4]*nu[257]+0.75*f[0]*rdxF[1]*nu[247]; 
  out[5] += 1.677050983124842*rdxF[0]*f[5]*nu[11]+0.75*rdxF[0]*nu[1]*f[2]; 
  out[6] += 1.677050983124842*rdxF[0]*f[6]*nu[11]+0.75*rdxF[0]*nu[1]*f[3]; 
  out[8] += 1.677050983124842*rdxF[1]*f[8]*nu[257]+0.75*f[1]*rdxF[1]*nu[247]+1.677050983124842*rdxF[0]*f[8]*nu[11]+0.75*rdxF[0]*nu[1]*f[4]; 
  out[9] += 1.677050983124842*rdxF[1]*f[9]*nu[257]+0.75*rdxF[1]*f[2]*nu[247]; 
  out[10] += 1.677050983124842*rdxF[1]*f[10]*nu[257]+0.75*rdxF[1]*f[3]*nu[247]; 
  out[11] += 5.031152949374527*rdxF[0]*f[11]*nu[11]+3.75*f[0]*rdxF[0]*nu[11]+3.354101966249685*rdxF[0]*f[1]*nu[1]+1.677050983124842*f[0]*nu[0]*rdxF[0]; 
  out[14] += 5.031152949374527*rdxF[1]*f[14]*nu[257]+3.75*f[0]*rdxF[1]*nu[257]+3.354101966249685*rdxF[1]*f[4]*nu[247]+1.677050983124842*f[0]*rdxF[1]*nu[243]; 
  out[15] += 1.677050983124842*rdxF[0]*nu[11]*f[15]+0.75*rdxF[0]*nu[1]*f[7]; 
  out[16] += 1.677050983124842*rdxF[1]*f[16]*nu[257]+0.75*rdxF[1]*f[5]*nu[247]+1.677050983124842*rdxF[0]*nu[11]*f[16]+0.75*rdxF[0]*nu[1]*f[9]; 
  out[17] += 1.677050983124842*rdxF[1]*f[17]*nu[257]+0.75*rdxF[1]*f[6]*nu[247]+1.677050983124842*rdxF[0]*nu[11]*f[17]+0.75*rdxF[0]*nu[1]*f[10]; 
  out[18] += 1.677050983124842*rdxF[1]*f[18]*nu[257]+0.75*rdxF[1]*f[7]*nu[247]; 
  out[19] += 5.031152949374527*rdxF[0]*nu[11]*f[19]+3.75*rdxF[0]*f[2]*nu[11]+3.354101966249684*rdxF[0]*nu[1]*f[5]+1.677050983124842*nu[0]*rdxF[0]*f[2]; 
  out[20] += 1.677050983124842*rdxF[0]*nu[11]*f[20]+0.75*rdxF[0]*nu[1]*f[12]; 
  out[21] += 5.031152949374527*rdxF[0]*nu[11]*f[21]+3.75*rdxF[0]*f[3]*nu[11]+3.354101966249684*rdxF[0]*nu[1]*f[6]+1.677050983124842*nu[0]*rdxF[0]*f[3]; 
  out[23] += 1.677050983124842*rdxF[0]*nu[11]*f[23]+0.75*rdxF[0]*nu[1]*f[13]; 
  out[25] += 1.677050983124842*rdxF[1]*f[25]*nu[257]+0.75*rdxF[1]*f[11]*nu[247]+5.031152949374527*rdxF[0]*nu[11]*f[25]+3.75*rdxF[0]*f[4]*nu[11]+3.354101966249684*rdxF[0]*nu[1]*f[8]+1.677050983124842*nu[0]*rdxF[0]*f[4]; 
  out[26] += 1.677050983124842*rdxF[1]*f[26]*nu[257]+0.75*rdxF[1]*f[12]*nu[247]; 
  out[27] += 1.677050983124842*rdxF[1]*f[27]*nu[257]+0.75*rdxF[1]*f[13]*nu[247]; 
  out[28] += 5.031152949374527*rdxF[1]*f[28]*nu[257]+3.75*f[1]*rdxF[1]*nu[257]+3.354101966249684*rdxF[1]*f[8]*nu[247]+1.677050983124842*f[1]*rdxF[1]*nu[243]+1.677050983124842*rdxF[0]*nu[11]*f[28]+0.75*rdxF[0]*nu[1]*f[14]; 
  out[29] += 5.031152949374527*rdxF[1]*f[29]*nu[257]+3.75*rdxF[1]*f[2]*nu[257]+3.354101966249684*rdxF[1]*f[9]*nu[247]+1.677050983124842*rdxF[1]*f[2]*nu[243]; 
  out[30] += 5.031152949374527*rdxF[1]*f[30]*nu[257]+3.75*rdxF[1]*f[3]*nu[257]+3.354101966249684*rdxF[1]*f[10]*nu[247]+1.677050983124842*rdxF[1]*f[3]*nu[243]; 
  out[31] += 1.677050983124842*rdxF[1]*f[31]*nu[257]+0.75*rdxF[1]*f[15]*nu[247]+1.677050983124842*rdxF[0]*nu[11]*f[31]+0.75*rdxF[0]*nu[1]*f[18]; 
  out[32] += 5.031152949374527*rdxF[0]*nu[11]*f[32]+3.354101966249685*rdxF[0]*nu[1]*f[15]+3.75*rdxF[0]*f[7]*nu[11]+1.677050983124842*nu[0]*rdxF[0]*f[7]; 
  out[33] += 1.677050983124842*rdxF[0]*nu[11]*f[33]+0.75*rdxF[0]*nu[1]*f[22]; 
  out[34] += 1.677050983124842*rdxF[0]*nu[11]*f[34]+0.75*rdxF[0]*nu[1]*f[24]; 
  out[35] += 1.677050983124842*rdxF[1]*f[35]*nu[257]+0.75*rdxF[1]*f[19]*nu[247]+5.031152949374527*rdxF[0]*nu[11]*f[35]+3.354101966249685*rdxF[0]*nu[1]*f[16]+3.75*rdxF[0]*f[9]*nu[11]+1.677050983124842*nu[0]*rdxF[0]*f[9]; 
  out[36] += 1.677050983124842*rdxF[1]*f[36]*nu[257]+0.75*rdxF[1]*f[20]*nu[247]+1.677050983124842*rdxF[0]*nu[11]*f[36]+0.75*rdxF[0]*nu[1]*f[26]; 
  out[37] += 1.677050983124842*rdxF[1]*f[37]*nu[257]+0.75*rdxF[1]*f[21]*nu[247]+5.031152949374527*rdxF[0]*nu[11]*f[37]+3.354101966249685*rdxF[0]*nu[1]*f[17]+3.75*rdxF[0]*f[10]*nu[11]+1.677050983124842*nu[0]*rdxF[0]*f[10]; 
  out[38] += 1.677050983124842*rdxF[1]*f[38]*nu[257]+0.75*rdxF[1]*f[22]*nu[247]; 
  out[39] += 1.677050983124842*rdxF[1]*f[39]*nu[257]+0.75*rdxF[1]*f[23]*nu[247]+1.677050983124842*rdxF[0]*nu[11]*f[39]+0.75*rdxF[0]*nu[1]*f[27]; 
  out[40] += 1.677050983124842*rdxF[1]*f[40]*nu[257]+0.75*rdxF[1]*f[24]*nu[247]; 
  out[41] += 5.031152949374527*rdxF[1]*f[41]*nu[257]+3.75*rdxF[1]*f[5]*nu[257]+3.354101966249685*rdxF[1]*f[16]*nu[247]+1.677050983124842*rdxF[1]*f[5]*nu[243]+1.677050983124842*rdxF[0]*nu[11]*f[41]+0.75*rdxF[0]*nu[1]*f[29]; 
  out[42] += 5.031152949374527*rdxF[1]*f[42]*nu[257]+3.75*rdxF[1]*f[6]*nu[257]+3.354101966249685*rdxF[1]*f[17]*nu[247]+1.677050983124842*rdxF[1]*f[6]*nu[243]+1.677050983124842*rdxF[0]*nu[11]*f[42]+0.75*rdxF[0]*nu[1]*f[30]; 
  out[43] += 5.031152949374527*rdxF[1]*f[43]*nu[257]+3.75*rdxF[1]*f[7]*nu[257]+3.354101966249685*rdxF[1]*f[18]*nu[247]+1.677050983124842*rdxF[1]*f[7]*nu[243]; 
  out[44] += 5.031152949374527*rdxF[0]*nu[11]*f[44]+3.354101966249684*rdxF[0]*nu[1]*f[20]+3.75*rdxF[0]*nu[11]*f[12]+1.677050983124842*nu[0]*rdxF[0]*f[12]; 
  out[45] += 5.031152949374527*rdxF[0]*nu[11]*f[45]+3.354101966249684*rdxF[0]*nu[1]*f[23]+3.75*rdxF[0]*nu[11]*f[13]+1.677050983124842*nu[0]*rdxF[0]*f[13]; 
  out[47] += 5.031152949374527*rdxF[1]*f[47]*nu[257]+3.75*rdxF[1]*f[11]*nu[257]+3.354101966249684*rdxF[1]*f[25]*nu[247]+1.677050983124842*rdxF[1]*f[11]*nu[243]+5.031152949374527*rdxF[0]*nu[11]*f[47]+3.354101966249684*rdxF[0]*nu[1]*f[28]+3.75*rdxF[0]*nu[11]*f[14]+1.677050983124842*nu[0]*rdxF[0]*f[14]; 
  out[48] += 5.031152949374527*rdxF[1]*f[48]*nu[257]+3.75*rdxF[1]*f[12]*nu[257]+3.354101966249684*rdxF[1]*f[26]*nu[247]+1.677050983124842*rdxF[1]*f[12]*nu[243]; 
  out[49] += 5.031152949374527*rdxF[1]*f[49]*nu[257]+3.75*rdxF[1]*f[13]*nu[257]+3.354101966249684*rdxF[1]*f[27]*nu[247]+1.677050983124842*rdxF[1]*f[13]*nu[243]; 
  out[50] += 1.677050983124842*rdxF[1]*f[50]*nu[257]+0.75*rdxF[1]*f[32]*nu[247]+5.031152949374527*rdxF[0]*nu[11]*f[50]+3.354101966249684*rdxF[0]*nu[1]*f[31]+3.75*rdxF[0]*nu[11]*f[18]+1.677050983124842*nu[0]*rdxF[0]*f[18]; 
  out[51] += 1.677050983124842*rdxF[1]*f[51]*nu[257]+0.75*rdxF[1]*f[33]*nu[247]+1.677050983124842*rdxF[0]*nu[11]*f[51]+0.75*rdxF[0]*nu[1]*f[38]; 
  out[52] += 1.677050983124842*rdxF[1]*f[52]*nu[257]+0.75*rdxF[1]*f[34]*nu[247]+1.677050983124842*rdxF[0]*nu[11]*f[52]+0.75*rdxF[0]*nu[1]*f[40]; 
  out[53] += 5.031152949374527*rdxF[1]*f[53]*nu[257]+3.75*rdxF[1]*f[15]*nu[257]+3.354101966249684*rdxF[1]*f[31]*nu[247]+1.677050983124842*rdxF[1]*f[15]*nu[243]+1.677050983124842*rdxF[0]*nu[11]*f[53]+0.75*rdxF[0]*nu[1]*f[43]; 
  out[54] += 5.031152949374527*rdxF[0]*nu[11]*f[54]+3.354101966249685*rdxF[0]*nu[1]*f[33]+3.75*rdxF[0]*nu[11]*f[22]+1.677050983124842*nu[0]*rdxF[0]*f[22]; 
  out[55] += 5.031152949374527*rdxF[0]*nu[11]*f[55]+3.354101966249685*rdxF[0]*nu[1]*f[34]+3.75*rdxF[0]*nu[11]*f[24]+1.677050983124842*nu[0]*rdxF[0]*f[24]; 
  out[56] += 1.677050983124842*rdxF[0]*nu[11]*f[56]+0.75*rdxF[0]*nu[1]*f[46]; 
  out[57] += 1.677050983124842*rdxF[1]*f[57]*nu[257]+0.75*rdxF[1]*f[44]*nu[247]+5.031152949374527*rdxF[0]*nu[11]*f[57]+3.354101966249685*rdxF[0]*nu[1]*f[36]+3.75*rdxF[0]*nu[11]*f[26]+1.677050983124842*nu[0]*rdxF[0]*f[26]; 
  out[58] += 1.677050983124842*rdxF[1]*f[58]*nu[257]+0.75*rdxF[1]*f[45]*nu[247]+5.031152949374527*rdxF[0]*nu[11]*f[58]+3.354101966249685*rdxF[0]*nu[1]*f[39]+3.75*rdxF[0]*nu[11]*f[27]+1.677050983124842*nu[0]*rdxF[0]*f[27]; 
  out[59] += 1.677050983124842*rdxF[1]*f[59]*nu[257]+0.75*rdxF[1]*f[46]*nu[247]; 
  out[60] += 5.031152949374527*rdxF[1]*f[60]*nu[257]+3.75*rdxF[1]*f[19]*nu[257]+3.354101966249685*rdxF[1]*f[35]*nu[247]+1.677050983124842*rdxF[1]*f[19]*nu[243]+5.031152949374527*rdxF[0]*nu[11]*f[60]+3.354101966249685*rdxF[0]*nu[1]*f[41]+3.75*rdxF[0]*nu[11]*f[29]+1.677050983124842*nu[0]*rdxF[0]*f[29]; 
  out[61] += 5.031152949374527*rdxF[1]*f[61]*nu[257]+3.75*rdxF[1]*f[20]*nu[257]+3.354101966249685*rdxF[1]*f[36]*nu[247]+1.677050983124842*rdxF[1]*f[20]*nu[243]+1.677050983124842*rdxF[0]*nu[11]*f[61]+0.75*rdxF[0]*nu[1]*f[48]; 
  out[62] += 5.031152949374527*rdxF[1]*f[62]*nu[257]+3.75*rdxF[1]*f[21]*nu[257]+3.354101966249685*rdxF[1]*f[37]*nu[247]+1.677050983124842*rdxF[1]*f[21]*nu[243]+5.031152949374527*rdxF[0]*nu[11]*f[62]+3.354101966249685*rdxF[0]*nu[1]*f[42]+3.75*rdxF[0]*nu[11]*f[30]+1.677050983124842*nu[0]*rdxF[0]*f[30]; 
  out[63] += 5.031152949374527*rdxF[1]*f[63]*nu[257]+3.75*rdxF[1]*f[22]*nu[257]+3.354101966249685*rdxF[1]*f[38]*nu[247]+1.677050983124842*rdxF[1]*f[22]*nu[243]; 
  out[64] += 5.031152949374527*rdxF[1]*f[64]*nu[257]+3.75*rdxF[1]*f[23]*nu[257]+3.354101966249685*rdxF[1]*f[39]*nu[247]+1.677050983124842*rdxF[1]*f[23]*nu[243]+1.677050983124842*rdxF[0]*nu[11]*f[64]+0.75*rdxF[0]*nu[1]*f[49]; 
  out[65] += 5.031152949374527*rdxF[1]*f[65]*nu[257]+3.75*rdxF[1]*f[24]*nu[257]+3.354101966249685*rdxF[1]*f[40]*nu[247]+1.677050983124842*rdxF[1]*f[24]*nu[243]; 
  out[66] += 1.677050983124842*rdxF[1]*f[66]*nu[257]+0.75*rdxF[1]*f[54]*nu[247]+5.031152949374527*rdxF[0]*nu[11]*f[66]+3.354101966249684*rdxF[0]*nu[1]*f[51]+3.75*rdxF[0]*nu[11]*f[38]+1.677050983124842*nu[0]*rdxF[0]*f[38]; 
  out[67] += 1.677050983124842*rdxF[1]*f[67]*nu[257]+0.75*rdxF[1]*f[55]*nu[247]+5.031152949374527*rdxF[0]*nu[11]*f[67]+3.354101966249684*rdxF[0]*nu[1]*f[52]+3.75*rdxF[0]*nu[11]*f[40]+1.677050983124842*nu[0]*rdxF[0]*f[40]; 
  out[68] += 1.677050983124842*rdxF[1]*f[68]*nu[257]+0.75*rdxF[1]*f[56]*nu[247]+1.677050983124842*rdxF[0]*nu[11]*f[68]+0.75*rdxF[0]*nu[1]*f[59]; 
  out[69] += 5.031152949374527*rdxF[1]*f[69]*nu[257]+3.75*rdxF[1]*f[32]*nu[257]+3.354101966249684*rdxF[1]*f[50]*nu[247]+1.677050983124842*rdxF[1]*f[32]*nu[243]+5.031152949374527*rdxF[0]*nu[11]*f[69]+3.354101966249684*rdxF[0]*nu[1]*f[53]+3.75*rdxF[0]*nu[11]*f[43]+1.677050983124842*nu[0]*rdxF[0]*f[43]; 
  out[70] += 5.031152949374527*rdxF[1]*f[70]*nu[257]+3.75*rdxF[1]*f[33]*nu[257]+3.354101966249684*rdxF[1]*f[51]*nu[247]+1.677050983124842*rdxF[1]*f[33]*nu[243]+1.677050983124842*rdxF[0]*nu[11]*f[70]+0.75*rdxF[0]*nu[1]*f[63]; 
  out[71] += 5.031152949374527*rdxF[1]*f[71]*nu[257]+3.75*rdxF[1]*f[34]*nu[257]+3.354101966249684*rdxF[1]*f[52]*nu[247]+1.677050983124842*rdxF[1]*f[34]*nu[243]+1.677050983124842*rdxF[0]*nu[11]*f[71]+0.75*rdxF[0]*nu[1]*f[65]; 
  out[72] += 5.031152949374527*rdxF[0]*nu[11]*f[72]+3.354101966249685*rdxF[0]*nu[1]*f[56]+3.75*rdxF[0]*nu[11]*f[46]+1.677050983124842*nu[0]*rdxF[0]*f[46]; 
  out[73] += 5.031152949374527*rdxF[1]*f[73]*nu[257]+3.75*rdxF[1]*f[44]*nu[257]+3.354101966249685*rdxF[1]*f[57]*nu[247]+1.677050983124842*rdxF[1]*f[44]*nu[243]+5.031152949374527*rdxF[0]*nu[11]*f[73]+3.354101966249685*rdxF[0]*nu[1]*f[61]+3.75*rdxF[0]*nu[11]*f[48]+1.677050983124842*nu[0]*rdxF[0]*f[48]; 
  out[74] += 5.031152949374527*rdxF[1]*f[74]*nu[257]+3.75*rdxF[1]*f[45]*nu[257]+3.354101966249685*rdxF[1]*f[58]*nu[247]+1.677050983124842*rdxF[1]*f[45]*nu[243]+5.031152949374527*rdxF[0]*nu[11]*f[74]+3.354101966249685*rdxF[0]*nu[1]*f[64]+3.75*rdxF[0]*nu[11]*f[49]+1.677050983124842*nu[0]*rdxF[0]*f[49]; 
  out[75] += 5.031152949374527*rdxF[1]*f[75]*nu[257]+3.75*rdxF[1]*f[46]*nu[257]+3.354101966249685*rdxF[1]*f[59]*nu[247]+1.677050983124842*rdxF[1]*f[46]*nu[243]; 
  out[76] += 1.677050983124842*rdxF[1]*f[76]*nu[257]+0.75*rdxF[1]*f[72]*nu[247]+5.031152949374527*rdxF[0]*nu[11]*f[76]+3.354101966249684*rdxF[0]*nu[1]*f[68]+3.75*rdxF[0]*nu[11]*f[59]+1.677050983124842*nu[0]*rdxF[0]*f[59]; 
  out[77] += 5.031152949374527*rdxF[1]*f[77]*nu[257]+3.75*rdxF[1]*f[54]*nu[257]+3.354101966249684*rdxF[1]*f[66]*nu[247]+1.677050983124842*rdxF[1]*f[54]*nu[243]+5.031152949374527*rdxF[0]*nu[11]*f[77]+3.354101966249684*rdxF[0]*nu[1]*f[70]+3.75*rdxF[0]*nu[11]*f[63]+1.677050983124842*nu[0]*rdxF[0]*f[63]; 
  out[78] += 5.031152949374527*rdxF[1]*f[78]*nu[257]+3.75*rdxF[1]*f[55]*nu[257]+3.354101966249684*rdxF[1]*f[67]*nu[247]+1.677050983124842*rdxF[1]*f[55]*nu[243]+5.031152949374527*rdxF[0]*nu[11]*f[78]+3.354101966249684*rdxF[0]*nu[1]*f[71]+3.75*rdxF[0]*nu[11]*f[65]+1.677050983124842*nu[0]*rdxF[0]*f[65]; 
  out[79] += 5.031152949374527*rdxF[1]*f[79]*nu[257]+3.75*rdxF[1]*f[56]*nu[257]+3.354101966249684*rdxF[1]*f[68]*nu[247]+1.677050983124842*rdxF[1]*f[56]*nu[243]+1.677050983124842*rdxF[0]*nu[11]*f[79]+0.75*rdxF[0]*nu[1]*f[75]; 
  out[80] += 5.031152949374527*rdxF[1]*f[80]*nu[257]+3.75*rdxF[1]*f[72]*nu[257]+3.354101966249684*rdxF[1]*f[76]*nu[247]+1.677050983124842*rdxF[1]*f[72]*nu[243]+5.031152949374527*rdxF[0]*nu[11]*f[80]+3.354101966249684*rdxF[0]*nu[1]*f[79]+3.75*rdxF[0]*nu[11]*f[75]+1.677050983124842*nu[0]*rdxF[0]*f[75]; 

  return (rdxF[0]*(0.390625*nu[80]-0.3493856214843422*nu[75]-0.3493856214843422*nu[74]-0.3493856214843422*nu[73]-0.3493856214843422*nu[72]+0.3125*nu[49]+0.3125*nu[48]+0.3125*nu[47]+0.3125*nu[46]+0.3125*nu[45]+0.3125*nu[44]-0.2795084971874737*nu[14]-0.2795084971874737*nu[13]-0.2795084971874737*nu[12]-0.2795084971874737*nu[11]+0.25*nu[0])+rdxF[1]*(0.390625*nu[323]-0.3493856214843422*nu[318]-0.3493856214843422*nu[317]-0.3493856214843422*nu[316]-0.3493856214843422*nu[315]+0.3125*nu[292]+0.3125*nu[291]+0.3125*nu[290]+0.3125*nu[289]+0.3125*nu[288]+0.3125*nu[287]-0.2795084971874737*nu[257]-0.2795084971874737*nu[256]-0.2795084971874737*nu[255]-0.2795084971874737*nu[254]+0.25*nu[243]))*0.9;

} 
double ConstDiffusionVarCoeffVol4xTensorP2_diffDirs1(const double *w, const double *dx, const double *nu, const double *f, double *out) 
{ 
  // w[4]:   Cell-center coordinates.
  // dx[4]:  Cell spacing.
  // nu[324]:  diffusion coefficient.
  // f:      Input distribution function.
  // out:    Incremented output 
  double rdxF[1]; 
  rdxF[0] = 4.0/(dx[0]*dx[0]); 

  out[1] += 1.677050983124842*rdxF[0]*f[1]*nu[11]+0.75*f[0]*rdxF[0]*nu[1]; 
  out[5] += 1.677050983124842*rdxF[0]*f[5]*nu[11]+0.75*rdxF[0]*nu[1]*f[2]; 
  out[6] += 1.677050983124842*rdxF[0]*f[6]*nu[11]+0.75*rdxF[0]*nu[1]*f[3]; 
  out[8] += 1.677050983124842*rdxF[0]*f[8]*nu[11]+0.75*rdxF[0]*nu[1]*f[4]; 
  out[11] += 5.031152949374527*rdxF[0]*f[11]*nu[11]+3.75*f[0]*rdxF[0]*nu[11]+3.354101966249685*rdxF[0]*f[1]*nu[1]+1.677050983124842*f[0]*nu[0]*rdxF[0]; 
  out[15] += 1.677050983124842*rdxF[0]*nu[11]*f[15]+0.75*rdxF[0]*nu[1]*f[7]; 
  out[16] += 1.677050983124842*rdxF[0]*nu[11]*f[16]+0.75*rdxF[0]*nu[1]*f[9]; 
  out[17] += 1.677050983124842*rdxF[0]*nu[11]*f[17]+0.75*rdxF[0]*nu[1]*f[10]; 
  out[19] += 5.031152949374527*rdxF[0]*nu[11]*f[19]+3.75*rdxF[0]*f[2]*nu[11]+3.354101966249684*rdxF[0]*nu[1]*f[5]+1.677050983124842*nu[0]*rdxF[0]*f[2]; 
  out[20] += 1.677050983124842*rdxF[0]*nu[11]*f[20]+0.75*rdxF[0]*nu[1]*f[12]; 
  out[21] += 5.031152949374527*rdxF[0]*nu[11]*f[21]+3.75*rdxF[0]*f[3]*nu[11]+3.354101966249684*rdxF[0]*nu[1]*f[6]+1.677050983124842*nu[0]*rdxF[0]*f[3]; 
  out[23] += 1.677050983124842*rdxF[0]*nu[11]*f[23]+0.75*rdxF[0]*nu[1]*f[13]; 
  out[25] += 5.031152949374527*rdxF[0]*nu[11]*f[25]+3.75*rdxF[0]*f[4]*nu[11]+3.354101966249684*rdxF[0]*nu[1]*f[8]+1.677050983124842*nu[0]*rdxF[0]*f[4]; 
  out[28] += 1.677050983124842*rdxF[0]*nu[11]*f[28]+0.75*rdxF[0]*nu[1]*f[14]; 
  out[31] += 1.677050983124842*rdxF[0]*nu[11]*f[31]+0.75*rdxF[0]*nu[1]*f[18]; 
  out[32] += 5.031152949374527*rdxF[0]*nu[11]*f[32]+3.354101966249685*rdxF[0]*nu[1]*f[15]+3.75*rdxF[0]*f[7]*nu[11]+1.677050983124842*nu[0]*rdxF[0]*f[7]; 
  out[33] += 1.677050983124842*rdxF[0]*nu[11]*f[33]+0.75*rdxF[0]*nu[1]*f[22]; 
  out[34] += 1.677050983124842*rdxF[0]*nu[11]*f[34]+0.75*rdxF[0]*nu[1]*f[24]; 
  out[35] += 5.031152949374527*rdxF[0]*nu[11]*f[35]+3.354101966249685*rdxF[0]*nu[1]*f[16]+3.75*rdxF[0]*f[9]*nu[11]+1.677050983124842*nu[0]*rdxF[0]*f[9]; 
  out[36] += 1.677050983124842*rdxF[0]*nu[11]*f[36]+0.75*rdxF[0]*nu[1]*f[26]; 
  out[37] += 5.031152949374527*rdxF[0]*nu[11]*f[37]+3.354101966249685*rdxF[0]*nu[1]*f[17]+3.75*rdxF[0]*f[10]*nu[11]+1.677050983124842*nu[0]*rdxF[0]*f[10]; 
  out[39] += 1.677050983124842*rdxF[0]*nu[11]*f[39]+0.75*rdxF[0]*nu[1]*f[27]; 
  out[41] += 1.677050983124842*rdxF[0]*nu[11]*f[41]+0.75*rdxF[0]*nu[1]*f[29]; 
  out[42] += 1.677050983124842*rdxF[0]*nu[11]*f[42]+0.75*rdxF[0]*nu[1]*f[30]; 
  out[44] += 5.031152949374527*rdxF[0]*nu[11]*f[44]+3.354101966249684*rdxF[0]*nu[1]*f[20]+3.75*rdxF[0]*nu[11]*f[12]+1.677050983124842*nu[0]*rdxF[0]*f[12]; 
  out[45] += 5.031152949374527*rdxF[0]*nu[11]*f[45]+3.354101966249684*rdxF[0]*nu[1]*f[23]+3.75*rdxF[0]*nu[11]*f[13]+1.677050983124842*nu[0]*rdxF[0]*f[13]; 
  out[47] += 5.031152949374527*rdxF[0]*nu[11]*f[47]+3.354101966249684*rdxF[0]*nu[1]*f[28]+3.75*rdxF[0]*nu[11]*f[14]+1.677050983124842*nu[0]*rdxF[0]*f[14]; 
  out[50] += 5.031152949374527*rdxF[0]*nu[11]*f[50]+3.354101966249684*rdxF[0]*nu[1]*f[31]+3.75*rdxF[0]*nu[11]*f[18]+1.677050983124842*nu[0]*rdxF[0]*f[18]; 
  out[51] += 1.677050983124842*rdxF[0]*nu[11]*f[51]+0.75*rdxF[0]*nu[1]*f[38]; 
  out[52] += 1.677050983124842*rdxF[0]*nu[11]*f[52]+0.75*rdxF[0]*nu[1]*f[40]; 
  out[53] += 1.677050983124842*rdxF[0]*nu[11]*f[53]+0.75*rdxF[0]*nu[1]*f[43]; 
  out[54] += 5.031152949374527*rdxF[0]*nu[11]*f[54]+3.354101966249685*rdxF[0]*nu[1]*f[33]+3.75*rdxF[0]*nu[11]*f[22]+1.677050983124842*nu[0]*rdxF[0]*f[22]; 
  out[55] += 5.031152949374527*rdxF[0]*nu[11]*f[55]+3.354101966249685*rdxF[0]*nu[1]*f[34]+3.75*rdxF[0]*nu[11]*f[24]+1.677050983124842*nu[0]*rdxF[0]*f[24]; 
  out[56] += 1.677050983124842*rdxF[0]*nu[11]*f[56]+0.75*rdxF[0]*nu[1]*f[46]; 
  out[57] += 5.031152949374527*rdxF[0]*nu[11]*f[57]+3.354101966249685*rdxF[0]*nu[1]*f[36]+3.75*rdxF[0]*nu[11]*f[26]+1.677050983124842*nu[0]*rdxF[0]*f[26]; 
  out[58] += 5.031152949374527*rdxF[0]*nu[11]*f[58]+3.354101966249685*rdxF[0]*nu[1]*f[39]+3.75*rdxF[0]*nu[11]*f[27]+1.677050983124842*nu[0]*rdxF[0]*f[27]; 
  out[60] += 5.031152949374527*rdxF[0]*nu[11]*f[60]+3.354101966249685*rdxF[0]*nu[1]*f[41]+3.75*rdxF[0]*nu[11]*f[29]+1.677050983124842*nu[0]*rdxF[0]*f[29]; 
  out[61] += 1.677050983124842*rdxF[0]*nu[11]*f[61]+0.75*rdxF[0]*nu[1]*f[48]; 
  out[62] += 5.031152949374527*rdxF[0]*nu[11]*f[62]+3.354101966249685*rdxF[0]*nu[1]*f[42]+3.75*rdxF[0]*nu[11]*f[30]+1.677050983124842*nu[0]*rdxF[0]*f[30]; 
  out[64] += 1.677050983124842*rdxF[0]*nu[11]*f[64]+0.75*rdxF[0]*nu[1]*f[49]; 
  out[66] += 5.031152949374527*rdxF[0]*nu[11]*f[66]+3.354101966249684*rdxF[0]*nu[1]*f[51]+3.75*rdxF[0]*nu[11]*f[38]+1.677050983124842*nu[0]*rdxF[0]*f[38]; 
  out[67] += 5.031152949374527*rdxF[0]*nu[11]*f[67]+3.354101966249684*rdxF[0]*nu[1]*f[52]+3.75*rdxF[0]*nu[11]*f[40]+1.677050983124842*nu[0]*rdxF[0]*f[40]; 
  out[68] += 1.677050983124842*rdxF[0]*nu[11]*f[68]+0.75*rdxF[0]*nu[1]*f[59]; 
  out[69] += 5.031152949374527*rdxF[0]*nu[11]*f[69]+3.354101966249684*rdxF[0]*nu[1]*f[53]+3.75*rdxF[0]*nu[11]*f[43]+1.677050983124842*nu[0]*rdxF[0]*f[43]; 
  out[70] += 1.677050983124842*rdxF[0]*nu[11]*f[70]+0.75*rdxF[0]*nu[1]*f[63]; 
  out[71] += 1.677050983124842*rdxF[0]*nu[11]*f[71]+0.75*rdxF[0]*nu[1]*f[65]; 
  out[72] += 5.031152949374527*rdxF[0]*nu[11]*f[72]+3.354101966249685*rdxF[0]*nu[1]*f[56]+3.75*rdxF[0]*nu[11]*f[46]+1.677050983124842*nu[0]*rdxF[0]*f[46]; 
  out[73] += 5.031152949374527*rdxF[0]*nu[11]*f[73]+3.354101966249685*rdxF[0]*nu[1]*f[61]+3.75*rdxF[0]*nu[11]*f[48]+1.677050983124842*nu[0]*rdxF[0]*f[48]; 
  out[74] += 5.031152949374527*rdxF[0]*nu[11]*f[74]+3.354101966249685*rdxF[0]*nu[1]*f[64]+3.75*rdxF[0]*nu[11]*f[49]+1.677050983124842*nu[0]*rdxF[0]*f[49]; 
  out[76] += 5.031152949374527*rdxF[0]*nu[11]*f[76]+3.354101966249684*rdxF[0]*nu[1]*f[68]+3.75*rdxF[0]*nu[11]*f[59]+1.677050983124842*nu[0]*rdxF[0]*f[59]; 
  out[77] += 5.031152949374527*rdxF[0]*nu[11]*f[77]+3.354101966249684*rdxF[0]*nu[1]*f[70]+3.75*rdxF[0]*nu[11]*f[63]+1.677050983124842*nu[0]*rdxF[0]*f[63]; 
  out[78] += 5.031152949374527*rdxF[0]*nu[11]*f[78]+3.354101966249684*rdxF[0]*nu[1]*f[71]+3.75*rdxF[0]*nu[11]*f[65]+1.677050983124842*nu[0]*rdxF[0]*f[65]; 
  out[79] += 1.677050983124842*rdxF[0]*nu[11]*f[79]+0.75*rdxF[0]*nu[1]*f[75]; 
  out[80] += 5.031152949374527*rdxF[0]*nu[11]*f[80]+3.354101966249684*rdxF[0]*nu[1]*f[79]+3.75*rdxF[0]*nu[11]*f[75]+1.677050983124842*nu[0]*rdxF[0]*f[75]; 

  return (rdxF[0]*(0.390625*nu[80]-0.3493856214843422*nu[75]-0.3493856214843422*nu[74]-0.3493856214843422*nu[73]-0.3493856214843422*nu[72]+0.3125*nu[49]+0.3125*nu[48]+0.3125*nu[47]+0.3125*nu[46]+0.3125*nu[45]+0.3125*nu[44]-0.2795084971874737*nu[14]-0.2795084971874737*nu[13]-0.2795084971874737*nu[12]-0.2795084971874737*nu[11]+0.25*nu[0]))*0.9;

} 
void ConstDiffusionCFLfreqMin4xTensorP2_diffDirs2(const double *Lx, const double *nu, double *cflFreq) 
{ 
  // Lx[vdim]:  domain length.
  // nu[324]:  diffusion coefficient (collisionality).
  double kxSq[1]; 
  kxSq[0] = 39.47841760435743/(Lx[1]*Lx[1]); 

  cflFreq[0] = fmax(cflFreq[0],(kxSq[0]*(0.390625*nu[161]-0.3493856214843422*nu[156]-0.3493856214843422*nu[155]-0.3493856214843422*nu[154]-0.3493856214843422*nu[153]+0.3125*nu[130]+0.3125*nu[129]+0.3125*nu[128]+0.3125*nu[127]+0.3125*nu[126]+0.3125*nu[125]-0.2795084971874737*nu[95]-0.2795084971874737*nu[94]-0.2795084971874737*nu[93]-0.2795084971874737*nu[92]+0.25*nu[81]))*1.8);

} 
void ConstDiffusionCFLfreqMin4xTensorP2_diffDirs23(const double *Lx, const double *nu, double *cflFreq) 
{ 
  // Lx[vdim]:  domain length.
  // nu[324]:  diffusion coefficient (collisionality).
  double kxSq[2]; 
  kxSq[0] = 39.47841760435743/(Lx[1]*Lx[1]); 
  kxSq[1] = 39.47841760435743/(Lx[2]*Lx[2]); 

  cflFreq[0] = fmax(cflFreq[0],(kxSq[0]*(0.390625*nu[161]-0.3493856214843422*nu[156]-0.3493856214843422*nu[155]-0.3493856214843422*nu[154]-0.3493856214843422*nu[153]+0.3125*nu[130]+0.3125*nu[129]+0.3125*nu[128]+0.3125*nu[127]+0.3125*nu[126]+0.3125*nu[125]-0.2795084971874737*nu[95]-0.2795084971874737*nu[94]-0.2795084971874737*nu[93]-0.2795084971874737*nu[92]+0.25*nu[81])+kxSq[1]*(0.390625*nu[242]-0.3493856214843422*nu[237]-0.3493856214843422*nu[236]-0.3493856214843422*nu[235]-0.3493856214843422*nu[234]+0.3125*nu[211]+0.3125*nu[210]+0.3125*nu[209]+0.3125*nu[208]+0.3125*nu[207]+0.3125*nu[206]-0.2795084971874737*nu[176]-0.2795084971874737*nu[175]-0.2795084971874737*nu[174]-0.2795084971874737*nu[173]+0.25*nu[162]))*1.8);

} 
void ConstDiffusionCFLfreqMin4xTensorP2_diffDirs234(const double *Lx, const double *nu, double *cflFreq) 
{ 
  // Lx[vdim]:  domain length.
  // nu[324]:  diffusion coefficient (collisionality).
  double kxSq[3]; 
  kxSq[0] = 39.47841760435743/(Lx[1]*Lx[1]); 
  kxSq[1] = 39.47841760435743/(Lx[2]*Lx[2]); 
  kxSq[2] = 39.47841760435743/(Lx[3]*Lx[3]); 

  cflFreq[0] = fmax(cflFreq[0],(kxSq[0]*(0.390625*nu[161]-0.3493856214843422*nu[156]-0.3493856214843422*nu[155]-0.3493856214843422*nu[154]-0.3493856214843422*nu[153]+0.3125*nu[130]+0.3125*nu[129]+0.3125*nu[128]+0.3125*nu[127]+0.3125*nu[126]+0.3125*nu[125]-0.2795084971874737*nu[95]-0.2795084971874737*nu[94]-0.2795084971874737*nu[93]-0.2795084971874737*nu[92]+0.25*nu[81])+kxSq[1]*(0.390625*nu[242]-0.3493856214843422*nu[237]-0.3493856214843422*nu[236]-0.3493856214843422*nu[235]-0.3493856214843422*nu[234]+0.3125*nu[211]+0.3125*nu[210]+0.3125*nu[209]+0.3125*nu[208]+0.3125*nu[207]+0.3125*nu[206]-0.2795084971874737*nu[176]-0.2795084971874737*nu[175]-0.2795084971874737*nu[174]-0.2795084971874737*nu[173]+0.25*nu[162])+kxSq[2]*(0.390625*nu[323]-0.3493856214843422*nu[318]-0.3493856214843422*nu[317]-0.3493856214843422*nu[316]-0.3493856214843422*nu[315]+0.3125*nu[292]+0.3125*nu[291]+0.3125*nu[290]+0.3125*nu[289]+0.3125*nu[288]+0.3125*nu[287]-0.2795084971874737*nu[257]-0.2795084971874737*nu[256]-0.2795084971874737*nu[255]-0.2795084971874737*nu[254]+0.25*nu[243]))*1.8);

} 
void ConstDiffusionCFLfreqMin4xTensorP2_diffDirs1234(const double *Lx, const double *nu, double *cflFreq) 
{ 
  // Lx[vdim]:  domain length.
  // nu[324]:  diffusion coefficient (collisionality).
  double kxSq[4]; 
  kxSq[0] = 39.47841760435743/(Lx[0]*Lx[0]); 
  kxSq[1] = 39.47841760435743/(Lx[1]*Lx[1]); 
  kxSq[2] = 39.47841760435743/(Lx[2]*Lx[2]); 
  kxSq[3] = 39.47841760435743/(Lx[3]*Lx[3]); 

  cflFreq[0] = fmax(cflFreq[0],(kxSq[0]*(0.390625*nu[80]-0.3493856214843422*nu[75]-0.3493856214843422*nu[74]-0.3493856214843422*nu[73]-0.3493856214843422*nu[72]+0.3125*nu[49]+0.3125*nu[48]+0.3125*nu[47]+0.3125*nu[46]+0.3125*nu[45]+0.3125*nu[44]-0.2795084971874737*nu[14]-0.2795084971874737*nu[13]-0.2795084971874737*nu[12]-0.2795084971874737*nu[11]+0.25*nu[0])+kxSq[1]*(0.390625*nu[161]-0.3493856214843422*nu[156]-0.3493856214843422*nu[155]-0.3493856214843422*nu[154]-0.3493856214843422*nu[153]+0.3125*nu[130]+0.3125*nu[129]+0.3125*nu[128]+0.3125*nu[127]+0.3125*nu[126]+0.3125*nu[125]-0.2795084971874737*nu[95]-0.2795084971874737*nu[94]-0.2795084971874737*nu[93]-0.2795084971874737*nu[92]+0.25*nu[81])+kxSq[2]*(0.390625*nu[242]-0.3493856214843422*nu[237]-0.3493856214843422*nu[236]-0.3493856214843422*nu[235]-0.3493856214843422*nu[234]+0.3125*nu[211]+0.3125*nu[210]+0.3125*nu[209]+0.3125*nu[208]+0.3125*nu[207]+0.3125*nu[206]-0.2795084971874737*nu[176]-0.2795084971874737*nu[175]-0.2795084971874737*nu[174]-0.2795084971874737*nu[173]+0.25*nu[162])+kxSq[3]*(0.390625*nu[323]-0.3493856214843422*nu[318]-0.3493856214843422*nu[317]-0.3493856214843422*nu[316]-0.3493856214843422*nu[315]+0.3125*nu[292]+0.3125*nu[291]+0.3125*nu[290]+0.3125*nu[289]+0.3125*nu[288]+0.3125*nu[287]-0.2795084971874737*nu[257]-0.2795084971874737*nu[256]-0.2795084971874737*nu[255]-0.2795084971874737*nu[254]+0.25*nu[243]))*1.8);

} 
void ConstDiffusionCFLfreqMin4xTensorP2_diffDirs123(const double *Lx, const double *nu, double *cflFreq) 
{ 
  // Lx[vdim]:  domain length.
  // nu[324]:  diffusion coefficient (collisionality).
  double kxSq[3]; 
  kxSq[0] = 39.47841760435743/(Lx[0]*Lx[0]); 
  kxSq[1] = 39.47841760435743/(Lx[1]*Lx[1]); 
  kxSq[2] = 39.47841760435743/(Lx[2]*Lx[2]); 

  cflFreq[0] = fmax(cflFreq[0],(kxSq[0]*(0.390625*nu[80]-0.3493856214843422*nu[75]-0.3493856214843422*nu[74]-0.3493856214843422*nu[73]-0.3493856214843422*nu[72]+0.3125*nu[49]+0.3125*nu[48]+0.3125*nu[47]+0.3125*nu[46]+0.3125*nu[45]+0.3125*nu[44]-0.2795084971874737*nu[14]-0.2795084971874737*nu[13]-0.2795084971874737*nu[12]-0.2795084971874737*nu[11]+0.25*nu[0])+kxSq[1]*(0.390625*nu[161]-0.3493856214843422*nu[156]-0.3493856214843422*nu[155]-0.3493856214843422*nu[154]-0.3493856214843422*nu[153]+0.3125*nu[130]+0.3125*nu[129]+0.3125*nu[128]+0.3125*nu[127]+0.3125*nu[126]+0.3125*nu[125]-0.2795084971874737*nu[95]-0.2795084971874737*nu[94]-0.2795084971874737*nu[93]-0.2795084971874737*nu[92]+0.25*nu[81])+kxSq[2]*(0.390625*nu[242]-0.3493856214843422*nu[237]-0.3493856214843422*nu[236]-0.3493856214843422*nu[235]-0.3493856214843422*nu[234]+0.3125*nu[211]+0.3125*nu[210]+0.3125*nu[209]+0.3125*nu[208]+0.3125*nu[207]+0.3125*nu[206]-0.2795084971874737*nu[176]-0.2795084971874737*nu[175]-0.2795084971874737*nu[174]-0.2795084971874737*nu[173]+0.25*nu[162]))*1.8);

} 
void ConstDiffusionCFLfreqMin4xTensorP2_diffDirs24(const double *Lx, const double *nu, double *cflFreq) 
{ 
  // Lx[vdim]:  domain length.
  // nu[324]:  diffusion coefficient (collisionality).
  double kxSq[2]; 
  kxSq[0] = 39.47841760435743/(Lx[1]*Lx[1]); 
  kxSq[1] = 39.47841760435743/(Lx[3]*Lx[3]); 

  cflFreq[0] = fmax(cflFreq[0],(kxSq[0]*(0.390625*nu[161]-0.3493856214843422*nu[156]-0.3493856214843422*nu[155]-0.3493856214843422*nu[154]-0.3493856214843422*nu[153]+0.3125*nu[130]+0.3125*nu[129]+0.3125*nu[128]+0.3125*nu[127]+0.3125*nu[126]+0.3125*nu[125]-0.2795084971874737*nu[95]-0.2795084971874737*nu[94]-0.2795084971874737*nu[93]-0.2795084971874737*nu[92]+0.25*nu[81])+kxSq[1]*(0.390625*nu[323]-0.3493856214843422*nu[318]-0.3493856214843422*nu[317]-0.3493856214843422*nu[316]-0.3493856214843422*nu[315]+0.3125*nu[292]+0.3125*nu[291]+0.3125*nu[290]+0.3125*nu[289]+0.3125*nu[288]+0.3125*nu[287]-0.2795084971874737*nu[257]-0.2795084971874737*nu[256]-0.2795084971874737*nu[255]-0.2795084971874737*nu[254]+0.25*nu[243]))*1.8);

} 
void ConstDiffusionCFLfreqMin4xTensorP2_diffDirs124(const double *Lx, const double *nu, double *cflFreq) 
{ 
  // Lx[vdim]:  domain length.
  // nu[324]:  diffusion coefficient (collisionality).
  double kxSq[3]; 
  kxSq[0] = 39.47841760435743/(Lx[0]*Lx[0]); 
  kxSq[1] = 39.47841760435743/(Lx[1]*Lx[1]); 
  kxSq[2] = 39.47841760435743/(Lx[3]*Lx[3]); 

  cflFreq[0] = fmax(cflFreq[0],(kxSq[0]*(0.390625*nu[80]-0.3493856214843422*nu[75]-0.3493856214843422*nu[74]-0.3493856214843422*nu[73]-0.3493856214843422*nu[72]+0.3125*nu[49]+0.3125*nu[48]+0.3125*nu[47]+0.3125*nu[46]+0.3125*nu[45]+0.3125*nu[44]-0.2795084971874737*nu[14]-0.2795084971874737*nu[13]-0.2795084971874737*nu[12]-0.2795084971874737*nu[11]+0.25*nu[0])+kxSq[1]*(0.390625*nu[161]-0.3493856214843422*nu[156]-0.3493856214843422*nu[155]-0.3493856214843422*nu[154]-0.3493856214843422*nu[153]+0.3125*nu[130]+0.3125*nu[129]+0.3125*nu[128]+0.3125*nu[127]+0.3125*nu[126]+0.3125*nu[125]-0.2795084971874737*nu[95]-0.2795084971874737*nu[94]-0.2795084971874737*nu[93]-0.2795084971874737*nu[92]+0.25*nu[81])+kxSq[2]*(0.390625*nu[323]-0.3493856214843422*nu[318]-0.3493856214843422*nu[317]-0.3493856214843422*nu[316]-0.3493856214843422*nu[315]+0.3125*nu[292]+0.3125*nu[291]+0.3125*nu[290]+0.3125*nu[289]+0.3125*nu[288]+0.3125*nu[287]-0.2795084971874737*nu[257]-0.2795084971874737*nu[256]-0.2795084971874737*nu[255]-0.2795084971874737*nu[254]+0.25*nu[243]))*1.8);

} 
void ConstDiffusionCFLfreqMin4xTensorP2_diffDirs12(const double *Lx, const double *nu, double *cflFreq) 
{ 
  // Lx[vdim]:  domain length.
  // nu[324]:  diffusion coefficient (collisionality).
  double kxSq[2]; 
  kxSq[0] = 39.47841760435743/(Lx[0]*Lx[0]); 
  kxSq[1] = 39.47841760435743/(Lx[1]*Lx[1]); 

  cflFreq[0] = fmax(cflFreq[0],(kxSq[0]*(0.390625*nu[80]-0.3493856214843422*nu[75]-0.3493856214843422*nu[74]-0.3493856214843422*nu[73]-0.3493856214843422*nu[72]+0.3125*nu[49]+0.3125*nu[48]+0.3125*nu[47]+0.3125*nu[46]+0.3125*nu[45]+0.3125*nu[44]-0.2795084971874737*nu[14]-0.2795084971874737*nu[13]-0.2795084971874737*nu[12]-0.2795084971874737*nu[11]+0.25*nu[0])+kxSq[1]*(0.390625*nu[161]-0.3493856214843422*nu[156]-0.3493856214843422*nu[155]-0.3493856214843422*nu[154]-0.3493856214843422*nu[153]+0.3125*nu[130]+0.3125*nu[129]+0.3125*nu[128]+0.3125*nu[127]+0.3125*nu[126]+0.3125*nu[125]-0.2795084971874737*nu[95]-0.2795084971874737*nu[94]-0.2795084971874737*nu[93]-0.2795084971874737*nu[92]+0.25*nu[81]))*1.8);

} 
void ConstDiffusionCFLfreqMin4xTensorP2_diffDirs3(const double *Lx, const double *nu, double *cflFreq) 
{ 
  // Lx[vdim]:  domain length.
  // nu[324]:  diffusion coefficient (collisionality).
  double kxSq[1]; 
  kxSq[0] = 39.47841760435743/(Lx[2]*Lx[2]); 

  cflFreq[0] = fmax(cflFreq[0],(kxSq[0]*(0.390625*nu[242]-0.3493856214843422*nu[237]-0.3493856214843422*nu[236]-0.3493856214843422*nu[235]-0.3493856214843422*nu[234]+0.3125*nu[211]+0.3125*nu[210]+0.3125*nu[209]+0.3125*nu[208]+0.3125*nu[207]+0.3125*nu[206]-0.2795084971874737*nu[176]-0.2795084971874737*nu[175]-0.2795084971874737*nu[174]-0.2795084971874737*nu[173]+0.25*nu[162]))*1.8);

} 
void ConstDiffusionCFLfreqMin4xTensorP2_diffDirs34(const double *Lx, const double *nu, double *cflFreq) 
{ 
  // Lx[vdim]:  domain length.
  // nu[324]:  diffusion coefficient (collisionality).
  double kxSq[2]; 
  kxSq[0] = 39.47841760435743/(Lx[2]*Lx[2]); 
  kxSq[1] = 39.47841760435743/(Lx[3]*Lx[3]); 

  cflFreq[0] = fmax(cflFreq[0],(kxSq[0]*(0.390625*nu[242]-0.3493856214843422*nu[237]-0.3493856214843422*nu[236]-0.3493856214843422*nu[235]-0.3493856214843422*nu[234]+0.3125*nu[211]+0.3125*nu[210]+0.3125*nu[209]+0.3125*nu[208]+0.3125*nu[207]+0.3125*nu[206]-0.2795084971874737*nu[176]-0.2795084971874737*nu[175]-0.2795084971874737*nu[174]-0.2795084971874737*nu[173]+0.25*nu[162])+kxSq[1]*(0.390625*nu[323]-0.3493856214843422*nu[318]-0.3493856214843422*nu[317]-0.3493856214843422*nu[316]-0.3493856214843422*nu[315]+0.3125*nu[292]+0.3125*nu[291]+0.3125*nu[290]+0.3125*nu[289]+0.3125*nu[288]+0.3125*nu[287]-0.2795084971874737*nu[257]-0.2795084971874737*nu[256]-0.2795084971874737*nu[255]-0.2795084971874737*nu[254]+0.25*nu[243]))*1.8);

} 
void ConstDiffusionCFLfreqMin4xTensorP2_diffDirs134(const double *Lx, const double *nu, double *cflFreq) 
{ 
  // Lx[vdim]:  domain length.
  // nu[324]:  diffusion coefficient (collisionality).
  double kxSq[3]; 
  kxSq[0] = 39.47841760435743/(Lx[0]*Lx[0]); 
  kxSq[1] = 39.47841760435743/(Lx[2]*Lx[2]); 
  kxSq[2] = 39.47841760435743/(Lx[3]*Lx[3]); 

  cflFreq[0] = fmax(cflFreq[0],(kxSq[0]*(0.390625*nu[80]-0.3493856214843422*nu[75]-0.3493856214843422*nu[74]-0.3493856214843422*nu[73]-0.3493856214843422*nu[72]+0.3125*nu[49]+0.3125*nu[48]+0.3125*nu[47]+0.3125*nu[46]+0.3125*nu[45]+0.3125*nu[44]-0.2795084971874737*nu[14]-0.2795084971874737*nu[13]-0.2795084971874737*nu[12]-0.2795084971874737*nu[11]+0.25*nu[0])+kxSq[1]*(0.390625*nu[242]-0.3493856214843422*nu[237]-0.3493856214843422*nu[236]-0.3493856214843422*nu[235]-0.3493856214843422*nu[234]+0.3125*nu[211]+0.3125*nu[210]+0.3125*nu[209]+0.3125*nu[208]+0.3125*nu[207]+0.3125*nu[206]-0.2795084971874737*nu[176]-0.2795084971874737*nu[175]-0.2795084971874737*nu[174]-0.2795084971874737*nu[173]+0.25*nu[162])+kxSq[2]*(0.390625*nu[323]-0.3493856214843422*nu[318]-0.3493856214843422*nu[317]-0.3493856214843422*nu[316]-0.3493856214843422*nu[315]+0.3125*nu[292]+0.3125*nu[291]+0.3125*nu[290]+0.3125*nu[289]+0.3125*nu[288]+0.3125*nu[287]-0.2795084971874737*nu[257]-0.2795084971874737*nu[256]-0.2795084971874737*nu[255]-0.2795084971874737*nu[254]+0.25*nu[243]))*1.8);

} 
void ConstDiffusionCFLfreqMin4xTensorP2_diffDirs13(const double *Lx, const double *nu, double *cflFreq) 
{ 
  // Lx[vdim]:  domain length.
  // nu[324]:  diffusion coefficient (collisionality).
  double kxSq[2]; 
  kxSq[0] = 39.47841760435743/(Lx[0]*Lx[0]); 
  kxSq[1] = 39.47841760435743/(Lx[2]*Lx[2]); 

  cflFreq[0] = fmax(cflFreq[0],(kxSq[0]*(0.390625*nu[80]-0.3493856214843422*nu[75]-0.3493856214843422*nu[74]-0.3493856214843422*nu[73]-0.3493856214843422*nu[72]+0.3125*nu[49]+0.3125*nu[48]+0.3125*nu[47]+0.3125*nu[46]+0.3125*nu[45]+0.3125*nu[44]-0.2795084971874737*nu[14]-0.2795084971874737*nu[13]-0.2795084971874737*nu[12]-0.2795084971874737*nu[11]+0.25*nu[0])+kxSq[1]*(0.390625*nu[242]-0.3493856214843422*nu[237]-0.3493856214843422*nu[236]-0.3493856214843422*nu[235]-0.3493856214843422*nu[234]+0.3125*nu[211]+0.3125*nu[210]+0.3125*nu[209]+0.3125*nu[208]+0.3125*nu[207]+0.3125*nu[206]-0.2795084971874737*nu[176]-0.2795084971874737*nu[175]-0.2795084971874737*nu[174]-0.2795084971874737*nu[173]+0.25*nu[162]))*1.8);

} 
void ConstDiffusionCFLfreqMin4xTensorP2_diffDirs4(const double *Lx, const double *nu, double *cflFreq) 
{ 
  // Lx[vdim]:  domain length.
  // nu[324]:  diffusion coefficient (collisionality).
  double kxSq[1]; 
  kxSq[0] = 39.47841760435743/(Lx[3]*Lx[3]); 

  cflFreq[0] = fmax(cflFreq[0],(kxSq[0]*(0.390625*nu[323]-0.3493856214843422*nu[318]-0.3493856214843422*nu[317]-0.3493856214843422*nu[316]-0.3493856214843422*nu[315]+0.3125*nu[292]+0.3125*nu[291]+0.3125*nu[290]+0.3125*nu[289]+0.3125*nu[288]+0.3125*nu[287]-0.2795084971874737*nu[257]-0.2795084971874737*nu[256]-0.2795084971874737*nu[255]-0.2795084971874737*nu[254]+0.25*nu[243]))*1.8);

} 
void ConstDiffusionCFLfreqMin4xTensorP2_diffDirs14(const double *Lx, const double *nu, double *cflFreq) 
{ 
  // Lx[vdim]:  domain length.
  // nu[324]:  diffusion coefficient (collisionality).
  double kxSq[2]; 
  kxSq[0] = 39.47841760435743/(Lx[0]*Lx[0]); 
  kxSq[1] = 39.47841760435743/(Lx[3]*Lx[3]); 

  cflFreq[0] = fmax(cflFreq[0],(kxSq[0]*(0.390625*nu[80]-0.3493856214843422*nu[75]-0.3493856214843422*nu[74]-0.3493856214843422*nu[73]-0.3493856214843422*nu[72]+0.3125*nu[49]+0.3125*nu[48]+0.3125*nu[47]+0.3125*nu[46]+0.3125*nu[45]+0.3125*nu[44]-0.2795084971874737*nu[14]-0.2795084971874737*nu[13]-0.2795084971874737*nu[12]-0.2795084971874737*nu[11]+0.25*nu[0])+kxSq[1]*(0.390625*nu[323]-0.3493856214843422*nu[318]-0.3493856214843422*nu[317]-0.3493856214843422*nu[316]-0.3493856214843422*nu[315]+0.3125*nu[292]+0.3125*nu[291]+0.3125*nu[290]+0.3125*nu[289]+0.3125*nu[288]+0.3125*nu[287]-0.2795084971874737*nu[257]-0.2795084971874737*nu[256]-0.2795084971874737*nu[255]-0.2795084971874737*nu[254]+0.25*nu[243]))*1.8);

} 
void ConstDiffusionCFLfreqMin4xTensorP2_diffDirs1(const double *Lx, const double *nu, double *cflFreq) 
{ 
  // Lx[vdim]:  domain length.
  // nu[324]:  diffusion coefficient (collisionality).
  double kxSq[1]; 
  kxSq[0] = 39.47841760435743/(Lx[0]*Lx[0]); 

  cflFreq[0] = fmax(cflFreq[0],(kxSq[0]*(0.390625*nu[80]-0.3493856214843422*nu[75]-0.3493856214843422*nu[74]-0.3493856214843422*nu[73]-0.3493856214843422*nu[72]+0.3125*nu[49]+0.3125*nu[48]+0.3125*nu[47]+0.3125*nu[46]+0.3125*nu[45]+0.3125*nu[44]-0.2795084971874737*nu[14]-0.2795084971874737*nu[13]-0.2795084971874737*nu[12]-0.2795084971874737*nu[11]+0.25*nu[0]))*1.8);

} 
void ConstHyperDiffusion4CFLfreqMin4xTensorP2_diffDirs2(const double *Lx, const double *nu, double *cflFreq) 
{ 
  // Lx[vdim]:  domain length.
  // nu[324]:  diffusion coefficient (collisionality).
  double kxSq[1]; 
  kxSq[0] = 39.47841760435743/(Lx[1]*Lx[1]*Lx[1]*Lx[1]); 

  cflFreq[0] = fmax(cflFreq[0],(kxSq[0]*(0.390625*nu[161]-0.3493856214843422*nu[156]-0.3493856214843422*nu[155]-0.3493856214843422*nu[154]-0.3493856214843422*nu[153]+0.3125*nu[130]+0.3125*nu[129]+0.3125*nu[128]+0.3125*nu[127]+0.3125*nu[126]+0.3125*nu[125]-0.2795084971874737*nu[95]-0.2795084971874737*nu[94]-0.2795084971874737*nu[93]-0.2795084971874737*nu[92]+0.25*nu[81]))*1.8);

} 
void ConstHyperDiffusion4CFLfreqMin4xTensorP2_diffDirs23(const double *Lx, const double *nu, double *cflFreq) 
{ 
  // Lx[vdim]:  domain length.
  // nu[324]:  diffusion coefficient (collisionality).
  double kxSq[2]; 
  kxSq[0] = 39.47841760435743/(Lx[1]*Lx[1]*Lx[1]*Lx[1]); 
  kxSq[1] = 39.47841760435743/(Lx[2]*Lx[2]*Lx[2]*Lx[2]); 

  cflFreq[0] = fmax(cflFreq[0],(kxSq[0]*(0.390625*nu[161]-0.3493856214843422*nu[156]-0.3493856214843422*nu[155]-0.3493856214843422*nu[154]-0.3493856214843422*nu[153]+0.3125*nu[130]+0.3125*nu[129]+0.3125*nu[128]+0.3125*nu[127]+0.3125*nu[126]+0.3125*nu[125]-0.2795084971874737*nu[95]-0.2795084971874737*nu[94]-0.2795084971874737*nu[93]-0.2795084971874737*nu[92]+0.25*nu[81])+kxSq[1]*(0.390625*nu[242]-0.3493856214843422*nu[237]-0.3493856214843422*nu[236]-0.3493856214843422*nu[235]-0.3493856214843422*nu[234]+0.3125*nu[211]+0.3125*nu[210]+0.3125*nu[209]+0.3125*nu[208]+0.3125*nu[207]+0.3125*nu[206]-0.2795084971874737*nu[176]-0.2795084971874737*nu[175]-0.2795084971874737*nu[174]-0.2795084971874737*nu[173]+0.25*nu[162]))*1.8);

} 
void ConstHyperDiffusion4CFLfreqMin4xTensorP2_diffDirs234(const double *Lx, const double *nu, double *cflFreq) 
{ 
  // Lx[vdim]:  domain length.
  // nu[324]:  diffusion coefficient (collisionality).
  double kxSq[3]; 
  kxSq[0] = 39.47841760435743/(Lx[1]*Lx[1]*Lx[1]*Lx[1]); 
  kxSq[1] = 39.47841760435743/(Lx[2]*Lx[2]*Lx[2]*Lx[2]); 
  kxSq[2] = 39.47841760435743/(Lx[3]*Lx[3]*Lx[3]*Lx[3]); 

  cflFreq[0] = fmax(cflFreq[0],(kxSq[0]*(0.390625*nu[161]-0.3493856214843422*nu[156]-0.3493856214843422*nu[155]-0.3493856214843422*nu[154]-0.3493856214843422*nu[153]+0.3125*nu[130]+0.3125*nu[129]+0.3125*nu[128]+0.3125*nu[127]+0.3125*nu[126]+0.3125*nu[125]-0.2795084971874737*nu[95]-0.2795084971874737*nu[94]-0.2795084971874737*nu[93]-0.2795084971874737*nu[92]+0.25*nu[81])+kxSq[1]*(0.390625*nu[242]-0.3493856214843422*nu[237]-0.3493856214843422*nu[236]-0.3493856214843422*nu[235]-0.3493856214843422*nu[234]+0.3125*nu[211]+0.3125*nu[210]+0.3125*nu[209]+0.3125*nu[208]+0.3125*nu[207]+0.3125*nu[206]-0.2795084971874737*nu[176]-0.2795084971874737*nu[175]-0.2795084971874737*nu[174]-0.2795084971874737*nu[173]+0.25*nu[162])+kxSq[2]*(0.390625*nu[323]-0.3493856214843422*nu[318]-0.3493856214843422*nu[317]-0.3493856214843422*nu[316]-0.3493856214843422*nu[315]+0.3125*nu[292]+0.3125*nu[291]+0.3125*nu[290]+0.3125*nu[289]+0.3125*nu[288]+0.3125*nu[287]-0.2795084971874737*nu[257]-0.2795084971874737*nu[256]-0.2795084971874737*nu[255]-0.2795084971874737*nu[254]+0.25*nu[243]))*1.8);

} 
void ConstHyperDiffusion4CFLfreqMin4xTensorP2_diffDirs1234(const double *Lx, const double *nu, double *cflFreq) 
{ 
  // Lx[vdim]:  domain length.
  // nu[324]:  diffusion coefficient (collisionality).
  double kxSq[4]; 
  kxSq[0] = 39.47841760435743/(Lx[0]*Lx[0]*Lx[0]*Lx[0]); 
  kxSq[1] = 39.47841760435743/(Lx[1]*Lx[1]*Lx[1]*Lx[1]); 
  kxSq[2] = 39.47841760435743/(Lx[2]*Lx[2]*Lx[2]*Lx[2]); 
  kxSq[3] = 39.47841760435743/(Lx[3]*Lx[3]*Lx[3]*Lx[3]); 

  cflFreq[0] = fmax(cflFreq[0],(kxSq[0]*(0.390625*nu[80]-0.3493856214843422*nu[75]-0.3493856214843422*nu[74]-0.3493856214843422*nu[73]-0.3493856214843422*nu[72]+0.3125*nu[49]+0.3125*nu[48]+0.3125*nu[47]+0.3125*nu[46]+0.3125*nu[45]+0.3125*nu[44]-0.2795084971874737*nu[14]-0.2795084971874737*nu[13]-0.2795084971874737*nu[12]-0.2795084971874737*nu[11]+0.25*nu[0])+kxSq[1]*(0.390625*nu[161]-0.3493856214843422*nu[156]-0.3493856214843422*nu[155]-0.3493856214843422*nu[154]-0.3493856214843422*nu[153]+0.3125*nu[130]+0.3125*nu[129]+0.3125*nu[128]+0.3125*nu[127]+0.3125*nu[126]+0.3125*nu[125]-0.2795084971874737*nu[95]-0.2795084971874737*nu[94]-0.2795084971874737*nu[93]-0.2795084971874737*nu[92]+0.25*nu[81])+kxSq[2]*(0.390625*nu[242]-0.3493856214843422*nu[237]-0.3493856214843422*nu[236]-0.3493856214843422*nu[235]-0.3493856214843422*nu[234]+0.3125*nu[211]+0.3125*nu[210]+0.3125*nu[209]+0.3125*nu[208]+0.3125*nu[207]+0.3125*nu[206]-0.2795084971874737*nu[176]-0.2795084971874737*nu[175]-0.2795084971874737*nu[174]-0.2795084971874737*nu[173]+0.25*nu[162])+kxSq[3]*(0.390625*nu[323]-0.3493856214843422*nu[318]-0.3493856214843422*nu[317]-0.3493856214843422*nu[316]-0.3493856214843422*nu[315]+0.3125*nu[292]+0.3125*nu[291]+0.3125*nu[290]+0.3125*nu[289]+0.3125*nu[288]+0.3125*nu[287]-0.2795084971874737*nu[257]-0.2795084971874737*nu[256]-0.2795084971874737*nu[255]-0.2795084971874737*nu[254]+0.25*nu[243]))*1.8);

} 
void ConstHyperDiffusion4CFLfreqMin4xTensorP2_diffDirs123(const double *Lx, const double *nu, double *cflFreq) 
{ 
  // Lx[vdim]:  domain length.
  // nu[324]:  diffusion coefficient (collisionality).
  double kxSq[3]; 
  kxSq[0] = 39.47841760435743/(Lx[0]*Lx[0]*Lx[0]*Lx[0]); 
  kxSq[1] = 39.47841760435743/(Lx[1]*Lx[1]*Lx[1]*Lx[1]); 
  kxSq[2] = 39.47841760435743/(Lx[2]*Lx[2]*Lx[2]*Lx[2]); 

  cflFreq[0] = fmax(cflFreq[0],(kxSq[0]*(0.390625*nu[80]-0.3493856214843422*nu[75]-0.3493856214843422*nu[74]-0.3493856214843422*nu[73]-0.3493856214843422*nu[72]+0.3125*nu[49]+0.3125*nu[48]+0.3125*nu[47]+0.3125*nu[46]+0.3125*nu[45]+0.3125*nu[44]-0.2795084971874737*nu[14]-0.2795084971874737*nu[13]-0.2795084971874737*nu[12]-0.2795084971874737*nu[11]+0.25*nu[0])+kxSq[1]*(0.390625*nu[161]-0.3493856214843422*nu[156]-0.3493856214843422*nu[155]-0.3493856214843422*nu[154]-0.3493856214843422*nu[153]+0.3125*nu[130]+0.3125*nu[129]+0.3125*nu[128]+0.3125*nu[127]+0.3125*nu[126]+0.3125*nu[125]-0.2795084971874737*nu[95]-0.2795084971874737*nu[94]-0.2795084971874737*nu[93]-0.2795084971874737*nu[92]+0.25*nu[81])+kxSq[2]*(0.390625*nu[242]-0.3493856214843422*nu[237]-0.3493856214843422*nu[236]-0.3493856214843422*nu[235]-0.3493856214843422*nu[234]+0.3125*nu[211]+0.3125*nu[210]+0.3125*nu[209]+0.3125*nu[208]+0.3125*nu[207]+0.3125*nu[206]-0.2795084971874737*nu[176]-0.2795084971874737*nu[175]-0.2795084971874737*nu[174]-0.2795084971874737*nu[173]+0.25*nu[162]))*1.8);

} 
void ConstHyperDiffusion4CFLfreqMin4xTensorP2_diffDirs24(const double *Lx, const double *nu, double *cflFreq) 
{ 
  // Lx[vdim]:  domain length.
  // nu[324]:  diffusion coefficient (collisionality).
  double kxSq[2]; 
  kxSq[0] = 39.47841760435743/(Lx[1]*Lx[1]*Lx[1]*Lx[1]); 
  kxSq[1] = 39.47841760435743/(Lx[3]*Lx[3]*Lx[3]*Lx[3]); 

  cflFreq[0] = fmax(cflFreq[0],(kxSq[0]*(0.390625*nu[161]-0.3493856214843422*nu[156]-0.3493856214843422*nu[155]-0.3493856214843422*nu[154]-0.3493856214843422*nu[153]+0.3125*nu[130]+0.3125*nu[129]+0.3125*nu[128]+0.3125*nu[127]+0.3125*nu[126]+0.3125*nu[125]-0.2795084971874737*nu[95]-0.2795084971874737*nu[94]-0.2795084971874737*nu[93]-0.2795084971874737*nu[92]+0.25*nu[81])+kxSq[1]*(0.390625*nu[323]-0.3493856214843422*nu[318]-0.3493856214843422*nu[317]-0.3493856214843422*nu[316]-0.3493856214843422*nu[315]+0.3125*nu[292]+0.3125*nu[291]+0.3125*nu[290]+0.3125*nu[289]+0.3125*nu[288]+0.3125*nu[287]-0.2795084971874737*nu[257]-0.2795084971874737*nu[256]-0.2795084971874737*nu[255]-0.2795084971874737*nu[254]+0.25*nu[243]))*1.8);

} 
void ConstHyperDiffusion4CFLfreqMin4xTensorP2_diffDirs124(const double *Lx, const double *nu, double *cflFreq) 
{ 
  // Lx[vdim]:  domain length.
  // nu[324]:  diffusion coefficient (collisionality).
  double kxSq[3]; 
  kxSq[0] = 39.47841760435743/(Lx[0]*Lx[0]*Lx[0]*Lx[0]); 
  kxSq[1] = 39.47841760435743/(Lx[1]*Lx[1]*Lx[1]*Lx[1]); 
  kxSq[2] = 39.47841760435743/(Lx[3]*Lx[3]*Lx[3]*Lx[3]); 

  cflFreq[0] = fmax(cflFreq[0],(kxSq[0]*(0.390625*nu[80]-0.3493856214843422*nu[75]-0.3493856214843422*nu[74]-0.3493856214843422*nu[73]-0.3493856214843422*nu[72]+0.3125*nu[49]+0.3125*nu[48]+0.3125*nu[47]+0.3125*nu[46]+0.3125*nu[45]+0.3125*nu[44]-0.2795084971874737*nu[14]-0.2795084971874737*nu[13]-0.2795084971874737*nu[12]-0.2795084971874737*nu[11]+0.25*nu[0])+kxSq[1]*(0.390625*nu[161]-0.3493856214843422*nu[156]-0.3493856214843422*nu[155]-0.3493856214843422*nu[154]-0.3493856214843422*nu[153]+0.3125*nu[130]+0.3125*nu[129]+0.3125*nu[128]+0.3125*nu[127]+0.3125*nu[126]+0.3125*nu[125]-0.2795084971874737*nu[95]-0.2795084971874737*nu[94]-0.2795084971874737*nu[93]-0.2795084971874737*nu[92]+0.25*nu[81])+kxSq[2]*(0.390625*nu[323]-0.3493856214843422*nu[318]-0.3493856214843422*nu[317]-0.3493856214843422*nu[316]-0.3493856214843422*nu[315]+0.3125*nu[292]+0.3125*nu[291]+0.3125*nu[290]+0.3125*nu[289]+0.3125*nu[288]+0.3125*nu[287]-0.2795084971874737*nu[257]-0.2795084971874737*nu[256]-0.2795084971874737*nu[255]-0.2795084971874737*nu[254]+0.25*nu[243]))*1.8);

} 
void ConstHyperDiffusion4CFLfreqMin4xTensorP2_diffDirs12(const double *Lx, const double *nu, double *cflFreq) 
{ 
  // Lx[vdim]:  domain length.
  // nu[324]:  diffusion coefficient (collisionality).
  double kxSq[2]; 
  kxSq[0] = 39.47841760435743/(Lx[0]*Lx[0]*Lx[0]*Lx[0]); 
  kxSq[1] = 39.47841760435743/(Lx[1]*Lx[1]*Lx[1]*Lx[1]); 

  cflFreq[0] = fmax(cflFreq[0],(kxSq[0]*(0.390625*nu[80]-0.3493856214843422*nu[75]-0.3493856214843422*nu[74]-0.3493856214843422*nu[73]-0.3493856214843422*nu[72]+0.3125*nu[49]+0.3125*nu[48]+0.3125*nu[47]+0.3125*nu[46]+0.3125*nu[45]+0.3125*nu[44]-0.2795084971874737*nu[14]-0.2795084971874737*nu[13]-0.2795084971874737*nu[12]-0.2795084971874737*nu[11]+0.25*nu[0])+kxSq[1]*(0.390625*nu[161]-0.3493856214843422*nu[156]-0.3493856214843422*nu[155]-0.3493856214843422*nu[154]-0.3493856214843422*nu[153]+0.3125*nu[130]+0.3125*nu[129]+0.3125*nu[128]+0.3125*nu[127]+0.3125*nu[126]+0.3125*nu[125]-0.2795084971874737*nu[95]-0.2795084971874737*nu[94]-0.2795084971874737*nu[93]-0.2795084971874737*nu[92]+0.25*nu[81]))*1.8);

} 
void ConstHyperDiffusion4CFLfreqMin4xTensorP2_diffDirs3(const double *Lx, const double *nu, double *cflFreq) 
{ 
  // Lx[vdim]:  domain length.
  // nu[324]:  diffusion coefficient (collisionality).
  double kxSq[1]; 
  kxSq[0] = 39.47841760435743/(Lx[2]*Lx[2]*Lx[2]*Lx[2]); 

  cflFreq[0] = fmax(cflFreq[0],(kxSq[0]*(0.390625*nu[242]-0.3493856214843422*nu[237]-0.3493856214843422*nu[236]-0.3493856214843422*nu[235]-0.3493856214843422*nu[234]+0.3125*nu[211]+0.3125*nu[210]+0.3125*nu[209]+0.3125*nu[208]+0.3125*nu[207]+0.3125*nu[206]-0.2795084971874737*nu[176]-0.2795084971874737*nu[175]-0.2795084971874737*nu[174]-0.2795084971874737*nu[173]+0.25*nu[162]))*1.8);

} 
void ConstHyperDiffusion4CFLfreqMin4xTensorP2_diffDirs34(const double *Lx, const double *nu, double *cflFreq) 
{ 
  // Lx[vdim]:  domain length.
  // nu[324]:  diffusion coefficient (collisionality).
  double kxSq[2]; 
  kxSq[0] = 39.47841760435743/(Lx[2]*Lx[2]*Lx[2]*Lx[2]); 
  kxSq[1] = 39.47841760435743/(Lx[3]*Lx[3]*Lx[3]*Lx[3]); 

  cflFreq[0] = fmax(cflFreq[0],(kxSq[0]*(0.390625*nu[242]-0.3493856214843422*nu[237]-0.3493856214843422*nu[236]-0.3493856214843422*nu[235]-0.3493856214843422*nu[234]+0.3125*nu[211]+0.3125*nu[210]+0.3125*nu[209]+0.3125*nu[208]+0.3125*nu[207]+0.3125*nu[206]-0.2795084971874737*nu[176]-0.2795084971874737*nu[175]-0.2795084971874737*nu[174]-0.2795084971874737*nu[173]+0.25*nu[162])+kxSq[1]*(0.390625*nu[323]-0.3493856214843422*nu[318]-0.3493856214843422*nu[317]-0.3493856214843422*nu[316]-0.3493856214843422*nu[315]+0.3125*nu[292]+0.3125*nu[291]+0.3125*nu[290]+0.3125*nu[289]+0.3125*nu[288]+0.3125*nu[287]-0.2795084971874737*nu[257]-0.2795084971874737*nu[256]-0.2795084971874737*nu[255]-0.2795084971874737*nu[254]+0.25*nu[243]))*1.8);

} 
void ConstHyperDiffusion4CFLfreqMin4xTensorP2_diffDirs134(const double *Lx, const double *nu, double *cflFreq) 
{ 
  // Lx[vdim]:  domain length.
  // nu[324]:  diffusion coefficient (collisionality).
  double kxSq[3]; 
  kxSq[0] = 39.47841760435743/(Lx[0]*Lx[0]*Lx[0]*Lx[0]); 
  kxSq[1] = 39.47841760435743/(Lx[2]*Lx[2]*Lx[2]*Lx[2]); 
  kxSq[2] = 39.47841760435743/(Lx[3]*Lx[3]*Lx[3]*Lx[3]); 

  cflFreq[0] = fmax(cflFreq[0],(kxSq[0]*(0.390625*nu[80]-0.3493856214843422*nu[75]-0.3493856214843422*nu[74]-0.3493856214843422*nu[73]-0.3493856214843422*nu[72]+0.3125*nu[49]+0.3125*nu[48]+0.3125*nu[47]+0.3125*nu[46]+0.3125*nu[45]+0.3125*nu[44]-0.2795084971874737*nu[14]-0.2795084971874737*nu[13]-0.2795084971874737*nu[12]-0.2795084971874737*nu[11]+0.25*nu[0])+kxSq[1]*(0.390625*nu[242]-0.3493856214843422*nu[237]-0.3493856214843422*nu[236]-0.3493856214843422*nu[235]-0.3493856214843422*nu[234]+0.3125*nu[211]+0.3125*nu[210]+0.3125*nu[209]+0.3125*nu[208]+0.3125*nu[207]+0.3125*nu[206]-0.2795084971874737*nu[176]-0.2795084971874737*nu[175]-0.2795084971874737*nu[174]-0.2795084971874737*nu[173]+0.25*nu[162])+kxSq[2]*(0.390625*nu[323]-0.3493856214843422*nu[318]-0.3493856214843422*nu[317]-0.3493856214843422*nu[316]-0.3493856214843422*nu[315]+0.3125*nu[292]+0.3125*nu[291]+0.3125*nu[290]+0.3125*nu[289]+0.3125*nu[288]+0.3125*nu[287]-0.2795084971874737*nu[257]-0.2795084971874737*nu[256]-0.2795084971874737*nu[255]-0.2795084971874737*nu[254]+0.25*nu[243]))*1.8);

} 
void ConstHyperDiffusion4CFLfreqMin4xTensorP2_diffDirs13(const double *Lx, const double *nu, double *cflFreq) 
{ 
  // Lx[vdim]:  domain length.
  // nu[324]:  diffusion coefficient (collisionality).
  double kxSq[2]; 
  kxSq[0] = 39.47841760435743/(Lx[0]*Lx[0]*Lx[0]*Lx[0]); 
  kxSq[1] = 39.47841760435743/(Lx[2]*Lx[2]*Lx[2]*Lx[2]); 

  cflFreq[0] = fmax(cflFreq[0],(kxSq[0]*(0.390625*nu[80]-0.3493856214843422*nu[75]-0.3493856214843422*nu[74]-0.3493856214843422*nu[73]-0.3493856214843422*nu[72]+0.3125*nu[49]+0.3125*nu[48]+0.3125*nu[47]+0.3125*nu[46]+0.3125*nu[45]+0.3125*nu[44]-0.2795084971874737*nu[14]-0.2795084971874737*nu[13]-0.2795084971874737*nu[12]-0.2795084971874737*nu[11]+0.25*nu[0])+kxSq[1]*(0.390625*nu[242]-0.3493856214843422*nu[237]-0.3493856214843422*nu[236]-0.3493856214843422*nu[235]-0.3493856214843422*nu[234]+0.3125*nu[211]+0.3125*nu[210]+0.3125*nu[209]+0.3125*nu[208]+0.3125*nu[207]+0.3125*nu[206]-0.2795084971874737*nu[176]-0.2795084971874737*nu[175]-0.2795084971874737*nu[174]-0.2795084971874737*nu[173]+0.25*nu[162]))*1.8);

} 
void ConstHyperDiffusion4CFLfreqMin4xTensorP2_diffDirs4(const double *Lx, const double *nu, double *cflFreq) 
{ 
  // Lx[vdim]:  domain length.
  // nu[324]:  diffusion coefficient (collisionality).
  double kxSq[1]; 
  kxSq[0] = 39.47841760435743/(Lx[3]*Lx[3]*Lx[3]*Lx[3]); 

  cflFreq[0] = fmax(cflFreq[0],(kxSq[0]*(0.390625*nu[323]-0.3493856214843422*nu[318]-0.3493856214843422*nu[317]-0.3493856214843422*nu[316]-0.3493856214843422*nu[315]+0.3125*nu[292]+0.3125*nu[291]+0.3125*nu[290]+0.3125*nu[289]+0.3125*nu[288]+0.3125*nu[287]-0.2795084971874737*nu[257]-0.2795084971874737*nu[256]-0.2795084971874737*nu[255]-0.2795084971874737*nu[254]+0.25*nu[243]))*1.8);

} 
void ConstHyperDiffusion4CFLfreqMin4xTensorP2_diffDirs14(const double *Lx, const double *nu, double *cflFreq) 
{ 
  // Lx[vdim]:  domain length.
  // nu[324]:  diffusion coefficient (collisionality).
  double kxSq[2]; 
  kxSq[0] = 39.47841760435743/(Lx[0]*Lx[0]*Lx[0]*Lx[0]); 
  kxSq[1] = 39.47841760435743/(Lx[3]*Lx[3]*Lx[3]*Lx[3]); 

  cflFreq[0] = fmax(cflFreq[0],(kxSq[0]*(0.390625*nu[80]-0.3493856214843422*nu[75]-0.3493856214843422*nu[74]-0.3493856214843422*nu[73]-0.3493856214843422*nu[72]+0.3125*nu[49]+0.3125*nu[48]+0.3125*nu[47]+0.3125*nu[46]+0.3125*nu[45]+0.3125*nu[44]-0.2795084971874737*nu[14]-0.2795084971874737*nu[13]-0.2795084971874737*nu[12]-0.2795084971874737*nu[11]+0.25*nu[0])+kxSq[1]*(0.390625*nu[323]-0.3493856214843422*nu[318]-0.3493856214843422*nu[317]-0.3493856214843422*nu[316]-0.3493856214843422*nu[315]+0.3125*nu[292]+0.3125*nu[291]+0.3125*nu[290]+0.3125*nu[289]+0.3125*nu[288]+0.3125*nu[287]-0.2795084971874737*nu[257]-0.2795084971874737*nu[256]-0.2795084971874737*nu[255]-0.2795084971874737*nu[254]+0.25*nu[243]))*1.8);

} 
void ConstHyperDiffusion4CFLfreqMin4xTensorP2_diffDirs1(const double *Lx, const double *nu, double *cflFreq) 
{ 
  // Lx[vdim]:  domain length.
  // nu[324]:  diffusion coefficient (collisionality).
  double kxSq[1]; 
  kxSq[0] = 39.47841760435743/(Lx[0]*Lx[0]*Lx[0]*Lx[0]); 

  cflFreq[0] = fmax(cflFreq[0],(kxSq[0]*(0.390625*nu[80]-0.3493856214843422*nu[75]-0.3493856214843422*nu[74]-0.3493856214843422*nu[73]-0.3493856214843422*nu[72]+0.3125*nu[49]+0.3125*nu[48]+0.3125*nu[47]+0.3125*nu[46]+0.3125*nu[45]+0.3125*nu[44]-0.2795084971874737*nu[14]-0.2795084971874737*nu[13]-0.2795084971874737*nu[12]-0.2795084971874737*nu[11]+0.25*nu[0]))*1.8);

} 
void ConstHyperDiffusion6CFLfreqMin4xTensorP2_diffDirs2(const double *Lx, const double *nu, double *cflFreq) 
{ 
  // Lx[vdim]:  domain length.
  // nu[324]:  diffusion coefficient (collisionality).
  double kxSq[1]; 
  kxSq[0] = 39.47841760435743/(Lx[1]*Lx[1]*Lx[1]*Lx[1]*Lx[1]*Lx[1]); 

  cflFreq[0] = fmax(cflFreq[0],(kxSq[0]*(0.390625*nu[161]-0.3493856214843422*nu[156]-0.3493856214843422*nu[155]-0.3493856214843422*nu[154]-0.3493856214843422*nu[153]+0.3125*nu[130]+0.3125*nu[129]+0.3125*nu[128]+0.3125*nu[127]+0.3125*nu[126]+0.3125*nu[125]-0.2795084971874737*nu[95]-0.2795084971874737*nu[94]-0.2795084971874737*nu[93]-0.2795084971874737*nu[92]+0.25*nu[81]))*1.8);

} 
void ConstHyperDiffusion6CFLfreqMin4xTensorP2_diffDirs23(const double *Lx, const double *nu, double *cflFreq) 
{ 
  // Lx[vdim]:  domain length.
  // nu[324]:  diffusion coefficient (collisionality).
  double kxSq[2]; 
  kxSq[0] = 39.47841760435743/(Lx[1]*Lx[1]*Lx[1]*Lx[1]*Lx[1]*Lx[1]); 
  kxSq[1] = 39.47841760435743/(Lx[2]*Lx[2]*Lx[2]*Lx[2]*Lx[2]*Lx[2]); 

  cflFreq[0] = fmax(cflFreq[0],(kxSq[0]*(0.390625*nu[161]-0.3493856214843422*nu[156]-0.3493856214843422*nu[155]-0.3493856214843422*nu[154]-0.3493856214843422*nu[153]+0.3125*nu[130]+0.3125*nu[129]+0.3125*nu[128]+0.3125*nu[127]+0.3125*nu[126]+0.3125*nu[125]-0.2795084971874737*nu[95]-0.2795084971874737*nu[94]-0.2795084971874737*nu[93]-0.2795084971874737*nu[92]+0.25*nu[81])+kxSq[1]*(0.390625*nu[242]-0.3493856214843422*nu[237]-0.3493856214843422*nu[236]-0.3493856214843422*nu[235]-0.3493856214843422*nu[234]+0.3125*nu[211]+0.3125*nu[210]+0.3125*nu[209]+0.3125*nu[208]+0.3125*nu[207]+0.3125*nu[206]-0.2795084971874737*nu[176]-0.2795084971874737*nu[175]-0.2795084971874737*nu[174]-0.2795084971874737*nu[173]+0.25*nu[162]))*1.8);

} 
void ConstHyperDiffusion6CFLfreqMin4xTensorP2_diffDirs234(const double *Lx, const double *nu, double *cflFreq) 
{ 
  // Lx[vdim]:  domain length.
  // nu[324]:  diffusion coefficient (collisionality).
  double kxSq[3]; 
  kxSq[0] = 39.47841760435743/(Lx[1]*Lx[1]*Lx[1]*Lx[1]*Lx[1]*Lx[1]); 
  kxSq[1] = 39.47841760435743/(Lx[2]*Lx[2]*Lx[2]*Lx[2]*Lx[2]*Lx[2]); 
  kxSq[2] = 39.47841760435743/(Lx[3]*Lx[3]*Lx[3]*Lx[3]*Lx[3]*Lx[3]); 

  cflFreq[0] = fmax(cflFreq[0],(kxSq[0]*(0.390625*nu[161]-0.3493856214843422*nu[156]-0.3493856214843422*nu[155]-0.3493856214843422*nu[154]-0.3493856214843422*nu[153]+0.3125*nu[130]+0.3125*nu[129]+0.3125*nu[128]+0.3125*nu[127]+0.3125*nu[126]+0.3125*nu[125]-0.2795084971874737*nu[95]-0.2795084971874737*nu[94]-0.2795084971874737*nu[93]-0.2795084971874737*nu[92]+0.25*nu[81])+kxSq[1]*(0.390625*nu[242]-0.3493856214843422*nu[237]-0.3493856214843422*nu[236]-0.3493856214843422*nu[235]-0.3493856214843422*nu[234]+0.3125*nu[211]+0.3125*nu[210]+0.3125*nu[209]+0.3125*nu[208]+0.3125*nu[207]+0.3125*nu[206]-0.2795084971874737*nu[176]-0.2795084971874737*nu[175]-0.2795084971874737*nu[174]-0.2795084971874737*nu[173]+0.25*nu[162])+kxSq[2]*(0.390625*nu[323]-0.3493856214843422*nu[318]-0.3493856214843422*nu[317]-0.3493856214843422*nu[316]-0.3493856214843422*nu[315]+0.3125*nu[292]+0.3125*nu[291]+0.3125*nu[290]+0.3125*nu[289]+0.3125*nu[288]+0.3125*nu[287]-0.2795084971874737*nu[257]-0.2795084971874737*nu[256]-0.2795084971874737*nu[255]-0.2795084971874737*nu[254]+0.25*nu[243]))*1.8);

} 
void ConstHyperDiffusion6CFLfreqMin4xTensorP2_diffDirs1234(const double *Lx, const double *nu, double *cflFreq) 
{ 
  // Lx[vdim]:  domain length.
  // nu[324]:  diffusion coefficient (collisionality).
  double kxSq[4]; 
  kxSq[0] = 39.47841760435743/(Lx[0]*Lx[0]*Lx[0]*Lx[0]*Lx[0]*Lx[0]); 
  kxSq[1] = 39.47841760435743/(Lx[1]*Lx[1]*Lx[1]*Lx[1]*Lx[1]*Lx[1]); 
  kxSq[2] = 39.47841760435743/(Lx[2]*Lx[2]*Lx[2]*Lx[2]*Lx[2]*Lx[2]); 
  kxSq[3] = 39.47841760435743/(Lx[3]*Lx[3]*Lx[3]*Lx[3]*Lx[3]*Lx[3]); 

  cflFreq[0] = fmax(cflFreq[0],(kxSq[0]*(0.390625*nu[80]-0.3493856214843422*nu[75]-0.3493856214843422*nu[74]-0.3493856214843422*nu[73]-0.3493856214843422*nu[72]+0.3125*nu[49]+0.3125*nu[48]+0.3125*nu[47]+0.3125*nu[46]+0.3125*nu[45]+0.3125*nu[44]-0.2795084971874737*nu[14]-0.2795084971874737*nu[13]-0.2795084971874737*nu[12]-0.2795084971874737*nu[11]+0.25*nu[0])+kxSq[1]*(0.390625*nu[161]-0.3493856214843422*nu[156]-0.3493856214843422*nu[155]-0.3493856214843422*nu[154]-0.3493856214843422*nu[153]+0.3125*nu[130]+0.3125*nu[129]+0.3125*nu[128]+0.3125*nu[127]+0.3125*nu[126]+0.3125*nu[125]-0.2795084971874737*nu[95]-0.2795084971874737*nu[94]-0.2795084971874737*nu[93]-0.2795084971874737*nu[92]+0.25*nu[81])+kxSq[2]*(0.390625*nu[242]-0.3493856214843422*nu[237]-0.3493856214843422*nu[236]-0.3493856214843422*nu[235]-0.3493856214843422*nu[234]+0.3125*nu[211]+0.3125*nu[210]+0.3125*nu[209]+0.3125*nu[208]+0.3125*nu[207]+0.3125*nu[206]-0.2795084971874737*nu[176]-0.2795084971874737*nu[175]-0.2795084971874737*nu[174]-0.2795084971874737*nu[173]+0.25*nu[162])+kxSq[3]*(0.390625*nu[323]-0.3493856214843422*nu[318]-0.3493856214843422*nu[317]-0.3493856214843422*nu[316]-0.3493856214843422*nu[315]+0.3125*nu[292]+0.3125*nu[291]+0.3125*nu[290]+0.3125*nu[289]+0.3125*nu[288]+0.3125*nu[287]-0.2795084971874737*nu[257]-0.2795084971874737*nu[256]-0.2795084971874737*nu[255]-0.2795084971874737*nu[254]+0.25*nu[243]))*1.8);

} 
void ConstHyperDiffusion6CFLfreqMin4xTensorP2_diffDirs123(const double *Lx, const double *nu, double *cflFreq) 
{ 
  // Lx[vdim]:  domain length.
  // nu[324]:  diffusion coefficient (collisionality).
  double kxSq[3]; 
  kxSq[0] = 39.47841760435743/(Lx[0]*Lx[0]*Lx[0]*Lx[0]*Lx[0]*Lx[0]); 
  kxSq[1] = 39.47841760435743/(Lx[1]*Lx[1]*Lx[1]*Lx[1]*Lx[1]*Lx[1]); 
  kxSq[2] = 39.47841760435743/(Lx[2]*Lx[2]*Lx[2]*Lx[2]*Lx[2]*Lx[2]); 

  cflFreq[0] = fmax(cflFreq[0],(kxSq[0]*(0.390625*nu[80]-0.3493856214843422*nu[75]-0.3493856214843422*nu[74]-0.3493856214843422*nu[73]-0.3493856214843422*nu[72]+0.3125*nu[49]+0.3125*nu[48]+0.3125*nu[47]+0.3125*nu[46]+0.3125*nu[45]+0.3125*nu[44]-0.2795084971874737*nu[14]-0.2795084971874737*nu[13]-0.2795084971874737*nu[12]-0.2795084971874737*nu[11]+0.25*nu[0])+kxSq[1]*(0.390625*nu[161]-0.3493856214843422*nu[156]-0.3493856214843422*nu[155]-0.3493856214843422*nu[154]-0.3493856214843422*nu[153]+0.3125*nu[130]+0.3125*nu[129]+0.3125*nu[128]+0.3125*nu[127]+0.3125*nu[126]+0.3125*nu[125]-0.2795084971874737*nu[95]-0.2795084971874737*nu[94]-0.2795084971874737*nu[93]-0.2795084971874737*nu[92]+0.25*nu[81])+kxSq[2]*(0.390625*nu[242]-0.3493856214843422*nu[237]-0.3493856214843422*nu[236]-0.3493856214843422*nu[235]-0.3493856214843422*nu[234]+0.3125*nu[211]+0.3125*nu[210]+0.3125*nu[209]+0.3125*nu[208]+0.3125*nu[207]+0.3125*nu[206]-0.2795084971874737*nu[176]-0.2795084971874737*nu[175]-0.2795084971874737*nu[174]-0.2795084971874737*nu[173]+0.25*nu[162]))*1.8);

} 
void ConstHyperDiffusion6CFLfreqMin4xTensorP2_diffDirs24(const double *Lx, const double *nu, double *cflFreq) 
{ 
  // Lx[vdim]:  domain length.
  // nu[324]:  diffusion coefficient (collisionality).
  double kxSq[2]; 
  kxSq[0] = 39.47841760435743/(Lx[1]*Lx[1]*Lx[1]*Lx[1]*Lx[1]*Lx[1]); 
  kxSq[1] = 39.47841760435743/(Lx[3]*Lx[3]*Lx[3]*Lx[3]*Lx[3]*Lx[3]); 

  cflFreq[0] = fmax(cflFreq[0],(kxSq[0]*(0.390625*nu[161]-0.3493856214843422*nu[156]-0.3493856214843422*nu[155]-0.3493856214843422*nu[154]-0.3493856214843422*nu[153]+0.3125*nu[130]+0.3125*nu[129]+0.3125*nu[128]+0.3125*nu[127]+0.3125*nu[126]+0.3125*nu[125]-0.2795084971874737*nu[95]-0.2795084971874737*nu[94]-0.2795084971874737*nu[93]-0.2795084971874737*nu[92]+0.25*nu[81])+kxSq[1]*(0.390625*nu[323]-0.3493856214843422*nu[318]-0.3493856214843422*nu[317]-0.3493856214843422*nu[316]-0.3493856214843422*nu[315]+0.3125*nu[292]+0.3125*nu[291]+0.3125*nu[290]+0.3125*nu[289]+0.3125*nu[288]+0.3125*nu[287]-0.2795084971874737*nu[257]-0.2795084971874737*nu[256]-0.2795084971874737*nu[255]-0.2795084971874737*nu[254]+0.25*nu[243]))*1.8);

} 
void ConstHyperDiffusion6CFLfreqMin4xTensorP2_diffDirs124(const double *Lx, const double *nu, double *cflFreq) 
{ 
  // Lx[vdim]:  domain length.
  // nu[324]:  diffusion coefficient (collisionality).
  double kxSq[3]; 
  kxSq[0] = 39.47841760435743/(Lx[0]*Lx[0]*Lx[0]*Lx[0]*Lx[0]*Lx[0]); 
  kxSq[1] = 39.47841760435743/(Lx[1]*Lx[1]*Lx[1]*Lx[1]*Lx[1]*Lx[1]); 
  kxSq[2] = 39.47841760435743/(Lx[3]*Lx[3]*Lx[3]*Lx[3]*Lx[3]*Lx[3]); 

  cflFreq[0] = fmax(cflFreq[0],(kxSq[0]*(0.390625*nu[80]-0.3493856214843422*nu[75]-0.3493856214843422*nu[74]-0.3493856214843422*nu[73]-0.3493856214843422*nu[72]+0.3125*nu[49]+0.3125*nu[48]+0.3125*nu[47]+0.3125*nu[46]+0.3125*nu[45]+0.3125*nu[44]-0.2795084971874737*nu[14]-0.2795084971874737*nu[13]-0.2795084971874737*nu[12]-0.2795084971874737*nu[11]+0.25*nu[0])+kxSq[1]*(0.390625*nu[161]-0.3493856214843422*nu[156]-0.3493856214843422*nu[155]-0.3493856214843422*nu[154]-0.3493856214843422*nu[153]+0.3125*nu[130]+0.3125*nu[129]+0.3125*nu[128]+0.3125*nu[127]+0.3125*nu[126]+0.3125*nu[125]-0.2795084971874737*nu[95]-0.2795084971874737*nu[94]-0.2795084971874737*nu[93]-0.2795084971874737*nu[92]+0.25*nu[81])+kxSq[2]*(0.390625*nu[323]-0.3493856214843422*nu[318]-0.3493856214843422*nu[317]-0.3493856214843422*nu[316]-0.3493856214843422*nu[315]+0.3125*nu[292]+0.3125*nu[291]+0.3125*nu[290]+0.3125*nu[289]+0.3125*nu[288]+0.3125*nu[287]-0.2795084971874737*nu[257]-0.2795084971874737*nu[256]-0.2795084971874737*nu[255]-0.2795084971874737*nu[254]+0.25*nu[243]))*1.8);

} 
void ConstHyperDiffusion6CFLfreqMin4xTensorP2_diffDirs12(const double *Lx, const double *nu, double *cflFreq) 
{ 
  // Lx[vdim]:  domain length.
  // nu[324]:  diffusion coefficient (collisionality).
  double kxSq[2]; 
  kxSq[0] = 39.47841760435743/(Lx[0]*Lx[0]*Lx[0]*Lx[0]*Lx[0]*Lx[0]); 
  kxSq[1] = 39.47841760435743/(Lx[1]*Lx[1]*Lx[1]*Lx[1]*Lx[1]*Lx[1]); 

  cflFreq[0] = fmax(cflFreq[0],(kxSq[0]*(0.390625*nu[80]-0.3493856214843422*nu[75]-0.3493856214843422*nu[74]-0.3493856214843422*nu[73]-0.3493856214843422*nu[72]+0.3125*nu[49]+0.3125*nu[48]+0.3125*nu[47]+0.3125*nu[46]+0.3125*nu[45]+0.3125*nu[44]-0.2795084971874737*nu[14]-0.2795084971874737*nu[13]-0.2795084971874737*nu[12]-0.2795084971874737*nu[11]+0.25*nu[0])+kxSq[1]*(0.390625*nu[161]-0.3493856214843422*nu[156]-0.3493856214843422*nu[155]-0.3493856214843422*nu[154]-0.3493856214843422*nu[153]+0.3125*nu[130]+0.3125*nu[129]+0.3125*nu[128]+0.3125*nu[127]+0.3125*nu[126]+0.3125*nu[125]-0.2795084971874737*nu[95]-0.2795084971874737*nu[94]-0.2795084971874737*nu[93]-0.2795084971874737*nu[92]+0.25*nu[81]))*1.8);

} 
void ConstHyperDiffusion6CFLfreqMin4xTensorP2_diffDirs3(const double *Lx, const double *nu, double *cflFreq) 
{ 
  // Lx[vdim]:  domain length.
  // nu[324]:  diffusion coefficient (collisionality).
  double kxSq[1]; 
  kxSq[0] = 39.47841760435743/(Lx[2]*Lx[2]*Lx[2]*Lx[2]*Lx[2]*Lx[2]); 

  cflFreq[0] = fmax(cflFreq[0],(kxSq[0]*(0.390625*nu[242]-0.3493856214843422*nu[237]-0.3493856214843422*nu[236]-0.3493856214843422*nu[235]-0.3493856214843422*nu[234]+0.3125*nu[211]+0.3125*nu[210]+0.3125*nu[209]+0.3125*nu[208]+0.3125*nu[207]+0.3125*nu[206]-0.2795084971874737*nu[176]-0.2795084971874737*nu[175]-0.2795084971874737*nu[174]-0.2795084971874737*nu[173]+0.25*nu[162]))*1.8);

} 
void ConstHyperDiffusion6CFLfreqMin4xTensorP2_diffDirs34(const double *Lx, const double *nu, double *cflFreq) 
{ 
  // Lx[vdim]:  domain length.
  // nu[324]:  diffusion coefficient (collisionality).
  double kxSq[2]; 
  kxSq[0] = 39.47841760435743/(Lx[2]*Lx[2]*Lx[2]*Lx[2]*Lx[2]*Lx[2]); 
  kxSq[1] = 39.47841760435743/(Lx[3]*Lx[3]*Lx[3]*Lx[3]*Lx[3]*Lx[3]); 

  cflFreq[0] = fmax(cflFreq[0],(kxSq[0]*(0.390625*nu[242]-0.3493856214843422*nu[237]-0.3493856214843422*nu[236]-0.3493856214843422*nu[235]-0.3493856214843422*nu[234]+0.3125*nu[211]+0.3125*nu[210]+0.3125*nu[209]+0.3125*nu[208]+0.3125*nu[207]+0.3125*nu[206]-0.2795084971874737*nu[176]-0.2795084971874737*nu[175]-0.2795084971874737*nu[174]-0.2795084971874737*nu[173]+0.25*nu[162])+kxSq[1]*(0.390625*nu[323]-0.3493856214843422*nu[318]-0.3493856214843422*nu[317]-0.3493856214843422*nu[316]-0.3493856214843422*nu[315]+0.3125*nu[292]+0.3125*nu[291]+0.3125*nu[290]+0.3125*nu[289]+0.3125*nu[288]+0.3125*nu[287]-0.2795084971874737*nu[257]-0.2795084971874737*nu[256]-0.2795084971874737*nu[255]-0.2795084971874737*nu[254]+0.25*nu[243]))*1.8);

} 
void ConstHyperDiffusion6CFLfreqMin4xTensorP2_diffDirs134(const double *Lx, const double *nu, double *cflFreq) 
{ 
  // Lx[vdim]:  domain length.
  // nu[324]:  diffusion coefficient (collisionality).
  double kxSq[3]; 
  kxSq[0] = 39.47841760435743/(Lx[0]*Lx[0]*Lx[0]*Lx[0]*Lx[0]*Lx[0]); 
  kxSq[1] = 39.47841760435743/(Lx[2]*Lx[2]*Lx[2]*Lx[2]*Lx[2]*Lx[2]); 
  kxSq[2] = 39.47841760435743/(Lx[3]*Lx[3]*Lx[3]*Lx[3]*Lx[3]*Lx[3]); 

  cflFreq[0] = fmax(cflFreq[0],(kxSq[0]*(0.390625*nu[80]-0.3493856214843422*nu[75]-0.3493856214843422*nu[74]-0.3493856214843422*nu[73]-0.3493856214843422*nu[72]+0.3125*nu[49]+0.3125*nu[48]+0.3125*nu[47]+0.3125*nu[46]+0.3125*nu[45]+0.3125*nu[44]-0.2795084971874737*nu[14]-0.2795084971874737*nu[13]-0.2795084971874737*nu[12]-0.2795084971874737*nu[11]+0.25*nu[0])+kxSq[1]*(0.390625*nu[242]-0.3493856214843422*nu[237]-0.3493856214843422*nu[236]-0.3493856214843422*nu[235]-0.3493856214843422*nu[234]+0.3125*nu[211]+0.3125*nu[210]+0.3125*nu[209]+0.3125*nu[208]+0.3125*nu[207]+0.3125*nu[206]-0.2795084971874737*nu[176]-0.2795084971874737*nu[175]-0.2795084971874737*nu[174]-0.2795084971874737*nu[173]+0.25*nu[162])+kxSq[2]*(0.390625*nu[323]-0.3493856214843422*nu[318]-0.3493856214843422*nu[317]-0.3493856214843422*nu[316]-0.3493856214843422*nu[315]+0.3125*nu[292]+0.3125*nu[291]+0.3125*nu[290]+0.3125*nu[289]+0.3125*nu[288]+0.3125*nu[287]-0.2795084971874737*nu[257]-0.2795084971874737*nu[256]-0.2795084971874737*nu[255]-0.2795084971874737*nu[254]+0.25*nu[243]))*1.8);

} 
void ConstHyperDiffusion6CFLfreqMin4xTensorP2_diffDirs13(const double *Lx, const double *nu, double *cflFreq) 
{ 
  // Lx[vdim]:  domain length.
  // nu[324]:  diffusion coefficient (collisionality).
  double kxSq[2]; 
  kxSq[0] = 39.47841760435743/(Lx[0]*Lx[0]*Lx[0]*Lx[0]*Lx[0]*Lx[0]); 
  kxSq[1] = 39.47841760435743/(Lx[2]*Lx[2]*Lx[2]*Lx[2]*Lx[2]*Lx[2]); 

  cflFreq[0] = fmax(cflFreq[0],(kxSq[0]*(0.390625*nu[80]-0.3493856214843422*nu[75]-0.3493856214843422*nu[74]-0.3493856214843422*nu[73]-0.3493856214843422*nu[72]+0.3125*nu[49]+0.3125*nu[48]+0.3125*nu[47]+0.3125*nu[46]+0.3125*nu[45]+0.3125*nu[44]-0.2795084971874737*nu[14]-0.2795084971874737*nu[13]-0.2795084971874737*nu[12]-0.2795084971874737*nu[11]+0.25*nu[0])+kxSq[1]*(0.390625*nu[242]-0.3493856214843422*nu[237]-0.3493856214843422*nu[236]-0.3493856214843422*nu[235]-0.3493856214843422*nu[234]+0.3125*nu[211]+0.3125*nu[210]+0.3125*nu[209]+0.3125*nu[208]+0.3125*nu[207]+0.3125*nu[206]-0.2795084971874737*nu[176]-0.2795084971874737*nu[175]-0.2795084971874737*nu[174]-0.2795084971874737*nu[173]+0.25*nu[162]))*1.8);

} 
void ConstHyperDiffusion6CFLfreqMin4xTensorP2_diffDirs4(const double *Lx, const double *nu, double *cflFreq) 
{ 
  // Lx[vdim]:  domain length.
  // nu[324]:  diffusion coefficient (collisionality).
  double kxSq[1]; 
  kxSq[0] = 39.47841760435743/(Lx[3]*Lx[3]*Lx[3]*Lx[3]*Lx[3]*Lx[3]); 

  cflFreq[0] = fmax(cflFreq[0],(kxSq[0]*(0.390625*nu[323]-0.3493856214843422*nu[318]-0.3493856214843422*nu[317]-0.3493856214843422*nu[316]-0.3493856214843422*nu[315]+0.3125*nu[292]+0.3125*nu[291]+0.3125*nu[290]+0.3125*nu[289]+0.3125*nu[288]+0.3125*nu[287]-0.2795084971874737*nu[257]-0.2795084971874737*nu[256]-0.2795084971874737*nu[255]-0.2795084971874737*nu[254]+0.25*nu[243]))*1.8);

} 
void ConstHyperDiffusion6CFLfreqMin4xTensorP2_diffDirs14(const double *Lx, const double *nu, double *cflFreq) 
{ 
  // Lx[vdim]:  domain length.
  // nu[324]:  diffusion coefficient (collisionality).
  double kxSq[2]; 
  kxSq[0] = 39.47841760435743/(Lx[0]*Lx[0]*Lx[0]*Lx[0]*Lx[0]*Lx[0]); 
  kxSq[1] = 39.47841760435743/(Lx[3]*Lx[3]*Lx[3]*Lx[3]*Lx[3]*Lx[3]); 

  cflFreq[0] = fmax(cflFreq[0],(kxSq[0]*(0.390625*nu[80]-0.3493856214843422*nu[75]-0.3493856214843422*nu[74]-0.3493856214843422*nu[73]-0.3493856214843422*nu[72]+0.3125*nu[49]+0.3125*nu[48]+0.3125*nu[47]+0.3125*nu[46]+0.3125*nu[45]+0.3125*nu[44]-0.2795084971874737*nu[14]-0.2795084971874737*nu[13]-0.2795084971874737*nu[12]-0.2795084971874737*nu[11]+0.25*nu[0])+kxSq[1]*(0.390625*nu[323]-0.3493856214843422*nu[318]-0.3493856214843422*nu[317]-0.3493856214843422*nu[316]-0.3493856214843422*nu[315]+0.3125*nu[292]+0.3125*nu[291]+0.3125*nu[290]+0.3125*nu[289]+0.3125*nu[288]+0.3125*nu[287]-0.2795084971874737*nu[257]-0.2795084971874737*nu[256]-0.2795084971874737*nu[255]-0.2795084971874737*nu[254]+0.25*nu[243]))*1.8);

} 
void ConstHyperDiffusion6CFLfreqMin4xTensorP2_diffDirs1(const double *Lx, const double *nu, double *cflFreq) 
{ 
  // Lx[vdim]:  domain length.
  // nu[324]:  diffusion coefficient (collisionality).
  double kxSq[1]; 
  kxSq[0] = 39.47841760435743/(Lx[0]*Lx[0]*Lx[0]*Lx[0]*Lx[0]*Lx[0]); 

  cflFreq[0] = fmax(cflFreq[0],(kxSq[0]*(0.390625*nu[80]-0.3493856214843422*nu[75]-0.3493856214843422*nu[74]-0.3493856214843422*nu[73]-0.3493856214843422*nu[72]+0.3125*nu[49]+0.3125*nu[48]+0.3125*nu[47]+0.3125*nu[46]+0.3125*nu[45]+0.3125*nu[44]-0.2795084971874737*nu[14]-0.2795084971874737*nu[13]-0.2795084971874737*nu[12]-0.2795084971874737*nu[11]+0.25*nu[0]))*1.8);

} 
