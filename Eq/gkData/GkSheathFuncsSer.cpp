#include <GyrokineticModDecl.h> 
#include <CartFieldBinOpModDecl.h> 
void calcSheathPartialReflectionScaled1x1vSer_P1(const double wv, const double dv, const double zVal, const double vcut, const double *f, double *fhat) 
{ 
  double u[2]; 
  double uhat[2]; 
  double c[2]; 
  double zVal2 = zVal*zVal; 
  double wv2 = wv*wv; 
  double wv3 = wv2*wv; 
  double wv4 = wv3*wv; 
  double wv5 = wv4*wv; 
  double dv2 = dv*dv; 
  double dv3 = dv2*dv; 
  double dv4 = dv3*dv; 
  double dv5 = dv4*dv; 
  double vcut2 = vcut*vcut; 
  double vcut3 = vcut2*vcut; 
  double vcut4 = vcut3*vcut; 
  double vcut5 = vcut4*vcut; 
  u[0] = 2.449489742783178*f[1]*wv*zVal+1.414213562373095*f[0]*wv; 
  u[1] = 0.0; 
  if(wv > 0) {
  uhat[0] = (0.25*((16.97056274847715*f[3]*wv3+((-33.9411254969543*f[3]*vcut)-9.797958971132715*f[1]*dv)*wv2+(16.97056274847715*f[3]*vcut2+9.797958971132715*f[1]*dv*vcut+(4.898979485566357*f[1]-4.242640687119286*f[3])*dv2)*wv)*zVal+9.797958971132715*f[2]*wv3+((-19.59591794226543*f[2]*vcut)-5.656854249492382*f[0]*dv)*wv2+(9.797958971132715*f[2]*vcut2+5.656854249492382*f[0]*dv*vcut+(2.828427124746191*f[0]-2.449489742783178*f[2])*dv2)*wv))/dv2; 
  uhat[1] = 0.0; 
  } else {
  uhat[0] = -(0.25*((16.97056274847715*f[3]*wv3+(33.9411254969543*f[3]*vcut-9.797958971132715*f[1]*dv)*wv2+(16.97056274847715*f[3]*vcut2-9.797958971132715*f[1]*dv*vcut+((-4.242640687119286*f[3])-4.898979485566357*f[1])*dv2)*wv)*zVal+9.797958971132715*f[2]*wv3+(19.59591794226543*f[2]*vcut-5.656854249492382*f[0]*dv)*wv2+(9.797958971132715*f[2]*vcut2-5.656854249492382*f[0]*dv*vcut+((-2.449489742783178*f[2])-2.828427124746191*f[0])*dv2)*wv))/dv2; 
  uhat[1] = 0.0; 
  }

  // calculate c = uhat/u 
  CartFieldBinOpDivide1xSer_P1(u, uhat, 1, 1, c); 
  // calculate fhat = c*f 
  CartFieldBinOpMultiply1x1vSer_P1(c, f, 1, 1, fhat); 
  // account for rare positivity issues 
  if (fhat[0]<0) {
    if(wv > 0) {
      double alpha = ((-wv)+vcut+dv/2)/dv; 
      for(int k=0; k<4; k++) { 
        fhat[k] = alpha*f[k]; 
      } 
    } else {
      double alpha = (wv+vcut+dv/2)/dv; 
      for(int k=0; k<4; k++) { 
        fhat[k] = alpha*f[k]; 
      } 
    } 
  } 

} 

void calcSheathPartialReflectionScaled1x1vSer_P2(const double wv, const double dv, const double zVal, const double vcut, const double *f, double *fhat) 
{ 
  double u[3]; 
  double uhat[3]; 
  double c[3]; 
  double zVal2 = zVal*zVal; 
  double wv2 = wv*wv; 
  double wv3 = wv2*wv; 
  double wv4 = wv3*wv; 
  double wv5 = wv4*wv; 
  double dv2 = dv*dv; 
  double dv3 = dv2*dv; 
  double dv4 = dv3*dv; 
  double dv5 = dv4*dv; 
  double vcut2 = vcut*vcut; 
  double vcut3 = vcut2*vcut; 
  double vcut4 = vcut3*vcut; 
  double vcut5 = vcut4*vcut; 
  u[0] = 0.08333333333333333*((56.92099788303084*f[4]*wv+16.43167672515499*f[6]*dv)*zVal2+(29.39387691339815*f[1]*wv+8.485281374238571*f[3]*dv)*zVal+(16.97056274847715*f[0]-18.97366596101028*f[4])*wv+(4.898979485566357*f[2]-5.477225575051662*f[6])*dv); 
  u[1] = 0.0; 
  u[2] = 0.0; 
  if(wv > 0) {
  uhat[0] = (0.01041666666666667*((262.9068276024799*f[6]*dv*wv3-227.6839915321235*f[4]*dv2*wv2+((227.6839915321235*f[4]-197.1801207018599*f[6])*dv3-788.7204828074397*f[6]*dv*vcut2)*wv+525.8136552049599*f[6]*dv*vcut3+227.6839915321235*f[4]*dv2*vcut2+(65.72670690061996*f[6]-56.92099788303084*f[4])*dv4)*zVal2+((-262.9068276024799*f[7]*wv4)+135.7645019878172*f[3]*dv*wv3+(1577.44096561488*f[7]*vcut2+(131.4534138012399*f[7]-117.5755076535926*f[1])*dv2)*wv2+((-2103.25462081984*f[7]*vcut3)-407.2935059634517*f[3]*dv*vcut2+(117.5755076535926*f[1]-101.8233764908629*f[3])*dv3)*wv+788.7204828074397*f[7]*vcut4+271.5290039756345*f[3]*dv*vcut3+(117.5755076535926*f[1]-131.4534138012399*f[7])*dv2*vcut2+((-16.43167672515499*f[7])+33.9411254969543*f[3]-29.39387691339815*f[1])*dv4)*zVal-151.7893276880823*f[5]*wv4+(78.38367176906175*f[2]-87.63560920082662*f[6])*dv*wv3+(910.7359661284939*f[5]*vcut2+(75.89466384404115*f[5]+75.89466384404115*f[4]-67.8822509939086*f[0])*dv2)*wv2+((-1214.314621504659*f[5]*vcut3)+(262.9068276024799*f[6]-235.1510153071852*f[2])*dv*vcut2+(65.72670690061996*f[6]-75.89466384404115*f[4]-58.7877538267963*f[2]+67.8822509939086*f[0])*dv3)*wv+455.3679830642469*f[5]*vcut4+(156.7673435381235*f[2]-175.2712184016533*f[6])*dv*vcut3+((-75.89466384404115*f[5])-75.89466384404115*f[4]+67.8822509939086*f[0])*dv2*vcut2+((-21.90890230020666*f[6])-9.48683298050514*f[5]+18.97366596101028*f[4]+19.59591794226543*f[2]-16.97056274847715*f[0])*dv4))/dv3; 
  uhat[1] = 0.0; 
  uhat[2] = 0.0; 
  } else {
  uhat[0] = -(0.01041666666666667*((262.9068276024799*f[6]*dv*wv3-227.6839915321235*f[4]*dv2*wv2+(((-197.1801207018599*f[6])-227.6839915321235*f[4])*dv3-788.7204828074397*f[6]*dv*vcut2)*wv-525.8136552049599*f[6]*dv*vcut3+227.6839915321235*f[4]*dv2*vcut2+((-65.72670690061996*f[6])-56.92099788303084*f[4])*dv4)*zVal2+((-262.9068276024799*f[7]*wv4)+135.7645019878172*f[3]*dv*wv3+(1577.44096561488*f[7]*vcut2+(131.4534138012399*f[7]-117.5755076535926*f[1])*dv2)*wv2+(2103.25462081984*f[7]*vcut3-407.2935059634517*f[3]*dv*vcut2+((-101.8233764908629*f[3])-117.5755076535926*f[1])*dv3)*wv+788.7204828074397*f[7]*vcut4-271.5290039756345*f[3]*dv*vcut3+(117.5755076535926*f[1]-131.4534138012399*f[7])*dv2*vcut2+((-16.43167672515499*f[7])-33.9411254969543*f[3]-29.39387691339815*f[1])*dv4)*zVal-151.7893276880823*f[5]*wv4+(78.38367176906175*f[2]-87.63560920082662*f[6])*dv*wv3+(910.7359661284939*f[5]*vcut2+(75.89466384404115*f[5]+75.89466384404115*f[4]-67.8822509939086*f[0])*dv2)*wv2+(1214.314621504659*f[5]*vcut3+(262.9068276024799*f[6]-235.1510153071852*f[2])*dv*vcut2+(65.72670690061996*f[6]+75.89466384404115*f[4]-58.7877538267963*f[2]-67.8822509939086*f[0])*dv3)*wv+455.3679830642469*f[5]*vcut4+(175.2712184016533*f[6]-156.7673435381235*f[2])*dv*vcut3+((-75.89466384404115*f[5])-75.89466384404115*f[4]+67.8822509939086*f[0])*dv2*vcut2+(21.90890230020666*f[6]-9.48683298050514*f[5]+18.97366596101028*f[4]-19.59591794226543*f[2]-16.97056274847715*f[0])*dv4))/dv3; 
  uhat[1] = 0.0; 
  uhat[2] = 0.0; 
  }

  // calculate c = uhat/u 
  CartFieldBinOpDivide1xSer_P2(u, uhat, 1, 1, c); 
  // calculate fhat = c*f 
  CartFieldBinOpMultiply1x1vSer_P2(c, f, 1, 1, fhat); 
  // account for rare positivity issues 
  if (fhat[0]<0) {
    if(wv > 0) {
      double alpha = ((-wv)+vcut+dv/2)/dv; 
      for(int k=0; k<8; k++) { 
        fhat[k] = alpha*f[k]; 
      } 
    } else {
      double alpha = (wv+vcut+dv/2)/dv; 
      for(int k=0; k<8; k++) { 
        fhat[k] = alpha*f[k]; 
      } 
    } 
  } 

} 

double calcSheathDeltaPhi1xSer_P1(const double *phi, const double *phiWall, const double zVal) 
{ 
  return 1.224744871391589*phi[1]*zVal-0.7071067811865475*phiWall[0]+0.7071067811865475*phi[0]; 
}

void calcSheathPartialReflectionScaled1x2vSer_P1(const double wv, const double dv, const double zVal, const double vcut, const double *f, double *fhat) 
{ 
  double u[2]; 
  double uhat[2]; 
  double c[2]; 
  double zVal2 = zVal*zVal; 
  double wv2 = wv*wv; 
  double wv3 = wv2*wv; 
  double wv4 = wv3*wv; 
  double wv5 = wv4*wv; 
  double dv2 = dv*dv; 
  double dv3 = dv2*dv; 
  double dv4 = dv3*dv; 
  double dv5 = dv4*dv; 
  double vcut2 = vcut*vcut; 
  double vcut3 = vcut2*vcut; 
  double vcut4 = vcut3*vcut; 
  double vcut5 = vcut4*vcut; 
  u[0] = 3.464101615137754*f[1]*wv*zVal+2.0*f[0]*wv; 
  u[1] = 0.0; 
  if(wv > 0) {
  uhat[0] = (0.5*((12.0*f[4]*wv3+((-24.0*f[4]*vcut)-6.928203230275509*f[1]*dv)*wv2+(12.0*f[4]*vcut2+6.928203230275509*f[1]*dv*vcut+(3.464101615137754*f[1]-3.0*f[4])*dv2)*wv)*zVal+6.928203230275509*f[2]*wv3+((-13.85640646055102*f[2]*vcut)-4.0*f[0]*dv)*wv2+(6.928203230275509*f[2]*vcut2+4.0*f[0]*dv*vcut+(2.0*f[0]-1.732050807568877*f[2])*dv2)*wv))/dv2; 
  uhat[1] = 0.0; 
  } else {
  uhat[0] = -(0.5*((12.0*f[4]*wv3+(24.0*f[4]*vcut-6.928203230275509*f[1]*dv)*wv2+(12.0*f[4]*vcut2-6.928203230275509*f[1]*dv*vcut+((-3.0*f[4])-3.464101615137754*f[1])*dv2)*wv)*zVal+6.928203230275509*f[2]*wv3+(13.85640646055102*f[2]*vcut-4.0*f[0]*dv)*wv2+(6.928203230275509*f[2]*vcut2-4.0*f[0]*dv*vcut+((-1.732050807568877*f[2])-2.0*f[0])*dv2)*wv))/dv2; 
  uhat[1] = 0.0; 
  }

  // calculate c = uhat/u 
  CartFieldBinOpDivide1xSer_P1(u, uhat, 1, 1, c); 
  // calculate fhat = c*f 
  CartFieldBinOpMultiply1x2vSer_P1(c, f, 1, 1, fhat); 
  // account for rare positivity issues 
  if (fhat[0]<0) {
    if(wv > 0) {
      double alpha = ((-wv)+vcut+dv/2)/dv; 
      for(int k=0; k<8; k++) { 
        fhat[k] = alpha*f[k]; 
      } 
    } else {
      double alpha = (wv+vcut+dv/2)/dv; 
      for(int k=0; k<8; k++) { 
        fhat[k] = alpha*f[k]; 
      } 
    } 
  } 

} 

double calcSheathDeltaPhi1xSer_P2(const double *phi, const double *phiWall, const double zVal) 
{ 
  double zVal2 = zVal*zVal; 
  return 2.371708245126284*phi[2]*(zVal2-0.3333333333333333)+1.224744871391589*phi[1]*zVal+0.7905694150420947*phiWall[2]-0.7071067811865475*phiWall[0]+0.7071067811865475*phi[0]; 
}

void calcSheathPartialReflectionScaled1x2vSer_P2(const double wv, const double dv, const double zVal, const double vcut, const double *f, double *fhat) 
{ 
  double u[3]; 
  double uhat[3]; 
  double c[3]; 
  double zVal2 = zVal*zVal; 
  double wv2 = wv*wv; 
  double wv3 = wv2*wv; 
  double wv4 = wv3*wv; 
  double wv5 = wv4*wv; 
  double dv2 = dv*dv; 
  double dv3 = dv2*dv; 
  double dv4 = dv3*dv; 
  double dv5 = dv4*dv; 
  double vcut2 = vcut*vcut; 
  double vcut3 = vcut2*vcut; 
  double vcut4 = vcut3*vcut; 
  double vcut5 = vcut4*vcut; 
  u[0] = 0.1666666666666667*((40.24922359499622*f[7]*wv+11.61895003862225*f[11]*dv)*zVal2+(20.78460969082652*f[1]*wv+6.0*f[4]*dv)*zVal+(12.0*f[0]-13.41640786499874*f[7])*wv+(3.464101615137754*f[2]-3.872983346207417*f[11])*dv); 
  u[1] = 0.0; 
  u[2] = 0.0; 
  if(wv > 0) {
  uhat[0] = (0.02083333333333333*((185.903200617956*f[11]*dv*wv3-160.9968943799849*f[7]*dv2*wv2+((160.9968943799849*f[7]-139.427400463467*f[11])*dv3-557.7096018538681*f[11]*dv*vcut2)*wv+371.8064012359121*f[11]*dv*vcut3+160.9968943799849*f[7]*dv2*vcut2+(46.47580015448901*f[11]-40.24922359499622*f[7])*dv4)*zVal2+((-185.903200617956*f[12]*wv4)+96.0*f[4]*dv*wv3+(1115.419203707736*f[12]*vcut2+(92.95160030897802*f[12]-83.1384387633061*f[1])*dv2)*wv2+((-1487.225604943648*f[12]*vcut3)-288.0*f[4]*dv*vcut2+(83.1384387633061*f[1]-72.0*f[4])*dv3)*wv+557.7096018538681*f[12]*vcut4+192.0*f[4]*dv*vcut3+(83.1384387633061*f[1]-92.95160030897802*f[12])*dv2*vcut2+((-11.61895003862225*f[12])+24.0*f[4]-20.78460969082652*f[1])*dv4)*zVal-107.3312629199899*f[8]*wv4+(55.42562584220407*f[2]-61.96773353931867*f[11])*dv*wv3+(643.9875775199395*f[8]*vcut2+(53.66563145999496*f[8]+53.66563145999496*f[7]-48.0*f[0])*dv2)*wv2+((-858.6501033599193*f[8]*vcut3)+(185.903200617956*f[11]-166.2768775266122*f[2])*dv*vcut2+(46.47580015448901*f[11]-53.66563145999496*f[7]-41.56921938165305*f[2]+48.0*f[0])*dv3)*wv+321.9937887599697*f[8]*vcut4+(110.8512516844081*f[2]-123.9354670786373*f[11])*dv*vcut3+((-53.66563145999496*f[8])-53.66563145999496*f[7]+48.0*f[0])*dv2*vcut2+((-15.49193338482967*f[11])-6.708203932499369*f[8]+13.41640786499874*f[7]+13.85640646055102*f[2]-12.0*f[0])*dv4))/dv3; 
  uhat[1] = 0.0; 
  uhat[2] = 0.0; 
  } else {
  uhat[0] = -(0.02083333333333333*((185.903200617956*f[11]*dv*wv3-160.9968943799849*f[7]*dv2*wv2+(((-139.427400463467*f[11])-160.9968943799849*f[7])*dv3-557.7096018538681*f[11]*dv*vcut2)*wv-371.8064012359121*f[11]*dv*vcut3+160.9968943799849*f[7]*dv2*vcut2+((-46.47580015448901*f[11])-40.24922359499622*f[7])*dv4)*zVal2+((-185.903200617956*f[12]*wv4)+96.0*f[4]*dv*wv3+(1115.419203707736*f[12]*vcut2+(92.95160030897802*f[12]-83.1384387633061*f[1])*dv2)*wv2+(1487.225604943648*f[12]*vcut3-288.0*f[4]*dv*vcut2+((-72.0*f[4])-83.1384387633061*f[1])*dv3)*wv+557.7096018538681*f[12]*vcut4-192.0*f[4]*dv*vcut3+(83.1384387633061*f[1]-92.95160030897802*f[12])*dv2*vcut2+((-11.61895003862225*f[12])-24.0*f[4]-20.78460969082652*f[1])*dv4)*zVal-107.3312629199899*f[8]*wv4+(55.42562584220407*f[2]-61.96773353931867*f[11])*dv*wv3+(643.9875775199395*f[8]*vcut2+(53.66563145999496*f[8]+53.66563145999496*f[7]-48.0*f[0])*dv2)*wv2+(858.6501033599193*f[8]*vcut3+(185.903200617956*f[11]-166.2768775266122*f[2])*dv*vcut2+(46.47580015448901*f[11]+53.66563145999496*f[7]-41.56921938165305*f[2]-48.0*f[0])*dv3)*wv+321.9937887599697*f[8]*vcut4+(123.9354670786373*f[11]-110.8512516844081*f[2])*dv*vcut3+((-53.66563145999496*f[8])-53.66563145999496*f[7]+48.0*f[0])*dv2*vcut2+(15.49193338482967*f[11]-6.708203932499369*f[8]+13.41640786499874*f[7]-13.85640646055102*f[2]-12.0*f[0])*dv4))/dv3; 
  uhat[1] = 0.0; 
  uhat[2] = 0.0; 
  }

  // calculate c = uhat/u 
  CartFieldBinOpDivide1xSer_P2(u, uhat, 1, 1, c); 
  // calculate fhat = c*f 
  CartFieldBinOpMultiply1x2vSer_P2(c, f, 1, 1, fhat); 
  // account for rare positivity issues 
  if (fhat[0]<0) {
    if(wv > 0) {
      double alpha = ((-wv)+vcut+dv/2)/dv; 
      for(int k=0; k<20; k++) { 
        fhat[k] = alpha*f[k]; 
      } 
    } else {
      double alpha = (wv+vcut+dv/2)/dv; 
      for(int k=0; k<20; k++) { 
        fhat[k] = alpha*f[k]; 
      } 
    } 
  } 

} 

double calcSheathDeltaPhi2xSer_P1(const double *phi, const double *phiWall, const double zVal) 
{ 
  return 0.8660254037844386*phi[2]*zVal-0.5*phiWall[0]+0.5*phi[0]; 
}

void calcSheathPartialReflectionScaled2x2vSer_P1(const double wv, const double dv, const double zVal, const double vcut, const double *f, double *fhat) 
{ 
  double u[4]; 
  double uhat[4]; 
  double c[4]; 
  double zVal2 = zVal*zVal; 
  double wv2 = wv*wv; 
  double wv3 = wv2*wv; 
  double wv4 = wv3*wv; 
  double wv5 = wv4*wv; 
  double dv2 = dv*dv; 
  double dv3 = dv2*dv; 
  double dv4 = dv3*dv; 
  double dv5 = dv4*dv; 
  double vcut2 = vcut*vcut; 
  double vcut3 = vcut2*vcut; 
  double vcut4 = vcut3*vcut; 
  double vcut5 = vcut4*vcut; 
  u[0] = 3.464101615137754*f[2]*wv*zVal+2.0*f[0]*wv; 
  u[1] = 3.464101615137754*f[5]*wv*zVal+2.0*f[1]*wv; 
  u[2] = 0.0; 
  u[3] = 0.0; 
  if(wv > 0) {
  uhat[0] = (0.5*((12.0*f[7]*wv3+((-24.0*f[7]*vcut)-6.928203230275509*f[2]*dv)*wv2+(12.0*f[7]*vcut2+6.928203230275509*f[2]*dv*vcut+(3.464101615137754*f[2]-3.0*f[7])*dv2)*wv)*zVal+6.928203230275509*f[3]*wv3+((-13.85640646055102*f[3]*vcut)-4.0*f[0]*dv)*wv2+(6.928203230275509*f[3]*vcut2+4.0*f[0]*dv*vcut+(2.0*f[0]-1.732050807568877*f[3])*dv2)*wv))/dv2; 
  uhat[1] = (0.5*((12.0*f[11]*wv3+((-24.0*f[11]*vcut)-6.928203230275509*f[5]*dv)*wv2+(12.0*f[11]*vcut2+6.928203230275509*f[5]*dv*vcut+(3.464101615137754*f[5]-3.0*f[11])*dv2)*wv)*zVal+6.928203230275509*f[6]*wv3+((-13.85640646055102*f[6]*vcut)-4.0*f[1]*dv)*wv2+(6.928203230275509*f[6]*vcut2+4.0*f[1]*dv*vcut+(2.0*f[1]-1.732050807568877*f[6])*dv2)*wv))/dv2; 
  uhat[2] = 0.0; 
  uhat[3] = 0.0; 
  } else {
  uhat[0] = -(0.5*((12.0*f[7]*wv3+(24.0*f[7]*vcut-6.928203230275509*f[2]*dv)*wv2+(12.0*f[7]*vcut2-6.928203230275509*f[2]*dv*vcut+((-3.0*f[7])-3.464101615137754*f[2])*dv2)*wv)*zVal+6.928203230275509*f[3]*wv3+(13.85640646055102*f[3]*vcut-4.0*f[0]*dv)*wv2+(6.928203230275509*f[3]*vcut2-4.0*f[0]*dv*vcut+((-1.732050807568877*f[3])-2.0*f[0])*dv2)*wv))/dv2; 
  uhat[1] = -(0.5*((12.0*f[11]*wv3+(24.0*f[11]*vcut-6.928203230275509*f[5]*dv)*wv2+(12.0*f[11]*vcut2-6.928203230275509*f[5]*dv*vcut+((-3.0*f[11])-3.464101615137754*f[5])*dv2)*wv)*zVal+6.928203230275509*f[6]*wv3+(13.85640646055102*f[6]*vcut-4.0*f[1]*dv)*wv2+(6.928203230275509*f[6]*vcut2-4.0*f[1]*dv*vcut+((-1.732050807568877*f[6])-2.0*f[1])*dv2)*wv))/dv2; 
  uhat[2] = 0.0; 
  uhat[3] = 0.0; 
  }

  // calculate c = uhat/u 
  CartFieldBinOpDivide2xSer_P1(u, uhat, 1, 1, c); 
  // calculate fhat = c*f 
  CartFieldBinOpMultiply2x2vSer_P1(c, f, 1, 1, fhat); 
  // account for rare positivity issues 
  if (fhat[0]<0) {
    if(wv > 0) {
      double alpha = ((-wv)+vcut+dv/2)/dv; 
      for(int k=0; k<16; k++) { 
        fhat[k] = alpha*f[k]; 
      } 
    } else {
      double alpha = (wv+vcut+dv/2)/dv; 
      for(int k=0; k<16; k++) { 
        fhat[k] = alpha*f[k]; 
      } 
    } 
  } 

} 

double calcSheathDeltaPhi2xSer_P2(const double *phi, const double *phiWall, const double zVal) 
{ 
  double zVal2 = zVal*zVal; 
  return 1.677050983124842*phi[5]*(zVal2-0.3333333333333333)-0.9682458365518543*phi[6]*zVal+0.8660254037844386*phi[2]*zVal+0.5590169943749475*phiWall[5]+0.5590169943749475*phiWall[4]-0.5590169943749475*phi[4]-0.5*phiWall[0]+0.5*phi[0]; 
}

void calcSheathPartialReflectionScaled2x2vSer_P2(const double wv, const double dv, const double zVal, const double vcut, const double *f, double *fhat) 
{ 
  double u[8]; 
  double uhat[8]; 
  double c[8]; 
  double zVal2 = zVal*zVal; 
  double wv2 = wv*wv; 
  double wv3 = wv2*wv; 
  double wv4 = wv3*wv; 
  double wv5 = wv4*wv; 
  double dv2 = dv*dv; 
  double dv3 = dv2*dv; 
  double dv4 = dv3*dv; 
  double dv5 = dv4*dv; 
  double vcut2 = vcut*vcut; 
  double vcut3 = vcut2*vcut; 
  double vcut4 = vcut3*vcut; 
  double vcut5 = vcut4*vcut; 
  u[0] = 0.1666666666666667*((40.24922359499622*f[12]*wv+11.61895003862225*f[22]*dv)*zVal2+(20.78460969082652*f[2]*wv+6.0*f[7]*dv)*zVal+(12.0*f[0]-13.41640786499874*f[12])*wv+(3.464101615137754*f[3]-3.872983346207417*f[22])*dv); 
  u[1] = 0.1666666666666667*((40.24922359499621*f[20]*wv+11.61895003862225*f[33]*dv)*zVal2+(20.78460969082652*f[5]*wv+6.0*f[15]*dv)*zVal+(12.0*f[1]-13.41640786499874*f[20])*wv+(3.464101615137754*f[6]-3.872983346207417*f[33])*dv); 
  u[2] = 0.0; 
  u[3] = 0.0; 
  u[4] = 0.06666666666666667*((51.96152422706632*f[19]*wv+15.0*f[32]*dv)*zVal+30.0*f[11]*wv+8.660254037844387*f[21]*dv); 
  u[5] = 0.0; 
  u[6] = 0.0; 
  u[7] = 0.0; 
  if(wv > 0) {
  uhat[0] = (0.02083333333333333*((185.903200617956*f[22]*dv*wv3-160.9968943799849*f[12]*dv2*wv2+((160.9968943799849*f[12]-139.427400463467*f[22])*dv3-557.7096018538681*f[22]*dv*vcut2)*wv+371.8064012359121*f[22]*dv*vcut3+160.9968943799849*f[12]*dv2*vcut2+(46.47580015448901*f[22]-40.24922359499622*f[12])*dv4)*zVal2+((-185.903200617956*f[24]*wv4)+96.0*f[7]*dv*wv3+(1115.419203707736*f[24]*vcut2+(92.95160030897802*f[24]-83.1384387633061*f[2])*dv2)*wv2+((-1487.225604943648*f[24]*vcut3)-288.0*f[7]*dv*vcut2+(83.1384387633061*f[2]-72.0*f[7])*dv3)*wv+557.7096018538681*f[24]*vcut4+192.0*f[7]*dv*vcut3+(83.1384387633061*f[2]-92.95160030897802*f[24])*dv2*vcut2+((-11.61895003862225*f[24])+24.0*f[7]-20.78460969082652*f[2])*dv4)*zVal-107.3312629199899*f[13]*wv4+(55.42562584220407*f[3]-61.96773353931867*f[22])*dv*wv3+(643.9875775199395*f[13]*vcut2+(53.66563145999496*f[13]+53.66563145999496*f[12]-48.0*f[0])*dv2)*wv2+((-858.6501033599193*f[13]*vcut3)+(185.903200617956*f[22]-166.2768775266122*f[3])*dv*vcut2+(46.47580015448901*f[22]-53.66563145999496*f[12]-41.56921938165305*f[3]+48.0*f[0])*dv3)*wv+321.9937887599697*f[13]*vcut4+(110.8512516844081*f[3]-123.9354670786373*f[22])*dv*vcut3+((-53.66563145999496*f[13])-53.66563145999496*f[12]+48.0*f[0])*dv2*vcut2+((-15.49193338482967*f[22])-6.708203932499369*f[13]+13.41640786499874*f[12]+13.85640646055102*f[3]-12.0*f[0])*dv4))/dv3; 
  uhat[1] = (0.02083333333333333*((185.903200617956*f[33]*dv*wv3-160.9968943799848*f[20]*dv2*wv2+((160.9968943799848*f[20]-139.427400463467*f[33])*dv3-557.7096018538679*f[33]*dv*vcut2)*wv+371.806401235912*f[33]*dv*vcut3+160.9968943799848*f[20]*dv2*vcut2+(46.475800154489*f[33]-40.24922359499621*f[20])*dv4)*zVal2+((-185.903200617956*f[34]*wv4)+96.0*f[15]*dv*wv3+(1115.419203707736*f[34]*vcut2+(92.951600308978*f[34]-83.1384387633061*f[5])*dv2)*wv2+((-1487.225604943648*f[34]*vcut3)-288.0*f[15]*dv*vcut2+(83.1384387633061*f[5]-72.0*f[15])*dv3)*wv+557.7096018538679*f[34]*vcut4+192.0*f[15]*dv*vcut3+(83.1384387633061*f[5]-92.951600308978*f[34])*dv2*vcut2+((-11.61895003862225*f[34])+24.0*f[15]-20.78460969082652*f[5])*dv4)*zVal-107.3312629199899*f[23]*wv4+(55.42562584220407*f[6]-61.96773353931867*f[33])*dv*wv3+(643.9875775199394*f[23]*vcut2+(53.66563145999495*f[23]+53.66563145999495*f[20]-48.0*f[1])*dv2)*wv2+((-858.6501033599192*f[23]*vcut3)+(185.903200617956*f[33]-166.2768775266122*f[6])*dv*vcut2+(46.475800154489*f[33]-53.66563145999495*f[20]-41.56921938165305*f[6]+48.0*f[1])*dv3)*wv+321.9937887599697*f[23]*vcut4+(110.8512516844081*f[6]-123.9354670786373*f[33])*dv*vcut3+((-53.66563145999495*f[23])-53.66563145999495*f[20]+48.0*f[1])*dv2*vcut2+((-15.49193338482967*f[33])-6.708203932499369*f[23]+13.41640786499874*f[20]+13.85640646055102*f[6]-12.0*f[1])*dv4))/dv3; 
  uhat[2] = 0.0; 
  uhat[3] = 0.0; 
  uhat[4] = (0.01666666666666667*((120.0*f[32]*wv3-103.9230484541326*f[19]*dv*wv2+((103.9230484541326*f[19]-90.0*f[32])*dv2-360.0*f[32]*vcut2)*wv+240.0*f[32]*vcut3+103.9230484541326*f[19]*dv*vcut2+(30.0*f[32]-25.98076211353316*f[19])*dv3)*zVal+69.2820323027551*f[21]*wv3-60.0*f[11]*dv*wv2+((60.0*f[11]-51.96152422706632*f[21])*dv2-207.8460969082653*f[21]*vcut2)*wv+138.5640646055102*f[21]*vcut3+60.0*f[11]*dv*vcut2+(17.32050807568877*f[21]-15.0*f[11])*dv3))/dv2; 
  uhat[5] = 0.0; 
  uhat[6] = 0.0; 
  uhat[7] = 0.0; 
  } else {
  uhat[0] = -(0.02083333333333333*((185.903200617956*f[22]*dv*wv3-160.9968943799849*f[12]*dv2*wv2+(((-139.427400463467*f[22])-160.9968943799849*f[12])*dv3-557.7096018538681*f[22]*dv*vcut2)*wv-371.8064012359121*f[22]*dv*vcut3+160.9968943799849*f[12]*dv2*vcut2+((-46.47580015448901*f[22])-40.24922359499622*f[12])*dv4)*zVal2+((-185.903200617956*f[24]*wv4)+96.0*f[7]*dv*wv3+(1115.419203707736*f[24]*vcut2+(92.95160030897802*f[24]-83.1384387633061*f[2])*dv2)*wv2+(1487.225604943648*f[24]*vcut3-288.0*f[7]*dv*vcut2+((-72.0*f[7])-83.1384387633061*f[2])*dv3)*wv+557.7096018538681*f[24]*vcut4-192.0*f[7]*dv*vcut3+(83.1384387633061*f[2]-92.95160030897802*f[24])*dv2*vcut2+((-11.61895003862225*f[24])-24.0*f[7]-20.78460969082652*f[2])*dv4)*zVal-107.3312629199899*f[13]*wv4+(55.42562584220407*f[3]-61.96773353931867*f[22])*dv*wv3+(643.9875775199395*f[13]*vcut2+(53.66563145999496*f[13]+53.66563145999496*f[12]-48.0*f[0])*dv2)*wv2+(858.6501033599193*f[13]*vcut3+(185.903200617956*f[22]-166.2768775266122*f[3])*dv*vcut2+(46.47580015448901*f[22]+53.66563145999496*f[12]-41.56921938165305*f[3]-48.0*f[0])*dv3)*wv+321.9937887599697*f[13]*vcut4+(123.9354670786373*f[22]-110.8512516844081*f[3])*dv*vcut3+((-53.66563145999496*f[13])-53.66563145999496*f[12]+48.0*f[0])*dv2*vcut2+(15.49193338482967*f[22]-6.708203932499369*f[13]+13.41640786499874*f[12]-13.85640646055102*f[3]-12.0*f[0])*dv4))/dv3; 
  uhat[1] = -(0.02083333333333333*((185.903200617956*f[33]*dv*wv3-160.9968943799848*f[20]*dv2*wv2+(((-139.427400463467*f[33])-160.9968943799848*f[20])*dv3-557.7096018538679*f[33]*dv*vcut2)*wv-371.806401235912*f[33]*dv*vcut3+160.9968943799848*f[20]*dv2*vcut2+((-46.475800154489*f[33])-40.24922359499621*f[20])*dv4)*zVal2+((-185.903200617956*f[34]*wv4)+96.0*f[15]*dv*wv3+(1115.419203707736*f[34]*vcut2+(92.951600308978*f[34]-83.1384387633061*f[5])*dv2)*wv2+(1487.225604943648*f[34]*vcut3-288.0*f[15]*dv*vcut2+((-72.0*f[15])-83.1384387633061*f[5])*dv3)*wv+557.7096018538679*f[34]*vcut4-192.0*f[15]*dv*vcut3+(83.1384387633061*f[5]-92.951600308978*f[34])*dv2*vcut2+((-11.61895003862225*f[34])-24.0*f[15]-20.78460969082652*f[5])*dv4)*zVal-107.3312629199899*f[23]*wv4+(55.42562584220407*f[6]-61.96773353931867*f[33])*dv*wv3+(643.9875775199394*f[23]*vcut2+(53.66563145999495*f[23]+53.66563145999495*f[20]-48.0*f[1])*dv2)*wv2+(858.6501033599192*f[23]*vcut3+(185.903200617956*f[33]-166.2768775266122*f[6])*dv*vcut2+(46.475800154489*f[33]+53.66563145999495*f[20]-41.56921938165305*f[6]-48.0*f[1])*dv3)*wv+321.9937887599697*f[23]*vcut4+(123.9354670786373*f[33]-110.8512516844081*f[6])*dv*vcut3+((-53.66563145999495*f[23])-53.66563145999495*f[20]+48.0*f[1])*dv2*vcut2+(15.49193338482967*f[33]-6.708203932499369*f[23]+13.41640786499874*f[20]-13.85640646055102*f[6]-12.0*f[1])*dv4))/dv3; 
  uhat[2] = 0.0; 
  uhat[3] = 0.0; 
  uhat[4] = -(0.01666666666666667*((120.0*f[32]*wv3-103.9230484541326*f[19]*dv*wv2+(((-90.0*f[32])-103.9230484541326*f[19])*dv2-360.0*f[32]*vcut2)*wv-240.0*f[32]*vcut3+103.9230484541326*f[19]*dv*vcut2+((-30.0*f[32])-25.98076211353316*f[19])*dv3)*zVal+69.2820323027551*f[21]*wv3-60.0*f[11]*dv*wv2+(((-51.96152422706632*f[21])-60.0*f[11])*dv2-207.8460969082653*f[21]*vcut2)*wv-138.5640646055102*f[21]*vcut3+60.0*f[11]*dv*vcut2+((-17.32050807568877*f[21])-15.0*f[11])*dv3))/dv2; 
  uhat[5] = 0.0; 
  uhat[6] = 0.0; 
  uhat[7] = 0.0; 
  }

  // calculate c = uhat/u 
  CartFieldBinOpDivide2xSer_P2(u, uhat, 1, 1, c); 
  // calculate fhat = c*f 
  CartFieldBinOpMultiply2x2vSer_P2(c, f, 1, 1, fhat); 
  // account for rare positivity issues 
  if (fhat[0]<0) {
    if(wv > 0) {
      double alpha = ((-wv)+vcut+dv/2)/dv; 
      for(int k=0; k<48; k++) { 
        fhat[k] = alpha*f[k]; 
      } 
    } else {
      double alpha = (wv+vcut+dv/2)/dv; 
      for(int k=0; k<48; k++) { 
        fhat[k] = alpha*f[k]; 
      } 
    } 
  } 

} 

double calcSheathDeltaPhi3xSer_P1(const double *phi, const double *phiWall, const double zVal) 
{ 
  return 0.6123724356957944*phi[3]*zVal-0.3535533905932737*phiWall[0]+0.3535533905932737*phi[0]; 
}

void calcSheathPartialReflectionScaled3x2vSer_P1(const double wv, const double dv, const double zVal, const double vcut, const double *f, double *fhat) 
{ 
  double u[8]; 
  double uhat[8]; 
  double c[8]; 
  double zVal2 = zVal*zVal; 
  double wv2 = wv*wv; 
  double wv3 = wv2*wv; 
  double wv4 = wv3*wv; 
  double wv5 = wv4*wv; 
  double dv2 = dv*dv; 
  double dv3 = dv2*dv; 
  double dv4 = dv3*dv; 
  double dv5 = dv4*dv; 
  double vcut2 = vcut*vcut; 
  double vcut3 = vcut2*vcut; 
  double vcut4 = vcut3*vcut; 
  double vcut5 = vcut4*vcut; 
  u[0] = 3.464101615137754*f[3]*wv*zVal+2.0*f[0]*wv; 
  u[1] = 3.464101615137754*f[7]*wv*zVal+2.0*f[1]*wv; 
  u[2] = 3.464101615137754*f[8]*wv*zVal+2.0*f[2]*wv; 
  u[3] = 0.0; 
  u[4] = 3.464101615137754*f[16]*wv*zVal+2.0*f[6]*wv; 
  u[5] = 0.0; 
  u[6] = 0.0; 
  u[7] = 0.0; 
  if(wv > 0) {
  uhat[0] = (0.5*((12.0*f[11]*wv3+((-24.0*f[11]*vcut)-6.928203230275509*f[3]*dv)*wv2+(12.0*f[11]*vcut2+6.928203230275509*f[3]*dv*vcut+(3.464101615137754*f[3]-3.0*f[11])*dv2)*wv)*zVal+6.928203230275509*f[4]*wv3+((-13.85640646055102*f[4]*vcut)-4.0*f[0]*dv)*wv2+(6.928203230275509*f[4]*vcut2+4.0*f[0]*dv*vcut+(2.0*f[0]-1.732050807568877*f[4])*dv2)*wv))/dv2; 
  uhat[1] = (0.5*((12.0*f[18]*wv3+((-24.0*f[18]*vcut)-6.928203230275509*f[7]*dv)*wv2+(12.0*f[18]*vcut2+6.928203230275509*f[7]*dv*vcut+(3.464101615137754*f[7]-3.0*f[18])*dv2)*wv)*zVal+6.928203230275509*f[9]*wv3+((-13.85640646055102*f[9]*vcut)-4.0*f[1]*dv)*wv2+(6.928203230275509*f[9]*vcut2+4.0*f[1]*dv*vcut+(2.0*f[1]-1.732050807568877*f[9])*dv2)*wv))/dv2; 
  uhat[2] = (0.5*((12.0*f[19]*wv3+((-24.0*f[19]*vcut)-6.928203230275509*f[8]*dv)*wv2+(12.0*f[19]*vcut2+6.928203230275509*f[8]*dv*vcut+(3.464101615137754*f[8]-3.0*f[19])*dv2)*wv)*zVal+6.928203230275509*f[10]*wv3+((-13.85640646055102*f[10]*vcut)-4.0*f[2]*dv)*wv2+(6.928203230275509*f[10]*vcut2+4.0*f[2]*dv*vcut+(2.0*f[2]-1.732050807568877*f[10])*dv2)*wv))/dv2; 
  uhat[3] = 0.0; 
  uhat[4] = (0.5*((12.0*f[26]*wv3+((-24.0*f[26]*vcut)-6.928203230275509*f[16]*dv)*wv2+(12.0*f[26]*vcut2+6.928203230275509*f[16]*dv*vcut+(3.464101615137754*f[16]-3.0*f[26])*dv2)*wv)*zVal+6.928203230275509*f[17]*wv3+((-13.85640646055102*f[17]*vcut)-4.0*f[6]*dv)*wv2+(6.928203230275509*f[17]*vcut2+4.0*f[6]*dv*vcut+(2.0*f[6]-1.732050807568877*f[17])*dv2)*wv))/dv2; 
  uhat[5] = 0.0; 
  uhat[6] = 0.0; 
  uhat[7] = 0.0; 
  } else {
  uhat[0] = -(0.5*((12.0*f[11]*wv3+(24.0*f[11]*vcut-6.928203230275509*f[3]*dv)*wv2+(12.0*f[11]*vcut2-6.928203230275509*f[3]*dv*vcut+((-3.0*f[11])-3.464101615137754*f[3])*dv2)*wv)*zVal+6.928203230275509*f[4]*wv3+(13.85640646055102*f[4]*vcut-4.0*f[0]*dv)*wv2+(6.928203230275509*f[4]*vcut2-4.0*f[0]*dv*vcut+((-1.732050807568877*f[4])-2.0*f[0])*dv2)*wv))/dv2; 
  uhat[1] = -(0.5*((12.0*f[18]*wv3+(24.0*f[18]*vcut-6.928203230275509*f[7]*dv)*wv2+(12.0*f[18]*vcut2-6.928203230275509*f[7]*dv*vcut+((-3.0*f[18])-3.464101615137754*f[7])*dv2)*wv)*zVal+6.928203230275509*f[9]*wv3+(13.85640646055102*f[9]*vcut-4.0*f[1]*dv)*wv2+(6.928203230275509*f[9]*vcut2-4.0*f[1]*dv*vcut+((-1.732050807568877*f[9])-2.0*f[1])*dv2)*wv))/dv2; 
  uhat[2] = -(0.5*((12.0*f[19]*wv3+(24.0*f[19]*vcut-6.928203230275509*f[8]*dv)*wv2+(12.0*f[19]*vcut2-6.928203230275509*f[8]*dv*vcut+((-3.0*f[19])-3.464101615137754*f[8])*dv2)*wv)*zVal+6.928203230275509*f[10]*wv3+(13.85640646055102*f[10]*vcut-4.0*f[2]*dv)*wv2+(6.928203230275509*f[10]*vcut2-4.0*f[2]*dv*vcut+((-1.732050807568877*f[10])-2.0*f[2])*dv2)*wv))/dv2; 
  uhat[3] = 0.0; 
  uhat[4] = -(0.5*((12.0*f[26]*wv3+(24.0*f[26]*vcut-6.928203230275509*f[16]*dv)*wv2+(12.0*f[26]*vcut2-6.928203230275509*f[16]*dv*vcut+((-3.0*f[26])-3.464101615137754*f[16])*dv2)*wv)*zVal+6.928203230275509*f[17]*wv3+(13.85640646055102*f[17]*vcut-4.0*f[6]*dv)*wv2+(6.928203230275509*f[17]*vcut2-4.0*f[6]*dv*vcut+((-1.732050807568877*f[17])-2.0*f[6])*dv2)*wv))/dv2; 
  uhat[5] = 0.0; 
  uhat[6] = 0.0; 
  uhat[7] = 0.0; 
  }

  // calculate c = uhat/u 
  CartFieldBinOpDivide3xSer_P1(u, uhat, 1, 1, c); 
  // calculate fhat = c*f 
  CartFieldBinOpMultiply3x2vSer_P1(c, f, 1, 1, fhat); 
  // account for rare positivity issues 
  if (fhat[0]<0) {
    if(wv > 0) {
      double alpha = ((-wv)+vcut+dv/2)/dv; 
      for(int k=0; k<32; k++) { 
        fhat[k] = alpha*f[k]; 
      } 
    } else {
      double alpha = (wv+vcut+dv/2)/dv; 
      for(int k=0; k<32; k++) { 
        fhat[k] = alpha*f[k]; 
      } 
    } 
  } 

} 

double calcSheathDeltaPhi3xSer_P2(const double *phi, const double *phiWall, const double zVal) 
{ 
  double zVal2 = zVal*zVal; 
  return 1.185854122563142*phi[9]*(zVal2-0.3333333333333333)-0.6846531968814574*phi[14]*zVal-0.6846531968814574*phi[13]*zVal+0.6123724356957944*phi[3]*zVal+0.3952847075210473*phiWall[9]+0.3952847075210473*phiWall[8]-0.3952847075210473*phi[8]+0.3952847075210473*phiWall[7]-0.3952847075210473*phi[7]-0.3535533905932737*phiWall[0]+0.3535533905932737*phi[0]; 
}

void calcSheathPartialReflectionScaled3x2vSer_P2(const double wv, const double dv, const double zVal, const double vcut, const double *f, double *fhat) 
{ 
  double u[20]; 
  double uhat[20]; 
  double c[20]; 
  double zVal2 = zVal*zVal; 
  double wv2 = wv*wv; 
  double wv3 = wv2*wv; 
  double wv4 = wv3*wv; 
  double wv5 = wv4*wv; 
  double dv2 = dv*dv; 
  double dv3 = dv2*dv; 
  double dv4 = dv3*dv; 
  double dv5 = dv4*dv; 
  double vcut2 = vcut*vcut; 
  double vcut3 = vcut2*vcut; 
  double vcut4 = vcut3*vcut; 
  double vcut5 = vcut4*vcut; 
  u[0] = 0.1666666666666667*((40.24922359499622*f[18]*wv+11.61895003862225*f[39]*dv)*zVal2+(20.78460969082652*f[3]*wv+6.0*f[11]*dv)*zVal+(12.0*f[0]-13.41640786499874*f[18])*wv+(3.464101615137754*f[4]-3.872983346207417*f[39])*dv); 
  u[1] = 0.1666666666666667*((40.24922359499621*f[35]*wv+11.61895003862225*f[63]*dv)*zVal2+(20.78460969082652*f[7]*wv+6.0*f[23]*dv)*zVal+(12.0*f[1]-13.41640786499874*f[35])*wv+(3.464101615137754*f[9]-3.872983346207417*f[63])*dv); 
  u[2] = 0.1666666666666667*((40.24922359499621*f[36]*wv+11.61895003862225*f[64]*dv)*zVal2+(20.78460969082652*f[8]*wv+6.0*f[24]*dv)*zVal+(12.0*f[2]-13.41640786499874*f[36])*wv+(3.464101615137754*f[10]-3.872983346207417*f[64])*dv); 
  u[3] = 0.0; 
  u[4] = 0.1666666666666667*((40.24922359499622*f[58]*wv+11.61895003862225*f[89]*dv)*zVal2+(20.78460969082652*f[21]*wv+6.0*f[51]*dv)*zVal+(12.0*f[6]-13.41640786499874*f[58])*wv+(3.464101615137754*f[22]-3.872983346207417*f[89])*dv); 
  u[5] = 0.0; 
  u[6] = 0.0; 
  u[7] = 0.06666666666666667*((51.96152422706632*f[33]*wv+15.0*f[61]*dv)*zVal+30.0*f[16]*wv+8.660254037844387*f[37]*dv); 
  u[8] = 0.06666666666666667*((51.96152422706632*f[34]*wv+15.0*f[62]*dv)*zVal+30.0*f[17]*wv+8.660254037844387*f[38]*dv); 
  u[9] = 0.0; 
  u[10] = 0.0; 
  u[11] = 0.06666666666666667*((51.96152422706632*f[56]*wv+15.0*f[87]*dv)*zVal+30.0*f[31]*wv+8.660254037844387*f[59]*dv); 
  u[12] = 0.06666666666666667*((51.96152422706632*f[57]*wv+15.0*f[88]*dv)*zVal+30.0*f[32]*wv+8.660254037844387*f[60]*dv); 
  u[13] = 0.0; 
  u[14] = 0.0; 
  u[15] = 0.0; 
  u[16] = 0.0; 
  u[17] = 0.0; 
  u[18] = 0.0; 
  u[19] = 0.0; 
  if(wv > 0) {
  uhat[0] = (0.02083333333333333*((185.903200617956*f[39]*dv*wv3-160.9968943799849*f[18]*dv2*wv2+((160.9968943799849*f[18]-139.427400463467*f[39])*dv3-557.7096018538681*f[39]*dv*vcut2)*wv+371.8064012359121*f[39]*dv*vcut3+160.9968943799849*f[18]*dv2*vcut2+(46.47580015448901*f[39]-40.24922359499622*f[18])*dv4)*zVal2+((-185.903200617956*f[42]*wv4)+96.0*f[11]*dv*wv3+(1115.419203707736*f[42]*vcut2+(92.95160030897802*f[42]-83.1384387633061*f[3])*dv2)*wv2+((-1487.225604943648*f[42]*vcut3)-288.0*f[11]*dv*vcut2+(83.1384387633061*f[3]-72.0*f[11])*dv3)*wv+557.7096018538681*f[42]*vcut4+192.0*f[11]*dv*vcut3+(83.1384387633061*f[3]-92.95160030897802*f[42])*dv2*vcut2+((-11.61895003862225*f[42])+24.0*f[11]-20.78460969082652*f[3])*dv4)*zVal-107.3312629199899*f[19]*wv4+(55.42562584220407*f[4]-61.96773353931867*f[39])*dv*wv3+(643.9875775199395*f[19]*vcut2+(53.66563145999496*f[19]+53.66563145999496*f[18]-48.0*f[0])*dv2)*wv2+((-858.6501033599193*f[19]*vcut3)+(185.903200617956*f[39]-166.2768775266122*f[4])*dv*vcut2+(46.47580015448901*f[39]-53.66563145999496*f[18]-41.56921938165305*f[4]+48.0*f[0])*dv3)*wv+321.9937887599697*f[19]*vcut4+(110.8512516844081*f[4]-123.9354670786373*f[39])*dv*vcut3+((-53.66563145999496*f[19])-53.66563145999496*f[18]+48.0*f[0])*dv2*vcut2+((-15.49193338482967*f[39])-6.708203932499369*f[19]+13.41640786499874*f[18]+13.85640646055102*f[4]-12.0*f[0])*dv4))/dv3; 
  uhat[1] = (0.02083333333333333*((185.903200617956*f[63]*dv*wv3-160.9968943799848*f[35]*dv2*wv2+((160.9968943799848*f[35]-139.427400463467*f[63])*dv3-557.7096018538679*f[63]*dv*vcut2)*wv+371.806401235912*f[63]*dv*vcut3+160.9968943799848*f[35]*dv2*vcut2+(46.475800154489*f[63]-40.24922359499621*f[35])*dv4)*zVal2+((-185.903200617956*f[66]*wv4)+96.0*f[23]*dv*wv3+(1115.419203707736*f[66]*vcut2+(92.951600308978*f[66]-83.1384387633061*f[7])*dv2)*wv2+((-1487.225604943648*f[66]*vcut3)-288.0*f[23]*dv*vcut2+(83.1384387633061*f[7]-72.0*f[23])*dv3)*wv+557.7096018538679*f[66]*vcut4+192.0*f[23]*dv*vcut3+(83.1384387633061*f[7]-92.951600308978*f[66])*dv2*vcut2+((-11.61895003862225*f[66])+24.0*f[23]-20.78460969082652*f[7])*dv4)*zVal-107.3312629199899*f[40]*wv4+(55.42562584220407*f[9]-61.96773353931867*f[63])*dv*wv3+(643.9875775199394*f[40]*vcut2+(53.66563145999495*f[40]+53.66563145999495*f[35]-48.0*f[1])*dv2)*wv2+((-858.6501033599192*f[40]*vcut3)+(185.903200617956*f[63]-166.2768775266122*f[9])*dv*vcut2+(46.475800154489*f[63]-53.66563145999495*f[35]-41.56921938165305*f[9]+48.0*f[1])*dv3)*wv+321.9937887599697*f[40]*vcut4+(110.8512516844081*f[9]-123.9354670786373*f[63])*dv*vcut3+((-53.66563145999495*f[40])-53.66563145999495*f[35]+48.0*f[1])*dv2*vcut2+((-15.49193338482967*f[63])-6.708203932499369*f[40]+13.41640786499874*f[35]+13.85640646055102*f[9]-12.0*f[1])*dv4))/dv3; 
  uhat[2] = (0.02083333333333333*((185.903200617956*f[64]*dv*wv3-160.9968943799848*f[36]*dv2*wv2+((160.9968943799848*f[36]-139.427400463467*f[64])*dv3-557.7096018538679*f[64]*dv*vcut2)*wv+371.806401235912*f[64]*dv*vcut3+160.9968943799848*f[36]*dv2*vcut2+(46.475800154489*f[64]-40.24922359499621*f[36])*dv4)*zVal2+((-185.903200617956*f[67]*wv4)+96.0*f[24]*dv*wv3+(1115.419203707736*f[67]*vcut2+(92.951600308978*f[67]-83.1384387633061*f[8])*dv2)*wv2+((-1487.225604943648*f[67]*vcut3)-288.0*f[24]*dv*vcut2+(83.1384387633061*f[8]-72.0*f[24])*dv3)*wv+557.7096018538679*f[67]*vcut4+192.0*f[24]*dv*vcut3+(83.1384387633061*f[8]-92.951600308978*f[67])*dv2*vcut2+((-11.61895003862225*f[67])+24.0*f[24]-20.78460969082652*f[8])*dv4)*zVal-107.3312629199899*f[41]*wv4+(55.42562584220407*f[10]-61.96773353931867*f[64])*dv*wv3+(643.9875775199394*f[41]*vcut2+(53.66563145999495*f[41]+53.66563145999495*f[36]-48.0*f[2])*dv2)*wv2+((-858.6501033599192*f[41]*vcut3)+(185.903200617956*f[64]-166.2768775266122*f[10])*dv*vcut2+(46.475800154489*f[64]-53.66563145999495*f[36]-41.56921938165305*f[10]+48.0*f[2])*dv3)*wv+321.9937887599697*f[41]*vcut4+(110.8512516844081*f[10]-123.9354670786373*f[64])*dv*vcut3+((-53.66563145999495*f[41])-53.66563145999495*f[36]+48.0*f[2])*dv2*vcut2+((-15.49193338482967*f[64])-6.708203932499369*f[41]+13.41640786499874*f[36]+13.85640646055102*f[10]-12.0*f[2])*dv4))/dv3; 
  uhat[3] = 0.0; 
  uhat[4] = (0.02083333333333333*((185.903200617956*f[89]*dv*wv3-160.9968943799849*f[58]*dv2*wv2+((160.9968943799849*f[58]-139.427400463467*f[89])*dv3-557.7096018538681*f[89]*dv*vcut2)*wv+371.8064012359121*f[89]*dv*vcut3+160.9968943799849*f[58]*dv2*vcut2+(46.47580015448901*f[89]-40.24922359499622*f[58])*dv4)*zVal2+((-185.903200617956*f[90]*wv4)+96.0*f[51]*dv*wv3+(1115.419203707736*f[90]*vcut2+(92.95160030897802*f[90]-83.1384387633061*f[21])*dv2)*wv2+((-1487.225604943648*f[90]*vcut3)-288.0*f[51]*dv*vcut2+(83.1384387633061*f[21]-72.0*f[51])*dv3)*wv+557.7096018538681*f[90]*vcut4+192.0*f[51]*dv*vcut3+(83.1384387633061*f[21]-92.95160030897802*f[90])*dv2*vcut2+((-11.61895003862225*f[90])+24.0*f[51]-20.78460969082652*f[21])*dv4)*zVal-107.3312629199899*f[65]*wv4+(55.42562584220407*f[22]-61.96773353931867*f[89])*dv*wv3+(643.9875775199395*f[65]*vcut2+(53.66563145999496*f[65]+53.66563145999496*f[58]-48.0*f[6])*dv2)*wv2+((-858.6501033599193*f[65]*vcut3)+(185.903200617956*f[89]-166.2768775266122*f[22])*dv*vcut2+(46.47580015448901*f[89]-53.66563145999496*f[58]-41.56921938165305*f[22]+48.0*f[6])*dv3)*wv+321.9937887599697*f[65]*vcut4+(110.8512516844081*f[22]-123.9354670786373*f[89])*dv*vcut3+((-53.66563145999496*f[65])-53.66563145999496*f[58]+48.0*f[6])*dv2*vcut2+((-15.49193338482967*f[89])-6.708203932499369*f[65]+13.41640786499874*f[58]+13.85640646055102*f[22]-12.0*f[6])*dv4))/dv3; 
  uhat[5] = 0.0; 
  uhat[6] = 0.0; 
  uhat[7] = (0.01666666666666667*((120.0*f[61]*wv3-103.9230484541326*f[33]*dv*wv2+((103.9230484541326*f[33]-90.0*f[61])*dv2-360.0*f[61]*vcut2)*wv+240.0*f[61]*vcut3+103.9230484541326*f[33]*dv*vcut2+(30.0*f[61]-25.98076211353316*f[33])*dv3)*zVal+69.2820323027551*f[37]*wv3-60.0*f[16]*dv*wv2+((60.0*f[16]-51.96152422706632*f[37])*dv2-207.8460969082653*f[37]*vcut2)*wv+138.5640646055102*f[37]*vcut3+60.0*f[16]*dv*vcut2+(17.32050807568877*f[37]-15.0*f[16])*dv3))/dv2; 
  uhat[8] = (0.01666666666666667*((120.0*f[62]*wv3-103.9230484541326*f[34]*dv*wv2+((103.9230484541326*f[34]-90.0*f[62])*dv2-360.0*f[62]*vcut2)*wv+240.0*f[62]*vcut3+103.9230484541326*f[34]*dv*vcut2+(30.0*f[62]-25.98076211353316*f[34])*dv3)*zVal+69.2820323027551*f[38]*wv3-60.0*f[17]*dv*wv2+((60.0*f[17]-51.96152422706632*f[38])*dv2-207.8460969082653*f[38]*vcut2)*wv+138.5640646055102*f[38]*vcut3+60.0*f[17]*dv*vcut2+(17.32050807568877*f[38]-15.0*f[17])*dv3))/dv2; 
  uhat[9] = 0.0; 
  uhat[10] = 0.0; 
  uhat[11] = (0.01666666666666667*((120.0*f[87]*wv3-103.9230484541326*f[56]*dv*wv2+((103.9230484541326*f[56]-90.0*f[87])*dv2-360.0*f[87]*vcut2)*wv+240.0*f[87]*vcut3+103.9230484541326*f[56]*dv*vcut2+(30.0*f[87]-25.98076211353316*f[56])*dv3)*zVal+69.2820323027551*f[59]*wv3-60.0*f[31]*dv*wv2+((60.0*f[31]-51.96152422706632*f[59])*dv2-207.8460969082653*f[59]*vcut2)*wv+138.5640646055102*f[59]*vcut3+60.0*f[31]*dv*vcut2+(17.32050807568877*f[59]-15.0*f[31])*dv3))/dv2; 
  uhat[12] = (0.01666666666666667*((120.0*f[88]*wv3-103.9230484541326*f[57]*dv*wv2+((103.9230484541326*f[57]-90.0*f[88])*dv2-360.0*f[88]*vcut2)*wv+240.0*f[88]*vcut3+103.9230484541326*f[57]*dv*vcut2+(30.0*f[88]-25.98076211353316*f[57])*dv3)*zVal+69.2820323027551*f[60]*wv3-60.0*f[32]*dv*wv2+((60.0*f[32]-51.96152422706632*f[60])*dv2-207.8460969082653*f[60]*vcut2)*wv+138.5640646055102*f[60]*vcut3+60.0*f[32]*dv*vcut2+(17.32050807568877*f[60]-15.0*f[32])*dv3))/dv2; 
  uhat[13] = 0.0; 
  uhat[14] = 0.0; 
  uhat[15] = 0.0; 
  uhat[16] = 0.0; 
  uhat[17] = 0.0; 
  uhat[18] = 0.0; 
  uhat[19] = 0.0; 
  } else {
  uhat[0] = -(0.02083333333333333*((185.903200617956*f[39]*dv*wv3-160.9968943799849*f[18]*dv2*wv2+(((-139.427400463467*f[39])-160.9968943799849*f[18])*dv3-557.7096018538681*f[39]*dv*vcut2)*wv-371.8064012359121*f[39]*dv*vcut3+160.9968943799849*f[18]*dv2*vcut2+((-46.47580015448901*f[39])-40.24922359499622*f[18])*dv4)*zVal2+((-185.903200617956*f[42]*wv4)+96.0*f[11]*dv*wv3+(1115.419203707736*f[42]*vcut2+(92.95160030897802*f[42]-83.1384387633061*f[3])*dv2)*wv2+(1487.225604943648*f[42]*vcut3-288.0*f[11]*dv*vcut2+((-72.0*f[11])-83.1384387633061*f[3])*dv3)*wv+557.7096018538681*f[42]*vcut4-192.0*f[11]*dv*vcut3+(83.1384387633061*f[3]-92.95160030897802*f[42])*dv2*vcut2+((-11.61895003862225*f[42])-24.0*f[11]-20.78460969082652*f[3])*dv4)*zVal-107.3312629199899*f[19]*wv4+(55.42562584220407*f[4]-61.96773353931867*f[39])*dv*wv3+(643.9875775199395*f[19]*vcut2+(53.66563145999496*f[19]+53.66563145999496*f[18]-48.0*f[0])*dv2)*wv2+(858.6501033599193*f[19]*vcut3+(185.903200617956*f[39]-166.2768775266122*f[4])*dv*vcut2+(46.47580015448901*f[39]+53.66563145999496*f[18]-41.56921938165305*f[4]-48.0*f[0])*dv3)*wv+321.9937887599697*f[19]*vcut4+(123.9354670786373*f[39]-110.8512516844081*f[4])*dv*vcut3+((-53.66563145999496*f[19])-53.66563145999496*f[18]+48.0*f[0])*dv2*vcut2+(15.49193338482967*f[39]-6.708203932499369*f[19]+13.41640786499874*f[18]-13.85640646055102*f[4]-12.0*f[0])*dv4))/dv3; 
  uhat[1] = -(0.02083333333333333*((185.903200617956*f[63]*dv*wv3-160.9968943799848*f[35]*dv2*wv2+(((-139.427400463467*f[63])-160.9968943799848*f[35])*dv3-557.7096018538679*f[63]*dv*vcut2)*wv-371.806401235912*f[63]*dv*vcut3+160.9968943799848*f[35]*dv2*vcut2+((-46.475800154489*f[63])-40.24922359499621*f[35])*dv4)*zVal2+((-185.903200617956*f[66]*wv4)+96.0*f[23]*dv*wv3+(1115.419203707736*f[66]*vcut2+(92.951600308978*f[66]-83.1384387633061*f[7])*dv2)*wv2+(1487.225604943648*f[66]*vcut3-288.0*f[23]*dv*vcut2+((-72.0*f[23])-83.1384387633061*f[7])*dv3)*wv+557.7096018538679*f[66]*vcut4-192.0*f[23]*dv*vcut3+(83.1384387633061*f[7]-92.951600308978*f[66])*dv2*vcut2+((-11.61895003862225*f[66])-24.0*f[23]-20.78460969082652*f[7])*dv4)*zVal-107.3312629199899*f[40]*wv4+(55.42562584220407*f[9]-61.96773353931867*f[63])*dv*wv3+(643.9875775199394*f[40]*vcut2+(53.66563145999495*f[40]+53.66563145999495*f[35]-48.0*f[1])*dv2)*wv2+(858.6501033599192*f[40]*vcut3+(185.903200617956*f[63]-166.2768775266122*f[9])*dv*vcut2+(46.475800154489*f[63]+53.66563145999495*f[35]-41.56921938165305*f[9]-48.0*f[1])*dv3)*wv+321.9937887599697*f[40]*vcut4+(123.9354670786373*f[63]-110.8512516844081*f[9])*dv*vcut3+((-53.66563145999495*f[40])-53.66563145999495*f[35]+48.0*f[1])*dv2*vcut2+(15.49193338482967*f[63]-6.708203932499369*f[40]+13.41640786499874*f[35]-13.85640646055102*f[9]-12.0*f[1])*dv4))/dv3; 
  uhat[2] = -(0.02083333333333333*((185.903200617956*f[64]*dv*wv3-160.9968943799848*f[36]*dv2*wv2+(((-139.427400463467*f[64])-160.9968943799848*f[36])*dv3-557.7096018538679*f[64]*dv*vcut2)*wv-371.806401235912*f[64]*dv*vcut3+160.9968943799848*f[36]*dv2*vcut2+((-46.475800154489*f[64])-40.24922359499621*f[36])*dv4)*zVal2+((-185.903200617956*f[67]*wv4)+96.0*f[24]*dv*wv3+(1115.419203707736*f[67]*vcut2+(92.951600308978*f[67]-83.1384387633061*f[8])*dv2)*wv2+(1487.225604943648*f[67]*vcut3-288.0*f[24]*dv*vcut2+((-72.0*f[24])-83.1384387633061*f[8])*dv3)*wv+557.7096018538679*f[67]*vcut4-192.0*f[24]*dv*vcut3+(83.1384387633061*f[8]-92.951600308978*f[67])*dv2*vcut2+((-11.61895003862225*f[67])-24.0*f[24]-20.78460969082652*f[8])*dv4)*zVal-107.3312629199899*f[41]*wv4+(55.42562584220407*f[10]-61.96773353931867*f[64])*dv*wv3+(643.9875775199394*f[41]*vcut2+(53.66563145999495*f[41]+53.66563145999495*f[36]-48.0*f[2])*dv2)*wv2+(858.6501033599192*f[41]*vcut3+(185.903200617956*f[64]-166.2768775266122*f[10])*dv*vcut2+(46.475800154489*f[64]+53.66563145999495*f[36]-41.56921938165305*f[10]-48.0*f[2])*dv3)*wv+321.9937887599697*f[41]*vcut4+(123.9354670786373*f[64]-110.8512516844081*f[10])*dv*vcut3+((-53.66563145999495*f[41])-53.66563145999495*f[36]+48.0*f[2])*dv2*vcut2+(15.49193338482967*f[64]-6.708203932499369*f[41]+13.41640786499874*f[36]-13.85640646055102*f[10]-12.0*f[2])*dv4))/dv3; 
  uhat[3] = 0.0; 
  uhat[4] = -(0.02083333333333333*((185.903200617956*f[89]*dv*wv3-160.9968943799849*f[58]*dv2*wv2+(((-139.427400463467*f[89])-160.9968943799849*f[58])*dv3-557.7096018538681*f[89]*dv*vcut2)*wv-371.8064012359121*f[89]*dv*vcut3+160.9968943799849*f[58]*dv2*vcut2+((-46.47580015448901*f[89])-40.24922359499622*f[58])*dv4)*zVal2+((-185.903200617956*f[90]*wv4)+96.0*f[51]*dv*wv3+(1115.419203707736*f[90]*vcut2+(92.95160030897802*f[90]-83.1384387633061*f[21])*dv2)*wv2+(1487.225604943648*f[90]*vcut3-288.0*f[51]*dv*vcut2+((-72.0*f[51])-83.1384387633061*f[21])*dv3)*wv+557.7096018538681*f[90]*vcut4-192.0*f[51]*dv*vcut3+(83.1384387633061*f[21]-92.95160030897802*f[90])*dv2*vcut2+((-11.61895003862225*f[90])-24.0*f[51]-20.78460969082652*f[21])*dv4)*zVal-107.3312629199899*f[65]*wv4+(55.42562584220407*f[22]-61.96773353931867*f[89])*dv*wv3+(643.9875775199395*f[65]*vcut2+(53.66563145999496*f[65]+53.66563145999496*f[58]-48.0*f[6])*dv2)*wv2+(858.6501033599193*f[65]*vcut3+(185.903200617956*f[89]-166.2768775266122*f[22])*dv*vcut2+(46.47580015448901*f[89]+53.66563145999496*f[58]-41.56921938165305*f[22]-48.0*f[6])*dv3)*wv+321.9937887599697*f[65]*vcut4+(123.9354670786373*f[89]-110.8512516844081*f[22])*dv*vcut3+((-53.66563145999496*f[65])-53.66563145999496*f[58]+48.0*f[6])*dv2*vcut2+(15.49193338482967*f[89]-6.708203932499369*f[65]+13.41640786499874*f[58]-13.85640646055102*f[22]-12.0*f[6])*dv4))/dv3; 
  uhat[5] = 0.0; 
  uhat[6] = 0.0; 
  uhat[7] = -(0.01666666666666667*((120.0*f[61]*wv3-103.9230484541326*f[33]*dv*wv2+(((-90.0*f[61])-103.9230484541326*f[33])*dv2-360.0*f[61]*vcut2)*wv-240.0*f[61]*vcut3+103.9230484541326*f[33]*dv*vcut2+((-30.0*f[61])-25.98076211353316*f[33])*dv3)*zVal+69.2820323027551*f[37]*wv3-60.0*f[16]*dv*wv2+(((-51.96152422706632*f[37])-60.0*f[16])*dv2-207.8460969082653*f[37]*vcut2)*wv-138.5640646055102*f[37]*vcut3+60.0*f[16]*dv*vcut2+((-17.32050807568877*f[37])-15.0*f[16])*dv3))/dv2; 
  uhat[8] = -(0.01666666666666667*((120.0*f[62]*wv3-103.9230484541326*f[34]*dv*wv2+(((-90.0*f[62])-103.9230484541326*f[34])*dv2-360.0*f[62]*vcut2)*wv-240.0*f[62]*vcut3+103.9230484541326*f[34]*dv*vcut2+((-30.0*f[62])-25.98076211353316*f[34])*dv3)*zVal+69.2820323027551*f[38]*wv3-60.0*f[17]*dv*wv2+(((-51.96152422706632*f[38])-60.0*f[17])*dv2-207.8460969082653*f[38]*vcut2)*wv-138.5640646055102*f[38]*vcut3+60.0*f[17]*dv*vcut2+((-17.32050807568877*f[38])-15.0*f[17])*dv3))/dv2; 
  uhat[9] = 0.0; 
  uhat[10] = 0.0; 
  uhat[11] = -(0.01666666666666667*((120.0*f[87]*wv3-103.9230484541326*f[56]*dv*wv2+(((-90.0*f[87])-103.9230484541326*f[56])*dv2-360.0*f[87]*vcut2)*wv-240.0*f[87]*vcut3+103.9230484541326*f[56]*dv*vcut2+((-30.0*f[87])-25.98076211353316*f[56])*dv3)*zVal+69.2820323027551*f[59]*wv3-60.0*f[31]*dv*wv2+(((-51.96152422706632*f[59])-60.0*f[31])*dv2-207.8460969082653*f[59]*vcut2)*wv-138.5640646055102*f[59]*vcut3+60.0*f[31]*dv*vcut2+((-17.32050807568877*f[59])-15.0*f[31])*dv3))/dv2; 
  uhat[12] = -(0.01666666666666667*((120.0*f[88]*wv3-103.9230484541326*f[57]*dv*wv2+(((-90.0*f[88])-103.9230484541326*f[57])*dv2-360.0*f[88]*vcut2)*wv-240.0*f[88]*vcut3+103.9230484541326*f[57]*dv*vcut2+((-30.0*f[88])-25.98076211353316*f[57])*dv3)*zVal+69.2820323027551*f[60]*wv3-60.0*f[32]*dv*wv2+(((-51.96152422706632*f[60])-60.0*f[32])*dv2-207.8460969082653*f[60]*vcut2)*wv-138.5640646055102*f[60]*vcut3+60.0*f[32]*dv*vcut2+((-17.32050807568877*f[60])-15.0*f[32])*dv3))/dv2; 
  uhat[13] = 0.0; 
  uhat[14] = 0.0; 
  uhat[15] = 0.0; 
  uhat[16] = 0.0; 
  uhat[17] = 0.0; 
  uhat[18] = 0.0; 
  uhat[19] = 0.0; 
  }

  // calculate c = uhat/u 
  CartFieldBinOpDivide3xSer_P2(u, uhat, 1, 1, c); 
  // calculate fhat = c*f 
  CartFieldBinOpMultiply3x2vSer_P2(c, f, 1, 1, fhat); 
  // account for rare positivity issues 
  if (fhat[0]<0) {
    if(wv > 0) {
      double alpha = ((-wv)+vcut+dv/2)/dv; 
      for(int k=0; k<112; k++) { 
        fhat[k] = alpha*f[k]; 
      } 
    } else {
      double alpha = (wv+vcut+dv/2)/dv; 
      for(int k=0; k<112; k++) { 
        fhat[k] = alpha*f[k]; 
      } 
    } 
  } 

} 

