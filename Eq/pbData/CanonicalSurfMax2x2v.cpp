#include <CanonicalModDecl.h> 
void CanonicalSurf2x2vMax_X_P1(const double *w, const double *dxv, const double *H, const double *fl, const double *fr, double *outl, double *outr) 
{ 
// w: Cell-center coordinates. dxv[NDIM]: Cell spacing. H: Hamiltonian, fl/fr: Distribution function in left/right cells 
// outl/outr: output distribution function in left/right cells 
  double dxv0 = dxv[0]; 
  double dxv1 = dxv[1]; 
  double dxv2 = dxv[2]; 
  double dxv3 = dxv[3]; 
  double wd = w[0]; 
  double incr[5]; 

  // surface-averaged phase velocity in this direction 
  alpha0 = (1.732050807568877*H[3])/dxv2; 

  if (alpha0>0) { 
  incr[0] = 0.03125*(3.0*fl[1]+1.732050807568877*fl[0])*H[3]*dxv1*dxv3; 
  incr[1] = -0.09375*(1.732050807568877*fl[1]+fl[0])*H[3]*dxv1*dxv3; 
  incr[2] = 0.05412658773652741*fl[2]*H[3]*dxv1*dxv3; 
  incr[3] = 0.05412658773652741*H[3]*fl[3]*dxv1*dxv3; 
  incr[4] = 0.05412658773652741*H[3]*fl[4]*dxv1*dxv3; 

  outr[0] += incr[0]; 
  outr[1] += incr[1]; 
  outr[2] += incr[2]; 
  outr[3] += incr[3]; 
  outr[4] += incr[4]; 

  outl[0] += -1.0*incr[0]; 
  outl[1] += incr[1]; 
  outl[2] += -1.0*incr[2]; 
  outl[3] += -1.0*incr[3]; 
  outl[4] += -1.0*incr[4]; 
  } else { 
  incr[0] = -0.03125*(3.0*fr[1]-1.732050807568877*fr[0])*H[3]*dxv1*dxv3; 
  incr[1] = 0.09375*(1.732050807568877*fr[1]-1.0*fr[0])*H[3]*dxv1*dxv3; 
  incr[2] = 0.05412658773652741*fr[2]*H[3]*dxv1*dxv3; 
  incr[3] = 0.05412658773652741*H[3]*fr[3]*dxv1*dxv3; 
  incr[4] = 0.05412658773652741*H[3]*fr[4]*dxv1*dxv3; 

  outr[0] += incr[0]; 
  outr[1] += incr[1]; 
  outr[2] += incr[2]; 
  outr[3] += incr[3]; 
  outr[4] += incr[4]; 

  outl[0] += -1.0*incr[0]; 
  outl[1] += incr[1]; 
  outl[2] += -1.0*incr[2]; 
  outl[3] += -1.0*incr[3]; 
  outl[4] += -1.0*incr[4]; 
  } 
} 
void CanonicalSurf2x2vMax_X_P2(const double *w, const double *dxv, const double *H, const double *fl, const double *fr, double *outl, double *outr) 
{ 
// w: Cell-center coordinates. dxv[NDIM]: Cell spacing. H: Hamiltonian, fl/fr: Distribution function in left/right cells 
// outl/outr: output distribution function in left/right cells 
  double dxv0 = dxv[0]; 
  double dxv1 = dxv[1]; 
  double dxv2 = dxv[2]; 
  double dxv3 = dxv[3]; 
  double wd = w[0]; 
  double incr[15]; 

  // surface-averaged phase velocity in this direction 
  alpha0 = -(1.0*(3.0*H[6]-1.732050807568877*H[3]))/dxv2; 

  if (alpha0>0) { 
  incr[0] = 0.03125*(6.708203932499369*fl[6]*H[13]+3.872983346207417*fl[3]*H[13]-6.708203932499369*H[6]*fl[11]+3.872983346207417*H[3]*fl[11]+3.0*fl[8]*H[10]+1.732050807568877*fl[4]*H[10]+3.0*fl[5]*H[7]+1.732050807568877*fl[2]*H[7]-5.196152422706631*fl[1]*H[6]-3.0*fl[0]*H[6]+3.0*fl[1]*H[3]+1.732050807568877*fl[0]*H[3])*dxv1*dxv3; 
  incr[1] = -0.09375*(3.872983346207417*fl[6]*H[13]+2.23606797749979*fl[3]*H[13]-3.872983346207417*H[6]*fl[11]+2.23606797749979*H[3]*fl[11]+1.732050807568877*fl[8]*H[10]+fl[4]*H[10]+1.732050807568877*fl[5]*H[7]+fl[2]*H[7]-3.0*fl[1]*H[6]-1.732050807568877*fl[0]*H[6]+1.732050807568877*fl[1]*H[3]+fl[0]*H[3])*dxv1*dxv3; 
  incr[2] = 0.00625*(19.36491673103709*fl[7]*H[13]+7.745966692414834*H[7]*fl[12]+19.36491673103709*H[7]*fl[11]+8.660254037844386*fl[9]*H[10]+15.0*fl[1]*H[7]+8.660254037844386*fl[0]*H[7]-25.98076211353316*fl[5]*H[6]-15.0*fl[2]*H[6]+15.0*H[3]*fl[5]+8.660254037844386*fl[2]*H[3])*dxv1*dxv3; 
  incr[3] = 0.03125*(3.464101615137754*H[13]*fl[13]+8.660254037844386*fl[11]*H[13]+6.708203932499369*fl[1]*H[13]+3.872983346207417*fl[0]*H[13]+1.732050807568877*H[10]*fl[10]+1.732050807568877*H[7]*fl[7]-5.196152422706631*H[6]*fl[6]+3.0*H[3]*fl[6]-3.0*fl[3]*H[6]+1.732050807568877*H[3]*fl[3])*dxv1*dxv3; 
  incr[4] = 0.00625*(7.745966692414834*H[10]*fl[14]+19.36491673103709*fl[10]*H[13]+19.36491673103709*H[10]*fl[11]+15.0*fl[1]*H[10]+8.660254037844386*fl[0]*H[10]+8.660254037844386*H[7]*fl[9]-25.98076211353316*H[6]*fl[8]+15.0*H[3]*fl[8]-15.0*fl[4]*H[6]+8.660254037844386*H[3]*fl[4])*dxv1*dxv3; 
  incr[5] = -0.01875*(11.18033988749895*fl[7]*H[13]+4.47213595499958*H[7]*fl[12]+11.18033988749895*H[7]*fl[11]+5.0*fl[9]*H[10]+8.660254037844386*fl[1]*H[7]+5.0*fl[0]*H[7]-15.0*fl[5]*H[6]-8.660254037844386*fl[2]*H[6]+8.660254037844386*H[3]*fl[5]+5.0*fl[2]*H[3])*dxv1*dxv3; 
  incr[6] = -0.09375*(2.0*H[13]*fl[13]+5.0*fl[11]*H[13]+3.872983346207417*fl[1]*H[13]+2.23606797749979*fl[0]*H[13]+H[10]*fl[10]+H[7]*fl[7]-3.0*H[6]*fl[6]+1.732050807568877*H[3]*fl[6]-1.732050807568877*fl[3]*H[6]+H[3]*fl[3])*dxv1*dxv3; 
  incr[7] = 0.03125*(6.708203932499369*fl[5]*H[13]+3.872983346207417*fl[2]*H[13]-3.0*H[6]*fl[7]+1.732050807568877*H[3]*fl[7]+3.0*fl[6]*H[7]+1.732050807568877*fl[3]*H[7])*dxv1*dxv3; 
  incr[8] = -0.01875*(4.47213595499958*H[10]*fl[14]+11.18033988749895*fl[10]*H[13]+11.18033988749895*H[10]*fl[11]+8.660254037844386*fl[1]*H[10]+5.0*fl[0]*H[10]+5.0*H[7]*fl[9]-15.0*H[6]*fl[8]+8.660254037844386*H[3]*fl[8]-8.660254037844386*fl[4]*H[6]+5.0*H[3]*fl[4])*dxv1*dxv3; 
  incr[9] = 0.03125*(3.0*fl[5]*H[10]+1.732050807568877*fl[2]*H[10]-3.0*H[6]*fl[9]+1.732050807568877*H[3]*fl[9]+3.0*H[7]*fl[8]+1.732050807568877*fl[4]*H[7])*dxv1*dxv3; 
  incr[10] = 0.03125*(6.708203932499369*fl[8]*H[13]+3.872983346207417*fl[4]*H[13]-3.0*H[6]*fl[10]+1.732050807568877*H[3]*fl[10]+3.0*fl[6]*H[10]+1.732050807568877*fl[3]*H[10])*dxv1*dxv3; 
  incr[11] = 0.03125*(15.0*fl[6]*H[13]+8.660254037844386*fl[3]*H[13]-15.0*H[6]*fl[11]+8.660254037844386*H[3]*fl[11]+6.708203932499369*fl[8]*H[10]+3.872983346207417*fl[4]*H[10]+6.708203932499369*fl[5]*H[7]+3.872983346207417*fl[2]*H[7]-11.61895003862225*fl[1]*H[6]-6.708203932499369*fl[0]*H[6]+6.708203932499369*fl[1]*H[3]+3.872983346207417*fl[0]*H[3])*dxv1*dxv3; 
  incr[12] = -0.00625*(15.0*H[6]*fl[12]-8.660254037844386*H[3]*fl[12]-13.41640786499874*fl[5]*H[7]-7.745966692414834*fl[2]*H[7])*dxv1*dxv3; 
  incr[13] = -0.03125*(3.0*H[6]*fl[13]-1.732050807568877*H[3]*fl[13]-6.0*fl[6]*H[13]-3.464101615137754*fl[3]*H[13])*dxv1*dxv3; 
  incr[14] = -0.00625*(15.0*H[6]*fl[14]-8.660254037844386*H[3]*fl[14]-13.41640786499874*fl[8]*H[10]-7.745966692414834*fl[4]*H[10])*dxv1*dxv3; 

  outr[0] += incr[0]; 
  outr[1] += incr[1]; 
  outr[2] += incr[2]; 
  outr[3] += incr[3]; 
  outr[4] += incr[4]; 
  outr[5] += incr[5]; 
  outr[6] += incr[6]; 
  outr[7] += incr[7]; 
  outr[8] += incr[8]; 
  outr[9] += incr[9]; 
  outr[10] += incr[10]; 
  outr[11] += incr[11]; 
  outr[12] += incr[12]; 
  outr[13] += incr[13]; 
  outr[14] += incr[14]; 

  outl[0] += -1.0*incr[0]; 
  outl[1] += incr[1]; 
  outl[2] += -1.0*incr[2]; 
  outl[3] += -1.0*incr[3]; 
  outl[4] += -1.0*incr[4]; 
  outl[5] += incr[5]; 
  outl[6] += incr[6]; 
  outl[7] += -1.0*incr[7]; 
  outl[8] += incr[8]; 
  outl[9] += -1.0*incr[9]; 
  outl[10] += -1.0*incr[10]; 
  outl[11] += -1.0*incr[11]; 
  outl[12] += -1.0*incr[12]; 
  outl[13] += -1.0*incr[13]; 
  outl[14] += -1.0*incr[14]; 
  } else { 
  incr[0] = -0.03125*(6.708203932499369*fr[6]*H[13]-3.872983346207417*fr[3]*H[13]+6.708203932499369*H[6]*fr[11]-3.872983346207417*H[3]*fr[11]+3.0*fr[8]*H[10]-1.732050807568877*fr[4]*H[10]+3.0*fr[5]*H[7]-1.732050807568877*fr[2]*H[7]-5.196152422706631*fr[1]*H[6]+3.0*fr[0]*H[6]+3.0*fr[1]*H[3]-1.732050807568877*fr[0]*H[3])*dxv1*dxv3; 
  incr[1] = 0.09375*(3.872983346207417*fr[6]*H[13]-2.23606797749979*fr[3]*H[13]+3.872983346207417*H[6]*fr[11]-2.23606797749979*H[3]*fr[11]+1.732050807568877*fr[8]*H[10]-1.0*fr[4]*H[10]+1.732050807568877*fr[5]*H[7]-1.0*fr[2]*H[7]-3.0*fr[1]*H[6]+1.732050807568877*fr[0]*H[6]+1.732050807568877*fr[1]*H[3]-1.0*fr[0]*H[3])*dxv1*dxv3; 
  incr[2] = 0.00625*(19.36491673103709*fr[7]*H[13]+7.745966692414834*H[7]*fr[12]+19.36491673103709*H[7]*fr[11]+8.660254037844386*fr[9]*H[10]-15.0*fr[1]*H[7]+8.660254037844386*fr[0]*H[7]+25.98076211353316*fr[5]*H[6]-15.0*fr[2]*H[6]-15.0*H[3]*fr[5]+8.660254037844386*fr[2]*H[3])*dxv1*dxv3; 
  incr[3] = 0.03125*(3.464101615137754*H[13]*fr[13]+8.660254037844386*fr[11]*H[13]-6.708203932499369*fr[1]*H[13]+3.872983346207417*fr[0]*H[13]+1.732050807568877*H[10]*fr[10]+1.732050807568877*H[7]*fr[7]+5.196152422706631*H[6]*fr[6]-3.0*H[3]*fr[6]-3.0*fr[3]*H[6]+1.732050807568877*H[3]*fr[3])*dxv1*dxv3; 
  incr[4] = 0.00625*(7.745966692414834*H[10]*fr[14]+19.36491673103709*fr[10]*H[13]+19.36491673103709*H[10]*fr[11]-15.0*fr[1]*H[10]+8.660254037844386*fr[0]*H[10]+8.660254037844386*H[7]*fr[9]+25.98076211353316*H[6]*fr[8]-15.0*H[3]*fr[8]-15.0*fr[4]*H[6]+8.660254037844386*H[3]*fr[4])*dxv1*dxv3; 
  incr[5] = -0.01875*(11.18033988749895*fr[7]*H[13]+4.47213595499958*H[7]*fr[12]+11.18033988749895*H[7]*fr[11]+5.0*fr[9]*H[10]-8.660254037844386*fr[1]*H[7]+5.0*fr[0]*H[7]+15.0*fr[5]*H[6]-8.660254037844386*fr[2]*H[6]-8.660254037844386*H[3]*fr[5]+5.0*fr[2]*H[3])*dxv1*dxv3; 
  incr[6] = -0.09375*(2.0*H[13]*fr[13]+5.0*fr[11]*H[13]-3.872983346207417*fr[1]*H[13]+2.23606797749979*fr[0]*H[13]+H[10]*fr[10]+H[7]*fr[7]+3.0*H[6]*fr[6]-1.732050807568877*H[3]*fr[6]-1.732050807568877*fr[3]*H[6]+H[3]*fr[3])*dxv1*dxv3; 
  incr[7] = -0.03125*(6.708203932499369*fr[5]*H[13]-3.872983346207417*fr[2]*H[13]+3.0*H[6]*fr[7]-1.732050807568877*H[3]*fr[7]+3.0*fr[6]*H[7]-1.732050807568877*fr[3]*H[7])*dxv1*dxv3; 
  incr[8] = -0.01875*(4.47213595499958*H[10]*fr[14]+11.18033988749895*fr[10]*H[13]+11.18033988749895*H[10]*fr[11]-8.660254037844386*fr[1]*H[10]+5.0*fr[0]*H[10]+5.0*H[7]*fr[9]+15.0*H[6]*fr[8]-8.660254037844386*H[3]*fr[8]-8.660254037844386*fr[4]*H[6]+5.0*H[3]*fr[4])*dxv1*dxv3; 
  incr[9] = -0.03125*(3.0*fr[5]*H[10]-1.732050807568877*fr[2]*H[10]+3.0*H[6]*fr[9]-1.732050807568877*H[3]*fr[9]+3.0*H[7]*fr[8]-1.732050807568877*fr[4]*H[7])*dxv1*dxv3; 
  incr[10] = -0.03125*(6.708203932499369*fr[8]*H[13]-3.872983346207417*fr[4]*H[13]+3.0*H[6]*fr[10]-1.732050807568877*H[3]*fr[10]+3.0*fr[6]*H[10]-1.732050807568877*fr[3]*H[10])*dxv1*dxv3; 
  incr[11] = -0.03125*(15.0*fr[6]*H[13]-8.660254037844386*fr[3]*H[13]+15.0*H[6]*fr[11]-8.660254037844386*H[3]*fr[11]+6.708203932499369*fr[8]*H[10]-3.872983346207417*fr[4]*H[10]+6.708203932499369*fr[5]*H[7]-3.872983346207417*fr[2]*H[7]-11.61895003862225*fr[1]*H[6]+6.708203932499369*fr[0]*H[6]+6.708203932499369*fr[1]*H[3]-3.872983346207417*fr[0]*H[3])*dxv1*dxv3; 
  incr[12] = -0.00625*(15.0*H[6]*fr[12]-8.660254037844386*H[3]*fr[12]+13.41640786499874*fr[5]*H[7]-7.745966692414834*fr[2]*H[7])*dxv1*dxv3; 
  incr[13] = -0.03125*(3.0*H[6]*fr[13]-1.732050807568877*H[3]*fr[13]+6.0*fr[6]*H[13]-3.464101615137754*fr[3]*H[13])*dxv1*dxv3; 
  incr[14] = -0.00625*(15.0*H[6]*fr[14]-8.660254037844386*H[3]*fr[14]+13.41640786499874*fr[8]*H[10]-7.745966692414834*fr[4]*H[10])*dxv1*dxv3; 

  outr[0] += incr[0]; 
  outr[1] += incr[1]; 
  outr[2] += incr[2]; 
  outr[3] += incr[3]; 
  outr[4] += incr[4]; 
  outr[5] += incr[5]; 
  outr[6] += incr[6]; 
  outr[7] += incr[7]; 
  outr[8] += incr[8]; 
  outr[9] += incr[9]; 
  outr[10] += incr[10]; 
  outr[11] += incr[11]; 
  outr[12] += incr[12]; 
  outr[13] += incr[13]; 
  outr[14] += incr[14]; 

  outl[0] += -1.0*incr[0]; 
  outl[1] += incr[1]; 
  outl[2] += -1.0*incr[2]; 
  outl[3] += -1.0*incr[3]; 
  outl[4] += -1.0*incr[4]; 
  outl[5] += incr[5]; 
  outl[6] += incr[6]; 
  outl[7] += -1.0*incr[7]; 
  outl[8] += incr[8]; 
  outl[9] += -1.0*incr[9]; 
  outl[10] += -1.0*incr[10]; 
  outl[11] += -1.0*incr[11]; 
  outl[12] += -1.0*incr[12]; 
  outl[13] += -1.0*incr[13]; 
  outl[14] += -1.0*incr[14]; 
  } 
} 
void CanonicalSurf2x2vMax_Y_P1(const double *w, const double *dxv, const double *H, const double *fl, const double *fr, double *outl, double *outr) 
{ 
// w: Cell-center coordinates. dxv[NDIM]: Cell spacing. H: Hamiltonian, fl/fr: Distribution function in left/right cells 
// outl/outr: output distribution function in left/right cells 
  double dxv0 = dxv[0]; 
  double dxv1 = dxv[1]; 
  double dxv2 = dxv[2]; 
  double dxv3 = dxv[3]; 
  double wd = w[1]; 
  double incr[5]; 

  // surface-averaged phase velocity in this direction 
  alpha0 = (1.732050807568877*H[4])/dxv3; 

  if (alpha0>0) { 
  incr[0] = 0.03125*(3.0*fl[2]+1.732050807568877*fl[0])*H[4]*dxv0*dxv2; 
  incr[1] = 0.05412658773652741*fl[1]*H[4]*dxv0*dxv2; 
  incr[2] = -0.09375*(1.732050807568877*fl[2]+fl[0])*H[4]*dxv0*dxv2; 
  incr[3] = 0.05412658773652741*fl[3]*H[4]*dxv0*dxv2; 
  incr[4] = 0.05412658773652741*H[4]*fl[4]*dxv0*dxv2; 

  outr[0] += incr[0]; 
  outr[1] += incr[1]; 
  outr[2] += incr[2]; 
  outr[3] += incr[3]; 
  outr[4] += incr[4]; 

  outl[0] += -1.0*incr[0]; 
  outl[1] += -1.0*incr[1]; 
  outl[2] += incr[2]; 
  outl[3] += -1.0*incr[3]; 
  outl[4] += -1.0*incr[4]; 
  } else { 
  incr[0] = -0.03125*(3.0*fr[2]-1.732050807568877*fr[0])*H[4]*dxv0*dxv2; 
  incr[1] = 0.05412658773652741*fr[1]*H[4]*dxv0*dxv2; 
  incr[2] = 0.09375*(1.732050807568877*fr[2]-1.0*fr[0])*H[4]*dxv0*dxv2; 
  incr[3] = 0.05412658773652741*fr[3]*H[4]*dxv0*dxv2; 
  incr[4] = 0.05412658773652741*H[4]*fr[4]*dxv0*dxv2; 

  outr[0] += incr[0]; 
  outr[1] += incr[1]; 
  outr[2] += incr[2]; 
  outr[3] += incr[3]; 
  outr[4] += incr[4]; 

  outl[0] += -1.0*incr[0]; 
  outl[1] += -1.0*incr[1]; 
  outl[2] += incr[2]; 
  outl[3] += -1.0*incr[3]; 
  outl[4] += -1.0*incr[4]; 
  } 
} 
void CanonicalSurf2x2vMax_Y_P2(const double *w, const double *dxv, const double *H, const double *fl, const double *fr, double *outl, double *outr) 
{ 
// w: Cell-center coordinates. dxv[NDIM]: Cell spacing. H: Hamiltonian, fl/fr: Distribution function in left/right cells 
// outl/outr: output distribution function in left/right cells 
  double dxv0 = dxv[0]; 
  double dxv1 = dxv[1]; 
  double dxv2 = dxv[2]; 
  double dxv3 = dxv[3]; 
  double wd = w[1]; 
  double incr[15]; 

  // surface-averaged phase velocity in this direction 
  alpha0 = -(1.0*(3.0*H[9]-1.732050807568877*H[4]))/dxv3; 

  if (alpha0>0) { 
  incr[0] = 0.03125*(6.708203932499369*fl[9]*H[14]+3.872983346207417*fl[4]*H[14]-6.708203932499369*H[9]*fl[12]+3.872983346207417*H[4]*fl[12]+3.0*fl[7]*H[10]+1.732050807568877*fl[3]*H[10]-5.196152422706631*fl[2]*H[9]-3.0*fl[0]*H[9]+3.0*fl[5]*H[8]+1.732050807568877*fl[1]*H[8]+3.0*fl[2]*H[4]+1.732050807568877*fl[0]*H[4])*dxv0*dxv2; 
  incr[1] = 0.00625*(19.36491673103709*fl[8]*H[14]+19.36491673103709*H[8]*fl[12]+7.745966692414834*H[8]*fl[11]+8.660254037844386*fl[6]*H[10]-25.98076211353316*fl[5]*H[9]-15.0*fl[1]*H[9]+15.0*fl[2]*H[8]+8.660254037844386*fl[0]*H[8]+15.0*H[4]*fl[5]+8.660254037844386*fl[1]*H[4])*dxv0*dxv2; 
  incr[2] = -0.09375*(3.872983346207417*fl[9]*H[14]+2.23606797749979*fl[4]*H[14]-3.872983346207417*H[9]*fl[12]+2.23606797749979*H[4]*fl[12]+1.732050807568877*fl[7]*H[10]+fl[3]*H[10]-3.0*fl[2]*H[9]-1.732050807568877*fl[0]*H[9]+1.732050807568877*fl[5]*H[8]+fl[1]*H[8]+1.732050807568877*fl[2]*H[4]+fl[0]*H[4])*dxv0*dxv2; 
  incr[3] = 0.00625*(19.36491673103709*fl[10]*H[14]+7.745966692414834*H[10]*fl[13]+19.36491673103709*H[10]*fl[12]+15.0*fl[2]*H[10]+8.660254037844386*fl[0]*H[10]-25.98076211353316*fl[7]*H[9]-15.0*fl[3]*H[9]+8.660254037844386*fl[6]*H[8]+15.0*H[4]*fl[7]+8.660254037844386*fl[3]*H[4])*dxv0*dxv2; 
  incr[4] = 0.03125*(3.464101615137754*H[14]*fl[14]+8.660254037844386*fl[12]*H[14]+6.708203932499369*fl[2]*H[14]+3.872983346207417*fl[0]*H[14]+1.732050807568877*H[10]*fl[10]-5.196152422706631*H[9]*fl[9]+3.0*H[4]*fl[9]-3.0*fl[4]*H[9]+1.732050807568877*H[8]*fl[8]+1.732050807568877*H[4]*fl[4])*dxv0*dxv2; 
  incr[5] = -0.01875*(11.18033988749895*fl[8]*H[14]+11.18033988749895*H[8]*fl[12]+4.47213595499958*H[8]*fl[11]+5.0*fl[6]*H[10]-15.0*fl[5]*H[9]-8.660254037844386*fl[1]*H[9]+8.660254037844386*fl[2]*H[8]+5.0*fl[0]*H[8]+8.660254037844386*H[4]*fl[5]+5.0*fl[1]*H[4])*dxv0*dxv2; 
  incr[6] = 0.03125*(3.0*fl[5]*H[10]+1.732050807568877*fl[1]*H[10]-3.0*fl[6]*H[9]+3.0*fl[7]*H[8]+1.732050807568877*fl[3]*H[8]+1.732050807568877*H[4]*fl[6])*dxv0*dxv2; 
  incr[7] = -0.01875*(11.18033988749895*fl[10]*H[14]+4.47213595499958*H[10]*fl[13]+11.18033988749895*H[10]*fl[12]+8.660254037844386*fl[2]*H[10]+5.0*fl[0]*H[10]-15.0*fl[7]*H[9]-8.660254037844386*fl[3]*H[9]+5.0*fl[6]*H[8]+8.660254037844386*H[4]*fl[7]+5.0*fl[3]*H[4])*dxv0*dxv2; 
  incr[8] = 0.03125*(6.708203932499369*fl[5]*H[14]+3.872983346207417*fl[1]*H[14]+3.0*H[8]*fl[9]-3.0*fl[8]*H[9]+1.732050807568877*H[4]*fl[8]+1.732050807568877*fl[4]*H[8])*dxv0*dxv2; 
  incr[9] = -0.09375*(2.0*H[14]*fl[14]+5.0*fl[12]*H[14]+3.872983346207417*fl[2]*H[14]+2.23606797749979*fl[0]*H[14]+H[10]*fl[10]-3.0*H[9]*fl[9]+1.732050807568877*H[4]*fl[9]-1.732050807568877*fl[4]*H[9]+H[8]*fl[8]+H[4]*fl[4])*dxv0*dxv2; 
  incr[10] = 0.03125*(6.708203932499369*fl[7]*H[14]+3.872983346207417*fl[3]*H[14]-3.0*H[9]*fl[10]+1.732050807568877*H[4]*fl[10]+3.0*fl[9]*H[10]+1.732050807568877*fl[4]*H[10])*dxv0*dxv2; 
  incr[11] = -0.00625*(15.0*H[9]*fl[11]-8.660254037844386*H[4]*fl[11]-13.41640786499874*fl[5]*H[8]-7.745966692414834*fl[1]*H[8])*dxv0*dxv2; 
  incr[12] = 0.03125*(15.0*fl[9]*H[14]+8.660254037844386*fl[4]*H[14]-15.0*H[9]*fl[12]+8.660254037844386*H[4]*fl[12]+6.708203932499369*fl[7]*H[10]+3.872983346207417*fl[3]*H[10]-11.61895003862225*fl[2]*H[9]-6.708203932499369*fl[0]*H[9]+6.708203932499369*fl[5]*H[8]+3.872983346207417*fl[1]*H[8]+6.708203932499369*fl[2]*H[4]+3.872983346207417*fl[0]*H[4])*dxv0*dxv2; 
  incr[13] = -0.00625*(15.0*H[9]*fl[13]-8.660254037844386*H[4]*fl[13]-13.41640786499874*fl[7]*H[10]-7.745966692414834*fl[3]*H[10])*dxv0*dxv2; 
  incr[14] = -0.03125*(3.0*H[9]*fl[14]-1.732050807568877*H[4]*fl[14]-6.0*fl[9]*H[14]-3.464101615137754*fl[4]*H[14])*dxv0*dxv2; 

  outr[0] += incr[0]; 
  outr[1] += incr[1]; 
  outr[2] += incr[2]; 
  outr[3] += incr[3]; 
  outr[4] += incr[4]; 
  outr[5] += incr[5]; 
  outr[6] += incr[6]; 
  outr[7] += incr[7]; 
  outr[8] += incr[8]; 
  outr[9] += incr[9]; 
  outr[10] += incr[10]; 
  outr[11] += incr[11]; 
  outr[12] += incr[12]; 
  outr[13] += incr[13]; 
  outr[14] += incr[14]; 

  outl[0] += -1.0*incr[0]; 
  outl[1] += -1.0*incr[1]; 
  outl[2] += incr[2]; 
  outl[3] += -1.0*incr[3]; 
  outl[4] += -1.0*incr[4]; 
  outl[5] += incr[5]; 
  outl[6] += -1.0*incr[6]; 
  outl[7] += incr[7]; 
  outl[8] += -1.0*incr[8]; 
  outl[9] += incr[9]; 
  outl[10] += -1.0*incr[10]; 
  outl[11] += -1.0*incr[11]; 
  outl[12] += -1.0*incr[12]; 
  outl[13] += -1.0*incr[13]; 
  outl[14] += -1.0*incr[14]; 
  } else { 
  incr[0] = -0.03125*(6.708203932499369*fr[9]*H[14]-3.872983346207417*fr[4]*H[14]+6.708203932499369*H[9]*fr[12]-3.872983346207417*H[4]*fr[12]+3.0*fr[7]*H[10]-1.732050807568877*fr[3]*H[10]-5.196152422706631*fr[2]*H[9]+3.0*fr[0]*H[9]+3.0*fr[5]*H[8]-1.732050807568877*fr[1]*H[8]+3.0*fr[2]*H[4]-1.732050807568877*fr[0]*H[4])*dxv0*dxv2; 
  incr[1] = 0.00625*(19.36491673103709*fr[8]*H[14]+19.36491673103709*H[8]*fr[12]+7.745966692414834*H[8]*fr[11]+8.660254037844386*fr[6]*H[10]+25.98076211353316*fr[5]*H[9]-15.0*fr[1]*H[9]-15.0*fr[2]*H[8]+8.660254037844386*fr[0]*H[8]-15.0*H[4]*fr[5]+8.660254037844386*fr[1]*H[4])*dxv0*dxv2; 
  incr[2] = 0.09375*(3.872983346207417*fr[9]*H[14]-2.23606797749979*fr[4]*H[14]+3.872983346207417*H[9]*fr[12]-2.23606797749979*H[4]*fr[12]+1.732050807568877*fr[7]*H[10]-1.0*fr[3]*H[10]-3.0*fr[2]*H[9]+1.732050807568877*fr[0]*H[9]+1.732050807568877*fr[5]*H[8]-1.0*fr[1]*H[8]+1.732050807568877*fr[2]*H[4]-1.0*fr[0]*H[4])*dxv0*dxv2; 
  incr[3] = 0.00625*(19.36491673103709*fr[10]*H[14]+7.745966692414834*H[10]*fr[13]+19.36491673103709*H[10]*fr[12]-15.0*fr[2]*H[10]+8.660254037844386*fr[0]*H[10]+25.98076211353316*fr[7]*H[9]-15.0*fr[3]*H[9]+8.660254037844386*fr[6]*H[8]-15.0*H[4]*fr[7]+8.660254037844386*fr[3]*H[4])*dxv0*dxv2; 
  incr[4] = 0.03125*(3.464101615137754*H[14]*fr[14]+8.660254037844386*fr[12]*H[14]-6.708203932499369*fr[2]*H[14]+3.872983346207417*fr[0]*H[14]+1.732050807568877*H[10]*fr[10]+5.196152422706631*H[9]*fr[9]-3.0*H[4]*fr[9]-3.0*fr[4]*H[9]+1.732050807568877*H[8]*fr[8]+1.732050807568877*H[4]*fr[4])*dxv0*dxv2; 
  incr[5] = -0.01875*(11.18033988749895*fr[8]*H[14]+11.18033988749895*H[8]*fr[12]+4.47213595499958*H[8]*fr[11]+5.0*fr[6]*H[10]+15.0*fr[5]*H[9]-8.660254037844386*fr[1]*H[9]-8.660254037844386*fr[2]*H[8]+5.0*fr[0]*H[8]-8.660254037844386*H[4]*fr[5]+5.0*fr[1]*H[4])*dxv0*dxv2; 
  incr[6] = -0.03125*(3.0*fr[5]*H[10]-1.732050807568877*fr[1]*H[10]+3.0*fr[6]*H[9]+3.0*fr[7]*H[8]-1.732050807568877*fr[3]*H[8]-1.732050807568877*H[4]*fr[6])*dxv0*dxv2; 
  incr[7] = -0.01875*(11.18033988749895*fr[10]*H[14]+4.47213595499958*H[10]*fr[13]+11.18033988749895*H[10]*fr[12]-8.660254037844386*fr[2]*H[10]+5.0*fr[0]*H[10]+15.0*fr[7]*H[9]-8.660254037844386*fr[3]*H[9]+5.0*fr[6]*H[8]-8.660254037844386*H[4]*fr[7]+5.0*fr[3]*H[4])*dxv0*dxv2; 
  incr[8] = -0.03125*(6.708203932499369*fr[5]*H[14]-3.872983346207417*fr[1]*H[14]+3.0*H[8]*fr[9]+3.0*fr[8]*H[9]-1.732050807568877*H[4]*fr[8]-1.732050807568877*fr[4]*H[8])*dxv0*dxv2; 
  incr[9] = -0.09375*(2.0*H[14]*fr[14]+5.0*fr[12]*H[14]-3.872983346207417*fr[2]*H[14]+2.23606797749979*fr[0]*H[14]+H[10]*fr[10]+3.0*H[9]*fr[9]-1.732050807568877*H[4]*fr[9]-1.732050807568877*fr[4]*H[9]+H[8]*fr[8]+H[4]*fr[4])*dxv0*dxv2; 
  incr[10] = -0.03125*(6.708203932499369*fr[7]*H[14]-3.872983346207417*fr[3]*H[14]+3.0*H[9]*fr[10]-1.732050807568877*H[4]*fr[10]+3.0*fr[9]*H[10]-1.732050807568877*fr[4]*H[10])*dxv0*dxv2; 
  incr[11] = -0.00625*(15.0*H[9]*fr[11]-8.660254037844386*H[4]*fr[11]+13.41640786499874*fr[5]*H[8]-7.745966692414834*fr[1]*H[8])*dxv0*dxv2; 
  incr[12] = -0.03125*(15.0*fr[9]*H[14]-8.660254037844386*fr[4]*H[14]+15.0*H[9]*fr[12]-8.660254037844386*H[4]*fr[12]+6.708203932499369*fr[7]*H[10]-3.872983346207417*fr[3]*H[10]-11.61895003862225*fr[2]*H[9]+6.708203932499369*fr[0]*H[9]+6.708203932499369*fr[5]*H[8]-3.872983346207417*fr[1]*H[8]+6.708203932499369*fr[2]*H[4]-3.872983346207417*fr[0]*H[4])*dxv0*dxv2; 
  incr[13] = -0.00625*(15.0*H[9]*fr[13]-8.660254037844386*H[4]*fr[13]+13.41640786499874*fr[7]*H[10]-7.745966692414834*fr[3]*H[10])*dxv0*dxv2; 
  incr[14] = -0.03125*(3.0*H[9]*fr[14]-1.732050807568877*H[4]*fr[14]+6.0*fr[9]*H[14]-3.464101615137754*fr[4]*H[14])*dxv0*dxv2; 

  outr[0] += incr[0]; 
  outr[1] += incr[1]; 
  outr[2] += incr[2]; 
  outr[3] += incr[3]; 
  outr[4] += incr[4]; 
  outr[5] += incr[5]; 
  outr[6] += incr[6]; 
  outr[7] += incr[7]; 
  outr[8] += incr[8]; 
  outr[9] += incr[9]; 
  outr[10] += incr[10]; 
  outr[11] += incr[11]; 
  outr[12] += incr[12]; 
  outr[13] += incr[13]; 
  outr[14] += incr[14]; 

  outl[0] += -1.0*incr[0]; 
  outl[1] += -1.0*incr[1]; 
  outl[2] += incr[2]; 
  outl[3] += -1.0*incr[3]; 
  outl[4] += -1.0*incr[4]; 
  outl[5] += incr[5]; 
  outl[6] += -1.0*incr[6]; 
  outl[7] += incr[7]; 
  outl[8] += -1.0*incr[8]; 
  outl[9] += incr[9]; 
  outl[10] += -1.0*incr[10]; 
  outl[11] += -1.0*incr[11]; 
  outl[12] += -1.0*incr[12]; 
  outl[13] += -1.0*incr[13]; 
  outl[14] += -1.0*incr[14]; 
  } 
} 
void CanonicalSurf2x2vMax_VX_P1(const double *w, const double *dxv, const double *H, const double *fl, const double *fr, double *outl, double *outr) 
{ 
// w: Cell-center coordinates. dxv[NDIM]: Cell spacing. H: Hamiltonian, fl/fr: Distribution function in left/right cells 
// outl/outr: output distribution function in left/right cells 
  double dxv0 = dxv[0]; 
  double dxv1 = dxv[1]; 
  double dxv2 = dxv[2]; 
  double dxv3 = dxv[3]; 
  double wd = w[2]; 
  double incr[5]; 

  // surface-averaged phase velocity in this direction 
  alpha0 = -(1.732050807568877*H[1])/dxv0; 

  if (alpha0>0) { 
  incr[0] = -0.03125*H[1]*(3.0*fl[3]+1.732050807568877*fl[0])*dxv1*dxv3; 
  incr[1] = -0.05412658773652741*H[1]*fl[1]*dxv1*dxv3; 
  incr[2] = -0.05412658773652741*H[1]*fl[2]*dxv1*dxv3; 
  incr[3] = 0.09375*H[1]*(1.732050807568877*fl[3]+fl[0])*dxv1*dxv3; 
  incr[4] = -0.05412658773652741*H[1]*fl[4]*dxv1*dxv3; 

  outr[0] += incr[0]; 
  outr[1] += incr[1]; 
  outr[2] += incr[2]; 
  outr[3] += incr[3]; 
  outr[4] += incr[4]; 

  outl[0] += -1.0*incr[0]; 
  outl[1] += -1.0*incr[1]; 
  outl[2] += -1.0*incr[2]; 
  outl[3] += incr[3]; 
  outl[4] += -1.0*incr[4]; 
  } else { 
  incr[0] = 0.03125*H[1]*(3.0*fr[3]-1.732050807568877*fr[0])*dxv1*dxv3; 
  incr[1] = -0.05412658773652741*H[1]*fr[1]*dxv1*dxv3; 
  incr[2] = -0.05412658773652741*H[1]*fr[2]*dxv1*dxv3; 
  incr[3] = -0.09375*H[1]*(1.732050807568877*fr[3]-1.0*fr[0])*dxv1*dxv3; 
  incr[4] = -0.05412658773652741*H[1]*fr[4]*dxv1*dxv3; 

  outr[0] += incr[0]; 
  outr[1] += incr[1]; 
  outr[2] += incr[2]; 
  outr[3] += incr[3]; 
  outr[4] += incr[4]; 

  outl[0] += -1.0*incr[0]; 
  outl[1] += -1.0*incr[1]; 
  outl[2] += -1.0*incr[2]; 
  outl[3] += incr[3]; 
  outl[4] += -1.0*incr[4]; 
  } 
} 
void CanonicalSurf2x2vMax_VX_P2(const double *w, const double *dxv, const double *H, const double *fl, const double *fr, double *outl, double *outr) 
{ 
// w: Cell-center coordinates. dxv[NDIM]: Cell spacing. H: Hamiltonian, fl/fr: Distribution function in left/right cells 
// outl/outr: output distribution function in left/right cells 
  double dxv0 = dxv[0]; 
  double dxv1 = dxv[1]; 
  double dxv2 = dxv[2]; 
  double dxv3 = dxv[3]; 
  double wd = w[2]; 
  double incr[15]; 

  // surface-averaged phase velocity in this direction 
  alpha0 = (3.0*H[6]-1.732050807568877*H[1])/dxv0; 

  if (alpha0>0) { 
  incr[0] = 0.03125*(6.708203932499369*H[6]*fl[13]-3.872983346207417*H[1]*fl[13]-6.708203932499369*fl[6]*H[11]-3.872983346207417*fl[1]*H[11]-3.0*H[8]*fl[10]-1.732050807568877*fl[4]*H[8]-3.0*H[5]*fl[7]+5.196152422706631*fl[3]*H[6]+3.0*fl[0]*H[6]-1.732050807568877*fl[2]*H[5]-3.0*H[1]*fl[3]-1.732050807568877*fl[0]*H[1])*dxv1*dxv3; 
  incr[1] = -0.03125*(8.660254037844386*H[11]*fl[13]+3.464101615137754*H[11]*fl[11]+6.708203932499369*fl[3]*H[11]+3.872983346207417*fl[0]*H[11]+1.732050807568877*H[8]*fl[8]-5.196152422706631*H[6]*fl[6]+3.0*H[1]*fl[6]-3.0*fl[1]*H[6]+1.732050807568877*H[5]*fl[5]+1.732050807568877*H[1]*fl[1])*dxv1*dxv3; 
  incr[2] = -0.00625*(19.36491673103709*H[5]*fl[13]+7.745966692414834*H[5]*fl[12]+19.36491673103709*fl[5]*H[11]+8.660254037844386*H[8]*fl[9]-25.98076211353316*H[6]*fl[7]+15.0*H[1]*fl[7]-15.0*fl[2]*H[6]+15.0*fl[3]*H[5]+8.660254037844386*fl[0]*H[5]+8.660254037844386*H[1]*fl[2])*dxv1*dxv3; 
  incr[3] = -0.09375*(3.872983346207417*H[6]*fl[13]-2.23606797749979*H[1]*fl[13]-3.872983346207417*fl[6]*H[11]-2.23606797749979*fl[1]*H[11]-1.732050807568877*H[8]*fl[10]-1.0*fl[4]*H[8]-1.732050807568877*H[5]*fl[7]+3.0*fl[3]*H[6]+1.732050807568877*fl[0]*H[6]-1.0*fl[2]*H[5]-1.732050807568877*H[1]*fl[3]-1.0*fl[0]*H[1])*dxv1*dxv3; 
  incr[4] = -0.00625*(7.745966692414834*H[8]*fl[14]+19.36491673103709*H[8]*fl[13]+19.36491673103709*fl[8]*H[11]-25.98076211353316*H[6]*fl[10]+15.0*H[1]*fl[10]+8.660254037844386*H[5]*fl[9]+15.0*fl[3]*H[8]+8.660254037844386*fl[0]*H[8]-15.0*fl[4]*H[6]+8.660254037844386*H[1]*fl[4])*dxv1*dxv3; 
  incr[5] = -0.03125*(6.708203932499369*fl[7]*H[11]+3.872983346207417*fl[2]*H[11]+3.0*H[5]*fl[6]-3.0*fl[5]*H[6]+1.732050807568877*H[1]*fl[5]+1.732050807568877*fl[1]*H[5])*dxv1*dxv3; 
  incr[6] = 0.09375*(5.0*H[11]*fl[13]+2.0*H[11]*fl[11]+3.872983346207417*fl[3]*H[11]+2.23606797749979*fl[0]*H[11]+H[8]*fl[8]-3.0*H[6]*fl[6]+1.732050807568877*H[1]*fl[6]-1.732050807568877*fl[1]*H[6]+H[5]*fl[5]+H[1]*fl[1])*dxv1*dxv3; 
  incr[7] = 0.01875*(11.18033988749895*H[5]*fl[13]+4.47213595499958*H[5]*fl[12]+11.18033988749895*fl[5]*H[11]+5.0*H[8]*fl[9]-15.0*H[6]*fl[7]+8.660254037844386*H[1]*fl[7]-8.660254037844386*fl[2]*H[6]+8.660254037844386*fl[3]*H[5]+5.0*fl[0]*H[5]+5.0*H[1]*fl[2])*dxv1*dxv3; 
  incr[8] = -0.03125*(6.708203932499369*fl[10]*H[11]+3.872983346207417*fl[4]*H[11]-3.0*H[6]*fl[8]+1.732050807568877*H[1]*fl[8]+3.0*fl[6]*H[8]+1.732050807568877*fl[1]*H[8])*dxv1*dxv3; 
  incr[9] = -0.03125*(3.0*H[5]*fl[10]-3.0*H[6]*fl[9]+1.732050807568877*H[1]*fl[9]+3.0*fl[7]*H[8]+1.732050807568877*fl[2]*H[8]+1.732050807568877*fl[4]*H[5])*dxv1*dxv3; 
  incr[10] = 0.01875*(4.47213595499958*H[8]*fl[14]+11.18033988749895*H[8]*fl[13]+11.18033988749895*fl[8]*H[11]-15.0*H[6]*fl[10]+8.660254037844386*H[1]*fl[10]+5.0*H[5]*fl[9]+8.660254037844386*fl[3]*H[8]+5.0*fl[0]*H[8]-8.660254037844386*fl[4]*H[6]+5.0*H[1]*fl[4])*dxv1*dxv3; 
  incr[11] = 0.03125*(3.0*H[6]*fl[11]-1.732050807568877*H[1]*fl[11]-6.0*fl[6]*H[11]-3.464101615137754*fl[1]*H[11])*dxv1*dxv3; 
  incr[12] = 0.00625*(15.0*H[6]*fl[12]-8.660254037844386*H[1]*fl[12]-13.41640786499874*H[5]*fl[7]-7.745966692414834*fl[2]*H[5])*dxv1*dxv3; 
  incr[13] = 0.03125*(15.0*H[6]*fl[13]-8.660254037844386*H[1]*fl[13]-15.0*fl[6]*H[11]-8.660254037844386*fl[1]*H[11]-6.708203932499369*H[8]*fl[10]-3.872983346207417*fl[4]*H[8]-6.708203932499369*H[5]*fl[7]+11.61895003862225*fl[3]*H[6]+6.708203932499369*fl[0]*H[6]-3.872983346207417*fl[2]*H[5]-6.708203932499369*H[1]*fl[3]-3.872983346207417*fl[0]*H[1])*dxv1*dxv3; 
  incr[14] = 0.00625*(15.0*H[6]*fl[14]-8.660254037844386*H[1]*fl[14]-13.41640786499874*H[8]*fl[10]-7.745966692414834*fl[4]*H[8])*dxv1*dxv3; 

  outr[0] += incr[0]; 
  outr[1] += incr[1]; 
  outr[2] += incr[2]; 
  outr[3] += incr[3]; 
  outr[4] += incr[4]; 
  outr[5] += incr[5]; 
  outr[6] += incr[6]; 
  outr[7] += incr[7]; 
  outr[8] += incr[8]; 
  outr[9] += incr[9]; 
  outr[10] += incr[10]; 
  outr[11] += incr[11]; 
  outr[12] += incr[12]; 
  outr[13] += incr[13]; 
  outr[14] += incr[14]; 

  outl[0] += -1.0*incr[0]; 
  outl[1] += -1.0*incr[1]; 
  outl[2] += -1.0*incr[2]; 
  outl[3] += incr[3]; 
  outl[4] += -1.0*incr[4]; 
  outl[5] += -1.0*incr[5]; 
  outl[6] += incr[6]; 
  outl[7] += incr[7]; 
  outl[8] += -1.0*incr[8]; 
  outl[9] += -1.0*incr[9]; 
  outl[10] += incr[10]; 
  outl[11] += -1.0*incr[11]; 
  outl[12] += -1.0*incr[12]; 
  outl[13] += -1.0*incr[13]; 
  outl[14] += -1.0*incr[14]; 
  } else { 
  incr[0] = 0.03125*(6.708203932499369*H[6]*fr[13]-3.872983346207417*H[1]*fr[13]+6.708203932499369*fr[6]*H[11]-3.872983346207417*fr[1]*H[11]+3.0*H[8]*fr[10]-1.732050807568877*fr[4]*H[8]+3.0*H[5]*fr[7]-5.196152422706631*fr[3]*H[6]+3.0*fr[0]*H[6]-1.732050807568877*fr[2]*H[5]+3.0*H[1]*fr[3]-1.732050807568877*fr[0]*H[1])*dxv1*dxv3; 
  incr[1] = -0.03125*(8.660254037844386*H[11]*fr[13]+3.464101615137754*H[11]*fr[11]-6.708203932499369*fr[3]*H[11]+3.872983346207417*fr[0]*H[11]+1.732050807568877*H[8]*fr[8]+5.196152422706631*H[6]*fr[6]-3.0*H[1]*fr[6]-3.0*fr[1]*H[6]+1.732050807568877*H[5]*fr[5]+1.732050807568877*H[1]*fr[1])*dxv1*dxv3; 
  incr[2] = -0.00625*(19.36491673103709*H[5]*fr[13]+7.745966692414834*H[5]*fr[12]+19.36491673103709*fr[5]*H[11]+8.660254037844386*H[8]*fr[9]+25.98076211353316*H[6]*fr[7]-15.0*H[1]*fr[7]-15.0*fr[2]*H[6]-15.0*fr[3]*H[5]+8.660254037844386*fr[0]*H[5]+8.660254037844386*H[1]*fr[2])*dxv1*dxv3; 
  incr[3] = -0.09375*(3.872983346207417*H[6]*fr[13]-2.23606797749979*H[1]*fr[13]+3.872983346207417*fr[6]*H[11]-2.23606797749979*fr[1]*H[11]+1.732050807568877*H[8]*fr[10]-1.0*fr[4]*H[8]+1.732050807568877*H[5]*fr[7]-3.0*fr[3]*H[6]+1.732050807568877*fr[0]*H[6]-1.0*fr[2]*H[5]+1.732050807568877*H[1]*fr[3]-1.0*fr[0]*H[1])*dxv1*dxv3; 
  incr[4] = -0.00625*(7.745966692414834*H[8]*fr[14]+19.36491673103709*H[8]*fr[13]+19.36491673103709*fr[8]*H[11]+25.98076211353316*H[6]*fr[10]-15.0*H[1]*fr[10]+8.660254037844386*H[5]*fr[9]-15.0*fr[3]*H[8]+8.660254037844386*fr[0]*H[8]-15.0*fr[4]*H[6]+8.660254037844386*H[1]*fr[4])*dxv1*dxv3; 
  incr[5] = 0.03125*(6.708203932499369*fr[7]*H[11]-3.872983346207417*fr[2]*H[11]+3.0*H[5]*fr[6]+3.0*fr[5]*H[6]-1.732050807568877*H[1]*fr[5]-1.732050807568877*fr[1]*H[5])*dxv1*dxv3; 
  incr[6] = 0.09375*(5.0*H[11]*fr[13]+2.0*H[11]*fr[11]-3.872983346207417*fr[3]*H[11]+2.23606797749979*fr[0]*H[11]+H[8]*fr[8]+3.0*H[6]*fr[6]-1.732050807568877*H[1]*fr[6]-1.732050807568877*fr[1]*H[6]+H[5]*fr[5]+H[1]*fr[1])*dxv1*dxv3; 
  incr[7] = 0.01875*(11.18033988749895*H[5]*fr[13]+4.47213595499958*H[5]*fr[12]+11.18033988749895*fr[5]*H[11]+5.0*H[8]*fr[9]+15.0*H[6]*fr[7]-8.660254037844386*H[1]*fr[7]-8.660254037844386*fr[2]*H[6]-8.660254037844386*fr[3]*H[5]+5.0*fr[0]*H[5]+5.0*H[1]*fr[2])*dxv1*dxv3; 
  incr[8] = 0.03125*(6.708203932499369*fr[10]*H[11]-3.872983346207417*fr[4]*H[11]+3.0*H[6]*fr[8]-1.732050807568877*H[1]*fr[8]+3.0*fr[6]*H[8]-1.732050807568877*fr[1]*H[8])*dxv1*dxv3; 
  incr[9] = 0.03125*(3.0*H[5]*fr[10]+3.0*H[6]*fr[9]-1.732050807568877*H[1]*fr[9]+3.0*fr[7]*H[8]-1.732050807568877*fr[2]*H[8]-1.732050807568877*fr[4]*H[5])*dxv1*dxv3; 
  incr[10] = 0.01875*(4.47213595499958*H[8]*fr[14]+11.18033988749895*H[8]*fr[13]+11.18033988749895*fr[8]*H[11]+15.0*H[6]*fr[10]-8.660254037844386*H[1]*fr[10]+5.0*H[5]*fr[9]-8.660254037844386*fr[3]*H[8]+5.0*fr[0]*H[8]-8.660254037844386*fr[4]*H[6]+5.0*H[1]*fr[4])*dxv1*dxv3; 
  incr[11] = 0.03125*(3.0*H[6]*fr[11]-1.732050807568877*H[1]*fr[11]+6.0*fr[6]*H[11]-3.464101615137754*fr[1]*H[11])*dxv1*dxv3; 
  incr[12] = 0.00625*(15.0*H[6]*fr[12]-8.660254037844386*H[1]*fr[12]+13.41640786499874*H[5]*fr[7]-7.745966692414834*fr[2]*H[5])*dxv1*dxv3; 
  incr[13] = 0.03125*(15.0*H[6]*fr[13]-8.660254037844386*H[1]*fr[13]+15.0*fr[6]*H[11]-8.660254037844386*fr[1]*H[11]+6.708203932499369*H[8]*fr[10]-3.872983346207417*fr[4]*H[8]+6.708203932499369*H[5]*fr[7]-11.61895003862225*fr[3]*H[6]+6.708203932499369*fr[0]*H[6]-3.872983346207417*fr[2]*H[5]+6.708203932499369*H[1]*fr[3]-3.872983346207417*fr[0]*H[1])*dxv1*dxv3; 
  incr[14] = 0.00625*(15.0*H[6]*fr[14]-8.660254037844386*H[1]*fr[14]+13.41640786499874*H[8]*fr[10]-7.745966692414834*fr[4]*H[8])*dxv1*dxv3; 

  outr[0] += incr[0]; 
  outr[1] += incr[1]; 
  outr[2] += incr[2]; 
  outr[3] += incr[3]; 
  outr[4] += incr[4]; 
  outr[5] += incr[5]; 
  outr[6] += incr[6]; 
  outr[7] += incr[7]; 
  outr[8] += incr[8]; 
  outr[9] += incr[9]; 
  outr[10] += incr[10]; 
  outr[11] += incr[11]; 
  outr[12] += incr[12]; 
  outr[13] += incr[13]; 
  outr[14] += incr[14]; 

  outl[0] += -1.0*incr[0]; 
  outl[1] += -1.0*incr[1]; 
  outl[2] += -1.0*incr[2]; 
  outl[3] += incr[3]; 
  outl[4] += -1.0*incr[4]; 
  outl[5] += -1.0*incr[5]; 
  outl[6] += incr[6]; 
  outl[7] += incr[7]; 
  outl[8] += -1.0*incr[8]; 
  outl[9] += -1.0*incr[9]; 
  outl[10] += incr[10]; 
  outl[11] += -1.0*incr[11]; 
  outl[12] += -1.0*incr[12]; 
  outl[13] += -1.0*incr[13]; 
  outl[14] += -1.0*incr[14]; 
  } 
} 
void CanonicalSurf2x2vMax_VY_P1(const double *w, const double *dxv, const double *H, const double *fl, const double *fr, double *outl, double *outr) 
{ 
// w: Cell-center coordinates. dxv[NDIM]: Cell spacing. H: Hamiltonian, fl/fr: Distribution function in left/right cells 
// outl/outr: output distribution function in left/right cells 
  double dxv0 = dxv[0]; 
  double dxv1 = dxv[1]; 
  double dxv2 = dxv[2]; 
  double dxv3 = dxv[3]; 
  double wd = w[3]; 
  double incr[5]; 

  // surface-averaged phase velocity in this direction 
  alpha0 = -(1.732050807568877*H[2])/dxv1; 

  if (alpha0>0) { 
  incr[0] = -0.03125*H[2]*(3.0*fl[4]+1.732050807568877*fl[0])*dxv0*dxv2; 
  incr[1] = -0.05412658773652741*fl[1]*H[2]*dxv0*dxv2; 
  incr[2] = -0.05412658773652741*H[2]*fl[2]*dxv0*dxv2; 
  incr[3] = -0.05412658773652741*H[2]*fl[3]*dxv0*dxv2; 
  incr[4] = 0.09375*H[2]*(1.732050807568877*fl[4]+fl[0])*dxv0*dxv2; 

  outr[0] += incr[0]; 
  outr[1] += incr[1]; 
  outr[2] += incr[2]; 
  outr[3] += incr[3]; 
  outr[4] += incr[4]; 

  outl[0] += -1.0*incr[0]; 
  outl[1] += -1.0*incr[1]; 
  outl[2] += -1.0*incr[2]; 
  outl[3] += -1.0*incr[3]; 
  outl[4] += incr[4]; 
  } else { 
  incr[0] = 0.03125*H[2]*(3.0*fr[4]-1.732050807568877*fr[0])*dxv0*dxv2; 
  incr[1] = -0.05412658773652741*fr[1]*H[2]*dxv0*dxv2; 
  incr[2] = -0.05412658773652741*H[2]*fr[2]*dxv0*dxv2; 
  incr[3] = -0.05412658773652741*H[2]*fr[3]*dxv0*dxv2; 
  incr[4] = -0.09375*H[2]*(1.732050807568877*fr[4]-1.0*fr[0])*dxv0*dxv2; 

  outr[0] += incr[0]; 
  outr[1] += incr[1]; 
  outr[2] += incr[2]; 
  outr[3] += incr[3]; 
  outr[4] += incr[4]; 

  outl[0] += -1.0*incr[0]; 
  outl[1] += -1.0*incr[1]; 
  outl[2] += -1.0*incr[2]; 
  outl[3] += -1.0*incr[3]; 
  outl[4] += incr[4]; 
  } 
} 
void CanonicalSurf2x2vMax_VY_P2(const double *w, const double *dxv, const double *H, const double *fl, const double *fr, double *outl, double *outr) 
{ 
// w: Cell-center coordinates. dxv[NDIM]: Cell spacing. H: Hamiltonian, fl/fr: Distribution function in left/right cells 
// outl/outr: output distribution function in left/right cells 
  double dxv0 = dxv[0]; 
  double dxv1 = dxv[1]; 
  double dxv2 = dxv[2]; 
  double dxv3 = dxv[3]; 
  double wd = w[3]; 
  double incr[15]; 

  // surface-averaged phase velocity in this direction 
  alpha0 = (3.0*H[9]-1.732050807568877*H[2])/dxv1; 

  if (alpha0>0) { 
  incr[0] = 0.03125*(6.708203932499369*H[9]*fl[14]-3.872983346207417*H[2]*fl[14]-6.708203932499369*fl[9]*H[12]-3.872983346207417*fl[2]*H[12]-3.0*H[7]*fl[10]+5.196152422706631*fl[4]*H[9]+3.0*fl[0]*H[9]-3.0*H[5]*fl[8]-1.732050807568877*fl[3]*H[7]-1.732050807568877*fl[1]*H[5]-3.0*H[2]*fl[4]-1.732050807568877*fl[0]*H[2])*dxv0*dxv2; 
  incr[1] = -0.00625*(19.36491673103709*H[5]*fl[14]+19.36491673103709*fl[5]*H[12]+7.745966692414834*H[5]*fl[11]-25.98076211353316*fl[8]*H[9]-15.0*fl[1]*H[9]+15.0*H[2]*fl[8]+8.660254037844386*fl[6]*H[7]+15.0*fl[4]*H[5]+8.660254037844386*fl[0]*H[5]+8.660254037844386*fl[1]*H[2])*dxv0*dxv2; 
  incr[2] = -0.03125*(8.660254037844386*H[12]*fl[14]+3.464101615137754*H[12]*fl[12]+6.708203932499369*fl[4]*H[12]+3.872983346207417*fl[0]*H[12]-5.196152422706631*H[9]*fl[9]+3.0*H[2]*fl[9]-3.0*fl[2]*H[9]+1.732050807568877*H[7]*fl[7]+1.732050807568877*H[5]*fl[5]+1.732050807568877*H[2]*fl[2])*dxv0*dxv2; 
  incr[3] = -0.00625*(19.36491673103709*H[7]*fl[14]+7.745966692414834*H[7]*fl[13]+19.36491673103709*fl[7]*H[12]-25.98076211353316*H[9]*fl[10]+15.0*H[2]*fl[10]-15.0*fl[3]*H[9]+15.0*fl[4]*H[7]+8.660254037844386*fl[0]*H[7]+8.660254037844386*H[5]*fl[6]+8.660254037844386*H[2]*fl[3])*dxv0*dxv2; 
  incr[4] = -0.09375*(3.872983346207417*H[9]*fl[14]-2.23606797749979*H[2]*fl[14]-3.872983346207417*fl[9]*H[12]-2.23606797749979*fl[2]*H[12]-1.732050807568877*H[7]*fl[10]+3.0*fl[4]*H[9]+1.732050807568877*fl[0]*H[9]-1.732050807568877*H[5]*fl[8]-1.0*fl[3]*H[7]-1.0*fl[1]*H[5]-1.732050807568877*H[2]*fl[4]-1.0*fl[0]*H[2])*dxv0*dxv2; 
  incr[5] = -0.03125*(6.708203932499369*fl[8]*H[12]+3.872983346207417*fl[1]*H[12]+3.0*H[5]*fl[9]-3.0*fl[5]*H[9]+1.732050807568877*H[2]*fl[5]+1.732050807568877*fl[2]*H[5])*dxv0*dxv2; 
  incr[6] = -0.03125*(3.0*H[5]*fl[10]-3.0*fl[6]*H[9]+3.0*H[7]*fl[8]+1.732050807568877*fl[1]*H[7]+1.732050807568877*H[2]*fl[6]+1.732050807568877*fl[3]*H[5])*dxv0*dxv2; 
  incr[7] = -0.03125*(6.708203932499369*fl[10]*H[12]+3.872983346207417*fl[3]*H[12]+3.0*H[7]*fl[9]-3.0*fl[7]*H[9]+1.732050807568877*H[2]*fl[7]+1.732050807568877*fl[2]*H[7])*dxv0*dxv2; 
  incr[8] = 0.01875*(11.18033988749895*H[5]*fl[14]+11.18033988749895*fl[5]*H[12]+4.47213595499958*H[5]*fl[11]-15.0*fl[8]*H[9]-8.660254037844386*fl[1]*H[9]+8.660254037844386*H[2]*fl[8]+5.0*fl[6]*H[7]+8.660254037844386*fl[4]*H[5]+5.0*fl[0]*H[5]+5.0*fl[1]*H[2])*dxv0*dxv2; 
  incr[9] = 0.09375*(5.0*H[12]*fl[14]+2.0*H[12]*fl[12]+3.872983346207417*fl[4]*H[12]+2.23606797749979*fl[0]*H[12]-3.0*H[9]*fl[9]+1.732050807568877*H[2]*fl[9]-1.732050807568877*fl[2]*H[9]+H[7]*fl[7]+H[5]*fl[5]+H[2]*fl[2])*dxv0*dxv2; 
  incr[10] = 0.01875*(11.18033988749895*H[7]*fl[14]+4.47213595499958*H[7]*fl[13]+11.18033988749895*fl[7]*H[12]-15.0*H[9]*fl[10]+8.660254037844386*H[2]*fl[10]-8.660254037844386*fl[3]*H[9]+8.660254037844386*fl[4]*H[7]+5.0*fl[0]*H[7]+5.0*H[5]*fl[6]+5.0*H[2]*fl[3])*dxv0*dxv2; 
  incr[11] = 0.00625*(15.0*H[9]*fl[11]-8.660254037844386*H[2]*fl[11]-13.41640786499874*H[5]*fl[8]-7.745966692414834*fl[1]*H[5])*dxv0*dxv2; 
  incr[12] = 0.03125*(3.0*H[9]*fl[12]-1.732050807568877*H[2]*fl[12]-6.0*fl[9]*H[12]-3.464101615137754*fl[2]*H[12])*dxv0*dxv2; 
  incr[13] = 0.00625*(15.0*H[9]*fl[13]-8.660254037844386*H[2]*fl[13]-13.41640786499874*H[7]*fl[10]-7.745966692414834*fl[3]*H[7])*dxv0*dxv2; 
  incr[14] = 0.03125*(15.0*H[9]*fl[14]-8.660254037844386*H[2]*fl[14]-15.0*fl[9]*H[12]-8.660254037844386*fl[2]*H[12]-6.708203932499369*H[7]*fl[10]+11.61895003862225*fl[4]*H[9]+6.708203932499369*fl[0]*H[9]-6.708203932499369*H[5]*fl[8]-3.872983346207417*fl[3]*H[7]-3.872983346207417*fl[1]*H[5]-6.708203932499369*H[2]*fl[4]-3.872983346207417*fl[0]*H[2])*dxv0*dxv2; 

  outr[0] += incr[0]; 
  outr[1] += incr[1]; 
  outr[2] += incr[2]; 
  outr[3] += incr[3]; 
  outr[4] += incr[4]; 
  outr[5] += incr[5]; 
  outr[6] += incr[6]; 
  outr[7] += incr[7]; 
  outr[8] += incr[8]; 
  outr[9] += incr[9]; 
  outr[10] += incr[10]; 
  outr[11] += incr[11]; 
  outr[12] += incr[12]; 
  outr[13] += incr[13]; 
  outr[14] += incr[14]; 

  outl[0] += -1.0*incr[0]; 
  outl[1] += -1.0*incr[1]; 
  outl[2] += -1.0*incr[2]; 
  outl[3] += -1.0*incr[3]; 
  outl[4] += incr[4]; 
  outl[5] += -1.0*incr[5]; 
  outl[6] += -1.0*incr[6]; 
  outl[7] += -1.0*incr[7]; 
  outl[8] += incr[8]; 
  outl[9] += incr[9]; 
  outl[10] += incr[10]; 
  outl[11] += -1.0*incr[11]; 
  outl[12] += -1.0*incr[12]; 
  outl[13] += -1.0*incr[13]; 
  outl[14] += -1.0*incr[14]; 
  } else { 
  incr[0] = 0.03125*(6.708203932499369*H[9]*fr[14]-3.872983346207417*H[2]*fr[14]+6.708203932499369*fr[9]*H[12]-3.872983346207417*fr[2]*H[12]+3.0*H[7]*fr[10]-5.196152422706631*fr[4]*H[9]+3.0*fr[0]*H[9]+3.0*H[5]*fr[8]-1.732050807568877*fr[3]*H[7]-1.732050807568877*fr[1]*H[5]+3.0*H[2]*fr[4]-1.732050807568877*fr[0]*H[2])*dxv0*dxv2; 
  incr[1] = -0.00625*(19.36491673103709*H[5]*fr[14]+19.36491673103709*fr[5]*H[12]+7.745966692414834*H[5]*fr[11]+25.98076211353316*fr[8]*H[9]-15.0*fr[1]*H[9]-15.0*H[2]*fr[8]+8.660254037844386*fr[6]*H[7]-15.0*fr[4]*H[5]+8.660254037844386*fr[0]*H[5]+8.660254037844386*fr[1]*H[2])*dxv0*dxv2; 
  incr[2] = -0.03125*(8.660254037844386*H[12]*fr[14]+3.464101615137754*H[12]*fr[12]-6.708203932499369*fr[4]*H[12]+3.872983346207417*fr[0]*H[12]+5.196152422706631*H[9]*fr[9]-3.0*H[2]*fr[9]-3.0*fr[2]*H[9]+1.732050807568877*H[7]*fr[7]+1.732050807568877*H[5]*fr[5]+1.732050807568877*H[2]*fr[2])*dxv0*dxv2; 
  incr[3] = -0.00625*(19.36491673103709*H[7]*fr[14]+7.745966692414834*H[7]*fr[13]+19.36491673103709*fr[7]*H[12]+25.98076211353316*H[9]*fr[10]-15.0*H[2]*fr[10]-15.0*fr[3]*H[9]-15.0*fr[4]*H[7]+8.660254037844386*fr[0]*H[7]+8.660254037844386*H[5]*fr[6]+8.660254037844386*H[2]*fr[3])*dxv0*dxv2; 
  incr[4] = -0.09375*(3.872983346207417*H[9]*fr[14]-2.23606797749979*H[2]*fr[14]+3.872983346207417*fr[9]*H[12]-2.23606797749979*fr[2]*H[12]+1.732050807568877*H[7]*fr[10]-3.0*fr[4]*H[9]+1.732050807568877*fr[0]*H[9]+1.732050807568877*H[5]*fr[8]-1.0*fr[3]*H[7]-1.0*fr[1]*H[5]+1.732050807568877*H[2]*fr[4]-1.0*fr[0]*H[2])*dxv0*dxv2; 
  incr[5] = 0.03125*(6.708203932499369*fr[8]*H[12]-3.872983346207417*fr[1]*H[12]+3.0*H[5]*fr[9]+3.0*fr[5]*H[9]-1.732050807568877*H[2]*fr[5]-1.732050807568877*fr[2]*H[5])*dxv0*dxv2; 
  incr[6] = 0.03125*(3.0*H[5]*fr[10]+3.0*fr[6]*H[9]+3.0*H[7]*fr[8]-1.732050807568877*fr[1]*H[7]-1.732050807568877*H[2]*fr[6]-1.732050807568877*fr[3]*H[5])*dxv0*dxv2; 
  incr[7] = 0.03125*(6.708203932499369*fr[10]*H[12]-3.872983346207417*fr[3]*H[12]+3.0*H[7]*fr[9]+3.0*fr[7]*H[9]-1.732050807568877*H[2]*fr[7]-1.732050807568877*fr[2]*H[7])*dxv0*dxv2; 
  incr[8] = 0.01875*(11.18033988749895*H[5]*fr[14]+11.18033988749895*fr[5]*H[12]+4.47213595499958*H[5]*fr[11]+15.0*fr[8]*H[9]-8.660254037844386*fr[1]*H[9]-8.660254037844386*H[2]*fr[8]+5.0*fr[6]*H[7]-8.660254037844386*fr[4]*H[5]+5.0*fr[0]*H[5]+5.0*fr[1]*H[2])*dxv0*dxv2; 
  incr[9] = 0.09375*(5.0*H[12]*fr[14]+2.0*H[12]*fr[12]-3.872983346207417*fr[4]*H[12]+2.23606797749979*fr[0]*H[12]+3.0*H[9]*fr[9]-1.732050807568877*H[2]*fr[9]-1.732050807568877*fr[2]*H[9]+H[7]*fr[7]+H[5]*fr[5]+H[2]*fr[2])*dxv0*dxv2; 
  incr[10] = 0.01875*(11.18033988749895*H[7]*fr[14]+4.47213595499958*H[7]*fr[13]+11.18033988749895*fr[7]*H[12]+15.0*H[9]*fr[10]-8.660254037844386*H[2]*fr[10]-8.660254037844386*fr[3]*H[9]-8.660254037844386*fr[4]*H[7]+5.0*fr[0]*H[7]+5.0*H[5]*fr[6]+5.0*H[2]*fr[3])*dxv0*dxv2; 
  incr[11] = 0.00625*(15.0*H[9]*fr[11]-8.660254037844386*H[2]*fr[11]+13.41640786499874*H[5]*fr[8]-7.745966692414834*fr[1]*H[5])*dxv0*dxv2; 
  incr[12] = 0.03125*(3.0*H[9]*fr[12]-1.732050807568877*H[2]*fr[12]+6.0*fr[9]*H[12]-3.464101615137754*fr[2]*H[12])*dxv0*dxv2; 
  incr[13] = 0.00625*(15.0*H[9]*fr[13]-8.660254037844386*H[2]*fr[13]+13.41640786499874*H[7]*fr[10]-7.745966692414834*fr[3]*H[7])*dxv0*dxv2; 
  incr[14] = 0.03125*(15.0*H[9]*fr[14]-8.660254037844386*H[2]*fr[14]+15.0*fr[9]*H[12]-8.660254037844386*fr[2]*H[12]+6.708203932499369*H[7]*fr[10]-11.61895003862225*fr[4]*H[9]+6.708203932499369*fr[0]*H[9]+6.708203932499369*H[5]*fr[8]-3.872983346207417*fr[3]*H[7]-3.872983346207417*fr[1]*H[5]+6.708203932499369*H[2]*fr[4]-3.872983346207417*fr[0]*H[2])*dxv0*dxv2; 

  outr[0] += incr[0]; 
  outr[1] += incr[1]; 
  outr[2] += incr[2]; 
  outr[3] += incr[3]; 
  outr[4] += incr[4]; 
  outr[5] += incr[5]; 
  outr[6] += incr[6]; 
  outr[7] += incr[7]; 
  outr[8] += incr[8]; 
  outr[9] += incr[9]; 
  outr[10] += incr[10]; 
  outr[11] += incr[11]; 
  outr[12] += incr[12]; 
  outr[13] += incr[13]; 
  outr[14] += incr[14]; 

  outl[0] += -1.0*incr[0]; 
  outl[1] += -1.0*incr[1]; 
  outl[2] += -1.0*incr[2]; 
  outl[3] += -1.0*incr[3]; 
  outl[4] += incr[4]; 
  outl[5] += -1.0*incr[5]; 
  outl[6] += -1.0*incr[6]; 
  outl[7] += -1.0*incr[7]; 
  outl[8] += incr[8]; 
  outl[9] += incr[9]; 
  outl[10] += incr[10]; 
  outl[11] += -1.0*incr[11]; 
  outl[12] += -1.0*incr[12]; 
  outl[13] += -1.0*incr[13]; 
  outl[14] += -1.0*incr[14]; 
  } 
} 
