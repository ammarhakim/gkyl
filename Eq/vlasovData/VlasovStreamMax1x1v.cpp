#include <VlasovModDecl.h> 
double VlasovVolStream1x1vMaxP1(const double *w, const double *dxv, const double *f, double *out) 
{ 
// w[NDIM]: Cell-center coordinates. dxv[NDIM]: Cell spacing. f: Input distribution function. out: Incremented output 
  double dv0dx0 = dxv[1]/dxv[0]; 
  double w0dx0 = w[1]/dxv[0]; 
  out[1] += 3.464101615137754*f[0]*w0dx0+f[2]*dv0dx0; 
return std::abs(w0dx0)+dv0dx0/2; 
} 
double VlasovVolStream1x1vMaxP2(const double *w, const double *dxv, const double *f, double *out) 
{ 
// w[NDIM]: Cell-center coordinates. dxv[NDIM]: Cell spacing. f: Input distribution function. out: Incremented output 
  double dv0dx0 = dxv[1]/dxv[0]; 
  double w0dx0 = w[1]/dxv[0]; 
  out[1] += 3.464101615137754*f[0]*w0dx0+f[2]*dv0dx0; 
  out[3] += 3.464101615137754*f[2]*w0dx0+(0.8944271909999159*f[5]+f[0])*dv0dx0; 
  out[4] += 7.745966692414834*f[1]*w0dx0+2.23606797749979*f[3]*dv0dx0; 
return std::abs(w0dx0)+dv0dx0/2; 
} 
double VlasovVolStream1x1vMaxP3(const double *w, const double *dxv, const double *f, double *out) 
{ 
// w[NDIM]: Cell-center coordinates. dxv[NDIM]: Cell spacing. f: Input distribution function. out: Incremented output 
  double dv0dx0 = dxv[1]/dxv[0]; 
  double w0dx0 = w[1]/dxv[0]; 
  out[1] += 3.464101615137754*f[0]*w0dx0+f[2]*dv0dx0; 
  out[3] += 3.464101615137754*f[2]*w0dx0+(0.8944271909999159*f[5]+f[0])*dv0dx0; 
  out[4] += 7.745966692414834*f[1]*w0dx0+2.23606797749979*f[3]*dv0dx0; 
  out[6] += 7.745966692414834*f[3]*w0dx0+(2.0*f[7]+2.23606797749979*f[1])*dv0dx0; 
  out[7] += 3.464101615137755*f[5]*w0dx0+(0.8783100656536798*f[9]+0.8944271909999161*f[2])*dv0dx0; 
  out[8] += (11.83215956619923*f[4]+5.291502622129181*f[0])*w0dx0+(3.415650255319866*f[6]+1.527525231651947*f[2])*dv0dx0; 
return std::abs(w0dx0)+dv0dx0/2; 
} 
double VlasovVolStream1x1vMaxP4(const double *w, const double *dxv, const double *f, double *out) 
{ 
// w[NDIM]: Cell-center coordinates. dxv[NDIM]: Cell spacing. f: Input distribution function. out: Incremented output 
  double dv0dx0 = dxv[1]/dxv[0]; 
  double w0dx0 = w[1]/dxv[0]; 
  out[1] += 3.464101615137754*f[0]*w0dx0+f[2]*dv0dx0; 
  out[3] += 3.464101615137754*f[2]*w0dx0+(0.8944271909999159*f[5]+f[0])*dv0dx0; 
  out[4] += 7.745966692414834*f[1]*w0dx0+2.23606797749979*f[3]*dv0dx0; 
  out[6] += 7.745966692414834*f[3]*w0dx0+(2.0*f[7]+2.23606797749979*f[1])*dv0dx0; 
  out[7] += 3.464101615137755*f[5]*w0dx0+(0.8783100656536798*f[9]+0.8944271909999161*f[2])*dv0dx0; 
  out[8] += (11.83215956619923*f[4]+5.291502622129181*f[0])*w0dx0+(3.415650255319866*f[6]+1.527525231651947*f[2])*dv0dx0; 
  out[10] += 7.745966692414834*f[7]*w0dx0+(1.963961012123931*f[12]+2.0*f[3])*dv0dx0; 
  out[11] += (11.83215956619923*f[6]+5.291502622129181*f[2])*w0dx0+(3.055050463303893*f[10]+1.366260102127946*f[5]+3.415650255319866*f[4]+1.527525231651947*f[0])*dv0dx0; 
  out[12] += 3.464101615137754*f[9]*w0dx0+(0.8728715609439696*f[14]+0.8783100656536798*f[5])*dv0dx0; 
  out[13] += (15.87450786638754*f[8]+10.39230484541326*f[1])*w0dx0+(4.58257569495584*f[11]+3.0*f[3])*dv0dx0; 
return std::abs(w0dx0)+dv0dx0/2; 
} 
double VlasovVolStream1x1vMaxP5(const double *w, const double *dxv, const double *f, double *out) 
{ 
// w[NDIM]: Cell-center coordinates. dxv[NDIM]: Cell spacing. f: Input distribution function. out: Incremented output 
  double dv0dx0 = dxv[1]/dxv[0]; 
  double w0dx0 = w[1]/dxv[0]; 
  out[1] += 3.464101615137754*f[0]*w0dx0+f[2]*dv0dx0; 
  out[3] += 3.464101615137754*f[2]*w0dx0+(0.8944271909999159*f[5]+f[0])*dv0dx0; 
  out[4] += 7.745966692414834*f[1]*w0dx0+2.23606797749979*f[3]*dv0dx0; 
  out[6] += 7.745966692414834*f[3]*w0dx0+(2.0*f[7]+2.23606797749979*f[1])*dv0dx0; 
  out[7] += 3.464101615137755*f[5]*w0dx0+(0.8783100656536798*f[9]+0.8944271909999161*f[2])*dv0dx0; 
  out[8] += (11.83215956619923*f[4]+5.291502622129181*f[0])*w0dx0+(3.415650255319866*f[6]+1.527525231651947*f[2])*dv0dx0; 
  out[10] += 7.745966692414834*f[7]*w0dx0+(1.963961012123931*f[12]+2.0*f[3])*dv0dx0; 
  out[11] += (11.83215956619923*f[6]+5.291502622129181*f[2])*w0dx0+(3.055050463303893*f[10]+1.366260102127946*f[5]+3.415650255319866*f[4]+1.527525231651947*f[0])*dv0dx0; 
  out[12] += 3.464101615137754*f[9]*w0dx0+(0.8728715609439696*f[14]+0.8783100656536798*f[5])*dv0dx0; 
  out[13] += (15.87450786638754*f[8]+10.39230484541326*f[1])*w0dx0+(4.58257569495584*f[11]+3.0*f[3])*dv0dx0; 
  out[15] += (11.83215956619923*f[10]+5.291502622129181*f[5])*w0dx0+(3.0*f[16]+1.341640786499874*f[9]+3.055050463303893*f[6]+1.366260102127947*f[2])*dv0dx0; 
  out[16] += 7.745966692414833*f[12]*w0dx0+(1.951800145897067*f[18]+1.963961012123931*f[7])*dv0dx0; 
  out[17] += (15.87450786638754*f[11]+10.39230484541326*f[3])*w0dx0+(4.09878030638384*f[15]+4.58257569495584*f[8]+2.683281572999748*f[7]+3.0*f[1])*dv0dx0; 
  out[18] += 3.464101615137754*f[14]*w0dx0+(0.8703882797784893*f[20]+0.8728715609439696*f[9])*dv0dx0; 
  out[19] += (19.8997487421324*f[13]+14.83239697419133*f[4]+6.6332495807108*f[0])*w0dx0+(5.744562646538029*f[17]+4.281744192888376*f[6]+1.914854215512676*f[2])*dv0dx0; 
return std::abs(w0dx0)+dv0dx0/2; 
} 
double VlasovVolStream1x1vMaxP6(const double *w, const double *dxv, const double *f, double *out) 
{ 
// w[NDIM]: Cell-center coordinates. dxv[NDIM]: Cell spacing. f: Input distribution function. out: Incremented output 
  double dv0dx0 = dxv[1]/dxv[0]; 
  double w0dx0 = w[1]/dxv[0]; 
  out[1] += 3.464101615137754*f[0]*w0dx0+f[2]*dv0dx0; 
  out[3] += 3.464101615137754*f[2]*w0dx0+(0.8944271909999159*f[5]+f[0])*dv0dx0; 
  out[4] += 7.745966692414834*f[1]*w0dx0+2.23606797749979*f[3]*dv0dx0; 
  out[6] += 7.745966692414834*f[3]*w0dx0+(2.0*f[7]+2.23606797749979*f[1])*dv0dx0; 
  out[7] += 3.464101615137755*f[5]*w0dx0+(0.8783100656536798*f[9]+0.8944271909999161*f[2])*dv0dx0; 
  out[8] += (11.83215956619923*f[4]+5.291502622129181*f[0])*w0dx0+(3.415650255319866*f[6]+1.527525231651947*f[2])*dv0dx0; 
  out[10] += 7.745966692414834*f[7]*w0dx0+(1.963961012123931*f[12]+2.0*f[3])*dv0dx0; 
  out[11] += (11.83215956619923*f[6]+5.291502622129181*f[2])*w0dx0+(3.055050463303893*f[10]+1.366260102127946*f[5]+3.415650255319866*f[4]+1.527525231651947*f[0])*dv0dx0; 
  out[12] += 3.464101615137754*f[9]*w0dx0+(0.8728715609439696*f[14]+0.8783100656536798*f[5])*dv0dx0; 
  out[13] += (15.87450786638754*f[8]+10.39230484541326*f[1])*w0dx0+(4.58257569495584*f[11]+3.0*f[3])*dv0dx0; 
  out[15] += (11.83215956619923*f[10]+5.291502622129181*f[5])*w0dx0+(3.0*f[16]+1.341640786499874*f[9]+3.055050463303893*f[6]+1.366260102127947*f[2])*dv0dx0; 
  out[16] += 7.745966692414833*f[12]*w0dx0+(1.951800145897067*f[18]+1.963961012123931*f[7])*dv0dx0; 
  out[17] += (15.87450786638754*f[11]+10.39230484541326*f[3])*w0dx0+(4.09878030638384*f[15]+4.58257569495584*f[8]+2.683281572999748*f[7]+3.0*f[1])*dv0dx0; 
  out[18] += 3.464101615137754*f[14]*w0dx0+(0.8703882797784893*f[20]+0.8728715609439696*f[9])*dv0dx0; 
  out[19] += (19.8997487421324*f[13]+14.83239697419133*f[4]+6.6332495807108*f[0])*w0dx0+(5.744562646538029*f[17]+4.281744192888376*f[6]+1.914854215512676*f[2])*dv0dx0; 
  out[21] += (11.83215956619923*f[16]+5.291502622129181*f[9])*w0dx0+(2.98142396999972*f[23]+1.333333333333333*f[14]+3.0*f[10]+1.341640786499874*f[5])*dv0dx0; 
  out[22] += (15.87450786638754*f[15]+10.39230484541326*f[7])*w0dx0+(4.024922359499621*f[21]+2.63493019696104*f[12]+4.098780306383839*f[11]+2.683281572999748*f[3])*dv0dx0; 
  out[23] += 7.745966692414834*f[18]*w0dx0+(1.946247360403808*f[25]+1.951800145897067*f[12])*dv0dx0; 
  out[24] += (19.8997487421324*f[17]+14.83239697419133*f[6]+6.633249580710801*f[2])*w0dx0+(5.138093031466052*f[22]+5.744562646538029*f[13]+3.829708431025352*f[10]+1.71269767715535*f[5]+4.281744192888376*f[4]+1.914854215512676*f[0])*dv0dx0; 
  out[25] += 3.464101615137755*f[20]*w0dx0+(0.8690481892534816*f[27]+0.8703882797784892*f[14])*dv0dx0; 
  out[26] += (23.91652148620279*f[19]+19.07878402833891*f[8]+12.48999599679679*f[1])*w0dx0+(6.904105059069325*f[24]+5.507570547286101*f[11]+3.605551275463989*f[3])*dv0dx0; 
return std::abs(w0dx0)+dv0dx0/2; 
} 
double VlasovVolStream1x1vMaxP7(const double *w, const double *dxv, const double *f, double *out) 
{ 
// w[NDIM]: Cell-center coordinates. dxv[NDIM]: Cell spacing. f: Input distribution function. out: Incremented output 
  double dv0dx0 = dxv[1]/dxv[0]; 
  double w0dx0 = w[1]/dxv[0]; 
  out[1] += 3.464101615137754*f[0]*w0dx0+f[2]*dv0dx0; 
  out[3] += 3.464101615137754*f[2]*w0dx0+(0.8944271909999159*f[5]+f[0])*dv0dx0; 
  out[4] += 7.745966692414834*f[1]*w0dx0+2.23606797749979*f[3]*dv0dx0; 
  out[6] += 7.745966692414834*f[3]*w0dx0+(2.0*f[7]+2.23606797749979*f[1])*dv0dx0; 
  out[7] += 3.464101615137755*f[5]*w0dx0+(0.8783100656536798*f[9]+0.8944271909999161*f[2])*dv0dx0; 
  out[8] += (11.83215956619923*f[4]+5.291502622129181*f[0])*w0dx0+(3.415650255319866*f[6]+1.527525231651947*f[2])*dv0dx0; 
  out[10] += 7.745966692414834*f[7]*w0dx0+(1.963961012123931*f[12]+2.0*f[3])*dv0dx0; 
  out[11] += (11.83215956619923*f[6]+5.291502622129181*f[2])*w0dx0+(3.055050463303893*f[10]+1.366260102127946*f[5]+3.415650255319866*f[4]+1.527525231651947*f[0])*dv0dx0; 
  out[12] += 3.464101615137754*f[9]*w0dx0+(0.8728715609439696*f[14]+0.8783100656536798*f[5])*dv0dx0; 
  out[13] += (15.87450786638754*f[8]+10.39230484541326*f[1])*w0dx0+(4.58257569495584*f[11]+3.0*f[3])*dv0dx0; 
  out[15] += (11.83215956619923*f[10]+5.291502622129181*f[5])*w0dx0+(3.0*f[16]+1.341640786499874*f[9]+3.055050463303893*f[6]+1.366260102127947*f[2])*dv0dx0; 
  out[16] += 7.745966692414833*f[12]*w0dx0+(1.951800145897067*f[18]+1.963961012123931*f[7])*dv0dx0; 
  out[17] += (15.87450786638754*f[11]+10.39230484541326*f[3])*w0dx0+(4.09878030638384*f[15]+4.58257569495584*f[8]+2.683281572999748*f[7]+3.0*f[1])*dv0dx0; 
  out[18] += 3.464101615137754*f[14]*w0dx0+(0.8703882797784893*f[20]+0.8728715609439696*f[9])*dv0dx0; 
  out[19] += (19.8997487421324*f[13]+14.83239697419133*f[4]+6.6332495807108*f[0])*w0dx0+(5.744562646538029*f[17]+4.281744192888376*f[6]+1.914854215512676*f[2])*dv0dx0; 
  out[21] += (11.83215956619923*f[16]+5.291502622129181*f[9])*w0dx0+(2.98142396999972*f[23]+1.333333333333333*f[14]+3.0*f[10]+1.341640786499874*f[5])*dv0dx0; 
  out[22] += (15.87450786638754*f[15]+10.39230484541326*f[7])*w0dx0+(4.024922359499621*f[21]+2.63493019696104*f[12]+4.098780306383839*f[11]+2.683281572999748*f[3])*dv0dx0; 
  out[23] += 7.745966692414834*f[18]*w0dx0+(1.946247360403808*f[25]+1.951800145897067*f[12])*dv0dx0; 
  out[24] += (19.8997487421324*f[17]+14.83239697419133*f[6]+6.633249580710801*f[2])*w0dx0+(5.138093031466052*f[22]+5.744562646538029*f[13]+3.829708431025352*f[10]+1.71269767715535*f[5]+4.281744192888376*f[4]+1.914854215512676*f[0])*dv0dx0; 
  out[25] += 3.464101615137755*f[20]*w0dx0+(0.8690481892534816*f[27]+0.8703882797784892*f[14])*dv0dx0; 
  out[26] += (23.91652148620279*f[19]+19.07878402833891*f[8]+12.48999599679679*f[1])*w0dx0+(6.904105059069325*f[24]+5.507570547286101*f[11]+3.605551275463989*f[3])*dv0dx0; 
  out[28] += (15.87450786638754*f[21]+10.39230484541326*f[12])*w0dx0+(4.0*f[29]+2.618614682831908*f[18]+4.024922359499621*f[15]+2.63493019696104*f[7])*dv0dx0; 
  out[29] += (11.83215956619923*f[23]+5.291502622129181*f[14])*w0dx0+(2.972941950052816*f[31]+1.329540058695776*f[20]+2.981423969999719*f[16]+1.333333333333333*f[9])*dv0dx0; 
  out[30] += (19.8997487421324*f[22]+14.83239697419133*f[10]+6.6332495807108*f[5])*w0dx0+(5.045507195232493*f[28]+5.138093031466052*f[17]+3.760699023168053*f[16]+1.681835731744164*f[9]+3.829708431025352*f[6]+1.712697677155351*f[2])*dv0dx0; 
  out[31] += 7.745966692414833*f[25]*w0dx0+(1.943250826893888*f[33]+1.946247360403808*f[18])*dv0dx0; 
  out[32] += (23.9165214862028*f[24]+19.07878402833891*f[11]+12.4899959967968*f[3])*w0dx0+(6.175219294351685*f[30]+6.904105059069326*f[19]+4.926120853842978*f[15]+5.507570547286102*f[8]+3.22490309931942*f[7]+3.60555127546399*f[1])*dv0dx0; 
  out[33] += 3.464101615137755*f[27]*w0dx0+(0.8682431421244592*f[35]+0.8690481892534818*f[20])*dv0dx0; 
  out[34] += (27.92848008753788*f[26]+23.2379000772445*f[13]+17.32050807568877*f[4]+7.745966692414834*f[0])*w0dx0+(8.06225774829855*f[32]+6.708203932499369*f[17]+5.0*f[6]+2.23606797749979*f[2])*dv0dx0; 
return std::abs(w0dx0)+dv0dx0/2; 
} 
double VlasovVolStream1x1vMaxP8(const double *w, const double *dxv, const double *f, double *out) 
{ 
// w[NDIM]: Cell-center coordinates. dxv[NDIM]: Cell spacing. f: Input distribution function. out: Incremented output 
  double dv0dx0 = dxv[1]/dxv[0]; 
  double w0dx0 = w[1]/dxv[0]; 
  out[1] += 3.464101615137754*f[0]*w0dx0+f[2]*dv0dx0; 
  out[3] += 3.464101615137754*f[2]*w0dx0+(0.8944271909999159*f[5]+f[0])*dv0dx0; 
  out[4] += 7.745966692414834*f[1]*w0dx0+2.23606797749979*f[3]*dv0dx0; 
  out[6] += 7.745966692414834*f[3]*w0dx0+(2.0*f[7]+2.23606797749979*f[1])*dv0dx0; 
  out[7] += 3.464101615137755*f[5]*w0dx0+(0.8783100656536798*f[9]+0.8944271909999161*f[2])*dv0dx0; 
  out[8] += (11.83215956619923*f[4]+5.291502622129181*f[0])*w0dx0+(3.415650255319866*f[6]+1.527525231651947*f[2])*dv0dx0; 
  out[10] += 7.745966692414834*f[7]*w0dx0+(1.963961012123931*f[12]+2.0*f[3])*dv0dx0; 
  out[11] += (11.83215956619923*f[6]+5.291502622129181*f[2])*w0dx0+(3.055050463303893*f[10]+1.366260102127946*f[5]+3.415650255319866*f[4]+1.527525231651947*f[0])*dv0dx0; 
  out[12] += 3.464101615137754*f[9]*w0dx0+(0.8728715609439696*f[14]+0.8783100656536798*f[5])*dv0dx0; 
  out[13] += (15.87450786638754*f[8]+10.39230484541326*f[1])*w0dx0+(4.58257569495584*f[11]+3.0*f[3])*dv0dx0; 
  out[15] += (11.83215956619923*f[10]+5.291502622129181*f[5])*w0dx0+(3.0*f[16]+1.341640786499874*f[9]+3.055050463303893*f[6]+1.366260102127947*f[2])*dv0dx0; 
  out[16] += 7.745966692414833*f[12]*w0dx0+(1.951800145897067*f[18]+1.963961012123931*f[7])*dv0dx0; 
  out[17] += (15.87450786638754*f[11]+10.39230484541326*f[3])*w0dx0+(4.09878030638384*f[15]+4.58257569495584*f[8]+2.683281572999748*f[7]+3.0*f[1])*dv0dx0; 
  out[18] += 3.464101615137754*f[14]*w0dx0+(0.8703882797784893*f[20]+0.8728715609439696*f[9])*dv0dx0; 
  out[19] += (19.8997487421324*f[13]+14.83239697419133*f[4]+6.6332495807108*f[0])*w0dx0+(5.744562646538029*f[17]+4.281744192888376*f[6]+1.914854215512676*f[2])*dv0dx0; 
  out[21] += (11.83215956619923*f[16]+5.291502622129181*f[9])*w0dx0+(2.98142396999972*f[23]+1.333333333333333*f[14]+3.0*f[10]+1.341640786499874*f[5])*dv0dx0; 
  out[22] += (15.87450786638754*f[15]+10.39230484541326*f[7])*w0dx0+(4.024922359499621*f[21]+2.63493019696104*f[12]+4.098780306383839*f[11]+2.683281572999748*f[3])*dv0dx0; 
  out[23] += 7.745966692414834*f[18]*w0dx0+(1.946247360403808*f[25]+1.951800145897067*f[12])*dv0dx0; 
  out[24] += (19.8997487421324*f[17]+14.83239697419133*f[6]+6.633249580710801*f[2])*w0dx0+(5.138093031466052*f[22]+5.744562646538029*f[13]+3.829708431025352*f[10]+1.71269767715535*f[5]+4.281744192888376*f[4]+1.914854215512676*f[0])*dv0dx0; 
  out[25] += 3.464101615137755*f[20]*w0dx0+(0.8690481892534816*f[27]+0.8703882797784892*f[14])*dv0dx0; 
  out[26] += (23.91652148620279*f[19]+19.07878402833891*f[8]+12.48999599679679*f[1])*w0dx0+(6.904105059069325*f[24]+5.507570547286101*f[11]+3.605551275463989*f[3])*dv0dx0; 
  out[28] += (15.87450786638754*f[21]+10.39230484541326*f[12])*w0dx0+(4.0*f[29]+2.618614682831908*f[18]+4.024922359499621*f[15]+2.63493019696104*f[7])*dv0dx0; 
  out[29] += (11.83215956619923*f[23]+5.291502622129181*f[14])*w0dx0+(2.972941950052816*f[31]+1.329540058695776*f[20]+2.981423969999719*f[16]+1.333333333333333*f[9])*dv0dx0; 
  out[30] += (19.8997487421324*f[22]+14.83239697419133*f[10]+6.6332495807108*f[5])*w0dx0+(5.045507195232493*f[28]+5.138093031466052*f[17]+3.760699023168053*f[16]+1.681835731744164*f[9]+3.829708431025352*f[6]+1.712697677155351*f[2])*dv0dx0; 
  out[31] += 7.745966692414833*f[25]*w0dx0+(1.943250826893888*f[33]+1.946247360403808*f[18])*dv0dx0; 
  out[32] += (23.9165214862028*f[24]+19.07878402833891*f[11]+12.4899959967968*f[3])*w0dx0+(6.175219294351685*f[30]+6.904105059069326*f[19]+4.926120853842978*f[15]+5.507570547286102*f[8]+3.22490309931942*f[7]+3.60555127546399*f[1])*dv0dx0; 
  out[33] += 3.464101615137755*f[27]*w0dx0+(0.8682431421244592*f[35]+0.8690481892534818*f[20])*dv0dx0; 
  out[34] += (27.92848008753788*f[26]+23.2379000772445*f[13]+17.32050807568877*f[4]+7.745966692414834*f[0])*w0dx0+(8.06225774829855*f[32]+6.708203932499369*f[17]+5.0*f[6]+2.23606797749979*f[2])*dv0dx0; 
  out[36] += (15.87450786638754*f[29]+10.39230484541326*f[18])*w0dx0+(3.988620176087328*f[38]+2.611164839335467*f[25]+4.0*f[21]+2.618614682831908*f[12])*dv0dx0; 
  out[37] += (19.8997487421324*f[28]+14.83239697419133*f[16]+6.6332495807108*f[9])*w0dx0+(5.01426536422407*f[36]+3.737412737209254*f[23]+5.045507195232494*f[22]+1.67142178807469*f[14]+3.760699023168052*f[10]+1.681835731744164*f[5])*dv0dx0; 
  out[38] += (11.83215956619923*f[31]+5.291502622129181*f[20])*w0dx0+(2.968364669508922*f[40]+1.327493036606129*f[27]+2.972941950052816*f[23]+1.329540058695776*f[14])*dv0dx0; 
  out[39] += (23.9165214862028*f[30]+19.07878402833891*f[15]+12.4899959967968*f[7])*w0dx0+(6.063944967711083*f[37]+6.175219294351685*f[24]+4.837354648979129*f[21]+3.166791977470485*f[12]+4.926120853842977*f[11]+3.22490309931942*f[3])*dv0dx0; 
  out[40] += 7.745966692414834*f[33]*w0dx0+(1.941450686788302*f[42]+1.943250826893887*f[25])*dv0dx0; 
  out[41] += (27.92848008753788*f[32]+23.2379000772445*f[17]+17.32050807568877*f[6]+7.745966692414834*f[2])*w0dx0+(7.211102550927978*f[39]+8.06225774829855*f[26]+6.0*f[22]+6.708203932499369*f[13]+4.47213595499958*f[10]+2.0*f[5]+5.0*f[4]+2.23606797749979*f[0])*dv0dx0; 
  out[42] += 3.464101615137755*f[35]*w0dx0+(0.8677218312746247*f[44]+0.8682431421244592*f[27])*dv0dx0; 
  out[43] += (31.93743884534263*f[34]+27.34958866235469*f[19]+21.81742422927143*f[8]+14.2828568570857*f[1])*w0dx0+(9.219544457292887*f[41]+7.895146188218008*f[24]+6.298147875897061*f[11]+4.123105625617661*f[3])*dv0dx0; 
return std::abs(w0dx0)+dv0dx0/2; 
} 
double VlasovVolStream1x1vMaxP9(const double *w, const double *dxv, const double *f, double *out) 
{ 
// w[NDIM]: Cell-center coordinates. dxv[NDIM]: Cell spacing. f: Input distribution function. out: Incremented output 
  double dv0dx0 = dxv[1]/dxv[0]; 
  double w0dx0 = w[1]/dxv[0]; 
  out[1] += 3.464101615137754*f[0]*w0dx0+f[2]*dv0dx0; 
  out[3] += 3.464101615137754*f[2]*w0dx0+(0.8944271909999159*f[5]+f[0])*dv0dx0; 
  out[4] += 7.745966692414834*f[1]*w0dx0+2.23606797749979*f[3]*dv0dx0; 
  out[6] += 7.745966692414834*f[3]*w0dx0+(2.0*f[7]+2.23606797749979*f[1])*dv0dx0; 
  out[7] += 3.464101615137755*f[5]*w0dx0+(0.8783100656536798*f[9]+0.8944271909999161*f[2])*dv0dx0; 
  out[8] += (11.83215956619923*f[4]+5.291502622129181*f[0])*w0dx0+(3.415650255319866*f[6]+1.527525231651947*f[2])*dv0dx0; 
  out[10] += 7.745966692414834*f[7]*w0dx0+(1.963961012123931*f[12]+2.0*f[3])*dv0dx0; 
  out[11] += (11.83215956619923*f[6]+5.291502622129181*f[2])*w0dx0+(3.055050463303893*f[10]+1.366260102127946*f[5]+3.415650255319866*f[4]+1.527525231651947*f[0])*dv0dx0; 
  out[12] += 3.464101615137754*f[9]*w0dx0+(0.8728715609439696*f[14]+0.8783100656536798*f[5])*dv0dx0; 
  out[13] += (15.87450786638754*f[8]+10.39230484541326*f[1])*w0dx0+(4.58257569495584*f[11]+3.0*f[3])*dv0dx0; 
  out[15] += (11.83215956619923*f[10]+5.291502622129181*f[5])*w0dx0+(3.0*f[16]+1.341640786499874*f[9]+3.055050463303893*f[6]+1.366260102127947*f[2])*dv0dx0; 
  out[16] += 7.745966692414833*f[12]*w0dx0+(1.951800145897067*f[18]+1.963961012123931*f[7])*dv0dx0; 
  out[17] += (15.87450786638754*f[11]+10.39230484541326*f[3])*w0dx0+(4.09878030638384*f[15]+4.58257569495584*f[8]+2.683281572999748*f[7]+3.0*f[1])*dv0dx0; 
  out[18] += 3.464101615137754*f[14]*w0dx0+(0.8703882797784893*f[20]+0.8728715609439696*f[9])*dv0dx0; 
  out[19] += (19.8997487421324*f[13]+14.83239697419133*f[4]+6.6332495807108*f[0])*w0dx0+(5.744562646538029*f[17]+4.281744192888376*f[6]+1.914854215512676*f[2])*dv0dx0; 
  out[21] += (11.83215956619923*f[16]+5.291502622129181*f[9])*w0dx0+(2.98142396999972*f[23]+1.333333333333333*f[14]+3.0*f[10]+1.341640786499874*f[5])*dv0dx0; 
  out[22] += (15.87450786638754*f[15]+10.39230484541326*f[7])*w0dx0+(4.024922359499621*f[21]+2.63493019696104*f[12]+4.098780306383839*f[11]+2.683281572999748*f[3])*dv0dx0; 
  out[23] += 7.745966692414834*f[18]*w0dx0+(1.946247360403808*f[25]+1.951800145897067*f[12])*dv0dx0; 
  out[24] += (19.8997487421324*f[17]+14.83239697419133*f[6]+6.633249580710801*f[2])*w0dx0+(5.138093031466052*f[22]+5.744562646538029*f[13]+3.829708431025352*f[10]+1.71269767715535*f[5]+4.281744192888376*f[4]+1.914854215512676*f[0])*dv0dx0; 
  out[25] += 3.464101615137755*f[20]*w0dx0+(0.8690481892534816*f[27]+0.8703882797784892*f[14])*dv0dx0; 
  out[26] += (23.91652148620279*f[19]+19.07878402833891*f[8]+12.48999599679679*f[1])*w0dx0+(6.904105059069325*f[24]+5.507570547286101*f[11]+3.605551275463989*f[3])*dv0dx0; 
  out[28] += (15.87450786638754*f[21]+10.39230484541326*f[12])*w0dx0+(4.0*f[29]+2.618614682831908*f[18]+4.024922359499621*f[15]+2.63493019696104*f[7])*dv0dx0; 
  out[29] += (11.83215956619923*f[23]+5.291502622129181*f[14])*w0dx0+(2.972941950052816*f[31]+1.329540058695776*f[20]+2.981423969999719*f[16]+1.333333333333333*f[9])*dv0dx0; 
  out[30] += (19.8997487421324*f[22]+14.83239697419133*f[10]+6.6332495807108*f[5])*w0dx0+(5.045507195232493*f[28]+5.138093031466052*f[17]+3.760699023168053*f[16]+1.681835731744164*f[9]+3.829708431025352*f[6]+1.712697677155351*f[2])*dv0dx0; 
  out[31] += 7.745966692414833*f[25]*w0dx0+(1.943250826893888*f[33]+1.946247360403808*f[18])*dv0dx0; 
  out[32] += (23.9165214862028*f[24]+19.07878402833891*f[11]+12.4899959967968*f[3])*w0dx0+(6.175219294351685*f[30]+6.904105059069326*f[19]+4.926120853842978*f[15]+5.507570547286102*f[8]+3.22490309931942*f[7]+3.60555127546399*f[1])*dv0dx0; 
  out[33] += 3.464101615137755*f[27]*w0dx0+(0.8682431421244592*f[35]+0.8690481892534818*f[20])*dv0dx0; 
  out[34] += (27.92848008753788*f[26]+23.2379000772445*f[13]+17.32050807568877*f[4]+7.745966692414834*f[0])*w0dx0+(8.06225774829855*f[32]+6.708203932499369*f[17]+5.0*f[6]+2.23606797749979*f[2])*dv0dx0; 
  out[36] += (15.87450786638754*f[29]+10.39230484541326*f[18])*w0dx0+(3.988620176087328*f[38]+2.611164839335467*f[25]+4.0*f[21]+2.618614682831908*f[12])*dv0dx0; 
  out[37] += (19.8997487421324*f[28]+14.83239697419133*f[16]+6.6332495807108*f[9])*w0dx0+(5.01426536422407*f[36]+3.737412737209254*f[23]+5.045507195232494*f[22]+1.67142178807469*f[14]+3.760699023168052*f[10]+1.681835731744164*f[5])*dv0dx0; 
  out[38] += (11.83215956619923*f[31]+5.291502622129181*f[20])*w0dx0+(2.968364669508922*f[40]+1.327493036606129*f[27]+2.972941950052816*f[23]+1.329540058695776*f[14])*dv0dx0; 
  out[39] += (23.9165214862028*f[30]+19.07878402833891*f[15]+12.4899959967968*f[7])*w0dx0+(6.063944967711083*f[37]+6.175219294351685*f[24]+4.837354648979129*f[21]+3.166791977470485*f[12]+4.926120853842977*f[11]+3.22490309931942*f[3])*dv0dx0; 
  out[40] += 7.745966692414834*f[33]*w0dx0+(1.941450686788302*f[42]+1.943250826893887*f[25])*dv0dx0; 
  out[41] += (27.92848008753788*f[32]+23.2379000772445*f[17]+17.32050807568877*f[6]+7.745966692414834*f[2])*w0dx0+(7.211102550927978*f[39]+8.06225774829855*f[26]+6.0*f[22]+6.708203932499369*f[13]+4.47213595499958*f[10]+2.0*f[5]+5.0*f[4]+2.23606797749979*f[0])*dv0dx0; 
  out[42] += 3.464101615137755*f[35]*w0dx0+(0.8677218312746247*f[44]+0.8682431421244592*f[27])*dv0dx0; 
  out[43] += (31.93743884534263*f[34]+27.34958866235469*f[19]+21.81742422927143*f[8]+14.2828568570857*f[1])*w0dx0+(9.219544457292887*f[41]+7.895146188218008*f[24]+6.298147875897061*f[11]+4.123105625617661*f[3])*dv0dx0; 
  out[45] += (19.8997487421324*f[36]+14.83239697419133*f[23]+6.6332495807108*f[14])*w0dx0+(5.0*f[46]+3.726779962499649*f[31]+5.01426536422407*f[28]+1.666666666666667*f[20]+3.737412737209254*f[16]+1.67142178807469*f[9])*dv0dx0; 
  out[46] += (15.87450786638754*f[38]+10.39230484541326*f[25])*w0dx0+(3.982479109818388*f[48]+2.607144567760445*f[33]+3.988620176087328*f[29]+2.611164839335467*f[18])*dv0dx0; 
  out[47] += (23.91652148620279*f[37]+19.07878402833891*f[21]+12.48999599679679*f[12])*w0dx0+(6.026396959831*f[45]+6.063944967711083*f[30]+4.807401700618652*f[29]+3.147183169877773*f[18]+4.837354648979129*f[15]+3.166791977470486*f[7])*dv0dx0; 
  out[48] += (11.83215956619923*f[40]+5.291502622129181*f[27])*w0dx0+(2.965614910077132*f[50]+1.326263306803878*f[35]+2.968364669508922*f[31]+1.327493036606129*f[20])*dv0dx0; 
  out[49] += (27.92848008753788*f[39]+23.2379000772445*f[22]+17.32050807568877*f[10]+7.745966692414834*f[5])*w0dx0+(7.081162132224986*f[47]+7.21110255092798*f[32]+5.891883036371792*f[28]+6.0*f[17]+4.391550328268398*f[16]+1.963961012123931*f[9]+4.47213595499958*f[6]+2.0*f[2])*dv0dx0; 
  out[50] += 7.745966692414834*f[42]*w0dx0+(1.940285000290664*f[52]+1.941450686788302*f[33])*dv0dx0; 
  out[51] += (31.93743884534263*f[41]+27.34958866235469*f[24]+21.81742422927143*f[11]+14.2828568570857*f[3])*w0dx0+(8.246211251235323*f[49]+9.219544457292887*f[34]+7.061633427661526*f[30]+7.895146188218007*f[19]+5.633234713140697*f[15]+6.298147875897062*f[8]+3.687817782917155*f[7]+4.123105625617661*f[1])*dv0dx0; 
  out[52] += 3.464101615137755*f[44]*w0dx0+(0.8673649643743679*f[54]+0.8677218312746247*f[35])*dv0dx0; 
  out[53] += (35.94440151122286*f[43]+31.43246729100342*f[26]+26.15339366124405*f[13]+19.49358868961793*f[4]+8.717797887081348*f[0])*w0dx0+(10.37625494418225*f[51]+9.073771725877467*f[32]+7.54983443527075*f[17]+5.627314338711378*f[6]+2.516611478423584*f[2])*dv0dx0; 
return std::abs(w0dx0)+dv0dx0/2; 
} 
