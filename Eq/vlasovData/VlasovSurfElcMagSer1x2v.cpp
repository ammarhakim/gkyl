#include <VlasovModDecl.h> 
double VlasovSurfElcMag1x2vSer_VX_P1(const double *w, const double *dxv, const double amax, const double *EM, const double *fl, const double *fr, double *outl, double *outr) 
{ 
// w: Cell-center coordinates. dxv[NDIM]: Cell spacing. amax: amax in global lax flux. E: EM field. fl/fr: Distribution function in left/right cells 
// outl/outr: output distribution function in left/right cells 
// returns abs(amid) for use in determining amax in cfl and global lax flux 
  double dv10 = 2/dxv[1]; 
  const double *E0 = &EM[0]; 

  const double dv1 = dxv[1], wv1 = w[1]; 
  const double dv2 = dxv[2], wv2 = w[2]; 

  const double *B0 = &EM[6]; 
  const double *B1 = &EM[8]; 
  const double *B2 = &EM[10]; 

  double abar0[2]; 

  double abar1[2]; 


  abar0[0] = E0[0]+wv2*B2[0]; 
  abar0[1] = E0[1]+wv2*B2[1]; 

  double incr[8]; 

  double favg[8]; 

  favg[0] = 1*fr[0]+fl[0]; 
  favg[1] = 1*fr[1]+fl[1]; 
  favg[2] = -1*fr[2]+fl[2]; 
  favg[3] = 1*fr[3]+fl[3]; 
  favg[4] = -1*fr[4]+fl[4]; 
  favg[5] = 1*fr[5]+fl[5]; 
  favg[6] = -1*fr[6]+fl[6]; 
  favg[7] = -1*fr[7]+fl[7]; 
  double fjump[8]; 

  fjump[0] = amax*(1*fr[0]-fl[0]); 
  fjump[1] = amax*(1*fr[1]-fl[1]); 
  fjump[2] = amax*(-1*fr[2]-fl[2]); 
  fjump[3] = amax*(1*fr[3]-fl[3]); 
  fjump[4] = amax*(-1*fr[4]-fl[4]); 
  fjump[5] = amax*(1*fr[5]-fl[5]); 
  fjump[6] = amax*(-1*fr[6]-fl[6]); 
  fjump[7] = amax*(-1*fr[7]-fl[7]); 
  const double amid = 0.7071067811865475*abar0[0]; 
  incr[0] = (0.0883883476483184*B2[1]*favg[7]+0.0883883476483184*B2[0]*favg[6]+0.05103103630798285*B2[1]*favg[5]+0.05103103630798285*B2[0]*favg[3])*dv2+abar0[1]*(0.3061862178478971*favg[4]+0.1767766952966368*favg[1])-0.4330127018922193*fjump[2]+abar0[0]*(0.3061862178478971*favg[2]+0.1767766952966368*favg[0])-0.25*fjump[0]; 
  incr[1] = (0.0883883476483184*B2[0]*favg[7]+0.0883883476483184*B2[1]*favg[6]+0.05103103630798285*B2[0]*favg[5]+0.05103103630798285*B2[1]*favg[3])*dv2-0.4330127018922193*fjump[4]+abar0[0]*(0.3061862178478971*favg[4]+0.1767766952966368*favg[1])+abar0[1]*(0.3061862178478971*favg[2]+0.1767766952966368*favg[0])-0.25*fjump[1]; 
  incr[2] = ((-0.1530931089239486*B2[1]*favg[7])-0.1530931089239486*B2[0]*favg[6]-0.0883883476483184*B2[1]*favg[5]-0.0883883476483184*B2[0]*favg[3])*dv2+abar0[1]*((-0.5303300858899105*favg[4])-0.3061862178478971*favg[1])+0.75*fjump[2]+abar0[0]*((-0.5303300858899105*favg[2])-0.3061862178478971*favg[0])+0.4330127018922193*fjump[0]; 
  incr[3] = (0.0883883476483184*B2[1]*favg[4]+0.0883883476483184*B2[0]*favg[2]+0.05103103630798285*favg[1]*B2[1]+0.05103103630798285*favg[0]*B2[0])*dv2+abar0[1]*(0.3061862178478971*favg[7]+0.1767766952966368*favg[5])-0.4330127018922193*fjump[6]+abar0[0]*(0.3061862178478971*favg[6]+0.1767766952966368*favg[3])-0.25*fjump[3]; 
  incr[4] = ((-0.1530931089239486*B2[0]*favg[7])-0.1530931089239486*B2[1]*favg[6]-0.0883883476483184*B2[0]*favg[5]-0.0883883476483184*B2[1]*favg[3])*dv2+0.75*fjump[4]+abar0[0]*((-0.5303300858899105*favg[4])-0.3061862178478971*favg[1])+abar0[1]*((-0.5303300858899105*favg[2])-0.3061862178478971*favg[0])+0.4330127018922193*fjump[1]; 
  incr[5] = (0.0883883476483184*B2[0]*favg[4]+0.0883883476483184*B2[1]*favg[2]+0.05103103630798285*favg[0]*B2[1]+0.05103103630798285*B2[0]*favg[1])*dv2-0.4330127018922193*fjump[7]+abar0[0]*(0.3061862178478971*favg[7]+0.1767766952966368*favg[5])+abar0[1]*(0.3061862178478971*favg[6]+0.1767766952966368*favg[3])-0.25*fjump[5]; 
  incr[6] = ((-0.1530931089239486*B2[1]*favg[4])-0.1530931089239486*B2[0]*favg[2]-0.0883883476483184*favg[1]*B2[1]-0.0883883476483184*favg[0]*B2[0])*dv2+abar0[1]*((-0.5303300858899105*favg[7])-0.3061862178478971*favg[5])+0.75*fjump[6]+abar0[0]*((-0.5303300858899105*favg[6])-0.3061862178478971*favg[3])+0.4330127018922193*fjump[3]; 
  incr[7] = ((-0.1530931089239486*B2[0]*favg[4])-0.1530931089239486*B2[1]*favg[2]-0.0883883476483184*favg[0]*B2[1]-0.0883883476483184*B2[0]*favg[1])*dv2+0.75*fjump[7]+abar0[0]*((-0.5303300858899105*favg[7])-0.3061862178478971*favg[5])+abar0[1]*((-0.5303300858899105*favg[6])-0.3061862178478971*favg[3])+0.4330127018922193*fjump[5]; 

  outr[0] += incr[0]*dv10; 
  outr[1] += incr[1]*dv10; 
  outr[2] += incr[2]*dv10; 
  outr[3] += incr[3]*dv10; 
  outr[4] += incr[4]*dv10; 
  outr[5] += incr[5]*dv10; 
  outr[6] += incr[6]*dv10; 
  outr[7] += incr[7]*dv10; 

  outl[0] += -1.0*incr[0]*dv10; 
  outl[1] += -1.0*incr[1]*dv10; 
  outl[2] += incr[2]*dv10; 
  outl[3] += -1.0*incr[3]*dv10; 
  outl[4] += incr[4]*dv10; 
  outl[5] += -1.0*incr[5]*dv10; 
  outl[6] += incr[6]*dv10; 
  outl[7] += incr[7]*dv10; 
return std::abs(amid); 
} 
double VlasovSurfElcMag1x2vSer_VX_P2(const double *w, const double *dxv, const double amax, const double *EM, const double *fl, const double *fr, double *outl, double *outr) 
{ 
// w: Cell-center coordinates. dxv[NDIM]: Cell spacing. amax: amax in global lax flux. E: EM field. fl/fr: Distribution function in left/right cells 
// outl/outr: output distribution function in left/right cells 
// returns abs(amid) for use in determining amax in cfl and global lax flux 
  double dv10 = 2/dxv[1]; 
  const double *E0 = &EM[0]; 

  const double dv1 = dxv[1], wv1 = w[1]; 
  const double dv2 = dxv[2], wv2 = w[2]; 

  const double *B0 = &EM[9]; 
  const double *B1 = &EM[12]; 
  const double *B2 = &EM[15]; 

  double abar0[3]; 

  double abar1[3]; 


  abar0[0] = E0[0]+wv2*B2[0]; 
  abar0[1] = E0[1]+wv2*B2[1]; 
  abar0[2] = E0[2]+wv2*B2[2]; 

  double incr[20]; 

  double favg[20]; 

  favg[0] = 1*fr[0]+fl[0]; 
  favg[1] = 1*fr[1]+fl[1]; 
  favg[2] = -1*fr[2]+fl[2]; 
  favg[3] = 1*fr[3]+fl[3]; 
  favg[4] = -1*fr[4]+fl[4]; 
  favg[5] = 1*fr[5]+fl[5]; 
  favg[6] = -1*fr[6]+fl[6]; 
  favg[7] = 1*fr[7]+fl[7]; 
  favg[8] = 1*fr[8]+fl[8]; 
  favg[9] = 1*fr[9]+fl[9]; 
  favg[10] = -1*fr[10]+fl[10]; 
  favg[11] = -1*fr[11]+fl[11]; 
  favg[12] = 1*fr[12]+fl[12]; 
  favg[13] = 1*fr[13]+fl[13]; 
  favg[14] = 1*fr[14]+fl[14]; 
  favg[15] = 1*fr[15]+fl[15]; 
  favg[16] = -1*fr[16]+fl[16]; 
  favg[17] = -1*fr[17]+fl[17]; 
  favg[18] = 1*fr[18]+fl[18]; 
  favg[19] = -1*fr[19]+fl[19]; 
  double fjump[20]; 

  fjump[0] = amax*(1*fr[0]-fl[0]); 
  fjump[1] = amax*(1*fr[1]-fl[1]); 
  fjump[2] = amax*(-1*fr[2]-fl[2]); 
  fjump[3] = amax*(1*fr[3]-fl[3]); 
  fjump[4] = amax*(-1*fr[4]-fl[4]); 
  fjump[5] = amax*(1*fr[5]-fl[5]); 
  fjump[6] = amax*(-1*fr[6]-fl[6]); 
  fjump[7] = amax*(1*fr[7]-fl[7]); 
  fjump[8] = amax*(1*fr[8]-fl[8]); 
  fjump[9] = amax*(1*fr[9]-fl[9]); 
  fjump[10] = amax*(-1*fr[10]-fl[10]); 
  fjump[11] = amax*(-1*fr[11]-fl[11]); 
  fjump[12] = amax*(1*fr[12]-fl[12]); 
  fjump[13] = amax*(1*fr[13]-fl[13]); 
  fjump[14] = amax*(1*fr[14]-fl[14]); 
  fjump[15] = amax*(1*fr[15]-fl[15]); 
  fjump[16] = amax*(-1*fr[16]-fl[16]); 
  fjump[17] = amax*(-1*fr[17]-fl[17]); 
  fjump[18] = amax*(1*fr[18]-fl[18]); 
  fjump[19] = amax*(-1*fr[19]-fl[19]); 
  const double amid = 0.7071067811865475*abar0[0]-0.7905694150420947*abar0[2]; 
  incr[0] = (0.1141088661469096*B2[1]*favg[18]+0.0883883476483184*B2[2]*favg[17]+0.1141088661469096*B2[0]*favg[14]+0.05103103630798286*B2[2]*favg[13]+0.0883883476483184*B2[1]*favg[10]+0.0883883476483184*B2[0]*favg[6]+0.05103103630798285*B2[1]*favg[5]+0.05103103630798285*B2[0]*favg[3])*dv2+abar0[1]*(0.3952847075210472*favg[12]+0.3061862178478971*favg[4]+0.1767766952966368*favg[1])+abar0[2]*(0.3061862178478972*favg[11]+0.1767766952966368*favg[7])-0.5590169943749475*fjump[8]+abar0[0]*(0.3952847075210473*favg[8]+0.3061862178478971*favg[2]+0.1767766952966368*favg[0])-0.4330127018922193*fjump[2]-0.25*fjump[0]; 
  incr[1] = (0.1020620726159657*B2[2]*favg[18]+0.1141088661469096*B2[0]*favg[18]+0.07905694150420946*B2[1]*favg[17]+0.1141088661469096*B2[1]*favg[14]+0.04564354645876383*B2[1]*favg[13]+0.07905694150420946*B2[2]*favg[10]+0.0883883476483184*B2[0]*favg[10]+0.0883883476483184*B2[1]*favg[6]+0.04564354645876383*B2[2]*favg[5]+0.05103103630798285*B2[0]*favg[5]+0.05103103630798285*B2[1]*favg[3])*dv2-0.5590169943749475*fjump[12]+abar0[0]*(0.3952847075210472*favg[12]+0.3061862178478971*favg[4]+0.1767766952966368*favg[1])+abar0[2]*(0.3535533905932736*favg[12]+0.2738612787525829*favg[4]+0.1581138830084189*favg[1])+abar0[1]*(0.273861278752583*favg[11]+0.3952847075210473*favg[8]+0.1581138830084189*favg[7]+0.3061862178478971*favg[2]+0.1767766952966368*favg[0])-0.4330127018922192*fjump[4]-0.25*fjump[1]; 
  incr[2] = ((-0.1976423537605237*B2[1]*favg[18])-0.1530931089239485*B2[2]*favg[17]-0.1976423537605236*B2[0]*favg[14]-0.0883883476483184*B2[2]*favg[13]-0.1530931089239485*B2[1]*favg[10]-0.1530931089239485*B2[0]*favg[6]-0.0883883476483184*B2[1]*favg[5]-0.0883883476483184*B2[0]*favg[3])*dv2+abar0[1]*((-0.6846531968814574*favg[12])-0.5303300858899105*favg[4]-0.3061862178478971*favg[1])+abar0[2]*((-0.5303300858899104*favg[11])-0.3061862178478971*favg[7])+0.9682458365518543*fjump[8]+abar0[0]*((-0.6846531968814573*favg[8])-0.5303300858899105*favg[2]-0.3061862178478971*favg[0])+0.75*fjump[2]+0.4330127018922193*fjump[0]; 
  incr[3] = (0.07905694150420946*B2[1]*favg[19]+0.07905694150420946*B2[0]*favg[16]+0.04564354645876383*B2[1]*favg[15]+0.1141088661469096*B2[1]*favg[12]+0.0883883476483184*B2[2]*favg[11]+0.04564354645876383*B2[0]*favg[9]+0.1141088661469096*B2[0]*favg[8]+0.05103103630798285*B2[2]*favg[7]+0.0883883476483184*B2[1]*favg[4]+0.0883883476483184*B2[0]*favg[2]+0.05103103630798285*favg[1]*B2[1]+0.05103103630798285*favg[0]*B2[0])*dv2+abar0[1]*(0.3952847075210473*favg[18]+0.3061862178478971*favg[10]+0.1767766952966368*favg[5])+abar0[2]*(0.3061862178478971*favg[17]+0.1767766952966368*favg[13])-0.5590169943749475*fjump[14]+abar0[0]*(0.3952847075210472*favg[14]+0.3061862178478971*favg[6]+0.1767766952966368*favg[3])-0.4330127018922192*fjump[6]-0.25*fjump[3]; 
  incr[4] = ((-0.1767766952966368*B2[2]*favg[18])-0.1976423537605237*B2[0]*favg[18]-0.1369306393762915*B2[1]*favg[17]-0.1976423537605236*B2[1]*favg[14]-0.07905694150420946*B2[1]*favg[13]-0.1369306393762915*B2[2]*favg[10]-0.1530931089239485*B2[0]*favg[10]-0.1530931089239485*B2[1]*favg[6]-0.07905694150420946*B2[2]*favg[5]-0.0883883476483184*B2[0]*favg[5]-0.0883883476483184*B2[1]*favg[3])*dv2+0.9682458365518543*fjump[12]+abar0[2]*((-0.6123724356957944*favg[12])-0.4743416490252567*favg[4]-0.2738612787525829*favg[1])+abar0[0]*((-0.6846531968814574*favg[12])-0.5303300858899105*favg[4]-0.3061862178478971*favg[1])+abar0[1]*((-0.4743416490252566*favg[11])-0.6846531968814573*favg[8]-0.2738612787525829*favg[7]-0.5303300858899105*favg[2]-0.3061862178478971*favg[0])+0.75*fjump[4]+0.4330127018922193*fjump[1]; 
  incr[5] = (0.07071067811865472*B2[2]*favg[19]+0.07905694150420947*B2[0]*favg[19]+0.07905694150420946*B2[1]*favg[16]+0.04082482904638628*B2[2]*favg[15]+0.04564354645876383*B2[0]*favg[15]+0.1020620726159657*B2[2]*favg[12]+0.1141088661469096*B2[0]*favg[12]+0.07905694150420946*B2[1]*favg[11]+0.04564354645876383*B2[1]*favg[9]+0.1141088661469096*B2[1]*favg[8]+0.04564354645876383*B2[1]*favg[7]+0.07905694150420947*B2[2]*favg[4]+0.0883883476483184*B2[0]*favg[4]+0.04564354645876383*favg[1]*B2[2]+0.0883883476483184*B2[1]*favg[2]+0.05103103630798286*favg[0]*B2[1]+0.05103103630798286*B2[0]*favg[1])*dv2-0.5590169943749475*fjump[18]+abar0[0]*(0.3952847075210474*favg[18]+0.3061862178478971*favg[10]+0.1767766952966368*favg[5])+abar0[2]*(0.3535533905932736*favg[18]+0.273861278752583*favg[10]+0.1581138830084189*favg[5])+abar0[1]*(0.273861278752583*favg[17]+0.3952847075210473*favg[14]+0.1581138830084189*favg[13]+0.3061862178478971*favg[6]+0.1767766952966368*favg[3])-0.4330127018922193*fjump[10]-0.25*fjump[5]; 
  incr[6] = ((-0.1369306393762915*B2[1]*favg[19])-0.1369306393762915*B2[0]*favg[16]-0.07905694150420946*B2[1]*favg[15]-0.1976423537605236*B2[1]*favg[12]-0.1530931089239486*B2[2]*favg[11]-0.07905694150420946*B2[0]*favg[9]-0.1976423537605237*B2[0]*favg[8]-0.0883883476483184*B2[2]*favg[7]-0.1530931089239485*B2[1]*favg[4]-0.1530931089239485*B2[0]*favg[2]-0.0883883476483184*favg[1]*B2[1]-0.0883883476483184*favg[0]*B2[0])*dv2+abar0[1]*((-0.6846531968814573*favg[18])-0.5303300858899105*favg[10]-0.3061862178478971*favg[5])+abar0[2]*((-0.5303300858899105*favg[17])-0.3061862178478972*favg[13])+0.9682458365518543*fjump[14]+abar0[0]*((-0.6846531968814574*favg[14])-0.5303300858899105*favg[6]-0.3061862178478971*favg[3])+0.75*fjump[6]+0.4330127018922193*fjump[3]; 
  incr[7] = (0.1020620726159657*B2[1]*favg[18]+0.05646924393157819*B2[2]*favg[17]+0.0883883476483184*B2[0]*favg[17]+0.1141088661469096*B2[2]*favg[14]+0.03260253318483131*B2[2]*favg[13]+0.05103103630798287*B2[0]*favg[13]+0.07905694150420946*B2[1]*favg[10]+0.0883883476483184*B2[2]*favg[6]+0.04564354645876383*B2[1]*favg[5]+0.05103103630798286*B2[2]*favg[3])*dv2+abar0[1]*(0.3535533905932737*favg[12]+0.273861278752583*favg[4]+0.1581138830084189*favg[1])-0.4330127018922194*fjump[11]+abar0[0]*(0.3061862178478972*favg[11]+0.1767766952966368*favg[7])+abar0[2]*(0.1956151991089879*favg[11]+0.3952847075210473*favg[8]+0.1129384878631564*favg[7]+0.3061862178478971*favg[2]+0.1767766952966368*favg[0])-0.25*fjump[7]; 
  incr[8] = (0.2551551815399142*B2[1]*favg[18]+0.1976423537605236*B2[2]*favg[17]+0.2551551815399143*B2[0]*favg[14]+0.1141088661469096*B2[2]*favg[13]+0.1976423537605236*B2[1]*favg[10]+0.1976423537605236*B2[0]*favg[6]+0.1141088661469096*B2[1]*favg[5]+0.1141088661469096*B2[0]*favg[3])*dv2+abar0[1]*(0.8838834764831841*favg[12]+0.6846531968814572*favg[4]+0.3952847075210473*favg[1])+abar0[2]*(0.6846531968814574*favg[11]+0.3952847075210473*favg[7])-1.25*fjump[8]+abar0[0]*(0.883883476483184*favg[8]+0.6846531968814572*favg[2]+0.3952847075210473*favg[0])-0.9682458365518543*fjump[2]-0.5590169943749475*fjump[0]; 
  incr[9] = (0.1020620726159657*B2[1]*favg[18]+0.07905694150420947*B2[2]*favg[17]+0.1020620726159657*B2[0]*favg[14]+0.04564354645876383*B2[2]*favg[13]+0.07905694150420947*B2[1]*favg[10]+0.07905694150420947*B2[0]*favg[6]+0.04564354645876383*B2[1]*favg[5]+0.04564354645876383*B2[0]*favg[3])*dv2+abar0[1]*(0.3061862178478971*favg[19]+0.1767766952966368*favg[15])-0.4330127018922194*fjump[16]+abar0[0]*(0.3061862178478972*favg[16]+0.1767766952966368*favg[9])-0.25*fjump[9]; 
  incr[10] = ((-0.1224744871391588*B2[2]*favg[19])-0.1369306393762915*B2[0]*favg[19]-0.1369306393762915*B2[1]*favg[16]-0.07071067811865472*B2[2]*favg[15]-0.07905694150420946*B2[0]*favg[15]-0.1767766952966368*B2[2]*favg[12]-0.1976423537605237*B2[0]*favg[12]-0.1369306393762915*B2[1]*favg[11]-0.07905694150420947*B2[1]*favg[9]-0.1976423537605237*B2[1]*favg[8]-0.07905694150420947*B2[1]*favg[7]-0.1369306393762915*B2[2]*favg[4]-0.1530931089239486*B2[0]*favg[4]-0.07905694150420947*favg[1]*B2[2]-0.1530931089239486*B2[1]*favg[2]-0.0883883476483184*favg[0]*B2[1]-0.0883883476483184*B2[0]*favg[1])*dv2+0.9682458365518543*fjump[18]+abar0[2]*((-0.6123724356957942*favg[18])-0.4743416490252569*favg[10]-0.273861278752583*favg[5])+abar0[0]*((-0.6846531968814574*favg[18])-0.5303300858899105*favg[10]-0.3061862178478971*favg[5])+abar0[1]*((-0.4743416490252569*favg[17])-0.6846531968814574*favg[14]-0.273861278752583*favg[13]-0.5303300858899105*favg[6]-0.3061862178478971*favg[3])+0.75*fjump[10]+0.4330127018922193*fjump[5]; 
  incr[11] = ((-0.1767766952966368*B2[1]*favg[18])-0.09780759955449393*B2[2]*favg[17]-0.1530931089239486*B2[0]*favg[17]-0.1976423537605237*B2[2]*favg[14]-0.05646924393157819*B2[2]*favg[13]-0.0883883476483184*B2[0]*favg[13]-0.1369306393762915*B2[1]*favg[10]-0.1530931089239486*B2[2]*favg[6]-0.07905694150420947*B2[1]*favg[5]-0.08838834764831842*B2[2]*favg[3])*dv2+abar0[1]*((-0.6123724356957942*favg[12])-0.4743416490252568*favg[4]-0.273861278752583*favg[1])+0.75*fjump[11]+abar0[2]*((-0.3388154635894691*favg[11])-0.6846531968814576*favg[8]-0.1956151991089879*favg[7]-0.5303300858899105*favg[2]-0.3061862178478972*favg[0])+abar0[0]*((-0.5303300858899105*favg[11])-0.3061862178478972*favg[7])+0.4330127018922194*fjump[7]; 
  incr[12] = (0.2282177322938191*B2[2]*favg[18]+0.2551551815399143*B2[0]*favg[18]+0.1767766952966368*B2[1]*favg[17]+0.2551551815399143*B2[1]*favg[14]+0.1020620726159657*B2[1]*favg[13]+0.1767766952966368*B2[2]*favg[10]+0.1976423537605236*B2[0]*favg[10]+0.1976423537605236*B2[1]*favg[6]+0.1020620726159657*B2[2]*favg[5]+0.1141088661469096*B2[0]*favg[5]+0.1141088661469096*B2[1]*favg[3])*dv2-1.25*fjump[12]+abar0[0]*(0.883883476483184*favg[12]+0.6846531968814574*favg[4]+0.3952847075210472*favg[1])+abar0[2]*(0.7905694150420947*favg[12]+0.6123724356957944*favg[4]+0.3535533905932736*favg[1])+abar0[1]*(0.6123724356957941*favg[11]+0.8838834764831842*favg[8]+0.3535533905932736*favg[7]+0.6846531968814574*favg[2]+0.3952847075210472*favg[0])-0.9682458365518543*fjump[4]-0.5590169943749475*fjump[1]; 
  incr[13] = (0.07071067811865472*B2[1]*favg[19]+0.07905694150420947*B2[2]*favg[16]+0.04082482904638628*B2[1]*favg[15]+0.1020620726159657*B2[1]*favg[12]+0.05646924393157818*B2[2]*favg[11]+0.0883883476483184*B2[0]*favg[11]+0.04564354645876383*B2[2]*favg[9]+0.1141088661469096*B2[2]*favg[8]+0.0326025331848313*B2[2]*favg[7]+0.05103103630798287*B2[0]*favg[7]+0.07905694150420946*B2[1]*favg[4]+0.0883883476483184*favg[2]*B2[2]+0.05103103630798287*favg[0]*B2[2]+0.04564354645876383*favg[1]*B2[1])*dv2+abar0[1]*(0.3535533905932736*favg[18]+0.273861278752583*favg[10]+0.1581138830084189*favg[5])-0.4330127018922194*fjump[17]+abar0[0]*(0.3061862178478972*favg[17]+0.1767766952966368*favg[13])+abar0[2]*(0.1956151991089879*favg[17]+0.3952847075210474*favg[14]+0.1129384878631564*favg[13]+0.3061862178478972*favg[6]+0.1767766952966368*favg[3])-0.25*fjump[13]; 
  incr[14] = (0.1767766952966368*B2[1]*favg[19]+0.1767766952966368*B2[0]*favg[16]+0.1020620726159657*B2[1]*favg[15]+0.2551551815399143*B2[1]*favg[12]+0.1976423537605237*B2[2]*favg[11]+0.1020620726159657*B2[0]*favg[9]+0.2551551815399143*B2[0]*favg[8]+0.1141088661469096*B2[2]*favg[7]+0.1976423537605236*B2[1]*favg[4]+0.1976423537605236*B2[0]*favg[2]+0.1141088661469096*favg[1]*B2[1]+0.1141088661469096*favg[0]*B2[0])*dv2+abar0[1]*(0.8838834764831842*favg[18]+0.6846531968814574*favg[10]+0.3952847075210472*favg[5])+abar0[2]*(0.6846531968814574*favg[17]+0.3952847075210473*favg[13])-1.25*fjump[14]+abar0[0]*(0.883883476483184*favg[14]+0.6846531968814574*favg[6]+0.3952847075210472*favg[3])-0.9682458365518543*fjump[6]-0.5590169943749475*fjump[3]; 
  incr[15] = (0.09128709291752767*B2[2]*favg[18]+0.1020620726159658*B2[0]*favg[18]+0.07071067811865474*B2[1]*favg[17]+0.1020620726159657*B2[1]*favg[14]+0.04082482904638628*B2[1]*favg[13]+0.07071067811865474*B2[2]*favg[10]+0.07905694150420946*B2[0]*favg[10]+0.07905694150420946*B2[1]*favg[6]+0.0408248290463863*B2[2]*favg[5]+0.04564354645876383*B2[0]*favg[5]+0.04564354645876383*B2[1]*favg[3])*dv2-0.4330127018922194*fjump[19]+abar0[0]*(0.3061862178478973*favg[19]+0.1767766952966368*favg[15])+abar0[2]*(0.273861278752583*favg[19]+0.158113883008419*favg[15])+abar0[1]*(0.3061862178478972*favg[16]+0.1767766952966369*favg[9])-0.25*fjump[15]; 
  incr[16] = ((-0.1767766952966368*B2[1]*favg[18])-0.1369306393762915*B2[2]*favg[17]-0.1767766952966368*B2[0]*favg[14]-0.07905694150420947*B2[2]*favg[13]-0.1369306393762915*B2[1]*favg[10]-0.1369306393762915*B2[0]*favg[6]-0.07905694150420946*B2[1]*favg[5]-0.07905694150420946*B2[0]*favg[3])*dv2+abar0[1]*((-0.5303300858899104*favg[19])-0.3061862178478971*favg[15])+0.75*fjump[16]+abar0[0]*((-0.5303300858899105*favg[16])-0.3061862178478972*favg[9])+0.4330127018922194*fjump[9]; 
  incr[17] = ((-0.1224744871391588*B2[1]*favg[19])-0.1369306393762915*B2[2]*favg[16]-0.07071067811865472*B2[1]*favg[15]-0.1767766952966368*B2[1]*favg[12]-0.09780759955449393*B2[2]*favg[11]-0.1530931089239486*B2[0]*favg[11]-0.07905694150420947*B2[2]*favg[9]-0.1976423537605237*B2[2]*favg[8]-0.05646924393157818*B2[2]*favg[7]-0.0883883476483184*B2[0]*favg[7]-0.1369306393762915*B2[1]*favg[4]-0.1530931089239485*favg[2]*B2[2]-0.0883883476483184*favg[0]*B2[2]-0.07905694150420947*favg[1]*B2[1])*dv2+abar0[1]*((-0.6123724356957941*favg[18])-0.4743416490252568*favg[10]-0.273861278752583*favg[5])+0.75*fjump[17]+abar0[2]*((-0.3388154635894692*favg[17])-0.6846531968814574*favg[14]-0.1956151991089879*favg[13]-0.5303300858899105*favg[6]-0.3061862178478971*favg[3])+abar0[0]*((-0.5303300858899105*favg[17])-0.3061862178478972*favg[13])+0.4330127018922194*fjump[13]; 
  incr[18] = (0.1581138830084189*B2[2]*favg[19]+0.1767766952966368*B2[0]*favg[19]+0.1767766952966368*B2[1]*favg[16]+0.09128709291752765*B2[2]*favg[15]+0.1020620726159657*B2[0]*favg[15]+0.2282177322938191*B2[2]*favg[12]+0.2551551815399143*B2[0]*favg[12]+0.1767766952966368*B2[1]*favg[11]+0.1020620726159657*B2[1]*favg[9]+0.2551551815399143*B2[1]*favg[8]+0.1020620726159657*B2[1]*favg[7]+0.1767766952966368*B2[2]*favg[4]+0.1976423537605237*B2[0]*favg[4]+0.1020620726159657*favg[1]*B2[2]+0.1976423537605237*B2[1]*favg[2]+0.1141088661469096*favg[0]*B2[1]+0.1141088661469096*B2[0]*favg[1])*dv2-1.25*fjump[18]+abar0[0]*(0.883883476483184*favg[18]+0.6846531968814573*favg[10]+0.3952847075210473*favg[5])+abar0[2]*(0.7905694150420947*favg[18]+0.6123724356957941*favg[10]+0.3535533905932736*favg[5])+abar0[1]*(0.6123724356957941*favg[17]+0.8838834764831842*favg[14]+0.3535533905932736*favg[13]+0.6846531968814573*favg[6]+0.3952847075210473*favg[3])-0.9682458365518543*fjump[10]-0.5590169943749475*fjump[5]; 
  incr[19] = ((-0.158113883008419*B2[2]*favg[18])-0.1767766952966368*B2[0]*favg[18]-0.1224744871391588*B2[1]*favg[17]-0.1767766952966369*B2[1]*favg[14]-0.07071067811865474*B2[1]*favg[13]-0.1224744871391588*B2[2]*favg[10]-0.1369306393762915*B2[0]*favg[10]-0.1369306393762915*B2[1]*favg[6]-0.07071067811865474*B2[2]*favg[5]-0.07905694150420949*B2[0]*favg[5]-0.07905694150420949*B2[1]*favg[3])*dv2+0.75*fjump[19]+abar0[2]*((-0.4743416490252569*favg[19])-0.273861278752583*favg[15])+abar0[0]*((-0.5303300858899105*favg[19])-0.3061862178478973*favg[15])+abar0[1]*((-0.5303300858899105*favg[16])-0.3061862178478972*favg[9])+0.4330127018922194*fjump[15]; 

  outr[0] += incr[0]*dv10; 
  outr[1] += incr[1]*dv10; 
  outr[2] += incr[2]*dv10; 
  outr[3] += incr[3]*dv10; 
  outr[4] += incr[4]*dv10; 
  outr[5] += incr[5]*dv10; 
  outr[6] += incr[6]*dv10; 
  outr[7] += incr[7]*dv10; 
  outr[8] += incr[8]*dv10; 
  outr[9] += incr[9]*dv10; 
  outr[10] += incr[10]*dv10; 
  outr[11] += incr[11]*dv10; 
  outr[12] += incr[12]*dv10; 
  outr[13] += incr[13]*dv10; 
  outr[14] += incr[14]*dv10; 
  outr[15] += incr[15]*dv10; 
  outr[16] += incr[16]*dv10; 
  outr[17] += incr[17]*dv10; 
  outr[18] += incr[18]*dv10; 
  outr[19] += incr[19]*dv10; 

  outl[0] += -1.0*incr[0]*dv10; 
  outl[1] += -1.0*incr[1]*dv10; 
  outl[2] += incr[2]*dv10; 
  outl[3] += -1.0*incr[3]*dv10; 
  outl[4] += incr[4]*dv10; 
  outl[5] += -1.0*incr[5]*dv10; 
  outl[6] += incr[6]*dv10; 
  outl[7] += -1.0*incr[7]*dv10; 
  outl[8] += -1.0*incr[8]*dv10; 
  outl[9] += -1.0*incr[9]*dv10; 
  outl[10] += incr[10]*dv10; 
  outl[11] += incr[11]*dv10; 
  outl[12] += -1.0*incr[12]*dv10; 
  outl[13] += -1.0*incr[13]*dv10; 
  outl[14] += -1.0*incr[14]*dv10; 
  outl[15] += -1.0*incr[15]*dv10; 
  outl[16] += incr[16]*dv10; 
  outl[17] += incr[17]*dv10; 
  outl[18] += -1.0*incr[18]*dv10; 
  outl[19] += incr[19]*dv10; 
return std::abs(amid); 
} 
double VlasovSurfElcMag1x2vSer_VY_P1(const double *w, const double *dxv, const double amax, const double *EM, const double *fl, const double *fr, double *outl, double *outr) 
{ 
// w: Cell-center coordinates. dxv[NDIM]: Cell spacing. amax: amax in global lax flux. E: EM field. fl/fr: Distribution function in left/right cells 
// outl/outr: output distribution function in left/right cells 
// returns abs(amid) for use in determining amax in cfl and global lax flux 
  double dv11 = 2/dxv[2]; 
  const double *E1 = &EM[2]; 

  const double dv1 = dxv[1], wv1 = w[1]; 
  const double dv2 = dxv[2], wv2 = w[2]; 

  const double *B0 = &EM[6]; 
  const double *B1 = &EM[8]; 
  const double *B2 = &EM[10]; 

  double abar0[2]; 

  double abar1[2]; 


  abar1[0] = E1[0]-wv1*B2[0]; 
  abar1[1] = E1[1]-wv1*B2[1]; 

  double incr[8]; 

  double favg[8]; 

  favg[0] = 1*fr[0]+fl[0]; 
  favg[1] = 1*fr[1]+fl[1]; 
  favg[2] = 1*fr[2]+fl[2]; 
  favg[3] = -1*fr[3]+fl[3]; 
  favg[4] = 1*fr[4]+fl[4]; 
  favg[5] = -1*fr[5]+fl[5]; 
  favg[6] = -1*fr[6]+fl[6]; 
  favg[7] = -1*fr[7]+fl[7]; 
  double fjump[8]; 

  fjump[0] = amax*(1*fr[0]-fl[0]); 
  fjump[1] = amax*(1*fr[1]-fl[1]); 
  fjump[2] = amax*(1*fr[2]-fl[2]); 
  fjump[3] = amax*(-1*fr[3]-fl[3]); 
  fjump[4] = amax*(1*fr[4]-fl[4]); 
  fjump[5] = amax*(-1*fr[5]-fl[5]); 
  fjump[6] = amax*(-1*fr[6]-fl[6]); 
  fjump[7] = amax*(-1*fr[7]-fl[7]); 
  const double amid = 0.7071067811865475*abar1[0]; 
  incr[0] = ((-0.0883883476483184*B2[1]*favg[7])-0.0883883476483184*B2[0]*favg[6]-0.05103103630798285*B2[1]*favg[4]-0.05103103630798285*B2[0]*favg[2])*dv1+abar1[1]*(0.3061862178478971*favg[5]+0.1767766952966368*favg[1])-0.4330127018922193*fjump[3]+abar1[0]*(0.3061862178478971*favg[3]+0.1767766952966368*favg[0])-0.25*fjump[0]; 
  incr[1] = ((-0.0883883476483184*B2[0]*favg[7])-0.0883883476483184*B2[1]*favg[6]-0.05103103630798285*B2[0]*favg[4]-0.05103103630798285*B2[1]*favg[2])*dv1-0.4330127018922193*fjump[5]+abar1[0]*(0.3061862178478971*favg[5]+0.1767766952966368*favg[1])+abar1[1]*(0.3061862178478971*favg[3]+0.1767766952966368*favg[0])-0.25*fjump[1]; 
  incr[2] = ((-0.0883883476483184*B2[1]*favg[5])-0.0883883476483184*B2[0]*favg[3]-0.05103103630798285*favg[1]*B2[1]-0.05103103630798285*favg[0]*B2[0])*dv1+abar1[1]*(0.3061862178478971*favg[7]+0.1767766952966368*favg[4])-0.4330127018922193*fjump[6]+abar1[0]*(0.3061862178478971*favg[6]+0.1767766952966368*favg[2])-0.25*fjump[2]; 
  incr[3] = (0.1530931089239486*B2[1]*favg[7]+0.1530931089239486*B2[0]*favg[6]+0.0883883476483184*B2[1]*favg[4]+0.0883883476483184*B2[0]*favg[2])*dv1+abar1[1]*((-0.5303300858899105*favg[5])-0.3061862178478971*favg[1])+0.75*fjump[3]+abar1[0]*((-0.5303300858899105*favg[3])-0.3061862178478971*favg[0])+0.4330127018922193*fjump[0]; 
  incr[4] = ((-0.0883883476483184*B2[0]*favg[5])-0.0883883476483184*B2[1]*favg[3]-0.05103103630798285*favg[0]*B2[1]-0.05103103630798285*B2[0]*favg[1])*dv1-0.4330127018922193*fjump[7]+abar1[0]*(0.3061862178478971*favg[7]+0.1767766952966368*favg[4])+abar1[1]*(0.3061862178478971*favg[6]+0.1767766952966368*favg[2])-0.25*fjump[4]; 
  incr[5] = (0.1530931089239486*B2[0]*favg[7]+0.1530931089239486*B2[1]*favg[6]+0.0883883476483184*B2[0]*favg[4]+0.0883883476483184*B2[1]*favg[2])*dv1+0.75*fjump[5]+abar1[0]*((-0.5303300858899105*favg[5])-0.3061862178478971*favg[1])+abar1[1]*((-0.5303300858899105*favg[3])-0.3061862178478971*favg[0])+0.4330127018922193*fjump[1]; 
  incr[6] = (0.1530931089239486*B2[1]*favg[5]+0.1530931089239486*B2[0]*favg[3]+0.0883883476483184*favg[1]*B2[1]+0.0883883476483184*favg[0]*B2[0])*dv1+abar1[1]*((-0.5303300858899105*favg[7])-0.3061862178478971*favg[4])+0.75*fjump[6]+abar1[0]*((-0.5303300858899105*favg[6])-0.3061862178478971*favg[2])+0.4330127018922193*fjump[2]; 
  incr[7] = (0.1530931089239486*B2[0]*favg[5]+0.1530931089239486*B2[1]*favg[3]+0.0883883476483184*favg[0]*B2[1]+0.0883883476483184*B2[0]*favg[1])*dv1+0.75*fjump[7]+abar1[0]*((-0.5303300858899105*favg[7])-0.3061862178478971*favg[4])+abar1[1]*((-0.5303300858899105*favg[6])-0.3061862178478971*favg[2])+0.4330127018922193*fjump[4]; 

  outr[0] += incr[0]*dv11; 
  outr[1] += incr[1]*dv11; 
  outr[2] += incr[2]*dv11; 
  outr[3] += incr[3]*dv11; 
  outr[4] += incr[4]*dv11; 
  outr[5] += incr[5]*dv11; 
  outr[6] += incr[6]*dv11; 
  outr[7] += incr[7]*dv11; 

  outl[0] += -1.0*incr[0]*dv11; 
  outl[1] += -1.0*incr[1]*dv11; 
  outl[2] += -1.0*incr[2]*dv11; 
  outl[3] += incr[3]*dv11; 
  outl[4] += -1.0*incr[4]*dv11; 
  outl[5] += incr[5]*dv11; 
  outl[6] += incr[6]*dv11; 
  outl[7] += incr[7]*dv11; 
return std::abs(amid); 
} 
double VlasovSurfElcMag1x2vSer_VY_P2(const double *w, const double *dxv, const double amax, const double *EM, const double *fl, const double *fr, double *outl, double *outr) 
{ 
// w: Cell-center coordinates. dxv[NDIM]: Cell spacing. amax: amax in global lax flux. E: EM field. fl/fr: Distribution function in left/right cells 
// outl/outr: output distribution function in left/right cells 
// returns abs(amid) for use in determining amax in cfl and global lax flux 
  double dv11 = 2/dxv[2]; 
  const double *E1 = &EM[3]; 

  const double dv1 = dxv[1], wv1 = w[1]; 
  const double dv2 = dxv[2], wv2 = w[2]; 

  const double *B0 = &EM[9]; 
  const double *B1 = &EM[12]; 
  const double *B2 = &EM[15]; 

  double abar0[3]; 

  double abar1[3]; 


  abar1[0] = E1[0]-wv1*B2[0]; 
  abar1[1] = E1[1]-wv1*B2[1]; 
  abar1[2] = E1[2]-wv1*B2[2]; 

  double incr[20]; 

  double favg[20]; 

  favg[0] = 1*fr[0]+fl[0]; 
  favg[1] = 1*fr[1]+fl[1]; 
  favg[2] = 1*fr[2]+fl[2]; 
  favg[3] = -1*fr[3]+fl[3]; 
  favg[4] = 1*fr[4]+fl[4]; 
  favg[5] = -1*fr[5]+fl[5]; 
  favg[6] = -1*fr[6]+fl[6]; 
  favg[7] = 1*fr[7]+fl[7]; 
  favg[8] = 1*fr[8]+fl[8]; 
  favg[9] = 1*fr[9]+fl[9]; 
  favg[10] = -1*fr[10]+fl[10]; 
  favg[11] = 1*fr[11]+fl[11]; 
  favg[12] = 1*fr[12]+fl[12]; 
  favg[13] = -1*fr[13]+fl[13]; 
  favg[14] = -1*fr[14]+fl[14]; 
  favg[15] = 1*fr[15]+fl[15]; 
  favg[16] = 1*fr[16]+fl[16]; 
  favg[17] = -1*fr[17]+fl[17]; 
  favg[18] = -1*fr[18]+fl[18]; 
  favg[19] = 1*fr[19]+fl[19]; 
  double fjump[20]; 

  fjump[0] = amax*(1*fr[0]-fl[0]); 
  fjump[1] = amax*(1*fr[1]-fl[1]); 
  fjump[2] = amax*(1*fr[2]-fl[2]); 
  fjump[3] = amax*(-1*fr[3]-fl[3]); 
  fjump[4] = amax*(1*fr[4]-fl[4]); 
  fjump[5] = amax*(-1*fr[5]-fl[5]); 
  fjump[6] = amax*(-1*fr[6]-fl[6]); 
  fjump[7] = amax*(1*fr[7]-fl[7]); 
  fjump[8] = amax*(1*fr[8]-fl[8]); 
  fjump[9] = amax*(1*fr[9]-fl[9]); 
  fjump[10] = amax*(-1*fr[10]-fl[10]); 
  fjump[11] = amax*(1*fr[11]-fl[11]); 
  fjump[12] = amax*(1*fr[12]-fl[12]); 
  fjump[13] = amax*(-1*fr[13]-fl[13]); 
  fjump[14] = amax*(-1*fr[14]-fl[14]); 
  fjump[15] = amax*(1*fr[15]-fl[15]); 
  fjump[16] = amax*(1*fr[16]-fl[16]); 
  fjump[17] = amax*(-1*fr[17]-fl[17]); 
  fjump[18] = amax*(-1*fr[18]-fl[18]); 
  fjump[19] = amax*(1*fr[19]-fl[19]); 
  const double amid = 0.7071067811865475*abar1[0]-0.7905694150420947*abar1[2]; 
  incr[0] = ((-0.1141088661469096*B2[1]*favg[19])-0.0883883476483184*B2[2]*favg[17]-0.1141088661469096*B2[0]*favg[16]-0.05103103630798286*B2[2]*favg[11]-0.0883883476483184*B2[1]*favg[10]-0.0883883476483184*B2[0]*favg[6]-0.05103103630798285*B2[1]*favg[4]-0.05103103630798285*B2[0]*favg[2])*dv1+abar1[1]*(0.3952847075210472*favg[15]+0.3061862178478971*favg[5]+0.1767766952966368*favg[1])+abar1[2]*(0.3061862178478972*favg[13]+0.1767766952966368*favg[7])-0.5590169943749475*fjump[9]+abar1[0]*(0.3952847075210473*favg[9]+0.3061862178478971*favg[3]+0.1767766952966368*favg[0])-0.4330127018922193*fjump[3]-0.25*fjump[0]; 
  incr[1] = ((-0.1020620726159657*B2[2]*favg[19])-0.1141088661469096*B2[0]*favg[19]-0.07905694150420946*B2[1]*favg[17]-0.1141088661469096*B2[1]*favg[16]-0.04564354645876383*B2[1]*favg[11]-0.07905694150420946*B2[2]*favg[10]-0.0883883476483184*B2[0]*favg[10]-0.0883883476483184*B2[1]*favg[6]-0.04564354645876383*B2[2]*favg[4]-0.05103103630798285*B2[0]*favg[4]-0.05103103630798285*B2[1]*favg[2])*dv1-0.5590169943749475*fjump[15]+abar1[0]*(0.3952847075210472*favg[15]+0.3061862178478971*favg[5]+0.1767766952966368*favg[1])+abar1[2]*(0.3535533905932736*favg[15]+0.2738612787525829*favg[5]+0.1581138830084189*favg[1])+abar1[1]*(0.273861278752583*favg[13]+0.3952847075210473*favg[9]+0.1581138830084189*favg[7]+0.3061862178478971*favg[3]+0.1767766952966368*favg[0])-0.4330127018922192*fjump[5]-0.25*fjump[1]; 
  incr[2] = ((-0.07905694150420946*B2[1]*favg[18])-0.1141088661469096*B2[1]*favg[15]-0.07905694150420946*B2[0]*favg[14]-0.0883883476483184*B2[2]*favg[13]-0.04564354645876383*B2[1]*favg[12]-0.1141088661469096*B2[0]*favg[9]-0.04564354645876383*B2[0]*favg[8]-0.05103103630798285*B2[2]*favg[7]-0.0883883476483184*B2[1]*favg[5]-0.0883883476483184*B2[0]*favg[3]-0.05103103630798285*favg[1]*B2[1]-0.05103103630798285*favg[0]*B2[0])*dv1+abar1[1]*(0.3952847075210473*favg[19]+0.3061862178478971*favg[10]+0.1767766952966368*favg[4])+abar1[2]*(0.3061862178478971*favg[17]+0.1767766952966368*favg[11])-0.5590169943749475*fjump[16]+abar1[0]*(0.3952847075210472*favg[16]+0.3061862178478971*favg[6]+0.1767766952966368*favg[2])-0.4330127018922192*fjump[6]-0.25*fjump[2]; 
  incr[3] = (0.1976423537605237*B2[1]*favg[19]+0.1530931089239485*B2[2]*favg[17]+0.1976423537605236*B2[0]*favg[16]+0.0883883476483184*B2[2]*favg[11]+0.1530931089239485*B2[1]*favg[10]+0.1530931089239485*B2[0]*favg[6]+0.0883883476483184*B2[1]*favg[4]+0.0883883476483184*B2[0]*favg[2])*dv1+abar1[1]*((-0.6846531968814574*favg[15])-0.5303300858899105*favg[5]-0.3061862178478971*favg[1])+abar1[2]*((-0.5303300858899104*favg[13])-0.3061862178478971*favg[7])+0.9682458365518543*fjump[9]+abar1[0]*((-0.6846531968814573*favg[9])-0.5303300858899105*favg[3]-0.3061862178478971*favg[0])+0.75*fjump[3]+0.4330127018922193*fjump[0]; 
  incr[4] = ((-0.07071067811865472*B2[2]*favg[18])-0.07905694150420947*B2[0]*favg[18]-0.1020620726159657*B2[2]*favg[15]-0.1141088661469096*B2[0]*favg[15]-0.07905694150420946*B2[1]*favg[14]-0.07905694150420946*B2[1]*favg[13]-0.04082482904638628*B2[2]*favg[12]-0.04564354645876383*B2[0]*favg[12]-0.1141088661469096*B2[1]*favg[9]-0.04564354645876383*B2[1]*favg[8]-0.04564354645876383*B2[1]*favg[7]-0.07905694150420947*B2[2]*favg[5]-0.0883883476483184*B2[0]*favg[5]-0.0883883476483184*B2[1]*favg[3]-0.04564354645876383*favg[1]*B2[2]-0.05103103630798286*favg[0]*B2[1]-0.05103103630798286*B2[0]*favg[1])*dv1-0.5590169943749475*fjump[19]+abar1[0]*(0.3952847075210474*favg[19]+0.3061862178478971*favg[10]+0.1767766952966368*favg[4])+abar1[2]*(0.3535533905932736*favg[19]+0.273861278752583*favg[10]+0.1581138830084189*favg[4])+abar1[1]*(0.273861278752583*favg[17]+0.3952847075210473*favg[16]+0.1581138830084189*favg[11]+0.3061862178478971*favg[6]+0.1767766952966368*favg[2])-0.4330127018922193*fjump[10]-0.25*fjump[4]; 
  incr[5] = (0.1767766952966368*B2[2]*favg[19]+0.1976423537605237*B2[0]*favg[19]+0.1369306393762915*B2[1]*favg[17]+0.1976423537605236*B2[1]*favg[16]+0.07905694150420946*B2[1]*favg[11]+0.1369306393762915*B2[2]*favg[10]+0.1530931089239485*B2[0]*favg[10]+0.1530931089239485*B2[1]*favg[6]+0.07905694150420946*B2[2]*favg[4]+0.0883883476483184*B2[0]*favg[4]+0.0883883476483184*B2[1]*favg[2])*dv1+0.9682458365518543*fjump[15]+abar1[2]*((-0.6123724356957944*favg[15])-0.4743416490252567*favg[5]-0.2738612787525829*favg[1])+abar1[0]*((-0.6846531968814574*favg[15])-0.5303300858899105*favg[5]-0.3061862178478971*favg[1])+abar1[1]*((-0.4743416490252566*favg[13])-0.6846531968814573*favg[9]-0.2738612787525829*favg[7]-0.5303300858899105*favg[3]-0.3061862178478971*favg[0])+0.75*fjump[5]+0.4330127018922193*fjump[1]; 
  incr[6] = (0.1369306393762915*B2[1]*favg[18]+0.1976423537605236*B2[1]*favg[15]+0.1369306393762915*B2[0]*favg[14]+0.1530931089239486*B2[2]*favg[13]+0.07905694150420946*B2[1]*favg[12]+0.1976423537605237*B2[0]*favg[9]+0.07905694150420946*B2[0]*favg[8]+0.0883883476483184*B2[2]*favg[7]+0.1530931089239485*B2[1]*favg[5]+0.1530931089239485*B2[0]*favg[3]+0.0883883476483184*favg[1]*B2[1]+0.0883883476483184*favg[0]*B2[0])*dv1+abar1[1]*((-0.6846531968814573*favg[19])-0.5303300858899105*favg[10]-0.3061862178478971*favg[4])+abar1[2]*((-0.5303300858899105*favg[17])-0.3061862178478972*favg[11])+0.9682458365518543*fjump[16]+abar1[0]*((-0.6846531968814574*favg[16])-0.5303300858899105*favg[6]-0.3061862178478971*favg[2])+0.75*fjump[6]+0.4330127018922193*fjump[2]; 
  incr[7] = ((-0.1020620726159657*B2[1]*favg[19])-0.05646924393157819*B2[2]*favg[17]-0.0883883476483184*B2[0]*favg[17]-0.1141088661469096*B2[2]*favg[16]-0.03260253318483131*B2[2]*favg[11]-0.05103103630798287*B2[0]*favg[11]-0.07905694150420946*B2[1]*favg[10]-0.0883883476483184*B2[2]*favg[6]-0.04564354645876383*B2[1]*favg[4]-0.05103103630798286*favg[2]*B2[2])*dv1+abar1[1]*(0.3535533905932737*favg[15]+0.273861278752583*favg[5]+0.1581138830084189*favg[1])-0.4330127018922194*fjump[13]+abar1[0]*(0.3061862178478972*favg[13]+0.1767766952966368*favg[7])+abar1[2]*(0.1956151991089879*favg[13]+0.3952847075210473*favg[9]+0.1129384878631564*favg[7]+0.3061862178478971*favg[3]+0.1767766952966368*favg[0])-0.25*fjump[7]; 
  incr[8] = ((-0.1020620726159657*B2[1]*favg[19])-0.07905694150420947*B2[2]*favg[17]-0.1020620726159657*B2[0]*favg[16]-0.04564354645876383*B2[2]*favg[11]-0.07905694150420947*B2[1]*favg[10]-0.07905694150420947*B2[0]*favg[6]-0.04564354645876383*B2[1]*favg[4]-0.04564354645876383*B2[0]*favg[2])*dv1+abar1[1]*(0.3061862178478971*favg[18]+0.1767766952966368*favg[12])-0.4330127018922194*fjump[14]+abar1[0]*(0.3061862178478972*favg[14]+0.1767766952966368*favg[8])-0.25*fjump[8]; 
  incr[9] = ((-0.2551551815399142*B2[1]*favg[19])-0.1976423537605236*B2[2]*favg[17]-0.2551551815399143*B2[0]*favg[16]-0.1141088661469096*B2[2]*favg[11]-0.1976423537605236*B2[1]*favg[10]-0.1976423537605236*B2[0]*favg[6]-0.1141088661469096*B2[1]*favg[4]-0.1141088661469096*B2[0]*favg[2])*dv1+abar1[1]*(0.8838834764831841*favg[15]+0.6846531968814572*favg[5]+0.3952847075210473*favg[1])+abar1[2]*(0.6846531968814574*favg[13]+0.3952847075210473*favg[7])-1.25*fjump[9]+abar1[0]*(0.883883476483184*favg[9]+0.6846531968814572*favg[3]+0.3952847075210473*favg[0])-0.9682458365518543*fjump[3]-0.5590169943749475*fjump[0]; 
  incr[10] = (0.1224744871391588*B2[2]*favg[18]+0.1369306393762915*B2[0]*favg[18]+0.1767766952966368*B2[2]*favg[15]+0.1976423537605237*B2[0]*favg[15]+0.1369306393762915*B2[1]*favg[14]+0.1369306393762915*B2[1]*favg[13]+0.07071067811865472*B2[2]*favg[12]+0.07905694150420946*B2[0]*favg[12]+0.1976423537605237*B2[1]*favg[9]+0.07905694150420947*B2[1]*favg[8]+0.07905694150420947*B2[1]*favg[7]+0.1369306393762915*B2[2]*favg[5]+0.1530931089239486*B2[0]*favg[5]+0.1530931089239486*B2[1]*favg[3]+0.07905694150420947*favg[1]*B2[2]+0.0883883476483184*favg[0]*B2[1]+0.0883883476483184*B2[0]*favg[1])*dv1+0.9682458365518543*fjump[19]+abar1[2]*((-0.6123724356957942*favg[19])-0.4743416490252569*favg[10]-0.273861278752583*favg[4])+abar1[0]*((-0.6846531968814574*favg[19])-0.5303300858899105*favg[10]-0.3061862178478971*favg[4])+abar1[1]*((-0.4743416490252569*favg[17])-0.6846531968814574*favg[16]-0.273861278752583*favg[11]-0.5303300858899105*favg[6]-0.3061862178478971*favg[2])+0.75*fjump[10]+0.4330127018922193*fjump[4]; 
  incr[11] = ((-0.07071067811865472*B2[1]*favg[18])-0.1020620726159657*B2[1]*favg[15]-0.07905694150420947*B2[2]*favg[14]-0.05646924393157818*B2[2]*favg[13]-0.0883883476483184*B2[0]*favg[13]-0.04082482904638628*B2[1]*favg[12]-0.1141088661469096*B2[2]*favg[9]-0.04564354645876383*B2[2]*favg[8]-0.0326025331848313*B2[2]*favg[7]-0.05103103630798287*B2[0]*favg[7]-0.07905694150420946*B2[1]*favg[5]-0.0883883476483184*B2[2]*favg[3]-0.05103103630798287*favg[0]*B2[2]-0.04564354645876383*favg[1]*B2[1])*dv1+abar1[1]*(0.3535533905932736*favg[19]+0.273861278752583*favg[10]+0.1581138830084189*favg[4])-0.4330127018922194*fjump[17]+abar1[0]*(0.3061862178478972*favg[17]+0.1767766952966368*favg[11])+abar1[2]*(0.1956151991089879*favg[17]+0.3952847075210474*favg[16]+0.1129384878631564*favg[11]+0.3061862178478972*favg[6]+0.1767766952966368*favg[2])-0.25*fjump[11]; 
  incr[12] = ((-0.09128709291752767*B2[2]*favg[19])-0.1020620726159658*B2[0]*favg[19]-0.07071067811865474*B2[1]*favg[17]-0.1020620726159657*B2[1]*favg[16]-0.04082482904638628*B2[1]*favg[11]-0.07071067811865474*B2[2]*favg[10]-0.07905694150420946*B2[0]*favg[10]-0.07905694150420946*B2[1]*favg[6]-0.0408248290463863*B2[2]*favg[4]-0.04564354645876383*B2[0]*favg[4]-0.04564354645876383*B2[1]*favg[2])*dv1-0.4330127018922194*fjump[18]+abar1[0]*(0.3061862178478973*favg[18]+0.1767766952966368*favg[12])+abar1[2]*(0.273861278752583*favg[18]+0.158113883008419*favg[12])+abar1[1]*(0.3061862178478972*favg[14]+0.1767766952966369*favg[8])-0.25*fjump[12]; 
  incr[13] = (0.1767766952966368*B2[1]*favg[19]+0.09780759955449393*B2[2]*favg[17]+0.1530931089239486*B2[0]*favg[17]+0.1976423537605237*B2[2]*favg[16]+0.05646924393157819*B2[2]*favg[11]+0.0883883476483184*B2[0]*favg[11]+0.1369306393762915*B2[1]*favg[10]+0.1530931089239486*B2[2]*favg[6]+0.07905694150420947*B2[1]*favg[4]+0.08838834764831842*favg[2]*B2[2])*dv1+abar1[1]*((-0.6123724356957942*favg[15])-0.4743416490252568*favg[5]-0.273861278752583*favg[1])+0.75*fjump[13]+abar1[2]*((-0.3388154635894691*favg[13])-0.6846531968814576*favg[9]-0.1956151991089879*favg[7]-0.5303300858899105*favg[3]-0.3061862178478972*favg[0])+abar1[0]*((-0.5303300858899105*favg[13])-0.3061862178478972*favg[7])+0.4330127018922194*fjump[7]; 
  incr[14] = (0.1767766952966368*B2[1]*favg[19]+0.1369306393762915*B2[2]*favg[17]+0.1767766952966368*B2[0]*favg[16]+0.07905694150420947*B2[2]*favg[11]+0.1369306393762915*B2[1]*favg[10]+0.1369306393762915*B2[0]*favg[6]+0.07905694150420946*B2[1]*favg[4]+0.07905694150420946*B2[0]*favg[2])*dv1+abar1[1]*((-0.5303300858899104*favg[18])-0.3061862178478971*favg[12])+0.75*fjump[14]+abar1[0]*((-0.5303300858899105*favg[14])-0.3061862178478972*favg[8])+0.4330127018922194*fjump[8]; 
  incr[15] = ((-0.2282177322938191*B2[2]*favg[19])-0.2551551815399143*B2[0]*favg[19]-0.1767766952966368*B2[1]*favg[17]-0.2551551815399143*B2[1]*favg[16]-0.1020620726159657*B2[1]*favg[11]-0.1767766952966368*B2[2]*favg[10]-0.1976423537605236*B2[0]*favg[10]-0.1976423537605236*B2[1]*favg[6]-0.1020620726159657*B2[2]*favg[4]-0.1141088661469096*B2[0]*favg[4]-0.1141088661469096*B2[1]*favg[2])*dv1-1.25*fjump[15]+abar1[0]*(0.883883476483184*favg[15]+0.6846531968814574*favg[5]+0.3952847075210472*favg[1])+abar1[2]*(0.7905694150420947*favg[15]+0.6123724356957944*favg[5]+0.3535533905932736*favg[1])+abar1[1]*(0.6123724356957941*favg[13]+0.8838834764831842*favg[9]+0.3535533905932736*favg[7]+0.6846531968814574*favg[3]+0.3952847075210472*favg[0])-0.9682458365518543*fjump[5]-0.5590169943749475*fjump[1]; 
  incr[16] = ((-0.1767766952966368*B2[1]*favg[18])-0.2551551815399143*B2[1]*favg[15]-0.1767766952966368*B2[0]*favg[14]-0.1976423537605237*B2[2]*favg[13]-0.1020620726159657*B2[1]*favg[12]-0.2551551815399143*B2[0]*favg[9]-0.1020620726159657*B2[0]*favg[8]-0.1141088661469096*B2[2]*favg[7]-0.1976423537605236*B2[1]*favg[5]-0.1976423537605236*B2[0]*favg[3]-0.1141088661469096*favg[1]*B2[1]-0.1141088661469096*favg[0]*B2[0])*dv1+abar1[1]*(0.8838834764831842*favg[19]+0.6846531968814574*favg[10]+0.3952847075210472*favg[4])+abar1[2]*(0.6846531968814574*favg[17]+0.3952847075210473*favg[11])-1.25*fjump[16]+abar1[0]*(0.883883476483184*favg[16]+0.6846531968814574*favg[6]+0.3952847075210472*favg[2])-0.9682458365518543*fjump[6]-0.5590169943749475*fjump[2]; 
  incr[17] = (0.1224744871391588*B2[1]*favg[18]+0.1767766952966368*B2[1]*favg[15]+0.1369306393762915*B2[2]*favg[14]+0.09780759955449393*B2[2]*favg[13]+0.1530931089239486*B2[0]*favg[13]+0.07071067811865472*B2[1]*favg[12]+0.1976423537605237*B2[2]*favg[9]+0.07905694150420947*B2[2]*favg[8]+0.05646924393157818*B2[2]*favg[7]+0.0883883476483184*B2[0]*favg[7]+0.1369306393762915*B2[1]*favg[5]+0.1530931089239485*B2[2]*favg[3]+0.0883883476483184*favg[0]*B2[2]+0.07905694150420947*favg[1]*B2[1])*dv1+abar1[1]*((-0.6123724356957941*favg[19])-0.4743416490252568*favg[10]-0.273861278752583*favg[4])+0.75*fjump[17]+abar1[2]*((-0.3388154635894692*favg[17])-0.6846531968814574*favg[16]-0.1956151991089879*favg[11]-0.5303300858899105*favg[6]-0.3061862178478971*favg[2])+abar1[0]*((-0.5303300858899105*favg[17])-0.3061862178478972*favg[11])+0.4330127018922194*fjump[11]; 
  incr[18] = (0.158113883008419*B2[2]*favg[19]+0.1767766952966368*B2[0]*favg[19]+0.1224744871391588*B2[1]*favg[17]+0.1767766952966369*B2[1]*favg[16]+0.07071067811865474*B2[1]*favg[11]+0.1224744871391588*B2[2]*favg[10]+0.1369306393762915*B2[0]*favg[10]+0.1369306393762915*B2[1]*favg[6]+0.07071067811865474*B2[2]*favg[4]+0.07905694150420949*B2[0]*favg[4]+0.07905694150420949*B2[1]*favg[2])*dv1+0.75*fjump[18]+abar1[2]*((-0.4743416490252569*favg[18])-0.273861278752583*favg[12])+abar1[0]*((-0.5303300858899105*favg[18])-0.3061862178478973*favg[12])+abar1[1]*((-0.5303300858899105*favg[14])-0.3061862178478972*favg[8])+0.4330127018922194*fjump[12]; 
  incr[19] = ((-0.1581138830084189*B2[2]*favg[18])-0.1767766952966368*B2[0]*favg[18]-0.2282177322938191*B2[2]*favg[15]-0.2551551815399143*B2[0]*favg[15]-0.1767766952966368*B2[1]*favg[14]-0.1767766952966368*B2[1]*favg[13]-0.09128709291752765*B2[2]*favg[12]-0.1020620726159657*B2[0]*favg[12]-0.2551551815399143*B2[1]*favg[9]-0.1020620726159657*B2[1]*favg[8]-0.1020620726159657*B2[1]*favg[7]-0.1767766952966368*B2[2]*favg[5]-0.1976423537605237*B2[0]*favg[5]-0.1976423537605237*B2[1]*favg[3]-0.1020620726159657*favg[1]*B2[2]-0.1141088661469096*favg[0]*B2[1]-0.1141088661469096*B2[0]*favg[1])*dv1-1.25*fjump[19]+abar1[0]*(0.883883476483184*favg[19]+0.6846531968814573*favg[10]+0.3952847075210473*favg[4])+abar1[2]*(0.7905694150420947*favg[19]+0.6123724356957941*favg[10]+0.3535533905932736*favg[4])+abar1[1]*(0.6123724356957941*favg[17]+0.8838834764831842*favg[16]+0.3535533905932736*favg[11]+0.6846531968814573*favg[6]+0.3952847075210473*favg[2])-0.9682458365518543*fjump[10]-0.5590169943749475*fjump[4]; 

  outr[0] += incr[0]*dv11; 
  outr[1] += incr[1]*dv11; 
  outr[2] += incr[2]*dv11; 
  outr[3] += incr[3]*dv11; 
  outr[4] += incr[4]*dv11; 
  outr[5] += incr[5]*dv11; 
  outr[6] += incr[6]*dv11; 
  outr[7] += incr[7]*dv11; 
  outr[8] += incr[8]*dv11; 
  outr[9] += incr[9]*dv11; 
  outr[10] += incr[10]*dv11; 
  outr[11] += incr[11]*dv11; 
  outr[12] += incr[12]*dv11; 
  outr[13] += incr[13]*dv11; 
  outr[14] += incr[14]*dv11; 
  outr[15] += incr[15]*dv11; 
  outr[16] += incr[16]*dv11; 
  outr[17] += incr[17]*dv11; 
  outr[18] += incr[18]*dv11; 
  outr[19] += incr[19]*dv11; 

  outl[0] += -1.0*incr[0]*dv11; 
  outl[1] += -1.0*incr[1]*dv11; 
  outl[2] += -1.0*incr[2]*dv11; 
  outl[3] += incr[3]*dv11; 
  outl[4] += -1.0*incr[4]*dv11; 
  outl[5] += incr[5]*dv11; 
  outl[6] += incr[6]*dv11; 
  outl[7] += -1.0*incr[7]*dv11; 
  outl[8] += -1.0*incr[8]*dv11; 
  outl[9] += -1.0*incr[9]*dv11; 
  outl[10] += incr[10]*dv11; 
  outl[11] += -1.0*incr[11]*dv11; 
  outl[12] += -1.0*incr[12]*dv11; 
  outl[13] += incr[13]*dv11; 
  outl[14] += incr[14]*dv11; 
  outl[15] += -1.0*incr[15]*dv11; 
  outl[16] += -1.0*incr[16]*dv11; 
  outl[17] += incr[17]*dv11; 
  outl[18] += incr[18]*dv11; 
  outl[19] += -1.0*incr[19]*dv11; 
return std::abs(amid); 
} 
