#include <VlasovModDecl.h> 
double VlasovSurfElcMag1x2vMax_VX_P1(const double *w, const double *dxv, const double amax, const double *EM, const double *fl, const double *fr, double *outl, double *outr) 
{ 
// w: Cell-center coordinates. dxv[NDIM]: Cell spacing. amax: amax in global lax flux. E: EM field. fl/fr: Distribution function in left/right cells 
// outl/outr: output distribution function in left/right cells 
// returns abs(amid) for use in determining amax in cfl and global lax flux 
  double dv10 = 2/dxv[1]; 
  const double *E0 = &EM[0]; 

  const double dv1 = dxv[1], wv1 = w[1]; 
  const double dv2 = dxv[2], wv2 = w[2]; 

  const double *B0 = &EM[6]; 
  const double *B1 = &EM[8]; 
  const double *B2 = &EM[10]; 

  double abar0[2]; 

  double abar1[2]; 


  abar0[0] = E0[0]+wv2*B2[0]; 
  abar0[1] = E0[1]+wv2*B2[1]; 

  double Ghat[4]; 

  for(unsigned int i=0; i<4; ++i){ 

    Ghat[i]=0.0; 

  }; 

  double favg[4]; 

  favg[0] = 1*fr[0]+fl[0]; 
  favg[1] = 1*fr[1]+fl[1]; 
  favg[2] = -1*fr[2]+fl[2]; 
  favg[3] = 1*fr[3]+fl[3]; 
  double fjump[4]; 

  fjump[0] = amax*(1*fr[0]-fl[0]); 
  fjump[1] = amax*(1*fr[1]-fl[1]); 
  fjump[2] = amax*(-1*fr[2]-fl[2]); 
  fjump[3] = amax*(1*fr[3]-fl[3]); 
  const double amid = 0.7071067811865475*abar0[0]; 
  Ghat[0] = 0.1020620726159657*B2[0]*favg[3]*dv2-0.8660254037844385*fjump[2]+abar0[0]*(0.6123724356957942*favg[2]+0.3535533905932737*favg[0])+0.3535533905932737*abar0[1]*favg[1]-0.5*fjump[0]; 
  Ghat[1] = 0.1020620726159657*B2[1]*favg[3]*dv2+abar0[1]*(0.6123724356957942*favg[2]+0.3535533905932737*favg[0])-0.5*fjump[1]+0.3535533905932737*abar0[0]*favg[1]; 
  Ghat[3] = (0.1767766952966368*B2[0]*favg[2]+0.1020620726159657*favg[1]*B2[1]+0.1020620726159657*favg[0]*B2[0])*dv2-0.5*fjump[3]+0.3535533905932737*abar0[0]*favg[3]; 

  outr[0] += 0.5*Ghat[0]*dv10; 
  outr[1] += 0.5*Ghat[1]*dv10; 
  outr[2] += -0.8660254037844386*Ghat[0]*dv10; 
  outr[3] += 0.5*Ghat[3]*dv10; 

  outl[0] += -0.5*Ghat[0]*dv10; 
  outl[1] += -0.5*Ghat[1]*dv10; 
  outl[2] += -0.8660254037844386*Ghat[0]*dv10; 
  outl[3] += -0.5*Ghat[3]*dv10; 
return std::abs(amid); 
} 
double VlasovSurfElcMag1x2vMax_VX_P2(const double *w, const double *dxv, const double amax, const double *EM, const double *fl, const double *fr, double *outl, double *outr) 
{ 
// w: Cell-center coordinates. dxv[NDIM]: Cell spacing. amax: amax in global lax flux. E: EM field. fl/fr: Distribution function in left/right cells 
// outl/outr: output distribution function in left/right cells 
// returns abs(amid) for use in determining amax in cfl and global lax flux 
  double dv10 = 2/dxv[1]; 
  const double *E0 = &EM[0]; 

  const double dv1 = dxv[1], wv1 = w[1]; 
  const double dv2 = dxv[2], wv2 = w[2]; 

  const double *B0 = &EM[9]; 
  const double *B1 = &EM[12]; 
  const double *B2 = &EM[15]; 

  double abar0[3]; 

  double abar1[3]; 


  abar0[0] = E0[0]+wv2*B2[0]; 
  abar0[1] = E0[1]+wv2*B2[1]; 
  abar0[2] = E0[2]+wv2*B2[2]; 

  double Ghat[10]; 

  for(unsigned int i=0; i<10; ++i){ 

    Ghat[i]=0.0; 

  }; 

  double favg[10]; 

  favg[0] = 1*fr[0]+fl[0]; 
  favg[1] = 1*fr[1]+fl[1]; 
  favg[2] = -1*fr[2]+fl[2]; 
  favg[3] = 1*fr[3]+fl[3]; 
  favg[4] = -1*fr[4]+fl[4]; 
  favg[5] = 1*fr[5]+fl[5]; 
  favg[6] = -1*fr[6]+fl[6]; 
  favg[7] = 1*fr[7]+fl[7]; 
  favg[8] = 1*fr[8]+fl[8]; 
  favg[9] = 1*fr[9]+fl[9]; 
  double fjump[10]; 

  fjump[0] = amax*(1*fr[0]-fl[0]); 
  fjump[1] = amax*(1*fr[1]-fl[1]); 
  fjump[2] = amax*(-1*fr[2]-fl[2]); 
  fjump[3] = amax*(1*fr[3]-fl[3]); 
  fjump[4] = amax*(-1*fr[4]-fl[4]); 
  fjump[5] = amax*(1*fr[5]-fl[5]); 
  fjump[6] = amax*(-1*fr[6]-fl[6]); 
  fjump[7] = amax*(1*fr[7]-fl[7]); 
  fjump[8] = amax*(1*fr[8]-fl[8]); 
  fjump[9] = amax*(1*fr[9]-fl[9]); 
  const double amid = 0.7071067811865475*abar0[0]-0.7905694150420947*abar0[2]; 
  Ghat[0] = (0.1767766952966368*B2[0]*favg[6]+0.1020620726159657*B2[1]*favg[5]+0.1020620726159657*B2[0]*favg[3])*dv2-1.118033988749895*fjump[8]+abar0[0]*(0.7905694150420947*favg[8]+0.6123724356957942*favg[2]+0.3535533905932737*favg[0])+0.3535533905932737*abar0[2]*favg[7]+abar0[1]*(0.6123724356957942*favg[4]+0.3535533905932737*favg[1])-0.8660254037844385*fjump[2]-0.5*fjump[0]; 
  Ghat[1] = (0.1767766952966368*B2[1]*favg[6]+0.09128709291752765*B2[2]*favg[5]+0.1020620726159657*B2[0]*favg[5]+0.1020620726159657*B2[1]*favg[3])*dv2+abar0[1]*(0.7905694150420949*favg[8]+0.3162277660168379*favg[7]+0.6123724356957942*favg[2]+0.3535533905932737*favg[0])-0.8660254037844385*fjump[4]+abar0[0]*(0.6123724356957942*favg[4]+0.3535533905932737*favg[1])+abar0[2]*(0.5477225575051659*favg[4]+0.3162277660168379*favg[1])-0.5*fjump[1]; 
  Ghat[3] = (0.09128709291752765*B2[0]*favg[9]+0.2282177322938192*B2[0]*favg[8]+0.1020620726159657*B2[2]*favg[7]+0.1767766952966368*B2[1]*favg[4]+0.1767766952966368*B2[0]*favg[2]+0.1020620726159657*favg[1]*B2[1]+0.1020620726159657*favg[0]*B2[0])*dv2-0.8660254037844385*fjump[6]+abar0[0]*(0.6123724356957942*favg[6]+0.3535533905932737*favg[3])+0.3535533905932737*abar0[1]*favg[5]-0.5*fjump[3]; 
  Ghat[5] = (0.09128709291752765*B2[1]*favg[9]+0.2282177322938192*B2[1]*favg[8]+0.09128709291752765*B2[1]*favg[7]+0.1581138830084189*B2[2]*favg[4]+0.1767766952966368*B2[0]*favg[4]+0.09128709291752765*favg[1]*B2[2]+0.1767766952966368*B2[1]*favg[2]+0.1020620726159657*favg[0]*B2[1]+0.1020620726159657*B2[0]*favg[1])*dv2+abar0[1]*(0.6123724356957942*favg[6]+0.3535533905932737*favg[3])-0.5*fjump[5]+0.3162277660168379*abar0[2]*favg[5]+0.3535533905932737*abar0[0]*favg[5]; 
  Ghat[7] = (0.1767766952966368*B2[2]*favg[6]+0.09128709291752768*B2[1]*favg[5]+0.1020620726159657*B2[2]*favg[3])*dv2+abar0[2]*(0.7905694150420949*favg[8]+0.2258769757263128*favg[7]+0.6123724356957944*favg[2]+0.3535533905932737*favg[0])-0.5*fjump[7]+0.3535533905932737*abar0[0]*favg[7]+abar0[1]*(0.5477225575051661*favg[4]+0.3162277660168379*favg[1]); 
  Ghat[9] = (0.158113883008419*B2[0]*favg[6]+0.09128709291752767*B2[1]*favg[5]+0.09128709291752767*B2[0]*favg[3])*dv2-0.5*fjump[9]+0.3535533905932737*abar0[0]*favg[9]; 

  outr[0] += 0.5*Ghat[0]*dv10; 
  outr[1] += 0.5*Ghat[1]*dv10; 
  outr[2] += -0.8660254037844386*Ghat[0]*dv10; 
  outr[3] += 0.5*Ghat[3]*dv10; 
  outr[4] += -0.8660254037844386*Ghat[1]*dv10; 
  outr[5] += 0.5*Ghat[5]*dv10; 
  outr[6] += -0.8660254037844386*Ghat[3]*dv10; 
  outr[7] += 0.5*Ghat[7]*dv10; 
  outr[8] += 1.118033988749895*Ghat[0]*dv10; 
  outr[9] += 0.5*Ghat[9]*dv10; 

  outl[0] += -0.5*Ghat[0]*dv10; 
  outl[1] += -0.5*Ghat[1]*dv10; 
  outl[2] += -0.8660254037844386*Ghat[0]*dv10; 
  outl[3] += -0.5*Ghat[3]*dv10; 
  outl[4] += -0.8660254037844386*Ghat[1]*dv10; 
  outl[5] += -0.5*Ghat[5]*dv10; 
  outl[6] += -0.8660254037844386*Ghat[3]*dv10; 
  outl[7] += -0.5*Ghat[7]*dv10; 
  outl[8] += -1.118033988749895*Ghat[0]*dv10; 
  outl[9] += -0.5*Ghat[9]*dv10; 
return std::abs(amid); 
} 
double VlasovSurfElcMag1x2vMax_VX_P3(const double *w, const double *dxv, const double amax, const double *EM, const double *fl, const double *fr, double *outl, double *outr) 
{ 
// w: Cell-center coordinates. dxv[NDIM]: Cell spacing. amax: amax in global lax flux. E: EM field. fl/fr: Distribution function in left/right cells 
// outl/outr: output distribution function in left/right cells 
// returns abs(amid) for use in determining amax in cfl and global lax flux 
  double dv10 = 2/dxv[1]; 
  const double *E0 = &EM[0]; 

  const double dv1 = dxv[1], wv1 = w[1]; 
  const double dv2 = dxv[2], wv2 = w[2]; 

  const double *B0 = &EM[12]; 
  const double *B1 = &EM[16]; 
  const double *B2 = &EM[20]; 

  double abar0[4]; 

  double abar1[4]; 


  abar0[0] = E0[0]+wv2*B2[0]; 
  abar0[1] = E0[1]+wv2*B2[1]; 
  abar0[2] = E0[2]+wv2*B2[2]; 
  abar0[3] = E0[3]+wv2*B2[3]; 

  double Ghat[20]; 

  for(unsigned int i=0; i<20; ++i){ 

    Ghat[i]=0.0; 

  }; 

  double favg[20]; 

  favg[0] = 1*fr[0]+fl[0]; 
  favg[1] = 1*fr[1]+fl[1]; 
  favg[2] = -1*fr[2]+fl[2]; 
  favg[3] = 1*fr[3]+fl[3]; 
  favg[4] = -1*fr[4]+fl[4]; 
  favg[5] = 1*fr[5]+fl[5]; 
  favg[6] = -1*fr[6]+fl[6]; 
  favg[7] = 1*fr[7]+fl[7]; 
  favg[8] = 1*fr[8]+fl[8]; 
  favg[9] = 1*fr[9]+fl[9]; 
  favg[10] = -1*fr[10]+fl[10]; 
  favg[11] = -1*fr[11]+fl[11]; 
  favg[12] = 1*fr[12]+fl[12]; 
  favg[13] = 1*fr[13]+fl[13]; 
  favg[14] = 1*fr[14]+fl[14]; 
  favg[15] = 1*fr[15]+fl[15]; 
  favg[16] = -1*fr[16]+fl[16]; 
  favg[17] = 1*fr[17]+fl[17]; 
  favg[18] = -1*fr[18]+fl[18]; 
  favg[19] = 1*fr[19]+fl[19]; 
  double fjump[20]; 

  fjump[0] = amax*(1*fr[0]-fl[0]); 
  fjump[1] = amax*(1*fr[1]-fl[1]); 
  fjump[2] = amax*(-1*fr[2]-fl[2]); 
  fjump[3] = amax*(1*fr[3]-fl[3]); 
  fjump[4] = amax*(-1*fr[4]-fl[4]); 
  fjump[5] = amax*(1*fr[5]-fl[5]); 
  fjump[6] = amax*(-1*fr[6]-fl[6]); 
  fjump[7] = amax*(1*fr[7]-fl[7]); 
  fjump[8] = amax*(1*fr[8]-fl[8]); 
  fjump[9] = amax*(1*fr[9]-fl[9]); 
  fjump[10] = amax*(-1*fr[10]-fl[10]); 
  fjump[11] = amax*(-1*fr[11]-fl[11]); 
  fjump[12] = amax*(1*fr[12]-fl[12]); 
  fjump[13] = amax*(1*fr[13]-fl[13]); 
  fjump[14] = amax*(1*fr[14]-fl[14]); 
  fjump[15] = amax*(1*fr[15]-fl[15]); 
  fjump[16] = amax*(-1*fr[16]-fl[16]); 
  fjump[17] = amax*(1*fr[17]-fl[17]); 
  fjump[18] = amax*(-1*fr[18]-fl[18]); 
  fjump[19] = amax*(1*fr[19]-fl[19]); 
  const double amid = 0.7071067811865475*abar0[0]-0.7905694150420947*abar0[2]; 
  Ghat[0] = (0.2282177322938192*B2[0]*favg[14]+0.1020620726159657*B2[2]*favg[13]+0.1767766952966368*B2[1]*favg[10]+0.1767766952966368*B2[0]*favg[6]+0.1020620726159657*B2[1]*favg[5]+0.1020620726159657*B2[0]*favg[3])*dv2-1.322875655532295*fjump[18]+abar0[0]*(0.9354143466934851*favg[18]+0.7905694150420949*favg[8]+0.6123724356957942*favg[2]+0.3535533905932737*favg[0])+0.3535533905932737*abar0[3]*favg[17]+abar0[1]*(0.7905694150420947*favg[12]+0.6123724356957942*favg[4]+0.3535533905932737*favg[1])+abar0[2]*(0.6123724356957945*favg[11]+0.3535533905932737*favg[7])-1.118033988749895*fjump[8]-0.8660254037844385*fjump[2]-0.5*fjump[0]; 
  Ghat[1] = (0.2282177322938192*B2[1]*favg[14]+0.08964214570007951*B2[3]*favg[13]+0.09128709291752769*B2[1]*favg[13]+0.1581138830084189*B2[2]*favg[10]+0.1767766952966368*B2[0]*favg[10]+0.1767766952966368*B2[1]*favg[6]+0.09128709291752768*B2[2]*favg[5]+0.1020620726159657*B2[0]*favg[5]+0.1020620726159657*B2[1]*favg[3])*dv2+abar0[1]*(0.9354143466934853*favg[18]+0.5477225575051661*favg[11]+0.7905694150420949*favg[8]+0.3162277660168379*favg[7]+0.6123724356957944*favg[2]+0.3535533905932737*favg[0])+abar0[2]*(0.3105295017040593*favg[17]+0.7071067811865475*favg[12]+0.5477225575051661*favg[4]+0.3162277660168379*favg[1])-1.118033988749895*fjump[12]+abar0[0]*(0.7905694150420948*favg[12]+0.6123724356957944*favg[4]+0.3535533905932737*favg[1])+abar0[3]*(0.537852874200477*favg[11]+0.3105295017040593*favg[7])-0.8660254037844386*fjump[4]-0.5*fjump[1]; 
  Ghat[3] = (0.2700308624336608*B2[0]*favg[18]+0.1020620726159657*B2[3]*favg[17]+0.1581138830084189*B2[0]*favg[16]+0.09128709291752767*B2[1]*favg[15]+0.2282177322938192*B2[1]*favg[12]+0.1767766952966368*B2[2]*favg[11]+0.09128709291752765*B2[0]*favg[9]+0.2282177322938192*B2[0]*favg[8]+0.1020620726159657*B2[2]*favg[7]+0.1767766952966368*B2[1]*favg[4]+0.1767766952966368*B2[0]*favg[2]+0.1020620726159657*favg[1]*B2[1]+0.1020620726159657*favg[0]*B2[0])*dv2-1.118033988749895*fjump[14]+abar0[0]*(0.7905694150420947*favg[14]+0.6123724356957942*favg[6]+0.3535533905932737*favg[3])+0.3535533905932736*abar0[2]*favg[13]+abar0[1]*(0.6123724356957942*favg[10]+0.3535533905932737*favg[5])-0.8660254037844385*fjump[6]-0.5*fjump[3]; 
  Ghat[5] = (0.2700308624336608*B2[1]*favg[18]+0.08964214570007954*B2[2]*favg[17]+0.1581138830084189*B2[1]*favg[16]+0.0816496580927726*B2[2]*favg[15]+0.09128709291752767*B2[0]*favg[15]+0.2041241452319315*B2[2]*favg[12]+0.2282177322938192*B2[0]*favg[12]+0.1552647508520297*B2[3]*favg[11]+0.1581138830084189*B2[1]*favg[11]+0.09128709291752768*B2[1]*favg[9]+0.2282177322938192*B2[1]*favg[8]+0.08964214570007954*B2[3]*favg[7]+0.09128709291752768*B2[1]*favg[7]+0.158113883008419*B2[2]*favg[4]+0.1767766952966368*B2[0]*favg[4]+0.09128709291752768*favg[1]*B2[2]+0.1767766952966368*B2[1]*favg[2]+0.1020620726159657*favg[0]*B2[1]+0.1020620726159657*B2[0]*favg[1])*dv2+abar0[1]*(0.7905694150420947*favg[14]+0.3162277660168378*favg[13]+0.6123724356957942*favg[6]+0.3535533905932737*favg[3])+0.3105295017040594*abar0[3]*favg[13]-0.8660254037844385*fjump[10]+abar0[0]*(0.6123724356957942*favg[10]+0.3535533905932737*favg[5])+abar0[2]*(0.547722557505166*favg[10]+0.3162277660168379*favg[5])-0.5*fjump[5]; 
  Ghat[7] = (0.2282177322938192*B2[2]*favg[14]+0.06520506636966263*B2[2]*favg[13]+0.1020620726159658*B2[0]*favg[13]+0.1552647508520296*B2[3]*favg[10]+0.1581138830084189*B2[1]*favg[10]+0.1767766952966368*B2[2]*favg[6]+0.08964214570007953*B2[3]*favg[5]+0.09128709291752768*B2[1]*favg[5]+0.1020620726159657*B2[2]*favg[3])*dv2+abar0[2]*(0.9354143466934853*favg[18]+0.3912303982179758*favg[11]+0.7905694150420949*favg[8]+0.2258769757263128*favg[7]+0.6123724356957944*favg[2]+0.3535533905932737*favg[0])+abar0[1]*(0.3105295017040593*favg[17]+0.7071067811865475*favg[12]+0.5477225575051661*favg[4]+0.3162277660168379*favg[1])+abar0[3]*(0.210818510677892*favg[17]+0.6943650748294137*favg[12]+0.5378528742004771*favg[4]+0.3105295017040593*favg[1])-0.8660254037844387*fjump[11]+abar0[0]*(0.6123724356957945*favg[11]+0.3535533905932737*favg[7])-0.5*fjump[7]; 
  Ghat[9] = (0.08964214570007953*B2[0]*favg[19]+0.2041241452319315*B2[0]*favg[14]+0.09128709291752769*B2[2]*favg[13]+0.1581138830084189*B2[1]*favg[10]+0.1581138830084189*B2[0]*favg[6]+0.09128709291752768*B2[1]*favg[5]+0.09128709291752768*B2[0]*favg[3])*dv2-0.8660254037844387*fjump[16]+abar0[0]*(0.6123724356957945*favg[16]+0.3535533905932737*favg[9])+0.3535533905932737*abar0[1]*favg[15]-0.5*fjump[9]; 
  Ghat[13] = (0.2700308624336609*B2[2]*favg[18]+0.06085806194501845*B2[3]*favg[17]+0.08964214570007949*B2[1]*favg[17]+0.1581138830084189*B2[2]*favg[16]+0.0801783725737273*B2[3]*favg[15]+0.08164965809277258*B2[1]*favg[15]+0.2004459314343182*B2[3]*favg[12]+0.2041241452319314*B2[1]*favg[12]+0.1129384878631564*B2[2]*favg[11]+0.1767766952966368*B2[0]*favg[11]+0.09128709291752767*B2[2]*favg[9]+0.2282177322938192*B2[2]*favg[8]+0.06520506636966263*B2[2]*favg[7]+0.1020620726159657*B2[0]*favg[7]+0.1552647508520297*B2[3]*favg[4]+0.1581138830084189*B2[1]*favg[4]+0.08964214570007949*favg[1]*B2[3]+0.1767766952966368*favg[2]*B2[2]+0.1020620726159657*favg[0]*B2[2]+0.09128709291752767*favg[1]*B2[1])*dv2+abar0[2]*(0.7905694150420949*favg[14]+0.2258769757263128*favg[13]+0.6123724356957945*favg[6]+0.3535533905932737*favg[3])-0.5*fjump[13]+0.3535533905932737*abar0[0]*favg[13]+abar0[1]*(0.5477225575051661*favg[10]+0.3162277660168379*favg[5])+abar0[3]*(0.5378528742004769*favg[10]+0.3105295017040594*favg[5]); 
  Ghat[15] = (0.08964214570007951*B2[1]*favg[19]+0.2041241452319315*B2[1]*favg[14]+0.0801783725737273*B2[3]*favg[13]+0.08164965809277257*B2[1]*favg[13]+0.1414213562373095*B2[2]*favg[10]+0.1581138830084189*B2[0]*favg[10]+0.1581138830084189*B2[1]*favg[6]+0.0816496580927726*B2[2]*favg[5]+0.09128709291752767*B2[0]*favg[5]+0.09128709291752767*B2[1]*favg[3])*dv2+abar0[1]*(0.6123724356957942*favg[16]+0.3535533905932737*favg[9])-0.5*fjump[15]+0.3162277660168379*abar0[2]*favg[15]+0.3535533905932737*abar0[0]*favg[15]; 
  Ghat[17] = (0.2282177322938192*B2[3]*favg[14]+0.06085806194501845*B2[3]*favg[13]+0.08964214570007949*B2[1]*favg[13]+0.1552647508520296*B2[2]*favg[10]+0.1767766952966368*B2[3]*favg[6]+0.08964214570007953*B2[2]*favg[5]+0.1020620726159657*favg[3]*B2[3])*dv2+abar0[3]*(0.9354143466934851*favg[18]+0.3651483716701107*favg[11]+0.7905694150420949*favg[8]+0.2108185106778919*favg[7]+0.6123724356957941*favg[2]+0.3535533905932737*favg[0])-0.5*fjump[17]+0.3535533905932737*abar0[0]*favg[17]+abar0[2]*(0.2108185106778919*favg[17]+0.6943650748294137*favg[12]+0.537852874200477*favg[4]+0.3105295017040592*favg[1])+abar0[1]*(0.5378528742004769*favg[11]+0.3105295017040592*favg[7]); 
  Ghat[19] = (0.1552647508520297*B2[0]*favg[16]+0.08964214570007951*B2[1]*favg[15]+0.08964214570007953*B2[0]*favg[9])*dv2-0.5*fjump[19]+0.3535533905932737*abar0[0]*favg[19]; 

  outr[0] += 0.5*Ghat[0]*dv10; 
  outr[1] += 0.5*Ghat[1]*dv10; 
  outr[2] += -0.8660254037844386*Ghat[0]*dv10; 
  outr[3] += 0.5*Ghat[3]*dv10; 
  outr[4] += -0.8660254037844386*Ghat[1]*dv10; 
  outr[5] += 0.5*Ghat[5]*dv10; 
  outr[6] += -0.8660254037844386*Ghat[3]*dv10; 
  outr[7] += 0.5*Ghat[7]*dv10; 
  outr[8] += 1.118033988749895*Ghat[0]*dv10; 
  outr[9] += 0.5*Ghat[9]*dv10; 
  outr[10] += -0.8660254037844386*Ghat[5]*dv10; 
  outr[11] += -0.8660254037844387*Ghat[7]*dv10; 
  outr[12] += 1.118033988749895*Ghat[1]*dv10; 
  outr[13] += 0.5*Ghat[13]*dv10; 
  outr[14] += 1.118033988749895*Ghat[3]*dv10; 
  outr[15] += 0.5*Ghat[15]*dv10; 
  outr[16] += -0.8660254037844387*Ghat[9]*dv10; 
  outr[17] += 0.5*Ghat[17]*dv10; 
  outr[18] += -1.322875655532295*Ghat[0]*dv10; 
  outr[19] += 0.5*Ghat[19]*dv10; 

  outl[0] += -0.5*Ghat[0]*dv10; 
  outl[1] += -0.5*Ghat[1]*dv10; 
  outl[2] += -0.8660254037844386*Ghat[0]*dv10; 
  outl[3] += -0.5*Ghat[3]*dv10; 
  outl[4] += -0.8660254037844386*Ghat[1]*dv10; 
  outl[5] += -0.5*Ghat[5]*dv10; 
  outl[6] += -0.8660254037844386*Ghat[3]*dv10; 
  outl[7] += -0.5*Ghat[7]*dv10; 
  outl[8] += -1.118033988749895*Ghat[0]*dv10; 
  outl[9] += -0.5*Ghat[9]*dv10; 
  outl[10] += -0.8660254037844386*Ghat[5]*dv10; 
  outl[11] += -0.8660254037844387*Ghat[7]*dv10; 
  outl[12] += -1.118033988749895*Ghat[1]*dv10; 
  outl[13] += -0.5*Ghat[13]*dv10; 
  outl[14] += -1.118033988749895*Ghat[3]*dv10; 
  outl[15] += -0.5*Ghat[15]*dv10; 
  outl[16] += -0.8660254037844387*Ghat[9]*dv10; 
  outl[17] += -0.5*Ghat[17]*dv10; 
  outl[18] += -1.322875655532295*Ghat[0]*dv10; 
  outl[19] += -0.5*Ghat[19]*dv10; 
return std::abs(amid); 
} 
double VlasovSurfElcMag1x2vMax_VX_P4(const double *w, const double *dxv, const double amax, const double *EM, const double *fl, const double *fr, double *outl, double *outr) 
{ 
// w: Cell-center coordinates. dxv[NDIM]: Cell spacing. amax: amax in global lax flux. E: EM field. fl/fr: Distribution function in left/right cells 
// outl/outr: output distribution function in left/right cells 
// returns abs(amid) for use in determining amax in cfl and global lax flux 
  double dv10 = 2/dxv[1]; 
  const double *E0 = &EM[0]; 

  const double dv1 = dxv[1], wv1 = w[1]; 
  const double dv2 = dxv[2], wv2 = w[2]; 

  const double *B0 = &EM[15]; 
  const double *B1 = &EM[20]; 
  const double *B2 = &EM[25]; 

  double abar0[5]; 

  double abar1[5]; 


  abar0[0] = E0[0]+wv2*B2[0]; 
  abar0[1] = E0[1]+wv2*B2[1]; 
  abar0[2] = E0[2]+wv2*B2[2]; 
  abar0[3] = E0[3]+wv2*B2[3]; 
  abar0[4] = E0[4]+wv2*B2[4]; 

  double Ghat[35]; 

  for(unsigned int i=0; i<35; ++i){ 

    Ghat[i]=0.0; 

  }; 

  double favg[35]; 

  favg[0] = 1*fr[0]+fl[0]; 
  favg[1] = 1*fr[1]+fl[1]; 
  favg[2] = -1*fr[2]+fl[2]; 
  favg[3] = 1*fr[3]+fl[3]; 
  favg[4] = -1*fr[4]+fl[4]; 
  favg[5] = 1*fr[5]+fl[5]; 
  favg[6] = -1*fr[6]+fl[6]; 
  favg[7] = 1*fr[7]+fl[7]; 
  favg[8] = 1*fr[8]+fl[8]; 
  favg[9] = 1*fr[9]+fl[9]; 
  favg[10] = -1*fr[10]+fl[10]; 
  favg[11] = -1*fr[11]+fl[11]; 
  favg[12] = 1*fr[12]+fl[12]; 
  favg[13] = 1*fr[13]+fl[13]; 
  favg[14] = 1*fr[14]+fl[14]; 
  favg[15] = 1*fr[15]+fl[15]; 
  favg[16] = -1*fr[16]+fl[16]; 
  favg[17] = 1*fr[17]+fl[17]; 
  favg[18] = -1*fr[18]+fl[18]; 
  favg[19] = 1*fr[19]+fl[19]; 
  favg[20] = -1*fr[20]+fl[20]; 
  favg[21] = 1*fr[21]+fl[21]; 
  favg[22] = -1*fr[22]+fl[22]; 
  favg[23] = 1*fr[23]+fl[23]; 
  favg[24] = 1*fr[24]+fl[24]; 
  favg[25] = 1*fr[25]+fl[25]; 
  favg[26] = -1*fr[26]+fl[26]; 
  favg[27] = -1*fr[27]+fl[27]; 
  favg[28] = 1*fr[28]+fl[28]; 
  favg[29] = -1*fr[29]+fl[29]; 
  favg[30] = 1*fr[30]+fl[30]; 
  favg[31] = -1*fr[31]+fl[31]; 
  favg[32] = 1*fr[32]+fl[32]; 
  favg[33] = 1*fr[33]+fl[33]; 
  favg[34] = 1*fr[34]+fl[34]; 
  double fjump[35]; 

  fjump[0] = amax*(1*fr[0]-fl[0]); 
  fjump[1] = amax*(1*fr[1]-fl[1]); 
  fjump[2] = amax*(-1*fr[2]-fl[2]); 
  fjump[3] = amax*(1*fr[3]-fl[3]); 
  fjump[4] = amax*(-1*fr[4]-fl[4]); 
  fjump[5] = amax*(1*fr[5]-fl[5]); 
  fjump[6] = amax*(-1*fr[6]-fl[6]); 
  fjump[7] = amax*(1*fr[7]-fl[7]); 
  fjump[8] = amax*(1*fr[8]-fl[8]); 
  fjump[9] = amax*(1*fr[9]-fl[9]); 
  fjump[10] = amax*(-1*fr[10]-fl[10]); 
  fjump[11] = amax*(-1*fr[11]-fl[11]); 
  fjump[12] = amax*(1*fr[12]-fl[12]); 
  fjump[13] = amax*(1*fr[13]-fl[13]); 
  fjump[14] = amax*(1*fr[14]-fl[14]); 
  fjump[15] = amax*(1*fr[15]-fl[15]); 
  fjump[16] = amax*(-1*fr[16]-fl[16]); 
  fjump[17] = amax*(1*fr[17]-fl[17]); 
  fjump[18] = amax*(-1*fr[18]-fl[18]); 
  fjump[19] = amax*(1*fr[19]-fl[19]); 
  fjump[20] = amax*(-1*fr[20]-fl[20]); 
  fjump[21] = amax*(1*fr[21]-fl[21]); 
  fjump[22] = amax*(-1*fr[22]-fl[22]); 
  fjump[23] = amax*(1*fr[23]-fl[23]); 
  fjump[24] = amax*(1*fr[24]-fl[24]); 
  fjump[25] = amax*(1*fr[25]-fl[25]); 
  fjump[26] = amax*(-1*fr[26]-fl[26]); 
  fjump[27] = amax*(-1*fr[27]-fl[27]); 
  fjump[28] = amax*(1*fr[28]-fl[28]); 
  fjump[29] = amax*(-1*fr[29]-fl[29]); 
  fjump[30] = amax*(1*fr[30]-fl[30]); 
  fjump[31] = amax*(-1*fr[31]-fl[31]); 
  fjump[32] = amax*(1*fr[32]-fl[32]); 
  fjump[33] = amax*(1*fr[33]-fl[33]); 
  fjump[34] = amax*(1*fr[34]-fl[34]); 
  const double amid = 0.7954951288348656*abar0[4]-0.7905694150420947*abar0[2]+0.7071067811865475*abar0[0]; 
  Ghat[0] = (0.2700308624336608*B2[0]*favg[29]+0.1020620726159658*B2[3]*favg[28]+0.2282177322938192*B2[1]*favg[21]+0.1767766952966368*B2[2]*favg[20]+0.2282177322938192*B2[0]*favg[14]+0.1020620726159658*B2[2]*favg[13]+0.1767766952966368*B2[1]*favg[10]+0.1767766952966368*B2[0]*favg[6]+0.1020620726159657*B2[1]*favg[5]+0.1020620726159657*B2[0]*favg[3])*dv2-1.5*fjump[33]+abar0[0]*(1.060660171779821*favg[33]+0.9354143466934853*favg[18]+0.7905694150420949*favg[8]+0.6123724356957944*favg[2]+0.3535533905932737*favg[0])+0.3535533905932737*abar0[4]*favg[32]+abar0[1]*(0.9354143466934852*favg[27]+0.7905694150420948*favg[12]+0.6123724356957944*favg[4]+0.3535533905932737*favg[1])+abar0[3]*(0.6123724356957946*favg[26]+0.3535533905932737*favg[17])+abar0[2]*(0.7905694150420949*favg[23]+0.6123724356957945*favg[11]+0.3535533905932737*favg[7])-1.322875655532296*fjump[18]-1.118033988749895*fjump[8]-0.8660254037844386*fjump[2]-0.5*fjump[0]; 
  Ghat[1] = (0.2700308624336607*B2[1]*favg[29]+0.08908708063747475*B2[4]*favg[28]+0.08964214570007949*B2[2]*favg[28]+0.2041241452319314*B2[2]*favg[21]+0.2282177322938192*B2[0]*favg[21]+0.1552647508520296*B2[3]*favg[20]+0.1581138830084189*B2[1]*favg[20]+0.2282177322938192*B2[1]*favg[14]+0.08964214570007949*B2[3]*favg[13]+0.09128709291752767*B2[1]*favg[13]+0.1581138830084189*B2[2]*favg[10]+0.1767766952966368*B2[0]*favg[10]+0.1767766952966368*B2[1]*favg[6]+0.09128709291752767*B2[2]*favg[5]+0.1020620726159657*B2[0]*favg[5]+0.1020620726159657*B2[1]*favg[3])*dv2+abar0[1]*(1.060660171779821*favg[33]+0.7071067811865474*favg[23]+0.9354143466934851*favg[18]+0.5477225575051661*favg[11]+0.7905694150420949*favg[8]+0.3162277660168379*favg[7]+0.6123724356957941*favg[2]+0.3535533905932737*favg[0])+abar0[3]*(0.3086066999241837*favg[32]+0.694365074829413*favg[23]+0.5378528742004769*favg[11]+0.3105295017040592*favg[7])-1.322875655532295*fjump[27]+abar0[0]*(0.9354143466934849*favg[27]+0.7905694150420945*favg[12]+0.6123724356957941*favg[4]+0.3535533905932737*favg[1])+abar0[2]*(0.8366600265340753*favg[27]+0.5378528742004768*favg[26]+0.3105295017040592*favg[17]+0.7071067811865474*favg[12]+0.5477225575051659*favg[4]+0.3162277660168379*favg[1])+abar0[4]*(0.5345224838248485*favg[26]+0.3086066999241837*favg[17])-1.118033988749895*fjump[12]-0.8660254037844384*fjump[4]-0.5*fjump[1]; 
  Ghat[3] = (0.3061862178478972*B2[0]*favg[33]+0.1020620726159657*B2[4]*favg[32]+0.2700308624336608*B2[1]*favg[27]+0.1767766952966368*B2[3]*favg[26]+0.2041241452319315*B2[0]*favg[25]+0.09128709291752768*B2[2]*favg[24]+0.2282177322938192*B2[2]*favg[23]+0.1581138830084189*B2[1]*favg[22]+0.2700308624336608*B2[0]*favg[18]+0.1020620726159657*B2[3]*favg[17]+0.1581138830084189*B2[0]*favg[16]+0.09128709291752769*B2[1]*favg[15]+0.2282177322938192*B2[1]*favg[12]+0.1767766952966369*B2[2]*favg[11]+0.09128709291752768*B2[0]*favg[9]+0.2282177322938192*B2[0]*favg[8]+0.1020620726159657*B2[2]*favg[7]+0.1767766952966368*B2[1]*favg[4]+0.1767766952966368*B2[0]*favg[2]+0.1020620726159657*favg[1]*B2[1]+0.1020620726159657*favg[0]*B2[0])*dv2-1.322875655532295*fjump[29]+abar0[0]*(0.9354143466934852*favg[29]+0.7905694150420948*favg[14]+0.6123724356957944*favg[6]+0.3535533905932737*favg[3])+0.3535533905932737*abar0[3]*favg[28]+abar0[1]*(0.7905694150420949*favg[21]+0.6123724356957944*favg[10]+0.3535533905932737*favg[5])+abar0[2]*(0.6123724356957944*favg[20]+0.3535533905932737*favg[13])-1.118033988749895*fjump[14]-0.8660254037844386*fjump[6]-0.5*fjump[3]; 
  Ghat[5] = (0.3061862178478971*B2[1]*favg[33]+0.08908708063747478*B2[3]*favg[32]+0.241522945769824*B2[2]*favg[27]+0.2700308624336608*B2[0]*favg[27]+0.1543033499620919*B2[4]*favg[26]+0.1552647508520297*B2[2]*favg[26]+0.2041241452319315*B2[1]*favg[25]+0.0801783725737273*B2[3]*favg[24]+0.08164965809277257*B2[1]*favg[24]+0.2004459314343182*B2[3]*favg[23]+0.2041241452319315*B2[1]*favg[23]+0.1414213562373095*B2[2]*favg[22]+0.158113883008419*B2[0]*favg[22]+0.2700308624336608*B2[1]*favg[18]+0.08908708063747478*B2[4]*favg[17]+0.08964214570007954*B2[2]*favg[17]+0.1581138830084189*B2[1]*favg[16]+0.0816496580927726*B2[2]*favg[15]+0.09128709291752767*B2[0]*favg[15]+0.2041241452319315*B2[2]*favg[12]+0.2282177322938192*B2[0]*favg[12]+0.1552647508520297*B2[3]*favg[11]+0.1581138830084189*B2[1]*favg[11]+0.09128709291752768*B2[1]*favg[9]+0.2282177322938192*B2[1]*favg[8]+0.08964214570007954*B2[3]*favg[7]+0.09128709291752768*B2[1]*favg[7]+0.158113883008419*B2[2]*favg[4]+0.1767766952966368*B2[0]*favg[4]+0.09128709291752768*favg[1]*B2[2]+0.1767766952966368*B2[1]*favg[2]+0.1020620726159657*favg[0]*B2[1]+0.1020620726159657*B2[0]*favg[1])*dv2+abar0[1]*(0.9354143466934851*favg[29]+0.547722557505166*favg[20]+0.7905694150420947*favg[14]+0.3162277660168378*favg[13]+0.6123724356957942*favg[6]+0.3535533905932737*favg[3])+0.3086066999241837*abar0[4]*favg[28]+abar0[2]*(0.3105295017040594*favg[28]+0.7071067811865474*favg[21]+0.547722557505166*favg[10]+0.3162277660168379*favg[5])-1.118033988749895*fjump[21]+abar0[0]*(0.7905694150420949*favg[21]+0.6123724356957942*favg[10]+0.3535533905932737*favg[5])+abar0[3]*(0.5378528742004771*favg[20]+0.3105295017040594*favg[13])-0.8660254037844385*fjump[10]-0.5*fjump[5]; 
  Ghat[7] = (0.2700308624336607*B2[2]*favg[29]+0.06085806194501845*B2[3]*favg[28]+0.08964214570007949*B2[1]*favg[28]+0.2004459314343182*B2[3]*favg[21]+0.2041241452319314*B2[1]*favg[21]+0.1515228816828316*B2[4]*favg[20]+0.1129384878631564*B2[2]*favg[20]+0.1767766952966368*B2[0]*favg[20]+0.2282177322938192*B2[2]*favg[14]+0.08748177652797064*B2[4]*favg[13]+0.06520506636966263*B2[2]*favg[13]+0.1020620726159657*B2[0]*favg[13]+0.1552647508520296*B2[3]*favg[10]+0.1581138830084189*B2[1]*favg[10]+0.1767766952966368*B2[2]*favg[6]+0.08964214570007953*B2[3]*favg[5]+0.09128709291752767*B2[1]*favg[5]+0.1020620726159657*B2[2]*favg[3])*dv2+abar0[2]*(1.060660171779821*favg[33]+0.3030457633656631*favg[32]+0.5050762722761053*favg[23]+0.9354143466934851*favg[18]+0.3912303982179758*favg[11]+0.7905694150420949*favg[8]+0.2258769757263128*favg[7]+0.6123724356957941*favg[2]+0.3535533905932737*favg[0])+abar0[4]*(0.2053427052057389*favg[32]+0.6776309271789385*favg[23]+0.5248906591678238*favg[11]+0.3030457633656631*favg[7])+abar0[1]*(0.8366600265340753*favg[27]+0.5378528742004768*favg[26]+0.3105295017040592*favg[17]+0.7071067811865474*favg[12]+0.5477225575051659*favg[4]+0.3162277660168379*favg[1])+abar0[3]*(0.8215838362577492*favg[27]+0.3651483716701107*favg[26]+0.2108185106778919*favg[17]+0.6943650748294137*favg[12]+0.537852874200477*favg[4]+0.3105295017040592*favg[1])-1.118033988749895*fjump[23]+abar0[0]*(0.7905694150420949*favg[23]+0.6123724356957945*favg[11]+0.3535533905932737*favg[7])-0.8660254037844387*fjump[11]-0.5*fjump[7]; 
  Ghat[9] = (0.1552647508520297*B2[0]*favg[31]+0.0896421457000795*B2[1]*favg[30]+0.241522945769824*B2[0]*favg[29]+0.09128709291752768*B2[3]*favg[28]+0.2041241452319315*B2[1]*favg[21]+0.1581138830084189*B2[2]*favg[20]+0.08964214570007953*B2[0]*favg[19]+0.2041241452319315*B2[0]*favg[14]+0.09128709291752769*B2[2]*favg[13]+0.1581138830084189*B2[1]*favg[10]+0.1581138830084189*B2[0]*favg[6]+0.09128709291752768*B2[1]*favg[5]+0.09128709291752768*B2[0]*favg[3])*dv2-1.118033988749895*fjump[25]+abar0[0]*(0.7905694150420949*favg[25]+0.6123724356957945*favg[16]+0.3535533905932737*favg[9])+0.3535533905932737*abar0[2]*favg[24]+abar0[1]*(0.6123724356957944*favg[22]+0.3535533905932737*favg[15])-0.8660254037844387*fjump[16]-0.5*fjump[9]; 
  Ghat[13] = (0.3061862178478973*B2[2]*favg[33]+0.05927733306332966*B2[4]*favg[32]+0.08748177652797065*B2[2]*favg[32]+0.2371708245126284*B2[3]*favg[27]+0.2415229457698239*B2[1]*favg[27]+0.105409255338946*B2[3]*favg[26]+0.1552647508520296*B2[1]*favg[26]+0.2041241452319315*B2[2]*favg[25]+0.07824607964359516*B2[4]*favg[24]+0.05832118435198044*B2[2]*favg[24]+0.09128709291752768*B2[0]*favg[24]+0.1956151991089879*B2[4]*favg[23]+0.1458029608799511*B2[2]*favg[23]+0.2282177322938192*B2[0]*favg[23]+0.1388730149658827*B2[3]*favg[22]+0.1414213562373095*B2[1]*favg[22]+0.2700308624336609*B2[2]*favg[18]+0.06085806194501845*B2[3]*favg[17]+0.08964214570007949*B2[1]*favg[17]+0.158113883008419*B2[2]*favg[16]+0.0801783725737273*B2[3]*favg[15]+0.08164965809277258*B2[1]*favg[15]+0.2004459314343182*B2[3]*favg[12]+0.2041241452319314*B2[1]*favg[12]+0.1515228816828316*B2[4]*favg[11]+0.1129384878631564*B2[2]*favg[11]+0.1767766952966368*B2[0]*favg[11]+0.09128709291752768*B2[2]*favg[9]+0.2282177322938192*B2[2]*favg[8]+0.08748177652797065*B2[4]*favg[7]+0.06520506636966263*B2[2]*favg[7]+0.1020620726159658*B2[0]*favg[7]+0.1552647508520297*B2[3]*favg[4]+0.1581138830084189*B2[1]*favg[4]+0.08964214570007949*favg[1]*B2[3]+0.1767766952966369*favg[2]*B2[2]+0.1020620726159658*favg[0]*B2[2]+0.09128709291752768*favg[1]*B2[1])*dv2+abar0[2]*(0.9354143466934851*favg[29]+0.3912303982179758*favg[20]+0.7905694150420949*favg[14]+0.2258769757263128*favg[13]+0.6123724356957946*favg[6]+0.3535533905932737*favg[3])+abar0[1]*(0.3105295017040592*favg[28]+0.7071067811865475*favg[21]+0.5477225575051661*favg[10]+0.3162277660168379*favg[5])+abar0[3]*(0.2108185106778919*favg[28]+0.6943650748294138*favg[21]+0.5378528742004769*favg[10]+0.3105295017040594*favg[5])-0.8660254037844388*fjump[20]+abar0[0]*(0.6123724356957946*favg[20]+0.3535533905932737*favg[13])+abar0[4]*(0.524890659167824*favg[20]+0.3030457633656631*favg[13])-0.5*fjump[13]; 
  Ghat[15] = (0.1552647508520296*B2[1]*favg[31]+0.08017837257372729*B2[2]*favg[30]+0.08964214570007951*B2[0]*favg[30]+0.2415229457698239*B2[1]*favg[29]+0.07968190728895956*B2[4]*favg[28]+0.08017837257372729*B2[2]*favg[28]+0.1825741858350554*B2[2]*favg[21]+0.2041241452319315*B2[0]*favg[21]+0.1388730149658827*B2[3]*favg[20]+0.1414213562373095*B2[1]*favg[20]+0.08964214570007949*B2[1]*favg[19]+0.2041241452319314*B2[1]*favg[14]+0.0801783725737273*B2[3]*favg[13]+0.08164965809277258*B2[1]*favg[13]+0.1414213562373095*B2[2]*favg[10]+0.1581138830084189*B2[0]*favg[10]+0.1581138830084189*B2[1]*favg[6]+0.0816496580927726*B2[2]*favg[5]+0.09128709291752768*B2[0]*favg[5]+0.09128709291752768*B2[1]*favg[3])*dv2+abar0[1]*(0.7905694150420945*favg[25]+0.3162277660168379*favg[24]+0.6123724356957941*favg[16]+0.3535533905932737*favg[9])+0.3105295017040594*abar0[3]*favg[24]-0.8660254037844388*fjump[22]+abar0[0]*(0.6123724356957946*favg[22]+0.3535533905932737*favg[15])+abar0[2]*(0.5477225575051661*favg[22]+0.3162277660168379*favg[15])-0.5*fjump[15]; 
  Ghat[17] = (0.2700308624336607*B2[3]*favg[29]+0.0556702214268904*B2[4]*favg[28]+0.06085806194501845*B2[2]*favg[28]+0.1020620726159657*B2[0]*favg[28]+0.199204768222399*B2[4]*favg[21]+0.2004459314343182*B2[2]*favg[21]+0.1054092553389459*B2[3]*favg[20]+0.1552647508520296*B2[1]*favg[20]+0.2282177322938192*B2[3]*favg[14]+0.06085806194501845*B2[3]*favg[13]+0.08964214570007949*B2[1]*favg[13]+0.1543033499620918*B2[4]*favg[10]+0.1552647508520296*B2[2]*favg[10]+0.1767766952966368*B2[3]*favg[6]+0.08908708063747478*B2[4]*favg[5]+0.08964214570007953*B2[2]*favg[5]+0.1020620726159657*favg[3]*B2[3])*dv2+abar0[3]*(1.060660171779821*favg[33]+0.1928473039599674*favg[32]+0.4714045207910316*favg[23]+0.9354143466934851*favg[18]+0.3651483716701107*favg[11]+0.7905694150420949*favg[8]+0.2108185106778919*favg[7]+0.6123724356957941*favg[2]+0.3535533905932737*favg[0])+abar0[1]*(0.3086066999241837*favg[32]+0.694365074829413*favg[23]+0.5378528742004769*favg[11]+0.3105295017040592*favg[7])+abar0[2]*(0.8215838362577492*favg[27]+0.3651483716701107*favg[26]+0.2108185106778919*favg[17]+0.6943650748294137*favg[12]+0.537852874200477*favg[4]+0.3105295017040592*favg[1])+abar0[4]*(0.8164965809277258*favg[27]+0.3340213285613424*favg[26]+0.1928473039599674*favg[17]+0.6900655593423541*favg[12]+0.5345224838248486*favg[4]+0.3086066999241837*favg[1])-0.8660254037844386*fjump[26]+abar0[0]*(0.6123724356957942*favg[26]+0.3535533905932737*favg[17])-0.5*fjump[17]; 
  Ghat[19] = (0.0890870806374748*B2[0]*favg[34]+0.2004459314343183*B2[0]*favg[25]+0.08964214570007953*B2[2]*favg[24]+0.1552647508520296*B2[1]*favg[22]+0.1552647508520297*B2[0]*favg[16]+0.08964214570007951*B2[1]*favg[15]+0.08964214570007953*B2[0]*favg[9])*dv2-0.8660254037844388*fjump[31]+abar0[0]*(0.6123724356957946*favg[31]+0.3535533905932737*favg[19])+0.3535533905932737*abar0[1]*favg[30]-0.5*fjump[19]; 
  Ghat[24] = (0.1552647508520297*B2[2]*favg[31]+0.07873359887517357*B2[3]*favg[30]+0.08017837257372727*B2[1]*favg[30]+0.2415229457698239*B2[2]*favg[29]+0.05443310539518173*B2[3]*favg[28]+0.08017837257372727*B2[1]*favg[28]+0.1792842914001591*B2[3]*favg[21]+0.1825741858350553*B2[1]*favg[21]+0.1355261854357877*B2[4]*favg[20]+0.1010152544552211*B2[2]*favg[20]+0.1581138830084189*B2[0]*favg[20]+0.08964214570007953*B2[2]*favg[19]+0.2041241452319315*B2[2]*favg[14]+0.07824607964359515*B2[4]*favg[13]+0.05832118435198043*B2[2]*favg[13]+0.09128709291752767*B2[0]*favg[13]+0.1388730149658826*B2[3]*favg[10]+0.1414213562373095*B2[1]*favg[10]+0.1581138830084189*B2[2]*favg[6]+0.08017837257372731*B2[3]*favg[5]+0.08164965809277258*B2[1]*favg[5]+0.09128709291752767*B2[2]*favg[3])*dv2+abar0[2]*(0.7905694150420949*favg[25]+0.2258769757263128*favg[24]+0.6123724356957945*favg[16]+0.3535533905932737*favg[9])-0.5*fjump[24]+0.3030457633656632*abar0[4]*favg[24]+0.3535533905932737*abar0[0]*favg[24]+abar0[1]*(0.5477225575051659*favg[22]+0.3162277660168379*favg[15])+abar0[3]*(0.5378528742004772*favg[22]+0.3105295017040594*favg[15]); 
  Ghat[28] = (0.3061862178478971*B2[3]*favg[33]+0.0556702214268904*B2[3]*favg[32]+0.08908708063747475*B2[1]*favg[32]+0.2357022603955158*B2[4]*favg[27]+0.2371708245126284*B2[2]*favg[27]+0.09642365197998372*B2[4]*favg[26]+0.105409255338946*B2[2]*favg[26]+0.1767766952966368*B2[0]*favg[26]+0.2041241452319315*B2[3]*favg[25]+0.05443310539518172*B2[3]*favg[24]+0.08017837257372727*B2[1]*favg[24]+0.1360827634879543*B2[3]*favg[23]+0.2004459314343181*B2[1]*favg[23]+0.1380131118684708*B2[4]*favg[22]+0.1388730149658827*B2[2]*favg[22]+0.2700308624336607*B2[3]*favg[18]+0.0556702214268904*B2[4]*favg[17]+0.06085806194501845*B2[2]*favg[17]+0.1020620726159657*B2[0]*favg[17]+0.1581138830084189*B2[3]*favg[16]+0.07968190728895956*B2[4]*favg[15]+0.08017837257372729*B2[2]*favg[15]+0.1992047682223989*B2[4]*favg[12]+0.2004459314343183*B2[2]*favg[12]+0.105409255338946*B2[3]*favg[11]+0.1552647508520296*B2[1]*favg[11]+0.09128709291752768*B2[3]*favg[9]+0.2282177322938192*B2[3]*favg[8]+0.06085806194501845*B2[3]*favg[7]+0.08964214570007947*B2[1]*favg[7]+0.1543033499620919*favg[4]*B2[4]+0.08908708063747475*favg[1]*B2[4]+0.1552647508520297*B2[2]*favg[4]+0.1767766952966368*favg[2]*B2[3]+0.1020620726159657*favg[0]*B2[3]+0.08964214570007947*favg[1]*B2[2])*dv2+abar0[3]*(0.9354143466934851*favg[29]+0.3651483716701107*favg[20]+0.7905694150420947*favg[14]+0.2108185106778919*favg[13]+0.6123724356957942*favg[6]+0.3535533905932736*favg[3])-0.5*fjump[28]+0.3535533905932737*abar0[0]*favg[28]+abar0[2]*(0.210818510677892*favg[28]+0.6943650748294133*favg[21]+0.5378528742004769*favg[10]+0.3105295017040594*favg[5])+abar0[4]*(0.1928473039599674*favg[28]+0.6900655593423543*favg[21]+0.5345224838248485*favg[10]+0.3086066999241837*favg[5])+abar0[1]*(0.5378528742004769*favg[20]+0.3105295017040592*favg[13]); 
  Ghat[30] = (0.08908708063747475*B2[1]*favg[34]+0.2004459314343181*B2[1]*favg[25]+0.07873359887517357*B2[3]*favg[24]+0.08017837257372727*B2[1]*favg[24]+0.1388730149658827*B2[2]*favg[22]+0.1552647508520297*B2[0]*favg[22]+0.1552647508520296*B2[1]*favg[16]+0.0801783725737273*B2[2]*favg[15]+0.0896421457000795*B2[0]*favg[15]+0.08964214570007947*B2[1]*favg[9])*dv2+abar0[1]*(0.6123724356957941*favg[31]+0.3535533905932737*favg[19])-0.5*fjump[30]+0.3162277660168379*abar0[2]*favg[30]+0.3535533905932737*abar0[0]*favg[30]; 
  Ghat[32] = (0.2700308624336607*B2[4]*favg[29]+0.0556702214268904*B2[3]*favg[28]+0.08908708063747475*B2[1]*favg[28]+0.199204768222399*B2[3]*favg[21]+0.1026713526028695*B2[4]*favg[20]+0.1515228816828316*B2[2]*favg[20]+0.2282177322938192*B2[4]*favg[14]+0.05927733306332966*B2[4]*favg[13]+0.08748177652797064*B2[2]*favg[13]+0.1543033499620918*B2[3]*favg[10]+0.1767766952966368*B2[4]*favg[6]+0.08908708063747478*B2[3]*favg[5]+0.1020620726159657*favg[3]*B2[4])*dv2+abar0[4]*(1.060660171779821*favg[33]+0.1716552925357952*favg[32]+0.459160247523732*favg[23]+0.9354143466934851*favg[18]+0.355663998379978*favg[11]+0.7905694150420949*favg[8]+0.2053427052057389*favg[7]+0.6123724356957941*favg[2]+0.3535533905932737*favg[0])-0.5*fjump[32]+0.3535533905932737*abar0[0]*favg[32]+abar0[2]*(0.2053427052057389*favg[32]+0.6776309271789385*favg[23]+0.5248906591678238*favg[11]+0.3030457633656631*favg[7])+abar0[3]*(0.8164965809277258*favg[27]+0.3340213285613424*favg[26]+0.1928473039599674*favg[17]+0.6900655593423541*favg[12]+0.5345224838248486*favg[4]+0.3086066999241837*favg[1])+abar0[1]*(0.5345224838248485*favg[26]+0.3086066999241837*favg[17]); 
  Ghat[34] = (0.1543033499620919*B2[0]*favg[31]+0.08908708063747478*B2[1]*favg[30]+0.0890870806374748*B2[0]*favg[19])*dv2-0.5*fjump[34]+0.3535533905932737*abar0[0]*favg[34]; 

  outr[0] += 0.5*Ghat[0]*dv10; 
  outr[1] += 0.5*Ghat[1]*dv10; 
  outr[2] += -0.8660254037844386*Ghat[0]*dv10; 
  outr[3] += 0.5*Ghat[3]*dv10; 
  outr[4] += -0.8660254037844386*Ghat[1]*dv10; 
  outr[5] += 0.5*Ghat[5]*dv10; 
  outr[6] += -0.8660254037844386*Ghat[3]*dv10; 
  outr[7] += 0.5*Ghat[7]*dv10; 
  outr[8] += 1.118033988749895*Ghat[0]*dv10; 
  outr[9] += 0.5*Ghat[9]*dv10; 
  outr[10] += -0.8660254037844386*Ghat[5]*dv10; 
  outr[11] += -0.8660254037844387*Ghat[7]*dv10; 
  outr[12] += 1.118033988749895*Ghat[1]*dv10; 
  outr[13] += 0.5*Ghat[13]*dv10; 
  outr[14] += 1.118033988749895*Ghat[3]*dv10; 
  outr[15] += 0.5*Ghat[15]*dv10; 
  outr[16] += -0.8660254037844387*Ghat[9]*dv10; 
  outr[17] += 0.5*Ghat[17]*dv10; 
  outr[18] += -1.322875655532295*Ghat[0]*dv10; 
  outr[19] += 0.5*Ghat[19]*dv10; 
  outr[20] += -0.8660254037844387*Ghat[13]*dv10; 
  outr[21] += 1.118033988749895*Ghat[5]*dv10; 
  outr[22] += -0.8660254037844387*Ghat[15]*dv10; 
  outr[23] += 1.118033988749895*Ghat[7]*dv10; 
  outr[24] += 0.5*Ghat[24]*dv10; 
  outr[25] += 1.118033988749895*Ghat[9]*dv10; 
  outr[26] += -0.8660254037844386*Ghat[17]*dv10; 
  outr[27] += -1.322875655532295*Ghat[1]*dv10; 
  outr[28] += 0.5*Ghat[28]*dv10; 
  outr[29] += -1.322875655532295*Ghat[3]*dv10; 
  outr[30] += 0.5*Ghat[30]*dv10; 
  outr[31] += -0.8660254037844386*Ghat[19]*dv10; 
  outr[32] += 0.5*Ghat[32]*dv10; 
  outr[33] += 1.5*Ghat[0]*dv10; 
  outr[34] += 0.5*Ghat[34]*dv10; 

  outl[0] += -0.5*Ghat[0]*dv10; 
  outl[1] += -0.5*Ghat[1]*dv10; 
  outl[2] += -0.8660254037844386*Ghat[0]*dv10; 
  outl[3] += -0.5*Ghat[3]*dv10; 
  outl[4] += -0.8660254037844386*Ghat[1]*dv10; 
  outl[5] += -0.5*Ghat[5]*dv10; 
  outl[6] += -0.8660254037844386*Ghat[3]*dv10; 
  outl[7] += -0.5*Ghat[7]*dv10; 
  outl[8] += -1.118033988749895*Ghat[0]*dv10; 
  outl[9] += -0.5*Ghat[9]*dv10; 
  outl[10] += -0.8660254037844386*Ghat[5]*dv10; 
  outl[11] += -0.8660254037844387*Ghat[7]*dv10; 
  outl[12] += -1.118033988749895*Ghat[1]*dv10; 
  outl[13] += -0.5*Ghat[13]*dv10; 
  outl[14] += -1.118033988749895*Ghat[3]*dv10; 
  outl[15] += -0.5*Ghat[15]*dv10; 
  outl[16] += -0.8660254037844387*Ghat[9]*dv10; 
  outl[17] += -0.5*Ghat[17]*dv10; 
  outl[18] += -1.322875655532295*Ghat[0]*dv10; 
  outl[19] += -0.5*Ghat[19]*dv10; 
  outl[20] += -0.8660254037844387*Ghat[13]*dv10; 
  outl[21] += -1.118033988749895*Ghat[5]*dv10; 
  outl[22] += -0.8660254037844387*Ghat[15]*dv10; 
  outl[23] += -1.118033988749895*Ghat[7]*dv10; 
  outl[24] += -0.5*Ghat[24]*dv10; 
  outl[25] += -1.118033988749895*Ghat[9]*dv10; 
  outl[26] += -0.8660254037844386*Ghat[17]*dv10; 
  outl[27] += -1.322875655532295*Ghat[1]*dv10; 
  outl[28] += -0.5*Ghat[28]*dv10; 
  outl[29] += -1.322875655532295*Ghat[3]*dv10; 
  outl[30] += -0.5*Ghat[30]*dv10; 
  outl[31] += -0.8660254037844386*Ghat[19]*dv10; 
  outl[32] += -0.5*Ghat[32]*dv10; 
  outl[33] += -1.5*Ghat[0]*dv10; 
  outl[34] += -0.5*Ghat[34]*dv10; 
return std::abs(amid); 
} 
double VlasovSurfElcMag1x2vMax_VY_P1(const double *w, const double *dxv, const double amax, const double *EM, const double *fl, const double *fr, double *outl, double *outr) 
{ 
// w: Cell-center coordinates. dxv[NDIM]: Cell spacing. amax: amax in global lax flux. E: EM field. fl/fr: Distribution function in left/right cells 
// outl/outr: output distribution function in left/right cells 
// returns abs(amid) for use in determining amax in cfl and global lax flux 
  double dv11 = 2/dxv[2]; 
  const double *E1 = &EM[2]; 

  const double dv1 = dxv[1], wv1 = w[1]; 
  const double dv2 = dxv[2], wv2 = w[2]; 

  const double *B0 = &EM[6]; 
  const double *B1 = &EM[8]; 
  const double *B2 = &EM[10]; 

  double abar0[2]; 

  double abar1[2]; 


  abar1[0] = E1[0]-wv1*B2[0]; 
  abar1[1] = E1[1]-wv1*B2[1]; 

  double Ghat[4]; 

  for(unsigned int i=0; i<4; ++i){ 

    Ghat[i]=0.0; 

  }; 

  double favg[4]; 

  favg[0] = 1*fr[0]+fl[0]; 
  favg[1] = 1*fr[1]+fl[1]; 
  favg[2] = 1*fr[2]+fl[2]; 
  favg[3] = -1*fr[3]+fl[3]; 
  double fjump[4]; 

  fjump[0] = amax*(1*fr[0]-fl[0]); 
  fjump[1] = amax*(1*fr[1]-fl[1]); 
  fjump[2] = amax*(1*fr[2]-fl[2]); 
  fjump[3] = amax*(-1*fr[3]-fl[3]); 
  const double amid = 0.7071067811865475*abar1[0]; 
  Ghat[0] = (-0.1020620726159657*B2[0]*favg[2]*dv1)-0.8660254037844385*fjump[3]+abar1[0]*(0.6123724356957942*favg[3]+0.3535533905932737*favg[0])+0.3535533905932737*abar1[1]*favg[1]-0.5*fjump[0]; 
  Ghat[1] = (-0.1020620726159657*B2[1]*favg[2]*dv1)+abar1[1]*(0.6123724356957942*favg[3]+0.3535533905932737*favg[0])-0.5*fjump[1]+0.3535533905932737*abar1[0]*favg[1]; 
  Ghat[2] = ((-0.1767766952966368*B2[0]*favg[3])-0.1020620726159657*favg[1]*B2[1]-0.1020620726159657*favg[0]*B2[0])*dv1-0.5*fjump[2]+0.3535533905932737*abar1[0]*favg[2]; 

  outr[0] += 0.5*Ghat[0]*dv11; 
  outr[1] += 0.5*Ghat[1]*dv11; 
  outr[2] += 0.5*Ghat[2]*dv11; 
  outr[3] += -0.8660254037844386*Ghat[0]*dv11; 

  outl[0] += -0.5*Ghat[0]*dv11; 
  outl[1] += -0.5*Ghat[1]*dv11; 
  outl[2] += -0.5*Ghat[2]*dv11; 
  outl[3] += -0.8660254037844386*Ghat[0]*dv11; 
return std::abs(amid); 
} 
double VlasovSurfElcMag1x2vMax_VY_P2(const double *w, const double *dxv, const double amax, const double *EM, const double *fl, const double *fr, double *outl, double *outr) 
{ 
// w: Cell-center coordinates. dxv[NDIM]: Cell spacing. amax: amax in global lax flux. E: EM field. fl/fr: Distribution function in left/right cells 
// outl/outr: output distribution function in left/right cells 
// returns abs(amid) for use in determining amax in cfl and global lax flux 
  double dv11 = 2/dxv[2]; 
  const double *E1 = &EM[3]; 

  const double dv1 = dxv[1], wv1 = w[1]; 
  const double dv2 = dxv[2], wv2 = w[2]; 

  const double *B0 = &EM[9]; 
  const double *B1 = &EM[12]; 
  const double *B2 = &EM[15]; 

  double abar0[3]; 

  double abar1[3]; 


  abar1[0] = E1[0]-wv1*B2[0]; 
  abar1[1] = E1[1]-wv1*B2[1]; 
  abar1[2] = E1[2]-wv1*B2[2]; 

  double Ghat[10]; 

  for(unsigned int i=0; i<10; ++i){ 

    Ghat[i]=0.0; 

  }; 

  double favg[10]; 

  favg[0] = 1*fr[0]+fl[0]; 
  favg[1] = 1*fr[1]+fl[1]; 
  favg[2] = 1*fr[2]+fl[2]; 
  favg[3] = -1*fr[3]+fl[3]; 
  favg[4] = 1*fr[4]+fl[4]; 
  favg[5] = -1*fr[5]+fl[5]; 
  favg[6] = -1*fr[6]+fl[6]; 
  favg[7] = 1*fr[7]+fl[7]; 
  favg[8] = 1*fr[8]+fl[8]; 
  favg[9] = 1*fr[9]+fl[9]; 
  double fjump[10]; 

  fjump[0] = amax*(1*fr[0]-fl[0]); 
  fjump[1] = amax*(1*fr[1]-fl[1]); 
  fjump[2] = amax*(1*fr[2]-fl[2]); 
  fjump[3] = amax*(-1*fr[3]-fl[3]); 
  fjump[4] = amax*(1*fr[4]-fl[4]); 
  fjump[5] = amax*(-1*fr[5]-fl[5]); 
  fjump[6] = amax*(-1*fr[6]-fl[6]); 
  fjump[7] = amax*(1*fr[7]-fl[7]); 
  fjump[8] = amax*(1*fr[8]-fl[8]); 
  fjump[9] = amax*(1*fr[9]-fl[9]); 
  const double amid = 0.7071067811865475*abar1[0]-0.7905694150420947*abar1[2]; 
  Ghat[0] = ((-0.1767766952966368*B2[0]*favg[6])-0.1020620726159657*B2[1]*favg[4]-0.1020620726159657*B2[0]*favg[2])*dv1-1.118033988749895*fjump[9]+abar1[0]*(0.7905694150420947*favg[9]+0.6123724356957942*favg[3]+0.3535533905932737*favg[0])+0.3535533905932737*abar1[2]*favg[7]+abar1[1]*(0.6123724356957942*favg[5]+0.3535533905932737*favg[1])-0.8660254037844385*fjump[3]-0.5*fjump[0]; 
  Ghat[1] = ((-0.1767766952966368*B2[1]*favg[6])-0.09128709291752765*B2[2]*favg[4]-0.1020620726159657*B2[0]*favg[4]-0.1020620726159657*B2[1]*favg[2])*dv1+abar1[1]*(0.7905694150420949*favg[9]+0.3162277660168379*favg[7]+0.6123724356957942*favg[3]+0.3535533905932737*favg[0])-0.8660254037844385*fjump[5]+abar1[0]*(0.6123724356957942*favg[5]+0.3535533905932737*favg[1])+abar1[2]*(0.5477225575051659*favg[5]+0.3162277660168379*favg[1])-0.5*fjump[1]; 
  Ghat[2] = ((-0.2282177322938192*B2[0]*favg[9])-0.09128709291752765*B2[0]*favg[8]-0.1020620726159657*B2[2]*favg[7]-0.1767766952966368*B2[1]*favg[5]-0.1767766952966368*B2[0]*favg[3]-0.1020620726159657*favg[1]*B2[1]-0.1020620726159657*favg[0]*B2[0])*dv1-0.8660254037844385*fjump[6]+abar1[0]*(0.6123724356957942*favg[6]+0.3535533905932737*favg[2])+0.3535533905932737*abar1[1]*favg[4]-0.5*fjump[2]; 
  Ghat[4] = ((-0.2282177322938192*B2[1]*favg[9])-0.09128709291752765*B2[1]*favg[8]-0.09128709291752765*B2[1]*favg[7]-0.1581138830084189*B2[2]*favg[5]-0.1767766952966368*B2[0]*favg[5]-0.1767766952966368*B2[1]*favg[3]-0.09128709291752765*favg[1]*B2[2]-0.1020620726159657*favg[0]*B2[1]-0.1020620726159657*B2[0]*favg[1])*dv1+abar1[1]*(0.6123724356957942*favg[6]+0.3535533905932737*favg[2])-0.5*fjump[4]+0.3162277660168379*abar1[2]*favg[4]+0.3535533905932737*abar1[0]*favg[4]; 
  Ghat[7] = ((-0.1767766952966368*B2[2]*favg[6])-0.09128709291752768*B2[1]*favg[4]-0.1020620726159657*favg[2]*B2[2])*dv1+abar1[2]*(0.7905694150420949*favg[9]+0.2258769757263128*favg[7]+0.6123724356957944*favg[3]+0.3535533905932737*favg[0])-0.5*fjump[7]+0.3535533905932737*abar1[0]*favg[7]+abar1[1]*(0.5477225575051661*favg[5]+0.3162277660168379*favg[1]); 
  Ghat[8] = ((-0.158113883008419*B2[0]*favg[6])-0.09128709291752767*B2[1]*favg[4]-0.09128709291752767*B2[0]*favg[2])*dv1-0.5*fjump[8]+0.3535533905932737*abar1[0]*favg[8]; 

  outr[0] += 0.5*Ghat[0]*dv11; 
  outr[1] += 0.5*Ghat[1]*dv11; 
  outr[2] += 0.5*Ghat[2]*dv11; 
  outr[3] += -0.8660254037844386*Ghat[0]*dv11; 
  outr[4] += 0.5*Ghat[4]*dv11; 
  outr[5] += -0.8660254037844386*Ghat[1]*dv11; 
  outr[6] += -0.8660254037844386*Ghat[2]*dv11; 
  outr[7] += 0.5*Ghat[7]*dv11; 
  outr[8] += 0.5*Ghat[8]*dv11; 
  outr[9] += 1.118033988749895*Ghat[0]*dv11; 

  outl[0] += -0.5*Ghat[0]*dv11; 
  outl[1] += -0.5*Ghat[1]*dv11; 
  outl[2] += -0.5*Ghat[2]*dv11; 
  outl[3] += -0.8660254037844386*Ghat[0]*dv11; 
  outl[4] += -0.5*Ghat[4]*dv11; 
  outl[5] += -0.8660254037844386*Ghat[1]*dv11; 
  outl[6] += -0.8660254037844386*Ghat[2]*dv11; 
  outl[7] += -0.5*Ghat[7]*dv11; 
  outl[8] += -0.5*Ghat[8]*dv11; 
  outl[9] += -1.118033988749895*Ghat[0]*dv11; 
return std::abs(amid); 
} 
double VlasovSurfElcMag1x2vMax_VY_P3(const double *w, const double *dxv, const double amax, const double *EM, const double *fl, const double *fr, double *outl, double *outr) 
{ 
// w: Cell-center coordinates. dxv[NDIM]: Cell spacing. amax: amax in global lax flux. E: EM field. fl/fr: Distribution function in left/right cells 
// outl/outr: output distribution function in left/right cells 
// returns abs(amid) for use in determining amax in cfl and global lax flux 
  double dv11 = 2/dxv[2]; 
  const double *E1 = &EM[4]; 

  const double dv1 = dxv[1], wv1 = w[1]; 
  const double dv2 = dxv[2], wv2 = w[2]; 

  const double *B0 = &EM[12]; 
  const double *B1 = &EM[16]; 
  const double *B2 = &EM[20]; 

  double abar0[4]; 

  double abar1[4]; 


  abar1[0] = E1[0]-wv1*B2[0]; 
  abar1[1] = E1[1]-wv1*B2[1]; 
  abar1[2] = E1[2]-wv1*B2[2]; 
  abar1[3] = E1[3]-wv1*B2[3]; 

  double Ghat[20]; 

  for(unsigned int i=0; i<20; ++i){ 

    Ghat[i]=0.0; 

  }; 

  double favg[20]; 

  favg[0] = 1*fr[0]+fl[0]; 
  favg[1] = 1*fr[1]+fl[1]; 
  favg[2] = 1*fr[2]+fl[2]; 
  favg[3] = -1*fr[3]+fl[3]; 
  favg[4] = 1*fr[4]+fl[4]; 
  favg[5] = -1*fr[5]+fl[5]; 
  favg[6] = -1*fr[6]+fl[6]; 
  favg[7] = 1*fr[7]+fl[7]; 
  favg[8] = 1*fr[8]+fl[8]; 
  favg[9] = 1*fr[9]+fl[9]; 
  favg[10] = -1*fr[10]+fl[10]; 
  favg[11] = 1*fr[11]+fl[11]; 
  favg[12] = 1*fr[12]+fl[12]; 
  favg[13] = -1*fr[13]+fl[13]; 
  favg[14] = -1*fr[14]+fl[14]; 
  favg[15] = 1*fr[15]+fl[15]; 
  favg[16] = 1*fr[16]+fl[16]; 
  favg[17] = 1*fr[17]+fl[17]; 
  favg[18] = 1*fr[18]+fl[18]; 
  favg[19] = -1*fr[19]+fl[19]; 
  double fjump[20]; 

  fjump[0] = amax*(1*fr[0]-fl[0]); 
  fjump[1] = amax*(1*fr[1]-fl[1]); 
  fjump[2] = amax*(1*fr[2]-fl[2]); 
  fjump[3] = amax*(-1*fr[3]-fl[3]); 
  fjump[4] = amax*(1*fr[4]-fl[4]); 
  fjump[5] = amax*(-1*fr[5]-fl[5]); 
  fjump[6] = amax*(-1*fr[6]-fl[6]); 
  fjump[7] = amax*(1*fr[7]-fl[7]); 
  fjump[8] = amax*(1*fr[8]-fl[8]); 
  fjump[9] = amax*(1*fr[9]-fl[9]); 
  fjump[10] = amax*(-1*fr[10]-fl[10]); 
  fjump[11] = amax*(1*fr[11]-fl[11]); 
  fjump[12] = amax*(1*fr[12]-fl[12]); 
  fjump[13] = amax*(-1*fr[13]-fl[13]); 
  fjump[14] = amax*(-1*fr[14]-fl[14]); 
  fjump[15] = amax*(1*fr[15]-fl[15]); 
  fjump[16] = amax*(1*fr[16]-fl[16]); 
  fjump[17] = amax*(1*fr[17]-fl[17]); 
  fjump[18] = amax*(1*fr[18]-fl[18]); 
  fjump[19] = amax*(-1*fr[19]-fl[19]); 
  const double amid = 0.7071067811865475*abar1[0]-0.7905694150420947*abar1[2]; 
  Ghat[0] = ((-0.2282177322938192*B2[0]*favg[16])-0.1020620726159657*B2[2]*favg[11]-0.1767766952966368*B2[1]*favg[10]-0.1767766952966368*B2[0]*favg[6]-0.1020620726159657*B2[1]*favg[4]-0.1020620726159657*B2[0]*favg[2])*dv1-1.322875655532295*fjump[19]+abar1[0]*(0.9354143466934851*favg[19]+0.7905694150420949*favg[9]+0.6123724356957942*favg[3]+0.3535533905932737*favg[0])+0.3535533905932737*abar1[3]*favg[17]+abar1[1]*(0.7905694150420947*favg[15]+0.6123724356957942*favg[5]+0.3535533905932737*favg[1])+abar1[2]*(0.6123724356957945*favg[13]+0.3535533905932737*favg[7])-1.118033988749895*fjump[9]-0.8660254037844385*fjump[3]-0.5*fjump[0]; 
  Ghat[1] = ((-0.2282177322938192*B2[1]*favg[16])-0.08964214570007951*B2[3]*favg[11]-0.09128709291752769*B2[1]*favg[11]-0.1581138830084189*B2[2]*favg[10]-0.1767766952966368*B2[0]*favg[10]-0.1767766952966368*B2[1]*favg[6]-0.09128709291752768*B2[2]*favg[4]-0.1020620726159657*B2[0]*favg[4]-0.1020620726159657*B2[1]*favg[2])*dv1+abar1[1]*(0.9354143466934853*favg[19]+0.5477225575051661*favg[13]+0.7905694150420949*favg[9]+0.3162277660168379*favg[7]+0.6123724356957944*favg[3]+0.3535533905932737*favg[0])+abar1[2]*(0.3105295017040593*favg[17]+0.7071067811865475*favg[15]+0.5477225575051661*favg[5]+0.3162277660168379*favg[1])-1.118033988749895*fjump[15]+abar1[0]*(0.7905694150420948*favg[15]+0.6123724356957944*favg[5]+0.3535533905932737*favg[1])+abar1[3]*(0.537852874200477*favg[13]+0.3105295017040593*favg[7])-0.8660254037844386*fjump[5]-0.5*fjump[1]; 
  Ghat[2] = ((-0.2700308624336608*B2[0]*favg[19])-0.1020620726159657*B2[3]*favg[17]-0.2282177322938192*B2[1]*favg[15]-0.1581138830084189*B2[0]*favg[14]-0.1767766952966368*B2[2]*favg[13]-0.09128709291752767*B2[1]*favg[12]-0.2282177322938192*B2[0]*favg[9]-0.09128709291752765*B2[0]*favg[8]-0.1020620726159657*B2[2]*favg[7]-0.1767766952966368*B2[1]*favg[5]-0.1767766952966368*B2[0]*favg[3]-0.1020620726159657*favg[1]*B2[1]-0.1020620726159657*favg[0]*B2[0])*dv1-1.118033988749895*fjump[16]+abar1[0]*(0.7905694150420947*favg[16]+0.6123724356957942*favg[6]+0.3535533905932737*favg[2])+0.3535533905932736*abar1[2]*favg[11]+abar1[1]*(0.6123724356957942*favg[10]+0.3535533905932737*favg[4])-0.8660254037844385*fjump[6]-0.5*fjump[2]; 
  Ghat[4] = ((-0.2700308624336608*B2[1]*favg[19])-0.08964214570007954*B2[2]*favg[17]-0.2041241452319315*B2[2]*favg[15]-0.2282177322938192*B2[0]*favg[15]-0.1581138830084189*B2[1]*favg[14]-0.1552647508520297*B2[3]*favg[13]-0.1581138830084189*B2[1]*favg[13]-0.0816496580927726*B2[2]*favg[12]-0.09128709291752767*B2[0]*favg[12]-0.2282177322938192*B2[1]*favg[9]-0.09128709291752768*B2[1]*favg[8]-0.08964214570007954*B2[3]*favg[7]-0.09128709291752768*B2[1]*favg[7]-0.158113883008419*B2[2]*favg[5]-0.1767766952966368*B2[0]*favg[5]-0.1767766952966368*B2[1]*favg[3]-0.09128709291752768*favg[1]*B2[2]-0.1020620726159657*favg[0]*B2[1]-0.1020620726159657*B2[0]*favg[1])*dv1+abar1[1]*(0.7905694150420947*favg[16]+0.3162277660168378*favg[11]+0.6123724356957942*favg[6]+0.3535533905932737*favg[2])+0.3105295017040594*abar1[3]*favg[11]-0.8660254037844385*fjump[10]+abar1[0]*(0.6123724356957942*favg[10]+0.3535533905932737*favg[4])+abar1[2]*(0.547722557505166*favg[10]+0.3162277660168379*favg[4])-0.5*fjump[4]; 
  Ghat[7] = ((-0.2282177322938192*B2[2]*favg[16])-0.06520506636966263*B2[2]*favg[11]-0.1020620726159658*B2[0]*favg[11]-0.1552647508520296*B2[3]*favg[10]-0.1581138830084189*B2[1]*favg[10]-0.1767766952966368*B2[2]*favg[6]-0.08964214570007953*B2[3]*favg[4]-0.09128709291752768*B2[1]*favg[4]-0.1020620726159657*favg[2]*B2[2])*dv1+abar1[2]*(0.9354143466934853*favg[19]+0.3912303982179758*favg[13]+0.7905694150420949*favg[9]+0.2258769757263128*favg[7]+0.6123724356957944*favg[3]+0.3535533905932737*favg[0])+abar1[1]*(0.3105295017040593*favg[17]+0.7071067811865475*favg[15]+0.5477225575051661*favg[5]+0.3162277660168379*favg[1])+abar1[3]*(0.210818510677892*favg[17]+0.6943650748294137*favg[15]+0.5378528742004771*favg[5]+0.3105295017040593*favg[1])-0.8660254037844387*fjump[13]+abar1[0]*(0.6123724356957945*favg[13]+0.3535533905932737*favg[7])-0.5*fjump[7]; 
  Ghat[8] = ((-0.08964214570007953*B2[0]*favg[18])-0.2041241452319315*B2[0]*favg[16]-0.09128709291752769*B2[2]*favg[11]-0.1581138830084189*B2[1]*favg[10]-0.1581138830084189*B2[0]*favg[6]-0.09128709291752768*B2[1]*favg[4]-0.09128709291752768*B2[0]*favg[2])*dv1-0.8660254037844387*fjump[14]+abar1[0]*(0.6123724356957945*favg[14]+0.3535533905932737*favg[8])+0.3535533905932737*abar1[1]*favg[12]-0.5*fjump[8]; 
  Ghat[11] = ((-0.2700308624336609*B2[2]*favg[19])-0.06085806194501845*B2[3]*favg[17]-0.08964214570007949*B2[1]*favg[17]-0.2004459314343182*B2[3]*favg[15]-0.2041241452319314*B2[1]*favg[15]-0.1581138830084189*B2[2]*favg[14]-0.1129384878631564*B2[2]*favg[13]-0.1767766952966368*B2[0]*favg[13]-0.0801783725737273*B2[3]*favg[12]-0.08164965809277258*B2[1]*favg[12]-0.2282177322938192*B2[2]*favg[9]-0.09128709291752767*B2[2]*favg[8]-0.06520506636966263*B2[2]*favg[7]-0.1020620726159657*B2[0]*favg[7]-0.1552647508520297*B2[3]*favg[5]-0.1581138830084189*B2[1]*favg[5]-0.08964214570007949*favg[1]*B2[3]-0.1767766952966368*B2[2]*favg[3]-0.1020620726159657*favg[0]*B2[2]-0.09128709291752767*favg[1]*B2[1])*dv1+abar1[2]*(0.7905694150420949*favg[16]+0.2258769757263128*favg[11]+0.6123724356957945*favg[6]+0.3535533905932737*favg[2])-0.5*fjump[11]+0.3535533905932737*abar1[0]*favg[11]+abar1[1]*(0.5477225575051661*favg[10]+0.3162277660168379*favg[4])+abar1[3]*(0.5378528742004769*favg[10]+0.3105295017040594*favg[4]); 
  Ghat[12] = ((-0.08964214570007951*B2[1]*favg[18])-0.2041241452319315*B2[1]*favg[16]-0.0801783725737273*B2[3]*favg[11]-0.08164965809277257*B2[1]*favg[11]-0.1414213562373095*B2[2]*favg[10]-0.1581138830084189*B2[0]*favg[10]-0.1581138830084189*B2[1]*favg[6]-0.0816496580927726*B2[2]*favg[4]-0.09128709291752767*B2[0]*favg[4]-0.09128709291752767*B2[1]*favg[2])*dv1+abar1[1]*(0.6123724356957942*favg[14]+0.3535533905932737*favg[8])-0.5*fjump[12]+0.3162277660168379*abar1[2]*favg[12]+0.3535533905932737*abar1[0]*favg[12]; 
  Ghat[17] = ((-0.2282177322938192*B2[3]*favg[16])-0.06085806194501845*B2[3]*favg[11]-0.08964214570007949*B2[1]*favg[11]-0.1552647508520296*B2[2]*favg[10]-0.1767766952966368*B2[3]*favg[6]-0.08964214570007953*B2[2]*favg[4]-0.1020620726159657*favg[2]*B2[3])*dv1+abar1[3]*(0.9354143466934851*favg[19]+0.3651483716701107*favg[13]+0.7905694150420949*favg[9]+0.2108185106778919*favg[7]+0.6123724356957941*favg[3]+0.3535533905932737*favg[0])-0.5*fjump[17]+0.3535533905932737*abar1[0]*favg[17]+abar1[2]*(0.2108185106778919*favg[17]+0.6943650748294137*favg[15]+0.537852874200477*favg[5]+0.3105295017040592*favg[1])+abar1[1]*(0.5378528742004769*favg[13]+0.3105295017040592*favg[7]); 
  Ghat[18] = ((-0.1552647508520297*B2[0]*favg[14])-0.08964214570007951*B2[1]*favg[12]-0.08964214570007953*B2[0]*favg[8])*dv1-0.5*fjump[18]+0.3535533905932737*abar1[0]*favg[18]; 

  outr[0] += 0.5*Ghat[0]*dv11; 
  outr[1] += 0.5*Ghat[1]*dv11; 
  outr[2] += 0.5*Ghat[2]*dv11; 
  outr[3] += -0.8660254037844386*Ghat[0]*dv11; 
  outr[4] += 0.5*Ghat[4]*dv11; 
  outr[5] += -0.8660254037844386*Ghat[1]*dv11; 
  outr[6] += -0.8660254037844386*Ghat[2]*dv11; 
  outr[7] += 0.5*Ghat[7]*dv11; 
  outr[8] += 0.5*Ghat[8]*dv11; 
  outr[9] += 1.118033988749895*Ghat[0]*dv11; 
  outr[10] += -0.8660254037844386*Ghat[4]*dv11; 
  outr[11] += 0.5*Ghat[11]*dv11; 
  outr[12] += 0.5*Ghat[12]*dv11; 
  outr[13] += -0.8660254037844387*Ghat[7]*dv11; 
  outr[14] += -0.8660254037844387*Ghat[8]*dv11; 
  outr[15] += 1.118033988749895*Ghat[1]*dv11; 
  outr[16] += 1.118033988749895*Ghat[2]*dv11; 
  outr[17] += 0.5*Ghat[17]*dv11; 
  outr[18] += 0.5*Ghat[18]*dv11; 
  outr[19] += -1.322875655532295*Ghat[0]*dv11; 

  outl[0] += -0.5*Ghat[0]*dv11; 
  outl[1] += -0.5*Ghat[1]*dv11; 
  outl[2] += -0.5*Ghat[2]*dv11; 
  outl[3] += -0.8660254037844386*Ghat[0]*dv11; 
  outl[4] += -0.5*Ghat[4]*dv11; 
  outl[5] += -0.8660254037844386*Ghat[1]*dv11; 
  outl[6] += -0.8660254037844386*Ghat[2]*dv11; 
  outl[7] += -0.5*Ghat[7]*dv11; 
  outl[8] += -0.5*Ghat[8]*dv11; 
  outl[9] += -1.118033988749895*Ghat[0]*dv11; 
  outl[10] += -0.8660254037844386*Ghat[4]*dv11; 
  outl[11] += -0.5*Ghat[11]*dv11; 
  outl[12] += -0.5*Ghat[12]*dv11; 
  outl[13] += -0.8660254037844387*Ghat[7]*dv11; 
  outl[14] += -0.8660254037844387*Ghat[8]*dv11; 
  outl[15] += -1.118033988749895*Ghat[1]*dv11; 
  outl[16] += -1.118033988749895*Ghat[2]*dv11; 
  outl[17] += -0.5*Ghat[17]*dv11; 
  outl[18] += -0.5*Ghat[18]*dv11; 
  outl[19] += -1.322875655532295*Ghat[0]*dv11; 
return std::abs(amid); 
} 
double VlasovSurfElcMag1x2vMax_VY_P4(const double *w, const double *dxv, const double amax, const double *EM, const double *fl, const double *fr, double *outl, double *outr) 
{ 
// w: Cell-center coordinates. dxv[NDIM]: Cell spacing. amax: amax in global lax flux. E: EM field. fl/fr: Distribution function in left/right cells 
// outl/outr: output distribution function in left/right cells 
// returns abs(amid) for use in determining amax in cfl and global lax flux 
  double dv11 = 2/dxv[2]; 
  const double *E1 = &EM[5]; 

  const double dv1 = dxv[1], wv1 = w[1]; 
  const double dv2 = dxv[2], wv2 = w[2]; 

  const double *B0 = &EM[15]; 
  const double *B1 = &EM[20]; 
  const double *B2 = &EM[25]; 

  double abar0[5]; 

  double abar1[5]; 


  abar1[0] = E1[0]-wv1*B2[0]; 
  abar1[1] = E1[1]-wv1*B2[1]; 
  abar1[2] = E1[2]-wv1*B2[2]; 
  abar1[3] = E1[3]-wv1*B2[3]; 
  abar1[4] = E1[4]-wv1*B2[4]; 

  double Ghat[35]; 

  for(unsigned int i=0; i<35; ++i){ 

    Ghat[i]=0.0; 

  }; 

  double favg[35]; 

  favg[0] = 1*fr[0]+fl[0]; 
  favg[1] = 1*fr[1]+fl[1]; 
  favg[2] = 1*fr[2]+fl[2]; 
  favg[3] = -1*fr[3]+fl[3]; 
  favg[4] = 1*fr[4]+fl[4]; 
  favg[5] = -1*fr[5]+fl[5]; 
  favg[6] = -1*fr[6]+fl[6]; 
  favg[7] = 1*fr[7]+fl[7]; 
  favg[8] = 1*fr[8]+fl[8]; 
  favg[9] = 1*fr[9]+fl[9]; 
  favg[10] = -1*fr[10]+fl[10]; 
  favg[11] = 1*fr[11]+fl[11]; 
  favg[12] = 1*fr[12]+fl[12]; 
  favg[13] = -1*fr[13]+fl[13]; 
  favg[14] = -1*fr[14]+fl[14]; 
  favg[15] = 1*fr[15]+fl[15]; 
  favg[16] = 1*fr[16]+fl[16]; 
  favg[17] = 1*fr[17]+fl[17]; 
  favg[18] = 1*fr[18]+fl[18]; 
  favg[19] = -1*fr[19]+fl[19]; 
  favg[20] = -1*fr[20]+fl[20]; 
  favg[21] = -1*fr[21]+fl[21]; 
  favg[22] = 1*fr[22]+fl[22]; 
  favg[23] = 1*fr[23]+fl[23]; 
  favg[24] = 1*fr[24]+fl[24]; 
  favg[25] = 1*fr[25]+fl[25]; 
  favg[26] = 1*fr[26]+fl[26]; 
  favg[27] = 1*fr[27]+fl[27]; 
  favg[28] = -1*fr[28]+fl[28]; 
  favg[29] = -1*fr[29]+fl[29]; 
  favg[30] = -1*fr[30]+fl[30]; 
  favg[31] = -1*fr[31]+fl[31]; 
  favg[32] = 1*fr[32]+fl[32]; 
  favg[33] = 1*fr[33]+fl[33]; 
  favg[34] = 1*fr[34]+fl[34]; 
  double fjump[35]; 

  fjump[0] = amax*(1*fr[0]-fl[0]); 
  fjump[1] = amax*(1*fr[1]-fl[1]); 
  fjump[2] = amax*(1*fr[2]-fl[2]); 
  fjump[3] = amax*(-1*fr[3]-fl[3]); 
  fjump[4] = amax*(1*fr[4]-fl[4]); 
  fjump[5] = amax*(-1*fr[5]-fl[5]); 
  fjump[6] = amax*(-1*fr[6]-fl[6]); 
  fjump[7] = amax*(1*fr[7]-fl[7]); 
  fjump[8] = amax*(1*fr[8]-fl[8]); 
  fjump[9] = amax*(1*fr[9]-fl[9]); 
  fjump[10] = amax*(-1*fr[10]-fl[10]); 
  fjump[11] = amax*(1*fr[11]-fl[11]); 
  fjump[12] = amax*(1*fr[12]-fl[12]); 
  fjump[13] = amax*(-1*fr[13]-fl[13]); 
  fjump[14] = amax*(-1*fr[14]-fl[14]); 
  fjump[15] = amax*(1*fr[15]-fl[15]); 
  fjump[16] = amax*(1*fr[16]-fl[16]); 
  fjump[17] = amax*(1*fr[17]-fl[17]); 
  fjump[18] = amax*(1*fr[18]-fl[18]); 
  fjump[19] = amax*(-1*fr[19]-fl[19]); 
  fjump[20] = amax*(-1*fr[20]-fl[20]); 
  fjump[21] = amax*(-1*fr[21]-fl[21]); 
  fjump[22] = amax*(1*fr[22]-fl[22]); 
  fjump[23] = amax*(1*fr[23]-fl[23]); 
  fjump[24] = amax*(1*fr[24]-fl[24]); 
  fjump[25] = amax*(1*fr[25]-fl[25]); 
  fjump[26] = amax*(1*fr[26]-fl[26]); 
  fjump[27] = amax*(1*fr[27]-fl[27]); 
  fjump[28] = amax*(-1*fr[28]-fl[28]); 
  fjump[29] = amax*(-1*fr[29]-fl[29]); 
  fjump[30] = amax*(-1*fr[30]-fl[30]); 
  fjump[31] = amax*(-1*fr[31]-fl[31]); 
  fjump[32] = amax*(1*fr[32]-fl[32]); 
  fjump[33] = amax*(1*fr[33]-fl[33]); 
  fjump[34] = amax*(1*fr[34]-fl[34]); 
  const double amid = 0.7954951288348656*abar1[4]-0.7905694150420947*abar1[2]+0.7071067811865475*abar1[0]; 
  Ghat[0] = ((-0.2700308624336608*B2[0]*favg[31])-0.1020620726159658*B2[3]*favg[26]-0.2282177322938192*B2[1]*favg[22]-0.1767766952966368*B2[2]*favg[20]-0.2282177322938192*B2[0]*favg[16]-0.1020620726159658*B2[2]*favg[11]-0.1767766952966368*B2[1]*favg[10]-0.1767766952966368*B2[0]*favg[6]-0.1020620726159657*B2[1]*favg[4]-0.1020620726159657*B2[0]*favg[2])*dv1-1.5*fjump[34]+abar1[0]*(1.060660171779821*favg[34]+0.9354143466934853*favg[19]+0.7905694150420949*favg[9]+0.6123724356957944*favg[3]+0.3535533905932737*favg[0])+0.3535533905932737*abar1[4]*favg[32]+abar1[1]*(0.9354143466934852*favg[30]+0.7905694150420948*favg[15]+0.6123724356957944*favg[5]+0.3535533905932737*favg[1])+abar1[3]*(0.6123724356957946*favg[28]+0.3535533905932737*favg[17])+abar1[2]*(0.7905694150420949*favg[24]+0.6123724356957945*favg[13]+0.3535533905932737*favg[7])-1.322875655532296*fjump[19]-1.118033988749895*fjump[9]-0.8660254037844386*fjump[3]-0.5*fjump[0]; 
  Ghat[1] = ((-0.2700308624336607*B2[1]*favg[31])-0.08908708063747475*B2[4]*favg[26]-0.08964214570007949*B2[2]*favg[26]-0.2041241452319314*B2[2]*favg[22]-0.2282177322938192*B2[0]*favg[22]-0.1552647508520296*B2[3]*favg[20]-0.1581138830084189*B2[1]*favg[20]-0.2282177322938192*B2[1]*favg[16]-0.08964214570007949*B2[3]*favg[11]-0.09128709291752767*B2[1]*favg[11]-0.1581138830084189*B2[2]*favg[10]-0.1767766952966368*B2[0]*favg[10]-0.1767766952966368*B2[1]*favg[6]-0.09128709291752767*B2[2]*favg[4]-0.1020620726159657*B2[0]*favg[4]-0.1020620726159657*B2[1]*favg[2])*dv1+abar1[1]*(1.060660171779821*favg[34]+0.7071067811865474*favg[24]+0.9354143466934851*favg[19]+0.5477225575051661*favg[13]+0.7905694150420949*favg[9]+0.3162277660168379*favg[7]+0.6123724356957941*favg[3]+0.3535533905932737*favg[0])+abar1[3]*(0.3086066999241837*favg[32]+0.694365074829413*favg[24]+0.5378528742004769*favg[13]+0.3105295017040592*favg[7])-1.322875655532295*fjump[30]+abar1[0]*(0.9354143466934849*favg[30]+0.7905694150420945*favg[15]+0.6123724356957941*favg[5]+0.3535533905932737*favg[1])+abar1[2]*(0.8366600265340753*favg[30]+0.5378528742004768*favg[28]+0.3105295017040592*favg[17]+0.7071067811865474*favg[15]+0.5477225575051659*favg[5]+0.3162277660168379*favg[1])+abar1[4]*(0.5345224838248485*favg[28]+0.3086066999241837*favg[17])-1.118033988749895*fjump[15]-0.8660254037844384*fjump[5]-0.5*fjump[1]; 
  Ghat[2] = ((-0.3061862178478972*B2[0]*favg[34])-0.1020620726159657*B2[4]*favg[32]-0.2700308624336608*B2[1]*favg[30]-0.1767766952966368*B2[3]*favg[28]-0.2041241452319315*B2[0]*favg[25]-0.2282177322938192*B2[2]*favg[24]-0.09128709291752768*B2[2]*favg[23]-0.1581138830084189*B2[1]*favg[21]-0.2700308624336608*B2[0]*favg[19]-0.1020620726159657*B2[3]*favg[17]-0.2282177322938192*B2[1]*favg[15]-0.1581138830084189*B2[0]*favg[14]-0.1767766952966369*B2[2]*favg[13]-0.09128709291752769*B2[1]*favg[12]-0.2282177322938192*B2[0]*favg[9]-0.09128709291752768*B2[0]*favg[8]-0.1020620726159657*B2[2]*favg[7]-0.1767766952966368*B2[1]*favg[5]-0.1767766952966368*B2[0]*favg[3]-0.1020620726159657*favg[1]*B2[1]-0.1020620726159657*favg[0]*B2[0])*dv1-1.322875655532295*fjump[31]+abar1[0]*(0.9354143466934852*favg[31]+0.7905694150420948*favg[16]+0.6123724356957944*favg[6]+0.3535533905932737*favg[2])+0.3535533905932737*abar1[3]*favg[26]+abar1[1]*(0.7905694150420949*favg[22]+0.6123724356957944*favg[10]+0.3535533905932737*favg[4])+abar1[2]*(0.6123724356957944*favg[20]+0.3535533905932737*favg[11])-1.118033988749895*fjump[16]-0.8660254037844386*fjump[6]-0.5*fjump[2]; 
  Ghat[4] = ((-0.3061862178478971*B2[1]*favg[34])-0.08908708063747478*B2[3]*favg[32]-0.241522945769824*B2[2]*favg[30]-0.2700308624336608*B2[0]*favg[30]-0.1543033499620919*B2[4]*favg[28]-0.1552647508520297*B2[2]*favg[28]-0.2041241452319315*B2[1]*favg[25]-0.2004459314343182*B2[3]*favg[24]-0.2041241452319315*B2[1]*favg[24]-0.0801783725737273*B2[3]*favg[23]-0.08164965809277257*B2[1]*favg[23]-0.1414213562373095*B2[2]*favg[21]-0.158113883008419*B2[0]*favg[21]-0.2700308624336608*B2[1]*favg[19]-0.08908708063747478*B2[4]*favg[17]-0.08964214570007954*B2[2]*favg[17]-0.2041241452319315*B2[2]*favg[15]-0.2282177322938192*B2[0]*favg[15]-0.1581138830084189*B2[1]*favg[14]-0.1552647508520297*B2[3]*favg[13]-0.1581138830084189*B2[1]*favg[13]-0.0816496580927726*B2[2]*favg[12]-0.09128709291752767*B2[0]*favg[12]-0.2282177322938192*B2[1]*favg[9]-0.09128709291752768*B2[1]*favg[8]-0.08964214570007954*B2[3]*favg[7]-0.09128709291752768*B2[1]*favg[7]-0.158113883008419*B2[2]*favg[5]-0.1767766952966368*B2[0]*favg[5]-0.1767766952966368*B2[1]*favg[3]-0.09128709291752768*favg[1]*B2[2]-0.1020620726159657*favg[0]*B2[1]-0.1020620726159657*B2[0]*favg[1])*dv1+abar1[1]*(0.9354143466934851*favg[31]+0.547722557505166*favg[20]+0.7905694150420947*favg[16]+0.3162277660168378*favg[11]+0.6123724356957942*favg[6]+0.3535533905932737*favg[2])+0.3086066999241837*abar1[4]*favg[26]+abar1[2]*(0.3105295017040594*favg[26]+0.7071067811865474*favg[22]+0.547722557505166*favg[10]+0.3162277660168379*favg[4])-1.118033988749895*fjump[22]+abar1[0]*(0.7905694150420949*favg[22]+0.6123724356957942*favg[10]+0.3535533905932737*favg[4])+abar1[3]*(0.5378528742004771*favg[20]+0.3105295017040594*favg[11])-0.8660254037844385*fjump[10]-0.5*fjump[4]; 
  Ghat[7] = ((-0.2700308624336607*B2[2]*favg[31])-0.06085806194501845*B2[3]*favg[26]-0.08964214570007949*B2[1]*favg[26]-0.2004459314343182*B2[3]*favg[22]-0.2041241452319314*B2[1]*favg[22]-0.1515228816828316*B2[4]*favg[20]-0.1129384878631564*B2[2]*favg[20]-0.1767766952966368*B2[0]*favg[20]-0.2282177322938192*B2[2]*favg[16]-0.08748177652797064*B2[4]*favg[11]-0.06520506636966263*B2[2]*favg[11]-0.1020620726159657*B2[0]*favg[11]-0.1552647508520296*B2[3]*favg[10]-0.1581138830084189*B2[1]*favg[10]-0.1767766952966368*B2[2]*favg[6]-0.08964214570007953*B2[3]*favg[4]-0.09128709291752767*B2[1]*favg[4]-0.1020620726159657*favg[2]*B2[2])*dv1+abar1[2]*(1.060660171779821*favg[34]+0.3030457633656631*favg[32]+0.5050762722761053*favg[24]+0.9354143466934851*favg[19]+0.3912303982179758*favg[13]+0.7905694150420949*favg[9]+0.2258769757263128*favg[7]+0.6123724356957941*favg[3]+0.3535533905932737*favg[0])+abar1[4]*(0.2053427052057389*favg[32]+0.6776309271789385*favg[24]+0.5248906591678238*favg[13]+0.3030457633656631*favg[7])+abar1[1]*(0.8366600265340753*favg[30]+0.5378528742004768*favg[28]+0.3105295017040592*favg[17]+0.7071067811865474*favg[15]+0.5477225575051659*favg[5]+0.3162277660168379*favg[1])+abar1[3]*(0.8215838362577492*favg[30]+0.3651483716701107*favg[28]+0.2108185106778919*favg[17]+0.6943650748294137*favg[15]+0.537852874200477*favg[5]+0.3105295017040592*favg[1])-1.118033988749895*fjump[24]+abar1[0]*(0.7905694150420949*favg[24]+0.6123724356957945*favg[13]+0.3535533905932737*favg[7])-0.8660254037844387*fjump[13]-0.5*fjump[7]; 
  Ghat[8] = ((-0.241522945769824*B2[0]*favg[31])-0.1552647508520297*B2[0]*favg[29]-0.0896421457000795*B2[1]*favg[27]-0.09128709291752768*B2[3]*favg[26]-0.2041241452319315*B2[1]*favg[22]-0.1581138830084189*B2[2]*favg[20]-0.08964214570007953*B2[0]*favg[18]-0.2041241452319315*B2[0]*favg[16]-0.09128709291752769*B2[2]*favg[11]-0.1581138830084189*B2[1]*favg[10]-0.1581138830084189*B2[0]*favg[6]-0.09128709291752768*B2[1]*favg[4]-0.09128709291752768*B2[0]*favg[2])*dv1-1.118033988749895*fjump[25]+abar1[0]*(0.7905694150420949*favg[25]+0.6123724356957945*favg[14]+0.3535533905932737*favg[8])+0.3535533905932737*abar1[2]*favg[23]+abar1[1]*(0.6123724356957944*favg[21]+0.3535533905932737*favg[12])-0.8660254037844387*fjump[14]-0.5*fjump[8]; 
  Ghat[11] = ((-0.3061862178478973*B2[2]*favg[34])-0.05927733306332966*B2[4]*favg[32]-0.08748177652797065*B2[2]*favg[32]-0.2371708245126284*B2[3]*favg[30]-0.2415229457698239*B2[1]*favg[30]-0.105409255338946*B2[3]*favg[28]-0.1552647508520296*B2[1]*favg[28]-0.2041241452319315*B2[2]*favg[25]-0.1956151991089879*B2[4]*favg[24]-0.1458029608799511*B2[2]*favg[24]-0.2282177322938192*B2[0]*favg[24]-0.07824607964359516*B2[4]*favg[23]-0.05832118435198044*B2[2]*favg[23]-0.09128709291752768*B2[0]*favg[23]-0.1388730149658827*B2[3]*favg[21]-0.1414213562373095*B2[1]*favg[21]-0.2700308624336609*B2[2]*favg[19]-0.06085806194501845*B2[3]*favg[17]-0.08964214570007949*B2[1]*favg[17]-0.2004459314343182*B2[3]*favg[15]-0.2041241452319314*B2[1]*favg[15]-0.158113883008419*B2[2]*favg[14]-0.1515228816828316*B2[4]*favg[13]-0.1129384878631564*B2[2]*favg[13]-0.1767766952966368*B2[0]*favg[13]-0.0801783725737273*B2[3]*favg[12]-0.08164965809277258*B2[1]*favg[12]-0.2282177322938192*B2[2]*favg[9]-0.09128709291752768*B2[2]*favg[8]-0.08748177652797065*B2[4]*favg[7]-0.06520506636966263*B2[2]*favg[7]-0.1020620726159658*B2[0]*favg[7]-0.1552647508520297*B2[3]*favg[5]-0.1581138830084189*B2[1]*favg[5]-0.08964214570007949*favg[1]*B2[3]-0.1767766952966369*B2[2]*favg[3]-0.1020620726159658*favg[0]*B2[2]-0.09128709291752768*favg[1]*B2[1])*dv1+abar1[2]*(0.9354143466934851*favg[31]+0.3912303982179758*favg[20]+0.7905694150420949*favg[16]+0.2258769757263128*favg[11]+0.6123724356957946*favg[6]+0.3535533905932737*favg[2])+abar1[1]*(0.3105295017040592*favg[26]+0.7071067811865475*favg[22]+0.5477225575051661*favg[10]+0.3162277660168379*favg[4])+abar1[3]*(0.2108185106778919*favg[26]+0.6943650748294138*favg[22]+0.5378528742004769*favg[10]+0.3105295017040594*favg[4])-0.8660254037844388*fjump[20]+abar1[0]*(0.6123724356957946*favg[20]+0.3535533905932737*favg[11])+abar1[4]*(0.524890659167824*favg[20]+0.3030457633656631*favg[11])-0.5*fjump[11]; 
  Ghat[12] = ((-0.2415229457698239*B2[1]*favg[31])-0.1552647508520296*B2[1]*favg[29]-0.08017837257372729*B2[2]*favg[27]-0.08964214570007951*B2[0]*favg[27]-0.07968190728895956*B2[4]*favg[26]-0.08017837257372729*B2[2]*favg[26]-0.1825741858350554*B2[2]*favg[22]-0.2041241452319315*B2[0]*favg[22]-0.1388730149658827*B2[3]*favg[20]-0.1414213562373095*B2[1]*favg[20]-0.08964214570007949*B2[1]*favg[18]-0.2041241452319314*B2[1]*favg[16]-0.0801783725737273*B2[3]*favg[11]-0.08164965809277258*B2[1]*favg[11]-0.1414213562373095*B2[2]*favg[10]-0.1581138830084189*B2[0]*favg[10]-0.1581138830084189*B2[1]*favg[6]-0.0816496580927726*B2[2]*favg[4]-0.09128709291752768*B2[0]*favg[4]-0.09128709291752768*B2[1]*favg[2])*dv1+abar1[1]*(0.7905694150420945*favg[25]+0.3162277660168379*favg[23]+0.6123724356957941*favg[14]+0.3535533905932737*favg[8])+0.3105295017040594*abar1[3]*favg[23]-0.8660254037844388*fjump[21]+abar1[0]*(0.6123724356957946*favg[21]+0.3535533905932737*favg[12])+abar1[2]*(0.5477225575051661*favg[21]+0.3162277660168379*favg[12])-0.5*fjump[12]; 
  Ghat[17] = ((-0.2700308624336607*B2[3]*favg[31])-0.0556702214268904*B2[4]*favg[26]-0.06085806194501845*B2[2]*favg[26]-0.1020620726159657*B2[0]*favg[26]-0.199204768222399*B2[4]*favg[22]-0.2004459314343182*B2[2]*favg[22]-0.1054092553389459*B2[3]*favg[20]-0.1552647508520296*B2[1]*favg[20]-0.2282177322938192*B2[3]*favg[16]-0.06085806194501845*B2[3]*favg[11]-0.08964214570007949*B2[1]*favg[11]-0.1543033499620918*B2[4]*favg[10]-0.1552647508520296*B2[2]*favg[10]-0.1767766952966368*B2[3]*favg[6]-0.08908708063747478*favg[4]*B2[4]-0.08964214570007953*B2[2]*favg[4]-0.1020620726159657*favg[2]*B2[3])*dv1+abar1[3]*(1.060660171779821*favg[34]+0.1928473039599674*favg[32]+0.4714045207910316*favg[24]+0.9354143466934851*favg[19]+0.3651483716701107*favg[13]+0.7905694150420949*favg[9]+0.2108185106778919*favg[7]+0.6123724356957941*favg[3]+0.3535533905932737*favg[0])+abar1[1]*(0.3086066999241837*favg[32]+0.694365074829413*favg[24]+0.5378528742004769*favg[13]+0.3105295017040592*favg[7])+abar1[2]*(0.8215838362577492*favg[30]+0.3651483716701107*favg[28]+0.2108185106778919*favg[17]+0.6943650748294137*favg[15]+0.537852874200477*favg[5]+0.3105295017040592*favg[1])+abar1[4]*(0.8164965809277258*favg[30]+0.3340213285613424*favg[28]+0.1928473039599674*favg[17]+0.6900655593423541*favg[15]+0.5345224838248486*favg[5]+0.3086066999241837*favg[1])-0.8660254037844386*fjump[28]+abar1[0]*(0.6123724356957942*favg[28]+0.3535533905932737*favg[17])-0.5*fjump[17]; 
  Ghat[18] = ((-0.0890870806374748*B2[0]*favg[33])-0.2004459314343183*B2[0]*favg[25]-0.08964214570007953*B2[2]*favg[23]-0.1552647508520296*B2[1]*favg[21]-0.1552647508520297*B2[0]*favg[14]-0.08964214570007951*B2[1]*favg[12]-0.08964214570007953*B2[0]*favg[8])*dv1-0.8660254037844388*fjump[29]+abar1[0]*(0.6123724356957946*favg[29]+0.3535533905932737*favg[18])+0.3535533905932737*abar1[1]*favg[27]-0.5*fjump[18]; 
  Ghat[23] = ((-0.2415229457698239*B2[2]*favg[31])-0.1552647508520297*B2[2]*favg[29]-0.07873359887517357*B2[3]*favg[27]-0.08017837257372727*B2[1]*favg[27]-0.05443310539518173*B2[3]*favg[26]-0.08017837257372727*B2[1]*favg[26]-0.1792842914001591*B2[3]*favg[22]-0.1825741858350553*B2[1]*favg[22]-0.1355261854357877*B2[4]*favg[20]-0.1010152544552211*B2[2]*favg[20]-0.1581138830084189*B2[0]*favg[20]-0.08964214570007953*B2[2]*favg[18]-0.2041241452319315*B2[2]*favg[16]-0.07824607964359515*B2[4]*favg[11]-0.05832118435198043*B2[2]*favg[11]-0.09128709291752767*B2[0]*favg[11]-0.1388730149658826*B2[3]*favg[10]-0.1414213562373095*B2[1]*favg[10]-0.1581138830084189*B2[2]*favg[6]-0.08017837257372731*B2[3]*favg[4]-0.08164965809277258*B2[1]*favg[4]-0.09128709291752767*favg[2]*B2[2])*dv1+abar1[2]*(0.7905694150420949*favg[25]+0.2258769757263128*favg[23]+0.6123724356957945*favg[14]+0.3535533905932737*favg[8])-0.5*fjump[23]+0.3030457633656632*abar1[4]*favg[23]+0.3535533905932737*abar1[0]*favg[23]+abar1[1]*(0.5477225575051659*favg[21]+0.3162277660168379*favg[12])+abar1[3]*(0.5378528742004772*favg[21]+0.3105295017040594*favg[12]); 
  Ghat[26] = ((-0.3061862178478971*B2[3]*favg[34])-0.0556702214268904*B2[3]*favg[32]-0.08908708063747475*B2[1]*favg[32]-0.2357022603955158*B2[4]*favg[30]-0.2371708245126284*B2[2]*favg[30]-0.09642365197998372*B2[4]*favg[28]-0.105409255338946*B2[2]*favg[28]-0.1767766952966368*B2[0]*favg[28]-0.2041241452319315*B2[3]*favg[25]-0.1360827634879543*B2[3]*favg[24]-0.2004459314343181*B2[1]*favg[24]-0.05443310539518172*B2[3]*favg[23]-0.08017837257372727*B2[1]*favg[23]-0.1380131118684708*B2[4]*favg[21]-0.1388730149658827*B2[2]*favg[21]-0.2700308624336607*B2[3]*favg[19]-0.0556702214268904*B2[4]*favg[17]-0.06085806194501845*B2[2]*favg[17]-0.1020620726159657*B2[0]*favg[17]-0.1992047682223989*B2[4]*favg[15]-0.2004459314343183*B2[2]*favg[15]-0.1581138830084189*B2[3]*favg[14]-0.105409255338946*B2[3]*favg[13]-0.1552647508520296*B2[1]*favg[13]-0.07968190728895956*B2[4]*favg[12]-0.08017837257372729*B2[2]*favg[12]-0.2282177322938192*B2[3]*favg[9]-0.09128709291752768*B2[3]*favg[8]-0.06085806194501845*B2[3]*favg[7]-0.08964214570007947*B2[1]*favg[7]-0.1543033499620919*B2[4]*favg[5]-0.1552647508520297*B2[2]*favg[5]-0.08908708063747475*favg[1]*B2[4]-0.1767766952966368*favg[3]*B2[3]-0.1020620726159657*favg[0]*B2[3]-0.08964214570007947*favg[1]*B2[2])*dv1+abar1[3]*(0.9354143466934851*favg[31]+0.3651483716701107*favg[20]+0.7905694150420947*favg[16]+0.2108185106778919*favg[11]+0.6123724356957942*favg[6]+0.3535533905932736*favg[2])-0.5*fjump[26]+0.3535533905932737*abar1[0]*favg[26]+abar1[2]*(0.210818510677892*favg[26]+0.6943650748294133*favg[22]+0.5378528742004769*favg[10]+0.3105295017040594*favg[4])+abar1[4]*(0.1928473039599674*favg[26]+0.6900655593423543*favg[22]+0.5345224838248485*favg[10]+0.3086066999241837*favg[4])+abar1[1]*(0.5378528742004769*favg[20]+0.3105295017040592*favg[11]); 
  Ghat[27] = ((-0.08908708063747475*B2[1]*favg[33])-0.2004459314343181*B2[1]*favg[25]-0.07873359887517357*B2[3]*favg[23]-0.08017837257372727*B2[1]*favg[23]-0.1388730149658827*B2[2]*favg[21]-0.1552647508520297*B2[0]*favg[21]-0.1552647508520296*B2[1]*favg[14]-0.0801783725737273*B2[2]*favg[12]-0.0896421457000795*B2[0]*favg[12]-0.08964214570007947*B2[1]*favg[8])*dv1+abar1[1]*(0.6123724356957941*favg[29]+0.3535533905932737*favg[18])-0.5*fjump[27]+0.3162277660168379*abar1[2]*favg[27]+0.3535533905932737*abar1[0]*favg[27]; 
  Ghat[32] = ((-0.2700308624336607*B2[4]*favg[31])-0.0556702214268904*B2[3]*favg[26]-0.08908708063747475*B2[1]*favg[26]-0.199204768222399*B2[3]*favg[22]-0.1026713526028695*B2[4]*favg[20]-0.1515228816828316*B2[2]*favg[20]-0.2282177322938192*B2[4]*favg[16]-0.05927733306332966*B2[4]*favg[11]-0.08748177652797064*B2[2]*favg[11]-0.1543033499620918*B2[3]*favg[10]-0.1767766952966368*B2[4]*favg[6]-0.1020620726159657*favg[2]*B2[4]-0.08908708063747478*B2[3]*favg[4])*dv1+abar1[4]*(1.060660171779821*favg[34]+0.1716552925357952*favg[32]+0.459160247523732*favg[24]+0.9354143466934851*favg[19]+0.355663998379978*favg[13]+0.7905694150420949*favg[9]+0.2053427052057389*favg[7]+0.6123724356957941*favg[3]+0.3535533905932737*favg[0])-0.5*fjump[32]+0.3535533905932737*abar1[0]*favg[32]+abar1[2]*(0.2053427052057389*favg[32]+0.6776309271789385*favg[24]+0.5248906591678238*favg[13]+0.3030457633656631*favg[7])+abar1[3]*(0.8164965809277258*favg[30]+0.3340213285613424*favg[28]+0.1928473039599674*favg[17]+0.6900655593423541*favg[15]+0.5345224838248486*favg[5]+0.3086066999241837*favg[1])+abar1[1]*(0.5345224838248485*favg[28]+0.3086066999241837*favg[17]); 
  Ghat[33] = ((-0.1543033499620919*B2[0]*favg[29])-0.08908708063747478*B2[1]*favg[27]-0.0890870806374748*B2[0]*favg[18])*dv1-0.5*fjump[33]+0.3535533905932737*abar1[0]*favg[33]; 

  outr[0] += 0.5*Ghat[0]*dv11; 
  outr[1] += 0.5*Ghat[1]*dv11; 
  outr[2] += 0.5*Ghat[2]*dv11; 
  outr[3] += -0.8660254037844386*Ghat[0]*dv11; 
  outr[4] += 0.5*Ghat[4]*dv11; 
  outr[5] += -0.8660254037844386*Ghat[1]*dv11; 
  outr[6] += -0.8660254037844386*Ghat[2]*dv11; 
  outr[7] += 0.5*Ghat[7]*dv11; 
  outr[8] += 0.5*Ghat[8]*dv11; 
  outr[9] += 1.118033988749895*Ghat[0]*dv11; 
  outr[10] += -0.8660254037844386*Ghat[4]*dv11; 
  outr[11] += 0.5*Ghat[11]*dv11; 
  outr[12] += 0.5*Ghat[12]*dv11; 
  outr[13] += -0.8660254037844387*Ghat[7]*dv11; 
  outr[14] += -0.8660254037844387*Ghat[8]*dv11; 
  outr[15] += 1.118033988749895*Ghat[1]*dv11; 
  outr[16] += 1.118033988749895*Ghat[2]*dv11; 
  outr[17] += 0.5*Ghat[17]*dv11; 
  outr[18] += 0.5*Ghat[18]*dv11; 
  outr[19] += -1.322875655532295*Ghat[0]*dv11; 
  outr[20] += -0.8660254037844387*Ghat[11]*dv11; 
  outr[21] += -0.8660254037844387*Ghat[12]*dv11; 
  outr[22] += 1.118033988749895*Ghat[4]*dv11; 
  outr[23] += 0.5*Ghat[23]*dv11; 
  outr[24] += 1.118033988749895*Ghat[7]*dv11; 
  outr[25] += 1.118033988749895*Ghat[8]*dv11; 
  outr[26] += 0.5*Ghat[26]*dv11; 
  outr[27] += 0.5*Ghat[27]*dv11; 
  outr[28] += -0.8660254037844386*Ghat[17]*dv11; 
  outr[29] += -0.8660254037844386*Ghat[18]*dv11; 
  outr[30] += -1.322875655532295*Ghat[1]*dv11; 
  outr[31] += -1.322875655532295*Ghat[2]*dv11; 
  outr[32] += 0.5*Ghat[32]*dv11; 
  outr[33] += 0.5*Ghat[33]*dv11; 
  outr[34] += 1.5*Ghat[0]*dv11; 

  outl[0] += -0.5*Ghat[0]*dv11; 
  outl[1] += -0.5*Ghat[1]*dv11; 
  outl[2] += -0.5*Ghat[2]*dv11; 
  outl[3] += -0.8660254037844386*Ghat[0]*dv11; 
  outl[4] += -0.5*Ghat[4]*dv11; 
  outl[5] += -0.8660254037844386*Ghat[1]*dv11; 
  outl[6] += -0.8660254037844386*Ghat[2]*dv11; 
  outl[7] += -0.5*Ghat[7]*dv11; 
  outl[8] += -0.5*Ghat[8]*dv11; 
  outl[9] += -1.118033988749895*Ghat[0]*dv11; 
  outl[10] += -0.8660254037844386*Ghat[4]*dv11; 
  outl[11] += -0.5*Ghat[11]*dv11; 
  outl[12] += -0.5*Ghat[12]*dv11; 
  outl[13] += -0.8660254037844387*Ghat[7]*dv11; 
  outl[14] += -0.8660254037844387*Ghat[8]*dv11; 
  outl[15] += -1.118033988749895*Ghat[1]*dv11; 
  outl[16] += -1.118033988749895*Ghat[2]*dv11; 
  outl[17] += -0.5*Ghat[17]*dv11; 
  outl[18] += -0.5*Ghat[18]*dv11; 
  outl[19] += -1.322875655532295*Ghat[0]*dv11; 
  outl[20] += -0.8660254037844387*Ghat[11]*dv11; 
  outl[21] += -0.8660254037844387*Ghat[12]*dv11; 
  outl[22] += -1.118033988749895*Ghat[4]*dv11; 
  outl[23] += -0.5*Ghat[23]*dv11; 
  outl[24] += -1.118033988749895*Ghat[7]*dv11; 
  outl[25] += -1.118033988749895*Ghat[8]*dv11; 
  outl[26] += -0.5*Ghat[26]*dv11; 
  outl[27] += -0.5*Ghat[27]*dv11; 
  outl[28] += -0.8660254037844386*Ghat[17]*dv11; 
  outl[29] += -0.8660254037844386*Ghat[18]*dv11; 
  outl[30] += -1.322875655532295*Ghat[1]*dv11; 
  outl[31] += -1.322875655532295*Ghat[2]*dv11; 
  outl[32] += -0.5*Ghat[32]*dv11; 
  outl[33] += -0.5*Ghat[33]*dv11; 
  outl[34] += -1.5*Ghat[0]*dv11; 
return std::abs(amid); 
} 
