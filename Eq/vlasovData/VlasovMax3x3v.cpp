#include <VlasovModDecl.h> 
double VlasovVol3x3vMaxP1(const double *w, const double *dxv, const double *EM, const double *f, double *out) 
{ 
// w[NDIM]: Cell-center coordinates. dxv[NDIM]: Cell spacing. EM/f: Input EM-field/distribution function. out: Incremented output 
  double dv0dx0 = dxv[3]/dxv[0]; 
  double w0dx0 = w[3]/dxv[0]; 
  double dv1dx1 = dxv[4]/dxv[1]; 
  double w1dx1 = w[4]/dxv[1]; 
  double dv2dx2 = dxv[5]/dxv[2]; 
  double w2dx2 = w[5]/dxv[2]; 
  const double dv10 = 2/dxv[3]; 
  const double *E0 = &EM[0]; 
  const double dv1 = dxv[3], wv1 = w[3]; 
  const double dv11 = 2/dxv[4]; 
  const double *E1 = &EM[4]; 
  const double dv2 = dxv[4], wv2 = w[4]; 
  const double dv12 = 2/dxv[5]; 
  const double *E2 = &EM[8]; 
  const double dv3 = dxv[5], wv3 = w[5]; 

  const double *B0 = &EM[12]; 
  const double *B1 = &EM[16]; 
  const double *B2 = &EM[20]; 

  double alpha_mid = 0.0; 
  double alpha_cdim[21]; 
  double alpha_vdim[21]; 

  alpha_cdim[0] = 16.0*w0dx0; 
  alpha_cdim[4] = 4.618802153517007*dv0dx0; 
  alpha_mid += std::abs(w0dx0)+0.5*dv0dx0; 
  alpha_cdim[7] = 16.0*w1dx1; 
  alpha_cdim[12] = 4.618802153517007*dv1dx1; 
  alpha_mid += std::abs(w1dx1)+0.5*dv1dx1; 
  alpha_cdim[14] = 16.0*w2dx2; 
  alpha_cdim[20] = 4.618802153517007*dv2dx2; 
  alpha_mid += std::abs(w2dx2)+0.5*dv2dx2; 
  alpha_vdim[0] = dv10*(2.828427124746191*(B2[0]*wv2+E0[0])-2.828427124746191*B1[0]*wv3); 
  alpha_vdim[1] = dv10*(2.828427124746191*(B2[1]*wv2+E0[1])-2.828427124746191*B1[1]*wv3); 
  alpha_vdim[2] = dv10*(2.828427124746191*(B2[2]*wv2+E0[2])-2.828427124746191*B1[2]*wv3); 
  alpha_vdim[3] = dv10*(2.828427124746191*(B2[3]*wv2+E0[3])-2.828427124746191*B1[3]*wv3); 
  alpha_vdim[5] = 0.8164965809277261*B2[0]*dv10*dv2; 
  alpha_vdim[6] = -0.8164965809277261*B1[0]*dv10*dv3; 
  alpha_mid += std::abs(0.0625*alpha_vdim[0]); 
  alpha_vdim[7] = dv11*(2.828427124746191*B0[0]*wv3-2.828427124746191*B2[0]*wv1+2.828427124746191*E1[0]); 
  alpha_vdim[8] = dv11*(2.828427124746191*B0[1]*wv3-2.828427124746191*B2[1]*wv1+2.828427124746191*E1[1]); 
  alpha_vdim[9] = dv11*(2.828427124746191*B0[2]*wv3-2.828427124746191*B2[2]*wv1+2.828427124746191*E1[2]); 
  alpha_vdim[10] = dv11*(2.828427124746191*B0[3]*wv3-2.828427124746191*B2[3]*wv1+2.828427124746191*E1[3]); 
  alpha_vdim[11] = -0.8164965809277261*B2[0]*dv1*dv11; 
  alpha_vdim[13] = 0.8164965809277261*B0[0]*dv11*dv3; 
  alpha_mid += std::abs(0.0625*alpha_vdim[7]); 
  alpha_vdim[14] = dv12*(2.828427124746191*(B1[0]*wv1+E2[0])-2.828427124746191*B0[0]*wv2); 
  alpha_vdim[15] = dv12*(2.828427124746191*(B1[1]*wv1+E2[1])-2.828427124746191*B0[1]*wv2); 
  alpha_vdim[16] = dv12*(2.828427124746191*(B1[2]*wv1+E2[2])-2.828427124746191*B0[2]*wv2); 
  alpha_vdim[17] = dv12*(2.828427124746191*(B1[3]*wv1+E2[3])-2.828427124746191*B0[3]*wv2); 
  alpha_vdim[18] = 0.8164965809277261*B1[0]*dv1*dv12; 
  alpha_vdim[19] = -0.8164965809277261*B0[0]*dv12*dv2; 
  alpha_mid += std::abs(0.0625*alpha_vdim[14]); 
  out[1] += 0.2165063509461096*(alpha_cdim[4]*f[4]+alpha_cdim[0]*f[0]); 
  out[2] += 0.2165063509461096*(f[5]*alpha_cdim[12]+f[0]*alpha_cdim[7]); 
  out[3] += 0.2165063509461096*(f[6]*alpha_cdim[20]+f[0]*alpha_cdim[14]); 
  out[4] += 0.2165063509461096*(alpha_vdim[6]*f[6]+alpha_vdim[5]*f[5]+alpha_vdim[3]*f[3]+alpha_vdim[2]*f[2]+alpha_vdim[1]*f[1]+alpha_vdim[0]*f[0]); 
  out[5] += 0.2165063509461096*(f[6]*alpha_vdim[13]+f[4]*alpha_vdim[11]+f[3]*alpha_vdim[10]+f[2]*alpha_vdim[9]+f[1]*alpha_vdim[8]+f[0]*alpha_vdim[7]); 
  out[6] += 0.2165063509461096*(f[5]*alpha_vdim[19]+f[4]*alpha_vdim[18]+f[3]*alpha_vdim[17]+f[2]*alpha_vdim[16]+f[1]*alpha_vdim[15]+f[0]*alpha_vdim[14]); 
return alpha_mid; 

} 
double VlasovVol3x3vMaxP2(const double *w, const double *dxv, const double *EM, const double *f, double *out) 
{ 
// w[NDIM]: Cell-center coordinates. dxv[NDIM]: Cell spacing. EM/f: Input EM-field/distribution function. out: Incremented output 
  double dv0dx0 = dxv[3]/dxv[0]; 
  double w0dx0 = w[3]/dxv[0]; 
  double dv1dx1 = dxv[4]/dxv[1]; 
  double w1dx1 = w[4]/dxv[1]; 
  double dv2dx2 = dxv[5]/dxv[2]; 
  double w2dx2 = w[5]/dxv[2]; 
  const double dv10 = 2/dxv[3]; 
  const double *E0 = &EM[0]; 
  const double dv1 = dxv[3], wv1 = w[3]; 
  const double dv11 = 2/dxv[4]; 
  const double *E1 = &EM[10]; 
  const double dv2 = dxv[4], wv2 = w[4]; 
  const double dv12 = 2/dxv[5]; 
  const double *E2 = &EM[20]; 
  const double dv3 = dxv[5], wv3 = w[5]; 

  const double *B0 = &EM[30]; 
  const double *B1 = &EM[40]; 
  const double *B2 = &EM[50]; 

  double alpha_mid = 0.0; 
  double alpha_cdim[84]; 
  double alpha_vdim[84]; 

  alpha_cdim[0] = 16.0*w0dx0; 
  alpha_cdim[4] = 4.618802153517007*dv0dx0; 
  alpha_mid += std::abs(w0dx0)+0.5*dv0dx0; 
  alpha_cdim[28] = 16.0*w1dx1; 
  alpha_cdim[33] = 4.618802153517007*dv1dx1; 
  alpha_mid += std::abs(w1dx1)+0.5*dv1dx1; 
  alpha_cdim[56] = 16.0*w2dx2; 
  alpha_cdim[62] = 4.618802153517007*dv2dx2; 
  alpha_mid += std::abs(w2dx2)+0.5*dv2dx2; 
  alpha_vdim[0] = dv10*(2.828427124746191*(B2[0]*wv2+E0[0])-2.828427124746191*B1[0]*wv3); 
  alpha_vdim[1] = dv10*(2.828427124746191*(B2[1]*wv2+E0[1])-2.828427124746191*B1[1]*wv3); 
  alpha_vdim[2] = dv10*(2.828427124746191*(B2[2]*wv2+E0[2])-2.828427124746191*B1[2]*wv3); 
  alpha_vdim[3] = dv10*(2.828427124746191*(B2[3]*wv2+E0[3])-2.828427124746191*B1[3]*wv3); 
  alpha_vdim[5] = 0.8164965809277261*B2[0]*dv10*dv2; 
  alpha_vdim[6] = -0.8164965809277261*B1[0]*dv10*dv3; 
  alpha_vdim[7] = dv10*(2.828427124746191*(B2[4]*wv2+E0[4])-2.828427124746191*B1[4]*wv3); 
  alpha_vdim[8] = dv10*(2.828427124746191*(B2[5]*wv2+E0[5])-2.828427124746191*B1[5]*wv3); 
  alpha_vdim[9] = dv10*(2.828427124746191*(B2[6]*wv2+E0[6])-2.828427124746191*B1[6]*wv3); 
  alpha_vdim[13] = 0.8164965809277261*B2[1]*dv10*dv2; 
  alpha_vdim[14] = 0.8164965809277261*B2[2]*dv10*dv2; 
  alpha_vdim[15] = 0.8164965809277261*B2[3]*dv10*dv2; 
  alpha_vdim[17] = -0.8164965809277261*B1[1]*dv10*dv3; 
  alpha_vdim[18] = -0.8164965809277261*B1[2]*dv10*dv3; 
  alpha_vdim[19] = -0.8164965809277261*B1[3]*dv10*dv3; 
  alpha_vdim[22] = dv10*(2.828427124746191*(B2[7]*wv2+E0[7])-2.828427124746191*B1[7]*wv3); 
  alpha_vdim[23] = dv10*(2.828427124746191*(B2[8]*wv2+E0[8])-2.828427124746191*B1[8]*wv3); 
  alpha_vdim[24] = dv10*(2.828427124746191*(B2[9]*wv2+E0[9])-2.828427124746191*B1[9]*wv3); 
  alpha_mid += std::abs(0.0625*alpha_vdim[0]-0.06987712429686843*(alpha_vdim[24]+alpha_vdim[23]+alpha_vdim[22])); 
  alpha_vdim[28] = dv11*(2.828427124746191*B0[0]*wv3-2.828427124746191*B2[0]*wv1+2.828427124746191*E1[0]); 
  alpha_vdim[29] = dv11*(2.828427124746191*B0[1]*wv3-2.828427124746191*B2[1]*wv1+2.828427124746191*E1[1]); 
  alpha_vdim[30] = dv11*(2.828427124746191*B0[2]*wv3-2.828427124746191*B2[2]*wv1+2.828427124746191*E1[2]); 
  alpha_vdim[31] = dv11*(2.828427124746191*B0[3]*wv3-2.828427124746191*B2[3]*wv1+2.828427124746191*E1[3]); 
  alpha_vdim[32] = -0.8164965809277261*B2[0]*dv1*dv11; 
  alpha_vdim[34] = 0.8164965809277261*B0[0]*dv11*dv3; 
  alpha_vdim[35] = dv11*(2.828427124746191*B0[4]*wv3-2.828427124746191*B2[4]*wv1+2.828427124746191*E1[4]); 
  alpha_vdim[36] = dv11*(2.828427124746191*B0[5]*wv3-2.828427124746191*B2[5]*wv1+2.828427124746191*E1[5]); 
  alpha_vdim[37] = dv11*(2.828427124746191*B0[6]*wv3-2.828427124746191*B2[6]*wv1+2.828427124746191*E1[6]); 
  alpha_vdim[38] = -0.8164965809277261*B2[1]*dv1*dv11; 
  alpha_vdim[39] = -0.8164965809277261*B2[2]*dv1*dv11; 
  alpha_vdim[40] = -0.8164965809277261*B2[3]*dv1*dv11; 
  alpha_vdim[45] = 0.8164965809277261*B0[1]*dv11*dv3; 
  alpha_vdim[46] = 0.8164965809277261*B0[2]*dv11*dv3; 
  alpha_vdim[47] = 0.8164965809277261*B0[3]*dv11*dv3; 
  alpha_vdim[50] = dv11*(2.828427124746191*B0[7]*wv3-2.828427124746191*B2[7]*wv1+2.828427124746191*E1[7]); 
  alpha_vdim[51] = dv11*(2.828427124746191*B0[8]*wv3-2.828427124746191*B2[8]*wv1+2.828427124746191*E1[8]); 
  alpha_vdim[52] = dv11*(2.828427124746191*B0[9]*wv3-2.828427124746191*B2[9]*wv1+2.828427124746191*E1[9]); 
  alpha_mid += std::abs(0.0625*alpha_vdim[28]-0.06987712429686843*(alpha_vdim[52]+alpha_vdim[51]+alpha_vdim[50])); 
  alpha_vdim[56] = dv12*(2.828427124746191*(B1[0]*wv1+E2[0])-2.828427124746191*B0[0]*wv2); 
  alpha_vdim[57] = dv12*(2.828427124746191*(B1[1]*wv1+E2[1])-2.828427124746191*B0[1]*wv2); 
  alpha_vdim[58] = dv12*(2.828427124746191*(B1[2]*wv1+E2[2])-2.828427124746191*B0[2]*wv2); 
  alpha_vdim[59] = dv12*(2.828427124746191*(B1[3]*wv1+E2[3])-2.828427124746191*B0[3]*wv2); 
  alpha_vdim[60] = 0.8164965809277261*B1[0]*dv1*dv12; 
  alpha_vdim[61] = -0.8164965809277261*B0[0]*dv12*dv2; 
  alpha_vdim[63] = dv12*(2.828427124746191*(B1[4]*wv1+E2[4])-2.828427124746191*B0[4]*wv2); 
  alpha_vdim[64] = dv12*(2.828427124746191*(B1[5]*wv1+E2[5])-2.828427124746191*B0[5]*wv2); 
  alpha_vdim[65] = dv12*(2.828427124746191*(B1[6]*wv1+E2[6])-2.828427124746191*B0[6]*wv2); 
  alpha_vdim[66] = 0.8164965809277261*B1[1]*dv1*dv12; 
  alpha_vdim[67] = 0.8164965809277261*B1[2]*dv1*dv12; 
  alpha_vdim[68] = 0.8164965809277261*B1[3]*dv1*dv12; 
  alpha_vdim[69] = -0.8164965809277261*B0[1]*dv12*dv2; 
  alpha_vdim[70] = -0.8164965809277261*B0[2]*dv12*dv2; 
  alpha_vdim[71] = -0.8164965809277261*B0[3]*dv12*dv2; 
  alpha_vdim[78] = dv12*(2.828427124746191*(B1[7]*wv1+E2[7])-2.828427124746191*B0[7]*wv2); 
  alpha_vdim[79] = dv12*(2.828427124746191*(B1[8]*wv1+E2[8])-2.828427124746191*B0[8]*wv2); 
  alpha_vdim[80] = dv12*(2.828427124746191*(B1[9]*wv1+E2[9])-2.828427124746191*B0[9]*wv2); 
  alpha_mid += std::abs(0.0625*alpha_vdim[56]-0.06987712429686843*(alpha_vdim[80]+alpha_vdim[79]+alpha_vdim[78])); 
  out[1] += 0.2165063509461096*(alpha_cdim[4]*f[4]+alpha_cdim[0]*f[0]); 
  out[2] += 0.2165063509461096*(f[5]*alpha_cdim[33]+f[0]*alpha_cdim[28]); 
  out[3] += 0.2165063509461096*(f[6]*alpha_cdim[62]+f[0]*alpha_cdim[56]); 
  out[4] += 0.2165063509461096*(alpha_vdim[24]*f[24]+alpha_vdim[23]*f[23]+alpha_vdim[22]*f[22]+alpha_vdim[19]*f[19]+alpha_vdim[18]*f[18]+alpha_vdim[17]*f[17]+alpha_vdim[15]*f[15]+alpha_vdim[14]*f[14]+alpha_vdim[13]*f[13]+alpha_vdim[9]*f[9]+alpha_vdim[8]*f[8]+alpha_vdim[7]*f[7]+alpha_vdim[6]*f[6]+alpha_vdim[5]*f[5]+alpha_vdim[3]*f[3]+alpha_vdim[2]*f[2]+alpha_vdim[1]*f[1]+alpha_vdim[0]*f[0]); 
  out[5] += 0.2165063509461096*(f[24]*alpha_vdim[52]+f[23]*alpha_vdim[51]+f[22]*alpha_vdim[50]+f[19]*alpha_vdim[47]+f[18]*alpha_vdim[46]+f[17]*alpha_vdim[45]+f[12]*alpha_vdim[40]+f[11]*alpha_vdim[39]+f[10]*alpha_vdim[38]+f[9]*alpha_vdim[37]+f[8]*alpha_vdim[36]+f[7]*alpha_vdim[35]+f[6]*alpha_vdim[34]+f[4]*alpha_vdim[32]+f[3]*alpha_vdim[31]+f[2]*alpha_vdim[30]+f[1]*alpha_vdim[29]+f[0]*alpha_vdim[28]); 
  out[6] += 0.2165063509461096*(f[24]*alpha_vdim[80]+f[23]*alpha_vdim[79]+f[22]*alpha_vdim[78]+f[15]*alpha_vdim[71]+f[14]*alpha_vdim[70]+f[13]*alpha_vdim[69]+f[12]*alpha_vdim[68]+f[11]*alpha_vdim[67]+f[10]*alpha_vdim[66]+f[9]*alpha_vdim[65]+f[8]*alpha_vdim[64]+f[7]*alpha_vdim[63]+f[5]*alpha_vdim[61]+f[4]*alpha_vdim[60]+f[3]*alpha_vdim[59]+f[2]*alpha_vdim[58]+f[1]*alpha_vdim[57]+f[0]*alpha_vdim[56]); 
  out[7] += 0.2165063509461096*(f[13]*alpha_cdim[33]+f[1]*alpha_cdim[28]+alpha_cdim[4]*f[11]+alpha_cdim[0]*f[2]); 
  out[8] += 0.2165063509461096*(f[17]*alpha_cdim[62]+f[1]*alpha_cdim[56]+alpha_cdim[4]*f[12]+alpha_cdim[0]*f[3]); 
  out[9] += 0.2165063509461096*(f[18]*alpha_cdim[62]+f[2]*alpha_cdim[56]+f[15]*alpha_cdim[33]+f[3]*alpha_cdim[28]); 
  out[10] += 0.1936491673103708*(alpha_cdim[4]*f[25]+alpha_vdim[1]*f[22]+f[1]*alpha_vdim[22])+0.2165063509461096*(alpha_vdim[6]*f[17]+f[6]*alpha_vdim[17]+alpha_vdim[5]*f[13]+f[5]*alpha_vdim[13]+alpha_vdim[3]*f[8]+f[3]*alpha_vdim[8]+alpha_vdim[2]*f[7]+f[2]*alpha_vdim[7]+alpha_cdim[0]*f[4]+f[0]*alpha_cdim[4]+alpha_vdim[0]*f[1]+f[0]*alpha_vdim[1]); 
  out[11] += 0.2165063509461096*(f[16]*alpha_cdim[33]+f[4]*alpha_cdim[28])+0.1936491673103708*(alpha_vdim[2]*f[23]+f[2]*alpha_vdim[23])+0.2165063509461096*(alpha_vdim[6]*f[18]+f[6]*alpha_vdim[18]+alpha_vdim[5]*f[14]+f[5]*alpha_vdim[14]+alpha_vdim[3]*f[9]+f[3]*alpha_vdim[9]+alpha_vdim[1]*f[7]+f[1]*alpha_vdim[7]+alpha_vdim[0]*f[2]+f[0]*alpha_vdim[2]); 
  out[12] += 0.2165063509461096*(f[20]*alpha_cdim[62]+f[4]*alpha_cdim[56])+0.1936491673103708*(alpha_vdim[3]*f[24]+f[3]*alpha_vdim[24])+0.2165063509461096*(alpha_vdim[6]*f[19]+f[6]*alpha_vdim[19]+alpha_vdim[5]*f[15]+f[5]*alpha_vdim[15]+alpha_vdim[2]*f[9]+f[2]*alpha_vdim[9]+alpha_vdim[1]*f[8]+f[1]*alpha_vdim[8]+alpha_vdim[0]*f[3]+f[0]*alpha_vdim[3]); 
  out[13] += 0.1936491673103708*f[1]*alpha_vdim[50]+0.2165063509461096*(f[6]*alpha_vdim[45]+f[4]*alpha_vdim[38]+f[3]*alpha_vdim[36]+f[2]*alpha_vdim[35]+f[17]*alpha_vdim[34]+f[10]*alpha_vdim[32]+f[8]*alpha_vdim[31]+f[7]*alpha_vdim[30])+0.1936491673103708*f[22]*alpha_vdim[29]+0.2165063509461096*(f[0]*alpha_vdim[29]+f[1]*alpha_vdim[28]+alpha_cdim[4]*f[16]+alpha_cdim[0]*f[5]); 
  out[14] += 0.1936491673103708*f[2]*alpha_vdim[51]+0.2165063509461096*(f[6]*alpha_vdim[46]+f[4]*alpha_vdim[39]+f[3]*alpha_vdim[37]+f[1]*alpha_vdim[35]+f[18]*alpha_vdim[34])+0.1936491673103708*f[26]*alpha_cdim[33]+0.2165063509461096*(f[0]*alpha_cdim[33]+f[11]*alpha_vdim[32]+f[9]*alpha_vdim[31])+0.1936491673103708*f[23]*alpha_vdim[30]+0.2165063509461096*(f[0]*alpha_vdim[30]+f[7]*alpha_vdim[29]+f[2]*alpha_vdim[28]+f[5]*alpha_cdim[28]); 
  out[15] += 0.2165063509461096*(f[21]*alpha_cdim[62]+f[5]*alpha_cdim[56])+0.1936491673103708*f[3]*alpha_vdim[52]+0.2165063509461096*(f[6]*alpha_vdim[47]+f[4]*alpha_vdim[40]+f[2]*alpha_vdim[37]+f[1]*alpha_vdim[36]+f[19]*alpha_vdim[34]+f[12]*alpha_vdim[32])+0.1936491673103708*f[24]*alpha_vdim[31]+0.2165063509461096*(f[0]*alpha_vdim[31]+f[9]*alpha_vdim[30]+f[8]*alpha_vdim[29]+f[3]*alpha_vdim[28]); 
  out[16] += 0.2165063509461096*(f[3]*alpha_vdim[40]+f[2]*alpha_vdim[39]+f[1]*alpha_vdim[38]+f[20]*alpha_vdim[34])+0.1936491673103708*f[25]*alpha_vdim[32]+0.2165063509461096*(f[0]*alpha_vdim[32]+f[12]*alpha_vdim[31]+f[11]*alpha_vdim[30]+f[10]*alpha_vdim[29]+f[4]*alpha_vdim[28])+0.1936491673103708*alpha_vdim[5]*f[26]+0.2165063509461096*(alpha_vdim[6]*f[21]+alpha_vdim[3]*f[15]+f[3]*alpha_vdim[15]+alpha_vdim[2]*f[14]+f[2]*alpha_vdim[14]+alpha_vdim[1]*f[13]+f[1]*alpha_vdim[13]+alpha_vdim[0]*f[5]+f[0]*alpha_vdim[5]); 
  out[17] += 0.1936491673103708*f[1]*alpha_vdim[78]+0.2165063509461096*(f[5]*alpha_vdim[69]+f[4]*alpha_vdim[66]+f[3]*alpha_vdim[64]+f[2]*alpha_vdim[63]+f[13]*alpha_vdim[61]+f[10]*alpha_vdim[60]+f[8]*alpha_vdim[59]+f[7]*alpha_vdim[58])+0.1936491673103708*f[22]*alpha_vdim[57]+0.2165063509461096*(f[0]*alpha_vdim[57]+f[1]*alpha_vdim[56]+alpha_cdim[4]*f[20]+alpha_cdim[0]*f[6]); 
  out[18] += 0.1936491673103708*f[2]*alpha_vdim[79]+0.2165063509461096*(f[5]*alpha_vdim[70]+f[4]*alpha_vdim[67]+f[3]*alpha_vdim[65]+f[1]*alpha_vdim[63]+f[14]*alpha_vdim[61]+f[11]*alpha_vdim[60]+f[9]*alpha_vdim[59])+0.1936491673103708*f[23]*alpha_vdim[58]+0.2165063509461096*(f[0]*alpha_vdim[58]+f[7]*alpha_vdim[57]+f[2]*alpha_vdim[56]+f[21]*alpha_cdim[33]+f[6]*alpha_cdim[28]); 
  out[19] += 0.1936491673103708*f[3]*alpha_vdim[80]+0.2165063509461096*(f[5]*alpha_vdim[71]+f[4]*alpha_vdim[68]+f[2]*alpha_vdim[65]+f[1]*alpha_vdim[64])+0.1936491673103708*f[27]*alpha_cdim[62]+0.2165063509461096*(f[0]*alpha_cdim[62]+f[15]*alpha_vdim[61]+f[12]*alpha_vdim[60])+0.1936491673103708*f[24]*alpha_vdim[59]+0.2165063509461096*(f[0]*alpha_vdim[59]+f[9]*alpha_vdim[58]+f[8]*alpha_vdim[57]+f[3]*alpha_vdim[56]+f[6]*alpha_cdim[56]); 
  out[20] += 0.2165063509461096*(f[3]*alpha_vdim[68]+f[2]*alpha_vdim[67]+f[1]*alpha_vdim[66]+f[16]*alpha_vdim[61])+0.1936491673103708*f[25]*alpha_vdim[60]+0.2165063509461096*(f[0]*alpha_vdim[60]+f[12]*alpha_vdim[59]+f[11]*alpha_vdim[58]+f[10]*alpha_vdim[57]+f[4]*alpha_vdim[56])+0.1936491673103708*alpha_vdim[6]*f[27]+0.2165063509461096*(alpha_vdim[5]*f[21]+alpha_vdim[3]*f[19]+f[3]*alpha_vdim[19]+alpha_vdim[2]*f[18]+f[2]*alpha_vdim[18]+alpha_vdim[1]*f[17]+f[1]*alpha_vdim[17]+alpha_vdim[0]*f[6]+f[0]*alpha_vdim[6]); 
  out[21] += 0.2165063509461096*(f[3]*alpha_vdim[71]+f[2]*alpha_vdim[70]+f[1]*alpha_vdim[69])+0.1936491673103708*f[26]*alpha_vdim[61]+0.2165063509461096*(f[0]*alpha_vdim[61]+f[16]*alpha_vdim[60]+f[15]*alpha_vdim[59]+f[14]*alpha_vdim[58]+f[13]*alpha_vdim[57]+f[5]*alpha_vdim[56]+f[3]*alpha_vdim[47]+f[2]*alpha_vdim[46]+f[1]*alpha_vdim[45])+0.1936491673103708*f[27]*alpha_vdim[34]+0.2165063509461096*(f[0]*alpha_vdim[34]+f[20]*alpha_vdim[32]+f[19]*alpha_vdim[31]+f[18]*alpha_vdim[30]+f[17]*alpha_vdim[29]+f[6]*alpha_vdim[28]); 
  out[22] += 0.4841229182759271*(alpha_cdim[4]*f[10]+alpha_cdim[0]*f[1]); 
  out[23] += 0.4841229182759271*(f[14]*alpha_cdim[33]+f[2]*alpha_cdim[28]); 
  out[24] += 0.4841229182759271*(f[19]*alpha_cdim[62]+f[3]*alpha_cdim[56]); 
  out[25] += 0.4841229182759271*(alpha_vdim[6]*f[20]+alpha_vdim[5]*f[16]+alpha_vdim[3]*f[12]+alpha_vdim[2]*f[11]+alpha_vdim[1]*f[10]+alpha_vdim[0]*f[4]); 
  out[26] += 0.4841229182759271*(f[21]*alpha_vdim[34]+f[16]*alpha_vdim[32]+f[15]*alpha_vdim[31]+f[14]*alpha_vdim[30]+f[13]*alpha_vdim[29]+f[5]*alpha_vdim[28]); 
  out[27] += 0.4841229182759271*(f[21]*alpha_vdim[61]+f[20]*alpha_vdim[60]+f[19]*alpha_vdim[59]+f[18]*alpha_vdim[58]+f[17]*alpha_vdim[57]+f[6]*alpha_vdim[56]); 
return alpha_mid; 

} 
