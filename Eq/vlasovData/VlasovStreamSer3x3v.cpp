#include <VlasovModDecl.h> 
double VlasovVolStream3x3vSerP1(const double *w, const double *dxv, const double *f, double *out) 
{ 
// w[NDIM]: Cell-center coordinates. dxv[NDIM]: Cell spacing. f: Input distribution function. out: Incremented output 
  double dv0dx0 = dxv[3]/dxv[0]; 
  double w0dx0 = w[3]/dxv[0]; 
  double dv1dx1 = dxv[4]/dxv[1]; 
  double w1dx1 = w[4]/dxv[1]; 
  double dv2dx2 = dxv[5]/dxv[2]; 
  double w2dx2 = w[5]/dxv[2]; 
  out[1] += 3.464101615137754*f[0]*w0dx0+f[4]*dv0dx0; 
  out[2] += 3.464101615137754*f[0]*w1dx1+f[5]*dv1dx1; 
  out[3] += 3.464101615137754*f[0]*w2dx2+f[6]*dv2dx2; 
  out[7] += 3.464101615137754*f[1]*w1dx1+3.464101615137754*f[2]*w0dx0+f[13]*dv1dx1+f[11]*dv0dx0; 
  out[8] += 3.464101615137754*f[1]*w2dx2+3.464101615137754*f[3]*w0dx0+f[17]*dv2dx2+f[12]*dv0dx0; 
  out[9] += 3.464101615137754*f[2]*w2dx2+3.464101615137754*f[3]*w1dx1+f[18]*dv2dx2+f[15]*dv1dx1; 
  out[10] += 3.464101615137754*f[4]*w0dx0+f[0]*dv0dx0; 
  out[11] += 3.464101615137754*f[4]*w1dx1+f[16]*dv1dx1; 
  out[12] += 3.464101615137754*f[4]*w2dx2+f[20]*dv2dx2; 
  out[13] += 3.464101615137754*f[5]*w0dx0+f[16]*dv0dx0; 
  out[14] += 3.464101615137754*f[5]*w1dx1+f[0]*dv1dx1; 
  out[15] += 3.464101615137754*f[5]*w2dx2+f[21]*dv2dx2; 
  out[17] += 3.464101615137754*f[6]*w0dx0+f[20]*dv0dx0; 
  out[18] += 3.464101615137754*f[6]*w1dx1+f[21]*dv1dx1; 
  out[19] += 3.464101615137754*f[6]*w2dx2+f[0]*dv2dx2; 
  out[22] += 3.464101615137754*f[7]*w2dx2+3.464101615137754*f[8]*w1dx1+3.464101615137754*f[9]*w0dx0+f[32]*dv2dx2+f[27]*dv1dx1+f[25]*dv0dx0; 
  out[23] += 3.464101615137754*f[10]*w1dx1+3.464101615137754*f[11]*w0dx0+f[29]*dv1dx1+f[2]*dv0dx0; 
  out[24] += 3.464101615137754*f[10]*w2dx2+3.464101615137754*f[12]*w0dx0+f[35]*dv2dx2+f[3]*dv0dx0; 
  out[25] += 3.464101615137754*f[11]*w2dx2+3.464101615137754*f[12]*w1dx1+f[36]*dv2dx2+f[31]*dv1dx1; 
  out[26] += 3.464101615137754*f[13]*w1dx1+3.464101615137754*f[14]*w0dx0+f[1]*dv1dx1+f[30]*dv0dx0; 
  out[27] += 3.464101615137754*f[13]*w2dx2+3.464101615137754*f[15]*w0dx0+f[38]*dv2dx2+f[31]*dv0dx0; 
  out[28] += 3.464101615137754*f[14]*w2dx2+3.464101615137754*f[15]*w1dx1+f[39]*dv2dx2+f[3]*dv1dx1; 
  out[29] += 3.464101615137754*f[16]*w0dx0+f[5]*dv0dx0; 
  out[30] += 3.464101615137754*f[16]*w1dx1+f[4]*dv1dx1; 
  out[31] += 3.464101615137754*f[16]*w2dx2+f[41]*dv2dx2; 
  out[32] += 3.464101615137754*f[17]*w1dx1+3.464101615137754*f[18]*w0dx0+f[38]*dv1dx1+f[36]*dv0dx0; 
  out[33] += 3.464101615137754*f[17]*w2dx2+3.464101615137754*f[19]*w0dx0+f[1]*dv2dx2+f[37]*dv0dx0; 
  out[34] += 3.464101615137754*f[18]*w2dx2+3.464101615137754*f[19]*w1dx1+f[2]*dv2dx2+f[40]*dv1dx1; 
  out[35] += 3.464101615137754*f[20]*w0dx0+f[6]*dv0dx0; 
  out[36] += 3.464101615137754*f[20]*w1dx1+f[41]*dv1dx1; 
  out[37] += 3.464101615137754*f[20]*w2dx2+f[4]*dv2dx2; 
  out[38] += 3.464101615137754*f[21]*w0dx0+f[41]*dv0dx0; 
  out[39] += 3.464101615137754*f[21]*w1dx1+f[6]*dv1dx1; 
  out[40] += 3.464101615137754*f[21]*w2dx2+f[5]*dv2dx2; 
  out[42] += 3.464101615137754*f[23]*w2dx2+3.464101615137754*f[24]*w1dx1+3.464101615137754*f[25]*w0dx0+f[48]*dv2dx2+f[45]*dv1dx1+f[9]*dv0dx0; 
  out[43] += 3.464101615137754*f[26]*w2dx2+3.464101615137754*f[27]*w1dx1+3.464101615137754*f[28]*w0dx0+f[51]*dv2dx2+f[8]*dv1dx1+f[46]*dv0dx0; 
  out[44] += 3.464101615137754*f[29]*w1dx1+3.464101615137754*f[30]*w0dx0+f[10]*dv1dx1+f[14]*dv0dx0; 
  out[45] += 3.464101615137754*f[29]*w2dx2+3.464101615137754*f[31]*w0dx0+f[54]*dv2dx2+f[15]*dv0dx0; 
  out[46] += 3.464101615137754*f[30]*w2dx2+3.464101615137754*f[31]*w1dx1+f[55]*dv2dx2+f[12]*dv1dx1; 
  out[47] += 3.464101615137754*f[32]*w2dx2+3.464101615137754*f[33]*w1dx1+3.464101615137754*f[34]*w0dx0+f[7]*dv2dx2+f[52]*dv1dx1+f[50]*dv0dx0; 
  out[48] += 3.464101615137754*f[35]*w1dx1+3.464101615137754*f[36]*w0dx0+f[54]*dv1dx1+f[18]*dv0dx0; 
  out[49] += 3.464101615137754*f[35]*w2dx2+3.464101615137754*f[37]*w0dx0+f[10]*dv2dx2+f[19]*dv0dx0; 
  out[50] += 3.464101615137754*f[36]*w2dx2+3.464101615137754*f[37]*w1dx1+f[11]*dv2dx2+f[56]*dv1dx1; 
  out[51] += 3.464101615137754*f[38]*w1dx1+3.464101615137754*f[39]*w0dx0+f[17]*dv1dx1+f[55]*dv0dx0; 
  out[52] += 3.464101615137754*f[38]*w2dx2+3.464101615137754*f[40]*w0dx0+f[13]*dv2dx2+f[56]*dv0dx0; 
  out[53] += 3.464101615137754*f[39]*w2dx2+3.464101615137754*f[40]*w1dx1+f[14]*dv2dx2+f[19]*dv1dx1; 
  out[54] += 3.464101615137754*f[41]*w0dx0+f[21]*dv0dx0; 
  out[55] += 3.464101615137754*f[41]*w1dx1+f[20]*dv1dx1; 
  out[56] += 3.464101615137754*f[41]*w2dx2+f[16]*dv2dx2; 
  out[57] += 3.464101615137754*f[44]*w2dx2+3.464101615137754*f[45]*w1dx1+3.464101615137754*f[46]*w0dx0+f[60]*dv2dx2+f[24]*dv1dx1+f[28]*dv0dx0; 
  out[58] += 3.464101615137754*f[48]*w2dx2+3.464101615137754*f[49]*w1dx1+3.464101615137754*f[50]*w0dx0+f[23]*dv2dx2+f[61]*dv1dx1+f[34]*dv0dx0; 
  out[59] += 3.464101615137754*f[51]*w2dx2+3.464101615137754*f[52]*w1dx1+3.464101615137754*f[53]*w0dx0+f[26]*dv2dx2+f[33]*dv1dx1+f[62]*dv0dx0; 
  out[60] += 3.464101615137754*f[54]*w1dx1+3.464101615137754*f[55]*w0dx0+f[35]*dv1dx1+f[39]*dv0dx0; 
  out[61] += 3.464101615137754*f[54]*w2dx2+3.464101615137754*f[56]*w0dx0+f[29]*dv2dx2+f[40]*dv0dx0; 
  out[62] += 3.464101615137754*f[55]*w2dx2+3.464101615137754*f[56]*w1dx1+f[30]*dv2dx2+f[37]*dv1dx1; 
  out[63] += 3.464101615137754*f[60]*w2dx2+3.464101615137754*f[61]*w1dx1+3.464101615137754*f[62]*w0dx0+f[44]*dv2dx2+f[49]*dv1dx1+f[53]*dv0dx0; 
return std::abs(w0dx0)+std::abs(w1dx1)+std::abs(w2dx2)+dv0dx0/2+dv1dx1/2+dv2dx2/2; 
} 
