#include <VlasovModDecl.h> 
double VlasovVolStream2x2vMaxP1(const double *w, const double *dxv, const double *f, double *out) 
{ 
// w[NDIM]: Cell-center coordinates. dxv[NDIM]: Cell spacing. f: Input distribution function. out: Incremented output 
  double dv0dx0 = dxv[2]/dxv[0]; 
  double w0dx0 = w[2]/dxv[0]; 
  double dv1dx1 = dxv[3]/dxv[1]; 
  double w1dx1 = w[3]/dxv[1]; 
  out[1] += 3.464101615137754*f[0]*w0dx0+f[3]*dv0dx0; 
  out[2] += 3.464101615137754*f[0]*w1dx1+f[4]*dv1dx1; 
return std:abs(w0dx0)+std:abs(w1dx1); 
} 
double VlasovVolStream2x2vMaxP2(const double *w, const double *dxv, const double *f, double *out) 
{ 
// w[NDIM]: Cell-center coordinates. dxv[NDIM]: Cell spacing. f: Input distribution function. out: Incremented output 
  double dv0dx0 = dxv[2]/dxv[0]; 
  double w0dx0 = w[2]/dxv[0]; 
  double dv1dx1 = dxv[3]/dxv[1]; 
  double w1dx1 = w[3]/dxv[1]; 
  out[1] += 3.464101615137754*f[0]*w0dx0+f[3]*dv0dx0; 
  out[2] += 3.464101615137754*f[0]*w1dx1+f[4]*dv1dx1; 
  out[5] += 3.464101615137754*f[1]*w1dx1+3.464101615137754*f[2]*w0dx0+f[8]*dv1dx1+f[7]*dv0dx0; 
  out[6] += 3.464101615137754*f[3]*w0dx0+0.8944271909999159*f[13]*dv0dx0+f[0]*dv0dx0; 
  out[7] += 3.464101615137754*f[3]*w1dx1+f[10]*dv1dx1; 
  out[8] += 3.464101615137754*f[4]*w0dx0+f[10]*dv0dx0; 
  out[9] += 3.464101615137754*f[4]*w1dx1+0.8944271909999159*f[14]*dv1dx1+f[0]*dv1dx1; 
  out[11] += 7.745966692414834*f[1]*w0dx0+2.23606797749979*f[6]*dv0dx0; 
  out[12] += 7.745966692414834*f[2]*w1dx1+2.23606797749979*f[9]*dv1dx1; 
return std:abs(w0dx0)+std:abs(w1dx1); 
} 
double VlasovVolStream2x2vMaxP3(const double *w, const double *dxv, const double *f, double *out) 
{ 
// w[NDIM]: Cell-center coordinates. dxv[NDIM]: Cell spacing. f: Input distribution function. out: Incremented output 
  double dv0dx0 = dxv[2]/dxv[0]; 
  double w0dx0 = w[2]/dxv[0]; 
  double dv1dx1 = dxv[3]/dxv[1]; 
  double w1dx1 = w[3]/dxv[1]; 
  out[1] += 3.464101615137754*f[0]*w0dx0+f[3]*dv0dx0; 
  out[2] += 3.464101615137754*f[0]*w1dx1+f[4]*dv1dx1; 
  out[5] += 3.464101615137754*f[1]*w1dx1+3.464101615137754*f[2]*w0dx0+f[8]*dv1dx1+f[7]*dv0dx0; 
  out[6] += 3.464101615137754*f[3]*w0dx0+0.8944271909999159*f[13]*dv0dx0+f[0]*dv0dx0; 
  out[7] += 3.464101615137754*f[3]*w1dx1+f[10]*dv1dx1; 
  out[8] += 3.464101615137754*f[4]*w0dx0+f[10]*dv0dx0; 
  out[9] += 3.464101615137754*f[4]*w1dx1+0.8944271909999159*f[14]*dv1dx1+f[0]*dv1dx1; 
  out[11] += 7.745966692414834*f[1]*w0dx0+2.23606797749979*f[6]*dv0dx0; 
  out[12] += 7.745966692414834*f[2]*w1dx1+2.23606797749979*f[9]*dv1dx1; 
  out[15] += 3.464101615137754*f[6]*w1dx1+3.464101615137754*f[7]*w0dx0+f[17]*dv1dx1+0.8944271909999161*f[24]*dv0dx0+f[2]*dv0dx0; 
  out[16] += 3.464101615137754*f[8]*w1dx1+3.464101615137754*f[9]*w0dx0+0.8944271909999161*f[28]*dv1dx1+f[1]*dv1dx1+f[18]*dv0dx0; 
  out[17] += 3.464101615137754*f[10]*w0dx0+0.8944271909999161*f[27]*dv0dx0+f[4]*dv0dx0; 
  out[18] += 3.464101615137754*f[10]*w1dx1+0.8944271909999161*f[30]*dv1dx1+f[3]*dv1dx1; 
  out[19] += 3.464101615137755*f[11]*w1dx1+7.745966692414834*f[5]*w0dx0+f[25]*dv1dx1+2.23606797749979*f[15]*dv0dx0; 
  out[20] += 7.745966692414834*f[5]*w1dx1+3.464101615137755*f[12]*w0dx0+2.23606797749979*f[16]*dv1dx1+f[22]*dv0dx0; 
  out[21] += 7.745966692414834*f[6]*w0dx0+2.0*f[23]*dv0dx0+2.23606797749979*f[1]*dv0dx0; 
  out[22] += 7.745966692414834*f[7]*w1dx1+2.23606797749979*f[18]*dv1dx1; 
  out[23] += 3.464101615137755*f[13]*w0dx0+0.8783100656536798*f[33]*dv0dx0+0.8944271909999161*f[3]*dv0dx0; 
  out[24] += 3.464101615137755*f[13]*w1dx1+f[27]*dv1dx1; 
  out[25] += 7.745966692414834*f[8]*w0dx0+2.23606797749979*f[17]*dv0dx0; 
  out[26] += 7.745966692414834*f[9]*w1dx1+2.0*f[29]*dv1dx1+2.23606797749979*f[2]*dv1dx1; 
  out[28] += 3.464101615137755*f[14]*w0dx0+f[30]*dv0dx0; 
  out[29] += 3.464101615137755*f[14]*w1dx1+0.8783100656536798*f[34]*dv1dx1+0.8944271909999161*f[4]*dv1dx1; 
  out[31] += 11.83215956619923*f[11]*w0dx0+5.291502622129181*f[0]*w0dx0+3.415650255319866*f[21]*dv0dx0+1.527525231651947*f[3]*dv0dx0; 
  out[32] += 11.83215956619923*f[12]*w1dx1+5.291502622129181*f[0]*w1dx1+3.415650255319866*f[26]*dv1dx1+1.527525231651947*f[4]*dv1dx1; 
return std:abs(w0dx0)+std:abs(w1dx1); 
} 
double VlasovVolStream2x2vMaxP4(const double *w, const double *dxv, const double *f, double *out) 
{ 
// w[NDIM]: Cell-center coordinates. dxv[NDIM]: Cell spacing. f: Input distribution function. out: Incremented output 
  double dv0dx0 = dxv[2]/dxv[0]; 
  double w0dx0 = w[2]/dxv[0]; 
  double dv1dx1 = dxv[3]/dxv[1]; 
  double w1dx1 = w[3]/dxv[1]; 
  out[1] += 3.464101615137754*f[0]*w0dx0+f[3]*dv0dx0; 
  out[2] += 3.464101615137754*f[0]*w1dx1+f[4]*dv1dx1; 
  out[5] += 3.464101615137754*f[1]*w1dx1+3.464101615137754*f[2]*w0dx0+f[8]*dv1dx1+f[7]*dv0dx0; 
  out[6] += 3.464101615137754*f[3]*w0dx0+0.8944271909999159*f[13]*dv0dx0+f[0]*dv0dx0; 
  out[7] += 3.464101615137754*f[3]*w1dx1+f[10]*dv1dx1; 
  out[8] += 3.464101615137754*f[4]*w0dx0+f[10]*dv0dx0; 
  out[9] += 3.464101615137754*f[4]*w1dx1+0.8944271909999159*f[14]*dv1dx1+f[0]*dv1dx1; 
  out[11] += 7.745966692414834*f[1]*w0dx0+2.23606797749979*f[6]*dv0dx0; 
  out[12] += 7.745966692414834*f[2]*w1dx1+2.23606797749979*f[9]*dv1dx1; 
  out[15] += 3.464101615137754*f[6]*w1dx1+3.464101615137754*f[7]*w0dx0+f[17]*dv1dx1+0.8944271909999161*f[24]*dv0dx0+f[2]*dv0dx0; 
  out[16] += 3.464101615137754*f[8]*w1dx1+3.464101615137754*f[9]*w0dx0+0.8944271909999161*f[28]*dv1dx1+f[1]*dv1dx1+f[18]*dv0dx0; 
  out[17] += 3.464101615137754*f[10]*w0dx0+0.8944271909999161*f[27]*dv0dx0+f[4]*dv0dx0; 
  out[18] += 3.464101615137754*f[10]*w1dx1+0.8944271909999161*f[30]*dv1dx1+f[3]*dv1dx1; 
  out[19] += 3.464101615137755*f[11]*w1dx1+7.745966692414834*f[5]*w0dx0+f[25]*dv1dx1+2.23606797749979*f[15]*dv0dx0; 
  out[20] += 7.745966692414834*f[5]*w1dx1+3.464101615137755*f[12]*w0dx0+2.23606797749979*f[16]*dv1dx1+f[22]*dv0dx0; 
  out[21] += 7.745966692414834*f[6]*w0dx0+2.0*f[23]*dv0dx0+2.23606797749979*f[1]*dv0dx0; 
  out[22] += 7.745966692414834*f[7]*w1dx1+2.23606797749979*f[18]*dv1dx1; 
  out[23] += 3.464101615137755*f[13]*w0dx0+0.8783100656536798*f[33]*dv0dx0+0.8944271909999161*f[3]*dv0dx0; 
  out[24] += 3.464101615137755*f[13]*w1dx1+f[27]*dv1dx1; 
  out[25] += 7.745966692414834*f[8]*w0dx0+2.23606797749979*f[17]*dv0dx0; 
  out[26] += 7.745966692414834*f[9]*w1dx1+2.0*f[29]*dv1dx1+2.23606797749979*f[2]*dv1dx1; 
  out[28] += 3.464101615137755*f[14]*w0dx0+f[30]*dv0dx0; 
  out[29] += 3.464101615137755*f[14]*w1dx1+0.8783100656536798*f[34]*dv1dx1+0.8944271909999161*f[4]*dv1dx1; 
  out[31] += 11.83215956619923*f[11]*w0dx0+5.291502622129181*f[0]*w0dx0+3.415650255319866*f[21]*dv0dx0+1.527525231651947*f[3]*dv0dx0; 
  out[32] += 11.83215956619923*f[12]*w1dx1+5.291502622129181*f[0]*w1dx1+3.415650255319866*f[26]*dv1dx1+1.527525231651947*f[4]*dv1dx1; 
  out[35] += 3.464101615137754*f[17]*w1dx1+3.464101615137754*f[18]*w0dx0+0.8944271909999159*f[46]*dv1dx1+f[6]*dv1dx1+0.8944271909999159*f[44]*dv0dx0+f[9]*dv0dx0; 
  out[36] += 3.464101615137755*f[21]*w1dx1+7.745966692414834*f[15]*w0dx0+f[41]*dv1dx1+2.0*f[38]*dv0dx0+2.23606797749979*f[5]*dv0dx0; 
  out[37] += 7.745966692414834*f[15]*w1dx1+3.464101615137755*f[22]*w0dx0+2.23606797749979*f[35]*dv1dx1+0.8944271909999159*f[50]*dv0dx0+f[12]*dv0dx0; 
  out[38] += 3.464101615137755*f[23]*w1dx1+3.464101615137755*f[24]*w0dx0+f[43]*dv1dx1+0.8783100656536798*f[59]*dv0dx0+0.8944271909999159*f[7]*dv0dx0; 
  out[39] += 3.464101615137755*f[25]*w1dx1+7.745966692414834*f[16]*w0dx0+0.8944271909999159*f[51]*dv1dx1+f[11]*dv1dx1+2.23606797749979*f[35]*dv0dx0; 
  out[40] += 7.745966692414834*f[16]*w1dx1+3.464101615137755*f[26]*w0dx0+2.0*f[45]*dv1dx1+2.23606797749979*f[5]*dv1dx1+f[42]*dv0dx0; 
  out[41] += 7.745966692414834*f[17]*w0dx0+2.0*f[43]*dv0dx0+2.23606797749979*f[8]*dv0dx0; 
  out[42] += 7.745966692414834*f[18]*w1dx1+2.0*f[47]*dv1dx1+2.23606797749979*f[7]*dv1dx1; 
  out[43] += 3.464101615137755*f[27]*w0dx0+0.8783100656536798*f[62]*dv0dx0+0.8944271909999159*f[10]*dv0dx0; 
  out[44] += 3.464101615137755*f[27]*w1dx1+0.8944271909999159*f[53]*dv1dx1+f[13]*dv1dx1; 
  out[45] += 3.464101615137755*f[28]*w1dx1+3.464101615137755*f[29]*w0dx0+0.8783100656536798*f[63]*dv1dx1+0.8944271909999159*f[8]*dv1dx1+f[47]*dv0dx0; 
  out[46] += 3.464101615137755*f[30]*w0dx0+0.8944271909999159*f[53]*dv0dx0+f[14]*dv0dx0; 
  out[47] += 3.464101615137755*f[30]*w1dx1+0.8783100656536798*f[65]*dv1dx1+0.8944271909999159*f[10]*dv1dx1; 
  out[48] += 7.745966692414834*f[19]*w1dx1+7.745966692414834*f[20]*w0dx0+2.23606797749979*f[39]*dv1dx1+2.23606797749979*f[37]*dv0dx0; 
  out[49] += 7.745966692414834*f[23]*w0dx0+1.963961012123931*f[58]*dv0dx0+2.0*f[6]*dv0dx0; 
  out[50] += 7.745966692414834*f[24]*w1dx1+2.23606797749979*f[44]*dv1dx1; 
  out[51] += 7.745966692414834*f[28]*w0dx0+2.23606797749979*f[46]*dv0dx0; 
  out[52] += 7.745966692414834*f[29]*w1dx1+1.963961012123931*f[64]*dv1dx1+2.0*f[9]*dv1dx1; 
  out[54] += 3.464101615137754*f[31]*w1dx1+11.83215956619923*f[19]*w0dx0+5.291502622129181*f[2]*w0dx0+f[60]*dv1dx1+3.415650255319866*f[36]*dv0dx0+1.527525231651947*f[7]*dv0dx0; 
  out[55] += 11.83215956619923*f[20]*w1dx1+5.291502622129181*f[1]*w1dx1+3.464101615137754*f[32]*w0dx0+3.415650255319866*f[40]*dv1dx1+1.527525231651947*f[8]*dv1dx1+f[57]*dv0dx0; 
  out[56] += 11.83215956619923*f[21]*w0dx0+5.291502622129181*f[3]*w0dx0+3.055050463303893*f[49]*dv0dx0+1.366260102127946*f[13]*dv0dx0+3.415650255319866*f[11]*dv0dx0+1.527525231651947*f[0]*dv0dx0; 
  out[57] += 11.83215956619923*f[22]*w1dx1+5.291502622129181*f[3]*w1dx1+3.415650255319866*f[42]*dv1dx1+1.527525231651947*f[10]*dv1dx1; 
  out[58] += 3.464101615137754*f[33]*w0dx0+0.8728715609439696*f[68]*dv0dx0+0.8783100656536798*f[13]*dv0dx0; 
  out[59] += 3.464101615137754*f[33]*w1dx1+f[62]*dv1dx1; 
  out[60] += 11.83215956619923*f[25]*w0dx0+5.291502622129181*f[4]*w0dx0+3.415650255319866*f[41]*dv0dx0+1.527525231651947*f[10]*dv0dx0; 
  out[61] += 11.83215956619923*f[26]*w1dx1+5.291502622129181*f[4]*w1dx1+3.055050463303893*f[52]*dv1dx1+1.366260102127946*f[14]*dv1dx1+3.415650255319866*f[12]*dv1dx1+1.527525231651947*f[0]*dv1dx1; 
  out[63] += 3.464101615137754*f[34]*w0dx0+f[65]*dv0dx0; 
  out[64] += 3.464101615137754*f[34]*w1dx1+0.8728715609439696*f[69]*dv1dx1+0.8783100656536798*f[14]*dv1dx1; 
  out[66] += 15.87450786638754*f[31]*w0dx0+10.39230484541326*f[1]*w0dx0+4.58257569495584*f[56]*dv0dx0+3.0*f[6]*dv0dx0; 
  out[67] += 15.87450786638754*f[32]*w1dx1+10.39230484541326*f[2]*w1dx1+4.58257569495584*f[61]*dv1dx1+3.0*f[9]*dv1dx1; 
return std:abs(w0dx0)+std:abs(w1dx1); 
} 
