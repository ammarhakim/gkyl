#include <PassiveAdvectionModDecl.h> 
double PassiveAdvectionSurfPositivity2xSer_X1_P2(const double *w, const double *dxv, const double dtApprox, const double *positivityWeightByDirL, const double *positivityWeightByDirR, const double *fl, const double *fr, double *outl, double *outr) 
{ 
// w[NDIM]: Cell-center coordinates. dxv[NDIM]: Cell spacing. 
  double dfac1 = 2.0/dxv[0]; 
  double w1 = w[0]; 
  double dfac2 = 2.0/dxv[1]; 
  double w2 = w[1]; 
  const double *v1 = &fr[8]; 
  const double *v2 = &fr[16]; 
  double incr[8]; 
  // surface-averaged phase velocity in this direction 
  double alpha0 = 0.25*(2.23606797749979*v1[4]-1.732050807568877*v1[1]+v1[0]); 

  double alpha[3]; 
  alpha[0] = 0.7071067811865475*(2.23606797749979*v1[4]-1.732050807568877*v1[1]+v1[0]); 
  alpha[1] = 0.2357022603955158*(6.708203932499369*v1[6]-5.196152422706631*v1[3]+3.0*v1[2]); 
  alpha[2] = -0.1414213562373095*(8.660254037844387*v1[7]-5.0*v1[5]); 
#if upwindType == SURFAVG 
  if (alpha0>0) { 
  incr[0] = 0.02357022603955158*(25.98076211353316*alpha[2]*fl[7]+33.54101966249684*alpha[1]*fl[6]+15.0*alpha[2]*fl[5]+33.54101966249685*alpha[0]*fl[4]+alpha[1]*(25.98076211353316*fl[3]+15.0*fl[2])+alpha[0]*(25.98076211353316*fl[1]+15.0*fl[0]))*dfac1; 
  incr[1] = -0.07071067811865474*(15.0*alpha[2]*fl[7]+19.36491673103708*alpha[1]*fl[6]+8.660254037844386*alpha[2]*fl[5]+19.36491673103709*alpha[0]*fl[4]+alpha[1]*(15.0*fl[3]+8.660254037844386*fl[2])+alpha[0]*(15.0*fl[1]+8.660254037844386*fl[0]))*dfac1; 
  incr[2] = 0.02357022603955158*(23.2379000772445*alpha[1]*fl[7]+(30.0*alpha[2]+33.54101966249684*alpha[0])*fl[6]+alpha[1]*(13.41640786499874*fl[5]+33.54101966249685*fl[4])+(23.2379000772445*alpha[2]+25.98076211353316*alpha[0])*fl[3]+(13.41640786499874*alpha[2]+15.0*alpha[0])*fl[2]+alpha[1]*(25.98076211353316*fl[1]+15.0*fl[0]))*dfac1; 
  incr[3] = -0.07071067811865474*(13.41640786499874*alpha[1]*fl[7]+(17.32050807568877*alpha[2]+19.36491673103708*alpha[0])*fl[6]+alpha[1]*(7.745966692414834*fl[5]+19.36491673103709*fl[4])+(13.41640786499874*alpha[2]+15.0*alpha[0])*fl[3]+(7.745966692414834*alpha[2]+8.660254037844386*alpha[0])*fl[2]+alpha[1]*(15.0*fl[1]+8.660254037844386*fl[0]))*dfac1; 
  incr[4] = 0.1178511301977579*(11.61895003862225*alpha[2]*fl[7]+15.0*alpha[1]*fl[6]+6.708203932499369*alpha[2]*fl[5]+15.0*alpha[0]*fl[4]+alpha[1]*(11.61895003862225*fl[3]+6.708203932499369*fl[2])+alpha[0]*(11.61895003862225*fl[1]+6.708203932499369*fl[0]))*dfac1; 
  incr[5] = 0.003367175148507369*((116.1895003862225*alpha[2]+181.8653347947321*alpha[0])*fl[7]+210.0*alpha[1]*fl[6]+(67.0820393249937*alpha[2]+105.0*alpha[0])*fl[5]+234.787137637478*alpha[2]*fl[4]+alpha[1]*(162.6653005407115*fl[3]+93.91485505499116*fl[2])+(181.8653347947321*fl[1]+105.0*fl[0])*alpha[2])*dfac1; 
  incr[6] = 0.02357022603955158*(51.96152422706631*alpha[1]*fl[7]+(67.0820393249937*alpha[2]+75.0*alpha[0])*fl[6]+alpha[1]*(30.0*fl[5]+75.00000000000001*fl[4])+(51.96152422706632*alpha[2]+58.09475019311126*alpha[0])*fl[3]+(30.0*alpha[2]+33.54101966249684*alpha[0])*fl[2]+alpha[1]*(58.09475019311126*fl[1]+33.54101966249684*fl[0]))*dfac1; 
  incr[7] = -0.01010152544552211*((67.0820393249937*alpha[2]+105.0*alpha[0])*fl[7]+121.2435565298214*alpha[1]*fl[6]+(38.72983346207417*alpha[2]+60.62177826491071*alpha[0])*fl[5]+135.5544171172596*alpha[2]*fl[4]+alpha[1]*(93.91485505499116*fl[3]+54.22176684690384*fl[2])+(105.0*fl[1]+60.62177826491071*fl[0])*alpha[2])*dfac1; 
  } else { 
  incr[0] = -0.02357022603955158*(25.98076211353316*alpha[2]*fr[7]-33.54101966249684*alpha[1]*fr[6]-15.0*alpha[2]*fr[5]-33.54101966249685*alpha[0]*fr[4]+alpha[1]*(25.98076211353316*fr[3]-15.0*fr[2])+alpha[0]*(25.98076211353316*fr[1]-15.0*fr[0]))*dfac1; 
  incr[1] = 0.07071067811865474*(15.0*alpha[2]*fr[7]-19.36491673103708*alpha[1]*fr[6]-8.660254037844386*alpha[2]*fr[5]-19.36491673103709*alpha[0]*fr[4]+alpha[1]*(15.0*fr[3]-8.660254037844386*fr[2])+alpha[0]*(15.0*fr[1]-8.660254037844386*fr[0]))*dfac1; 
  incr[2] = -0.02357022603955158*(23.2379000772445*alpha[1]*fr[7]+((-30.0*alpha[2])-33.54101966249684*alpha[0])*fr[6]+alpha[1]*((-13.41640786499874*fr[5])-33.54101966249685*fr[4])+(23.2379000772445*alpha[2]+25.98076211353316*alpha[0])*fr[3]+((-13.41640786499874*alpha[2])-15.0*alpha[0])*fr[2]+alpha[1]*(25.98076211353316*fr[1]-15.0*fr[0]))*dfac1; 
  incr[3] = 0.07071067811865474*(13.41640786499874*alpha[1]*fr[7]+((-17.32050807568877*alpha[2])-19.36491673103708*alpha[0])*fr[6]+alpha[1]*((-7.745966692414834*fr[5])-19.36491673103709*fr[4])+(13.41640786499874*alpha[2]+15.0*alpha[0])*fr[3]+((-7.745966692414834*alpha[2])-8.660254037844386*alpha[0])*fr[2]+alpha[1]*(15.0*fr[1]-8.660254037844386*fr[0]))*dfac1; 
  incr[4] = -0.1178511301977579*(11.61895003862225*alpha[2]*fr[7]-15.0*alpha[1]*fr[6]-6.708203932499369*alpha[2]*fr[5]-15.0*alpha[0]*fr[4]+alpha[1]*(11.61895003862225*fr[3]-6.708203932499369*fr[2])+alpha[0]*(11.61895003862225*fr[1]-6.708203932499369*fr[0]))*dfac1; 
  incr[5] = -0.003367175148507369*((116.1895003862225*alpha[2]+181.8653347947321*alpha[0])*fr[7]-210.0*alpha[1]*fr[6]+((-67.0820393249937*alpha[2])-105.0*alpha[0])*fr[5]-234.787137637478*alpha[2]*fr[4]+alpha[1]*(162.6653005407115*fr[3]-93.91485505499116*fr[2])+(181.8653347947321*fr[1]-105.0*fr[0])*alpha[2])*dfac1; 
  incr[6] = -0.02357022603955158*(51.96152422706631*alpha[1]*fr[7]+((-67.0820393249937*alpha[2])-75.0*alpha[0])*fr[6]+alpha[1]*((-30.0*fr[5])-75.00000000000001*fr[4])+(51.96152422706632*alpha[2]+58.09475019311126*alpha[0])*fr[3]+((-30.0*alpha[2])-33.54101966249684*alpha[0])*fr[2]+alpha[1]*(58.09475019311126*fr[1]-33.54101966249684*fr[0]))*dfac1; 
  incr[7] = 0.01010152544552211*((67.0820393249937*alpha[2]+105.0*alpha[0])*fr[7]-121.2435565298214*alpha[1]*fr[6]+((-38.72983346207417*alpha[2])-60.62177826491071*alpha[0])*fr[5]-135.5544171172596*alpha[2]*fr[4]+alpha[1]*(93.91485505499116*fr[3]-54.22176684690384*fr[2])+(105.0*fr[1]-60.62177826491071*fr[0])*alpha[2])*dfac1; 
  }
#elif upwindType == QUAD 
double fupwind[3];
double fupwindQuad[3];
double alphaQuad;
  alphaQuad = 1.58113883008419*alpha[2]-1.224744871391589*alpha[1]+0.7071067811865475*alpha[0]; 
  fupwindQuad[0] = 0.5*((1.936491673103709*(fr[7]+fl[7]+fr[6])-1.936491673103709*fl[6]-1.118033988749895*(fr[5]+fr[4])+1.118033988749895*(fl[5]+fl[4])-1.5*(fr[3]+fl[3])+0.8660254037844386*(fr[2]+fr[1])-0.8660254037844386*fl[2]+0.8660254037844386*fl[1]-0.5*fr[0]+0.5*fl[0])*sgn(alphaQuad)-1.936491673103709*(fr[7]+fr[6])+1.936491673103709*fl[7]-1.936491673103709*fl[6]+1.118033988749895*(fr[5]+fl[5]+fr[4]+fl[4])+1.5*fr[3]-1.5*fl[3]-0.8660254037844386*(fr[2]+fl[2]+fr[1])+0.8660254037844386*fl[1]+0.5*(fr[0]+fl[0])); 
  alphaQuad = 0.7071067811865475*alpha[0]-0.7905694150420947*alpha[2]; 
  fupwindQuad[1] = 0.5*(((-0.9682458365518543*(fr[7]+fl[7]))+0.5590169943749475*fr[5]-0.5590169943749475*fl[5]-1.118033988749895*fr[4]+1.118033988749895*fl[4]+0.8660254037844386*(fr[1]+fl[1])-0.5*fr[0]+0.5*fl[0])*sgn(alphaQuad)+0.9682458365518543*fr[7]-0.9682458365518543*fl[7]-0.5590169943749475*(fr[5]+fl[5])+1.118033988749895*(fr[4]+fl[4])-0.8660254037844386*fr[1]+0.8660254037844386*fl[1]+0.5*(fr[0]+fl[0])); 
  alphaQuad = 1.58113883008419*alpha[2]+1.224744871391589*alpha[1]+0.7071067811865475*alpha[0]; 
  fupwindQuad[2] = 0.5*((1.936491673103709*(fr[7]+fl[7]+fl[6])-1.936491673103709*fr[6]-1.118033988749895*(fr[5]+fr[4])+1.118033988749895*(fl[5]+fl[4])+1.5*(fr[3]+fl[3])-0.8660254037844386*fr[2]+0.8660254037844386*(fl[2]+fr[1]+fl[1])-0.5*fr[0]+0.5*fl[0])*sgn(alphaQuad)-1.936491673103709*fr[7]+1.936491673103709*(fl[7]+fr[6]+fl[6])+1.118033988749895*(fr[5]+fl[5]+fr[4]+fl[4])-1.5*fr[3]+1.5*fl[3]+0.8660254037844386*(fr[2]+fl[2]+fl[1])-0.8660254037844386*fr[1]+0.5*(fr[0]+fl[0])); 
  fupwind[0] = 0.2357022603955158*fupwindQuad[2]+0.9428090415820634*fupwindQuad[1]+0.2357022603955158*fupwindQuad[0]; 
  fupwind[1] = 0.408248290463863*fupwindQuad[2]-0.408248290463863*fupwindQuad[0]; 
  fupwind[2] = 0.210818510677892*fupwindQuad[2]-0.4216370213557839*fupwindQuad[1]+0.210818510677892*fupwindQuad[0]; 
  incr[0] = 0.5*(alpha[2]*fupwind[2]+alpha[1]*fupwind[1]+alpha[0]*fupwind[0])*dfac1; 
  incr[1] = -0.8660254037844386*(alpha[2]*fupwind[2]+alpha[1]*fupwind[1]+alpha[0]*fupwind[0])*dfac1; 
  incr[2] = 0.1*(4.47213595499958*(alpha[1]*fupwind[2]+fupwind[1]*alpha[2])+5.0*(alpha[0]*fupwind[1]+fupwind[0]*alpha[1]))*dfac1; 
  incr[3] = -0.1732050807568877*(4.47213595499958*(alpha[1]*fupwind[2]+fupwind[1]*alpha[2])+5.0*(alpha[0]*fupwind[1]+fupwind[0]*alpha[1]))*dfac1; 
  incr[4] = 1.118033988749895*(alpha[2]*fupwind[2]+alpha[1]*fupwind[1]+alpha[0]*fupwind[0])*dfac1; 
  incr[5] = 0.01428571428571429*(22.3606797749979*alpha[2]*fupwind[2]+35.0*(alpha[0]*fupwind[2]+fupwind[0]*alpha[2])+31.30495168499706*alpha[1]*fupwind[1])*dfac1; 
  incr[6] = 0.223606797749979*(4.47213595499958*(alpha[1]*fupwind[2]+fupwind[1]*alpha[2])+5.0*(alpha[0]*fupwind[1]+fupwind[0]*alpha[1]))*dfac1; 
  incr[7] = -0.05532833351724881*(10.0*alpha[2]*fupwind[2]+15.65247584249853*(alpha[0]*fupwind[2]+fupwind[0]*alpha[2])+14.0*alpha[1]*fupwind[1])*dfac1; 

#endif 
  double fluxFracL, fluxFracR, limFac=1.0;
  double outlPos[8], outrPos[8]; 
  fluxFracL = positivityWeightByDirL[0] == 0. ? 0.5 : positivityWeightByDirL[1]/positivityWeightByDirL[0]; 
  fluxFracR = positivityWeightByDirR[0] == 0. ? 0.5 : positivityWeightByDirR[1]/positivityWeightByDirR[0]; 
  outlPos[0] = -0.01111111111111111*(7.745966692414834*incr[7]-7.745966692414834*incr[6]+13.41640786499874*(incr[5]+incr[4])-15.0*incr[3]-8.660254037844386*incr[2]+8.660254037844386*incr[1]-15.0*incr[0]); 
  outlPos[1] = -0.02222222222222222*(7.745966692414834*incr[6]-13.41640786499874*incr[4]-17.32050807568877*incr[2]+30.0*incr[0]); 
  outlPos[2] = 0.01111111111111111*(7.745966692414834*(incr[7]+incr[6])-13.41640786499874*(incr[5]+incr[4])-15.0*incr[3]+8.660254037844386*(incr[2]+incr[1])+15.0*incr[0]); 
  outlPos[3] = 0.02222222222222222*(7.745966692414834*incr[7]+13.41640786499874*incr[5]-17.32050807568877*incr[1]-30.0*incr[0]); 
  outlPos[4] = -0.02222222222222222*(7.745966692414834*incr[7]-13.41640786499874*incr[5]-17.32050807568877*incr[1]+30.0*incr[0]); 
  outlPos[5] = -0.01111111111111111*(7.745966692414834*(incr[7]+incr[6])+13.41640786499874*(incr[5]+incr[4])+15.0*incr[3]+8.660254037844386*(incr[2]+incr[1])-15.0*incr[0]); 
  outlPos[6] = 0.02222222222222222*(7.745966692414834*incr[6]+13.41640786499874*incr[4]-17.32050807568877*incr[2]-30.0*incr[0]); 
  outlPos[7] = 0.01111111111111111*(7.745966692414834*incr[7]-7.745966692414834*incr[6]-13.41640786499874*(incr[5]+incr[4])+15.0*incr[3]-8.660254037844386*incr[2]+8.660254037844386*incr[1]+15.0*incr[0]); 
  outrPos[0] = -0.01111111111111111*(7.745966692414834*(incr[7]+incr[6])-13.41640786499874*(incr[5]+incr[4])-15.0*incr[3]+8.660254037844386*(incr[2]+incr[1])+15.0*incr[0]); 
  outrPos[1] = 0.02222222222222222*(7.745966692414834*incr[6]-13.41640786499874*incr[4]-17.32050807568877*incr[2]+30.0*incr[0]); 
  outrPos[2] = 0.01111111111111111*(7.745966692414834*incr[7]-7.745966692414834*incr[6]+13.41640786499874*(incr[5]+incr[4])-15.0*incr[3]-8.660254037844386*incr[2]+8.660254037844386*incr[1]-15.0*incr[0]); 
  outrPos[3] = 0.02222222222222222*(7.745966692414834*incr[7]-13.41640786499874*incr[5]-17.32050807568877*incr[1]+30.0*incr[0]); 
  outrPos[4] = -0.02222222222222222*(7.745966692414834*incr[7]+13.41640786499874*incr[5]-17.32050807568877*incr[1]-30.0*incr[0]); 
  outrPos[5] = -0.01111111111111111*(7.745966692414834*incr[7]-7.745966692414834*incr[6]-13.41640786499874*(incr[5]+incr[4])+15.0*incr[3]-8.660254037844386*incr[2]+8.660254037844386*incr[1]+15.0*incr[0]); 
  outrPos[6] = -0.02222222222222222*(7.745966692414834*incr[6]+13.41640786499874*incr[4]-17.32050807568877*incr[2]-30.0*incr[0]); 
  outrPos[7] = 0.01111111111111111*(7.745966692414834*(incr[7]+incr[6])+13.41640786499874*(incr[5]+incr[4])+15.0*incr[3]+8.660254037844386*(incr[2]+incr[1])-15.0*incr[0]); 
  if(outlPos[2] < EPSILON) limFac = std::min(1.0, -fluxFracL*(0.01111111111111111*(7.745966692414834*fl[7]-7.745966692414834*fl[6]+13.41640786499874*(fl[5]+fl[4])-15.0*fl[3]-8.660254037844386*fl[2]+8.660254037844386*fl[1]-15.0*fl[0]))/dtApprox/outlPos[2]); 
  else limFac = 1.0; 
  if(outrPos[0] < EPSILON) limFac = std::min(limFac, -fluxFracR*(-0.01111111111111111*(7.745966692414834*(fr[7]+fr[6])-13.41640786499874*(fr[5]+fr[4])-15.0*fr[3]+8.660254037844386*(fr[2]+fr[1])+15.0*fr[0]))/dtApprox/outrPos[0]); 
  if(limFac < 0.) limFac = 0.; 
  outlPos[2] *= limFac; 
  outlPos[0] *= limFac; 
  outrPos[2] *= limFac; 
  outrPos[0] *= limFac; 
  if(outlPos[4] < EPSILON) limFac = std::min(1.0, -fluxFracL*(-0.02222222222222222*(7.745966692414834*fl[7]+13.41640786499874*fl[5]-17.32050807568877*fl[1]-30.0*fl[0]))/dtApprox/outlPos[4]); 
  else limFac = 1.0; 
  if(outrPos[3] < EPSILON) limFac = std::min(limFac, -fluxFracR*(0.02222222222222222*(7.745966692414834*fr[7]-13.41640786499874*fr[5]-17.32050807568877*fr[1]+30.0*fr[0]))/dtApprox/outrPos[3]); 
  if(limFac < 0.) limFac = 0.; 
  outlPos[4] *= limFac; 
  outlPos[3] *= limFac; 
  outrPos[4] *= limFac; 
  outrPos[3] *= limFac; 
  if(outlPos[7] < EPSILON) limFac = std::min(1.0, -fluxFracL*(0.01111111111111111*(7.745966692414834*(fl[7]+fl[6])+13.41640786499874*(fl[5]+fl[4])+15.0*fl[3]+8.660254037844386*(fl[2]+fl[1])-15.0*fl[0]))/dtApprox/outlPos[7]); 
  else limFac = 1.0; 
  if(outrPos[5] < EPSILON) limFac = std::min(limFac, -fluxFracR*(-0.01111111111111111*(7.745966692414834*fr[7]-7.745966692414834*fr[6]-13.41640786499874*(fr[5]+fr[4])+15.0*fr[3]-8.660254037844386*fr[2]+8.660254037844386*fr[1]+15.0*fr[0]))/dtApprox/outrPos[5]); 
  if(limFac < 0.) limFac = 0.; 
  outlPos[7] *= limFac; 
  outlPos[5] *= limFac; 
  outrPos[7] *= limFac; 
  outrPos[5] *= limFac; 
  outr[0] += 0.5*(outrPos[7]+outrPos[6]+outrPos[5]+outrPos[4]+outrPos[3]+outrPos[2]+outrPos[1]+outrPos[0]); 
  outr[1] += 0.5*(1.732050807568877*outrPos[7]-1.732050807568877*outrPos[5]+1.732050807568877*outrPos[4]-1.732050807568877*outrPos[3]+1.732050807568877*outrPos[2]-1.732050807568877*outrPos[0]); 
  outr[2] += 0.5*(1.732050807568877*(outrPos[7]+outrPos[6]+outrPos[5])-1.732050807568877*(outrPos[2]+outrPos[1]+outrPos[0])); 
  outr[3] += 0.5*(3.0*outrPos[7]-3.0*(outrPos[5]+outrPos[2])+3.0*outrPos[0]); 
  outr[4] += 0.25*(4.47213595499958*outrPos[7]-2.23606797749979*outrPos[6]+4.47213595499958*(outrPos[5]+outrPos[4]+outrPos[3]+outrPos[2])-2.23606797749979*outrPos[1]+4.47213595499958*outrPos[0]); 
  outr[5] += 0.25*(4.47213595499958*(outrPos[7]+outrPos[6]+outrPos[5])-2.23606797749979*(outrPos[4]+outrPos[3])+4.47213595499958*(outrPos[2]+outrPos[1]+outrPos[0])); 
  outr[6] += 0.25*(7.745966692414834*outrPos[7]-3.872983346207417*outrPos[6]+7.745966692414834*outrPos[5]-7.745966692414834*outrPos[2]+3.872983346207417*outrPos[1]-7.745966692414834*outrPos[0]); 
  outr[7] += 0.25*(7.745966692414834*outrPos[7]-7.745966692414834*outrPos[5]-3.872983346207417*outrPos[4]+3.872983346207417*outrPos[3]+7.745966692414834*outrPos[2]-7.745966692414834*outrPos[0]); 

  outl[0] += 0.5*(outlPos[7]+outlPos[6]+outlPos[5]+outlPos[4]+outlPos[3]+outlPos[2]+outlPos[1]+outlPos[0]); 
  outl[1] += 0.5*(1.732050807568877*outlPos[7]-1.732050807568877*outlPos[5]+1.732050807568877*outlPos[4]-1.732050807568877*outlPos[3]+1.732050807568877*outlPos[2]-1.732050807568877*outlPos[0]); 
  outl[2] += 0.5*(1.732050807568877*(outlPos[7]+outlPos[6]+outlPos[5])-1.732050807568877*(outlPos[2]+outlPos[1]+outlPos[0])); 
  outl[3] += 0.5*(3.0*outlPos[7]-3.0*(outlPos[5]+outlPos[2])+3.0*outlPos[0]); 
  outl[4] += 0.25*(4.47213595499958*outlPos[7]-2.23606797749979*outlPos[6]+4.47213595499958*(outlPos[5]+outlPos[4]+outlPos[3]+outlPos[2])-2.23606797749979*outlPos[1]+4.47213595499958*outlPos[0]); 
  outl[5] += 0.25*(4.47213595499958*(outlPos[7]+outlPos[6]+outlPos[5])-2.23606797749979*(outlPos[4]+outlPos[3])+4.47213595499958*(outlPos[2]+outlPos[1]+outlPos[0])); 
  outl[6] += 0.25*(7.745966692414834*outlPos[7]-3.872983346207417*outlPos[6]+7.745966692414834*outlPos[5]-7.745966692414834*outlPos[2]+3.872983346207417*outlPos[1]-7.745966692414834*outlPos[0]); 
  outl[7] += 0.25*(7.745966692414834*outlPos[7]-7.745966692414834*outlPos[5]-3.872983346207417*outlPos[4]+3.872983346207417*outlPos[3]+7.745966692414834*outlPos[2]-7.745966692414834*outlPos[0]); 
  return std::abs(alpha0); 
} 
double PassiveAdvectionSurfPositivity2xSer_X2_P2(const double *w, const double *dxv, const double dtApprox, const double *positivityWeightByDirL, const double *positivityWeightByDirR, const double *fl, const double *fr, double *outl, double *outr) 
{ 
// w[NDIM]: Cell-center coordinates. dxv[NDIM]: Cell spacing. 
  double dfac1 = 2.0/dxv[0]; 
  double w1 = w[0]; 
  double dfac2 = 2.0/dxv[1]; 
  double w2 = w[1]; 
  const double *v1 = &fr[8]; 
  const double *v2 = &fr[16]; 
  double incr[8]; 
  // surface-averaged phase velocity in this direction 
  double alpha0 = 0.25*(2.23606797749979*v2[5]-1.732050807568877*v2[2]+v2[0]); 

  double alpha[3]; 
  alpha[0] = 0.7071067811865475*(2.23606797749979*v2[5]-1.732050807568877*v2[2]+v2[0]); 
  alpha[1] = 0.2357022603955158*(6.708203932499369*v2[7]-5.196152422706631*v2[3]+3.0*v2[1]); 
  alpha[2] = -0.1414213562373095*(8.660254037844387*v2[6]-5.0*v2[4]); 
#if upwindType == SURFAVG 
  if (alpha0>0) { 
  incr[0] = 0.02357022603955158*(33.54101966249684*alpha[1]*fl[7]+25.98076211353316*alpha[2]*fl[6]+33.54101966249685*alpha[0]*fl[5]+15.0*alpha[2]*fl[4]+25.98076211353316*(alpha[1]*fl[3]+alpha[0]*fl[2])+15.0*(alpha[1]*fl[1]+alpha[0]*fl[0]))*dfac2; 
  incr[1] = 0.02357022603955158*((30.0*alpha[2]+33.54101966249684*alpha[0])*fl[7]+alpha[1]*(23.2379000772445*fl[6]+33.54101966249685*fl[5]+13.41640786499874*fl[4])+23.2379000772445*alpha[2]*fl[3]+25.98076211353316*(alpha[0]*fl[3]+alpha[1]*fl[2])+13.41640786499874*fl[1]*alpha[2]+15.0*(alpha[0]*fl[1]+fl[0]*alpha[1]))*dfac2; 
  incr[2] = -0.07071067811865474*(19.36491673103708*alpha[1]*fl[7]+15.0*alpha[2]*fl[6]+19.36491673103709*alpha[0]*fl[5]+8.660254037844386*alpha[2]*fl[4]+15.0*(alpha[1]*fl[3]+alpha[0]*fl[2])+8.660254037844386*(alpha[1]*fl[1]+alpha[0]*fl[0]))*dfac2; 
  incr[3] = -0.07071067811865474*((17.32050807568877*alpha[2]+19.36491673103708*alpha[0])*fl[7]+alpha[1]*(13.41640786499874*fl[6]+19.36491673103709*fl[5]+7.745966692414834*fl[4])+13.41640786499874*alpha[2]*fl[3]+15.0*(alpha[0]*fl[3]+alpha[1]*fl[2])+7.745966692414834*fl[1]*alpha[2]+8.660254037844386*(alpha[0]*fl[1]+fl[0]*alpha[1]))*dfac2; 
  incr[4] = 0.003367175148507369*(210.0*alpha[1]*fl[7]+(116.1895003862225*alpha[2]+181.8653347947321*alpha[0])*fl[6]+234.787137637478*alpha[2]*fl[5]+(67.0820393249937*alpha[2]+105.0*alpha[0])*fl[4]+162.6653005407115*alpha[1]*fl[3]+alpha[2]*(181.8653347947321*fl[2]+105.0*fl[0])+93.91485505499116*alpha[1]*fl[1])*dfac2; 
  incr[5] = 0.1178511301977579*(15.0*alpha[1]*fl[7]+11.61895003862225*alpha[2]*fl[6]+15.0*alpha[0]*fl[5]+6.708203932499369*alpha[2]*fl[4]+11.61895003862225*(alpha[1]*fl[3]+alpha[0]*fl[2])+6.708203932499369*(alpha[1]*fl[1]+alpha[0]*fl[0]))*dfac2; 
  incr[6] = -0.01010152544552211*(121.2435565298214*alpha[1]*fl[7]+(67.0820393249937*alpha[2]+105.0*alpha[0])*fl[6]+135.5544171172596*alpha[2]*fl[5]+(38.72983346207417*alpha[2]+60.62177826491071*alpha[0])*fl[4]+93.91485505499116*alpha[1]*fl[3]+alpha[2]*(105.0*fl[2]+60.62177826491071*fl[0])+54.22176684690384*alpha[1]*fl[1])*dfac2; 
  incr[7] = 0.02357022603955158*((67.0820393249937*alpha[2]+75.0*alpha[0])*fl[7]+alpha[1]*(51.96152422706631*fl[6]+75.00000000000001*fl[5]+30.0*fl[4])+51.96152422706632*alpha[2]*fl[3]+58.09475019311126*(alpha[0]*fl[3]+alpha[1]*fl[2])+30.0*fl[1]*alpha[2]+33.54101966249684*(alpha[0]*fl[1]+fl[0]*alpha[1]))*dfac2; 
  } else { 
  incr[0] = 0.02357022603955158*(33.54101966249684*alpha[1]*fr[7]-25.98076211353316*alpha[2]*fr[6]+33.54101966249685*alpha[0]*fr[5]+15.0*alpha[2]*fr[4]-25.98076211353316*(alpha[1]*fr[3]+alpha[0]*fr[2])+15.0*(alpha[1]*fr[1]+alpha[0]*fr[0]))*dfac2; 
  incr[1] = 0.02357022603955158*((30.0*alpha[2]+33.54101966249684*alpha[0])*fr[7]+alpha[1]*((-23.2379000772445*fr[6])+33.54101966249685*fr[5]+13.41640786499874*fr[4])-23.2379000772445*alpha[2]*fr[3]-25.98076211353316*(alpha[0]*fr[3]+alpha[1]*fr[2])+13.41640786499874*fr[1]*alpha[2]+15.0*(alpha[0]*fr[1]+fr[0]*alpha[1]))*dfac2; 
  incr[2] = -0.07071067811865474*(19.36491673103708*alpha[1]*fr[7]-15.0*alpha[2]*fr[6]+19.36491673103709*alpha[0]*fr[5]+8.660254037844386*alpha[2]*fr[4]-15.0*(alpha[1]*fr[3]+alpha[0]*fr[2])+8.660254037844386*(alpha[1]*fr[1]+alpha[0]*fr[0]))*dfac2; 
  incr[3] = -0.07071067811865474*((17.32050807568877*alpha[2]+19.36491673103708*alpha[0])*fr[7]+alpha[1]*((-13.41640786499874*fr[6])+19.36491673103709*fr[5]+7.745966692414834*fr[4])-13.41640786499874*alpha[2]*fr[3]-15.0*(alpha[0]*fr[3]+alpha[1]*fr[2])+7.745966692414834*fr[1]*alpha[2]+8.660254037844386*(alpha[0]*fr[1]+fr[0]*alpha[1]))*dfac2; 
  incr[4] = 0.003367175148507369*(210.0*alpha[1]*fr[7]+((-116.1895003862225*alpha[2])-181.8653347947321*alpha[0])*fr[6]+234.787137637478*alpha[2]*fr[5]+(67.0820393249937*alpha[2]+105.0*alpha[0])*fr[4]-162.6653005407115*alpha[1]*fr[3]+alpha[2]*(105.0*fr[0]-181.8653347947321*fr[2])+93.91485505499116*alpha[1]*fr[1])*dfac2; 
  incr[5] = 0.1178511301977579*(15.0*alpha[1]*fr[7]-11.61895003862225*alpha[2]*fr[6]+15.0*alpha[0]*fr[5]+6.708203932499369*alpha[2]*fr[4]-11.61895003862225*(alpha[1]*fr[3]+alpha[0]*fr[2])+6.708203932499369*(alpha[1]*fr[1]+alpha[0]*fr[0]))*dfac2; 
  incr[6] = -0.01010152544552211*(121.2435565298214*alpha[1]*fr[7]+((-67.0820393249937*alpha[2])-105.0*alpha[0])*fr[6]+135.5544171172596*alpha[2]*fr[5]+(38.72983346207417*alpha[2]+60.62177826491071*alpha[0])*fr[4]-93.91485505499116*alpha[1]*fr[3]+alpha[2]*(60.62177826491071*fr[0]-105.0*fr[2])+54.22176684690384*alpha[1]*fr[1])*dfac2; 
  incr[7] = 0.02357022603955158*((67.0820393249937*alpha[2]+75.0*alpha[0])*fr[7]+alpha[1]*((-51.96152422706631*fr[6])+75.00000000000001*fr[5]+30.0*fr[4])-51.96152422706632*alpha[2]*fr[3]-58.09475019311126*(alpha[0]*fr[3]+alpha[1]*fr[2])+30.0*fr[1]*alpha[2]+33.54101966249684*(alpha[0]*fr[1]+fr[0]*alpha[1]))*dfac2; 
  }
#elif upwindType == QUAD 
double fupwind[3];
double fupwindQuad[3];
double alphaQuad;
  alphaQuad = 1.58113883008419*alpha[2]-1.224744871391589*alpha[1]+0.7071067811865475*alpha[0]; 
  fupwindQuad[0] = 0.5*((1.936491673103709*(fr[7]+fr[6])-1.936491673103709*fl[7]+1.936491673103709*fl[6]-1.118033988749895*(fr[5]+fr[4])+1.118033988749895*(fl[5]+fl[4])-1.5*(fr[3]+fl[3])+0.8660254037844386*(fr[2]+fl[2]+fr[1])-0.8660254037844386*fl[1]-0.5*fr[0]+0.5*fl[0])*sgn(alphaQuad)-1.936491673103709*(fr[7]+fl[7]+fr[6])+1.936491673103709*fl[6]+1.118033988749895*(fr[5]+fl[5]+fr[4]+fl[4])+1.5*fr[3]-1.5*fl[3]-0.8660254037844386*(fr[2]+fr[1])+0.8660254037844386*fl[2]-0.8660254037844386*fl[1]+0.5*(fr[0]+fl[0])); 
  alphaQuad = 0.7071067811865475*alpha[0]-0.7905694150420947*alpha[2]; 
  fupwindQuad[1] = 0.5*(((-0.9682458365518543*(fr[6]+fl[6]))-1.118033988749895*fr[5]+1.118033988749895*fl[5]+0.5590169943749475*fr[4]-0.5590169943749475*fl[4]+0.8660254037844386*(fr[2]+fl[2])-0.5*fr[0]+0.5*fl[0])*sgn(alphaQuad)+0.9682458365518543*fr[6]-0.9682458365518543*fl[6]+1.118033988749895*(fr[5]+fl[5])-0.5590169943749475*(fr[4]+fl[4])-0.8660254037844386*fr[2]+0.8660254037844386*fl[2]+0.5*(fr[0]+fl[0])); 
  alphaQuad = 1.58113883008419*alpha[2]+1.224744871391589*alpha[1]+0.7071067811865475*alpha[0]; 
  fupwindQuad[2] = 0.5*(((-1.936491673103709*fr[7])+1.936491673103709*(fl[7]+fr[6]+fl[6])-1.118033988749895*(fr[5]+fr[4])+1.118033988749895*(fl[5]+fl[4])+1.5*(fr[3]+fl[3])+0.8660254037844386*(fr[2]+fl[2]+fl[1])-0.8660254037844386*fr[1]-0.5*fr[0]+0.5*fl[0])*sgn(alphaQuad)+1.936491673103709*(fr[7]+fl[7]+fl[6])-1.936491673103709*fr[6]+1.118033988749895*(fr[5]+fl[5]+fr[4]+fl[4])-1.5*fr[3]+1.5*fl[3]-0.8660254037844386*fr[2]+0.8660254037844386*(fl[2]+fr[1]+fl[1])+0.5*(fr[0]+fl[0])); 
  fupwind[0] = 0.2357022603955158*fupwindQuad[2]+0.9428090415820634*fupwindQuad[1]+0.2357022603955158*fupwindQuad[0]; 
  fupwind[1] = 0.408248290463863*fupwindQuad[2]-0.408248290463863*fupwindQuad[0]; 
  fupwind[2] = 0.210818510677892*fupwindQuad[2]-0.4216370213557839*fupwindQuad[1]+0.210818510677892*fupwindQuad[0]; 
  incr[0] = 0.5*(alpha[2]*fupwind[2]+alpha[1]*fupwind[1]+alpha[0]*fupwind[0])*dfac2; 
  incr[1] = 0.1*(4.47213595499958*(alpha[1]*fupwind[2]+fupwind[1]*alpha[2])+5.0*(alpha[0]*fupwind[1]+fupwind[0]*alpha[1]))*dfac2; 
  incr[2] = -0.8660254037844386*(alpha[2]*fupwind[2]+alpha[1]*fupwind[1]+alpha[0]*fupwind[0])*dfac2; 
  incr[3] = -0.1732050807568877*(4.47213595499958*(alpha[1]*fupwind[2]+fupwind[1]*alpha[2])+5.0*(alpha[0]*fupwind[1]+fupwind[0]*alpha[1]))*dfac2; 
  incr[4] = 0.01428571428571429*(22.3606797749979*alpha[2]*fupwind[2]+35.0*(alpha[0]*fupwind[2]+fupwind[0]*alpha[2])+31.30495168499706*alpha[1]*fupwind[1])*dfac2; 
  incr[5] = 1.118033988749895*(alpha[2]*fupwind[2]+alpha[1]*fupwind[1]+alpha[0]*fupwind[0])*dfac2; 
  incr[6] = -0.05532833351724881*(10.0*alpha[2]*fupwind[2]+15.65247584249853*(alpha[0]*fupwind[2]+fupwind[0]*alpha[2])+14.0*alpha[1]*fupwind[1])*dfac2; 
  incr[7] = 0.223606797749979*(4.47213595499958*(alpha[1]*fupwind[2]+fupwind[1]*alpha[2])+5.0*(alpha[0]*fupwind[1]+fupwind[0]*alpha[1]))*dfac2; 

#endif 
  double fluxFracL, fluxFracR, limFac=1.0;
  double outlPos[8], outrPos[8]; 
  fluxFracL = positivityWeightByDirL[0] == 0. ? 0.5 : positivityWeightByDirL[2]/positivityWeightByDirL[0]; 
  fluxFracR = positivityWeightByDirR[0] == 0. ? 0.5 : positivityWeightByDirR[2]/positivityWeightByDirR[0]; 
  outlPos[0] = 0.01111111111111111*(7.745966692414834*incr[7]-7.745966692414834*incr[6]-13.41640786499874*(incr[5]+incr[4])+15.0*incr[3]-8.660254037844386*incr[2]+8.660254037844386*incr[1]+15.0*incr[0]); 
  outlPos[1] = 0.02222222222222222*(7.745966692414834*incr[6]+13.41640786499874*incr[4]-17.32050807568877*incr[2]-30.0*incr[0]); 
  outlPos[2] = -0.01111111111111111*(7.745966692414834*(incr[7]+incr[6])+13.41640786499874*(incr[5]+incr[4])+15.0*incr[3]+8.660254037844386*(incr[2]+incr[1])-15.0*incr[0]); 
  outlPos[3] = -0.02222222222222222*(7.745966692414834*incr[7]-13.41640786499874*incr[5]-17.32050807568877*incr[1]+30.0*incr[0]); 
  outlPos[4] = 0.02222222222222222*(7.745966692414834*incr[7]+13.41640786499874*incr[5]-17.32050807568877*incr[1]-30.0*incr[0]); 
  outlPos[5] = 0.01111111111111111*(7.745966692414834*(incr[7]+incr[6])-13.41640786499874*(incr[5]+incr[4])-15.0*incr[3]+8.660254037844386*(incr[2]+incr[1])+15.0*incr[0]); 
  outlPos[6] = -0.02222222222222222*(7.745966692414834*incr[6]-13.41640786499874*incr[4]-17.32050807568877*incr[2]+30.0*incr[0]); 
  outlPos[7] = -0.01111111111111111*(7.745966692414834*incr[7]-7.745966692414834*incr[6]+13.41640786499874*(incr[5]+incr[4])-15.0*incr[3]-8.660254037844386*incr[2]+8.660254037844386*incr[1]-15.0*incr[0]); 
  outrPos[0] = -0.01111111111111111*(7.745966692414834*(incr[7]+incr[6])-13.41640786499874*(incr[5]+incr[4])-15.0*incr[3]+8.660254037844386*(incr[2]+incr[1])+15.0*incr[0]); 
  outrPos[1] = 0.02222222222222222*(7.745966692414834*incr[6]-13.41640786499874*incr[4]-17.32050807568877*incr[2]+30.0*incr[0]); 
  outrPos[2] = 0.01111111111111111*(7.745966692414834*incr[7]-7.745966692414834*incr[6]+13.41640786499874*(incr[5]+incr[4])-15.0*incr[3]-8.660254037844386*incr[2]+8.660254037844386*incr[1]-15.0*incr[0]); 
  outrPos[3] = 0.02222222222222222*(7.745966692414834*incr[7]-13.41640786499874*incr[5]-17.32050807568877*incr[1]+30.0*incr[0]); 
  outrPos[4] = -0.02222222222222222*(7.745966692414834*incr[7]+13.41640786499874*incr[5]-17.32050807568877*incr[1]-30.0*incr[0]); 
  outrPos[5] = -0.01111111111111111*(7.745966692414834*incr[7]-7.745966692414834*incr[6]-13.41640786499874*(incr[5]+incr[4])+15.0*incr[3]-8.660254037844386*incr[2]+8.660254037844386*incr[1]+15.0*incr[0]); 
  outrPos[6] = -0.02222222222222222*(7.745966692414834*incr[6]+13.41640786499874*incr[4]-17.32050807568877*incr[2]-30.0*incr[0]); 
  outrPos[7] = 0.01111111111111111*(7.745966692414834*(incr[7]+incr[6])+13.41640786499874*(incr[5]+incr[4])+15.0*incr[3]+8.660254037844386*(incr[2]+incr[1])-15.0*incr[0]); 
  if(outlPos[5] < EPSILON) limFac = std::min(1.0, -fluxFracL*(-0.01111111111111111*(7.745966692414834*fl[7]-7.745966692414834*fl[6]-13.41640786499874*(fl[5]+fl[4])+15.0*fl[3]-8.660254037844386*fl[2]+8.660254037844386*fl[1]+15.0*fl[0]))/dtApprox/outlPos[5]); 
  else limFac = 1.0; 
  if(outrPos[0] < EPSILON) limFac = std::min(limFac, -fluxFracR*(-0.01111111111111111*(7.745966692414834*(fr[7]+fr[6])-13.41640786499874*(fr[5]+fr[4])-15.0*fr[3]+8.660254037844386*(fr[2]+fr[1])+15.0*fr[0]))/dtApprox/outrPos[0]); 
  if(limFac < 0.) limFac = 0.; 
  outlPos[5] *= limFac; 
  outlPos[0] *= limFac; 
  outrPos[5] *= limFac; 
  outrPos[0] *= limFac; 
  if(outlPos[6] < EPSILON) limFac = std::min(1.0, -fluxFracL*(-0.02222222222222222*(7.745966692414834*fl[6]+13.41640786499874*fl[4]-17.32050807568877*fl[2]-30.0*fl[0]))/dtApprox/outlPos[6]); 
  else limFac = 1.0; 
  if(outrPos[1] < EPSILON) limFac = std::min(limFac, -fluxFracR*(0.02222222222222222*(7.745966692414834*fr[6]-13.41640786499874*fr[4]-17.32050807568877*fr[2]+30.0*fr[0]))/dtApprox/outrPos[1]); 
  if(limFac < 0.) limFac = 0.; 
  outlPos[6] *= limFac; 
  outlPos[1] *= limFac; 
  outrPos[6] *= limFac; 
  outrPos[1] *= limFac; 
  if(outlPos[7] < EPSILON) limFac = std::min(1.0, -fluxFracL*(0.01111111111111111*(7.745966692414834*(fl[7]+fl[6])+13.41640786499874*(fl[5]+fl[4])+15.0*fl[3]+8.660254037844386*(fl[2]+fl[1])-15.0*fl[0]))/dtApprox/outlPos[7]); 
  else limFac = 1.0; 
  if(outrPos[2] < EPSILON) limFac = std::min(limFac, -fluxFracR*(0.01111111111111111*(7.745966692414834*fr[7]-7.745966692414834*fr[6]+13.41640786499874*(fr[5]+fr[4])-15.0*fr[3]-8.660254037844386*fr[2]+8.660254037844386*fr[1]-15.0*fr[0]))/dtApprox/outrPos[2]); 
  if(limFac < 0.) limFac = 0.; 
  outlPos[7] *= limFac; 
  outlPos[2] *= limFac; 
  outrPos[7] *= limFac; 
  outrPos[2] *= limFac; 
  outr[0] += 0.5*(outrPos[7]+outrPos[6]+outrPos[5]+outrPos[4]+outrPos[3]+outrPos[2]+outrPos[1]+outrPos[0]); 
  outr[1] += 0.5*(1.732050807568877*outrPos[7]-1.732050807568877*outrPos[5]+1.732050807568877*outrPos[4]-1.732050807568877*outrPos[3]+1.732050807568877*outrPos[2]-1.732050807568877*outrPos[0]); 
  outr[2] += 0.5*(1.732050807568877*(outrPos[7]+outrPos[6]+outrPos[5])-1.732050807568877*(outrPos[2]+outrPos[1]+outrPos[0])); 
  outr[3] += 0.5*(3.0*outrPos[7]-3.0*(outrPos[5]+outrPos[2])+3.0*outrPos[0]); 
  outr[4] += 0.25*(4.47213595499958*outrPos[7]-2.23606797749979*outrPos[6]+4.47213595499958*(outrPos[5]+outrPos[4]+outrPos[3]+outrPos[2])-2.23606797749979*outrPos[1]+4.47213595499958*outrPos[0]); 
  outr[5] += 0.25*(4.47213595499958*(outrPos[7]+outrPos[6]+outrPos[5])-2.23606797749979*(outrPos[4]+outrPos[3])+4.47213595499958*(outrPos[2]+outrPos[1]+outrPos[0])); 
  outr[6] += 0.25*(7.745966692414834*outrPos[7]-3.872983346207417*outrPos[6]+7.745966692414834*outrPos[5]-7.745966692414834*outrPos[2]+3.872983346207417*outrPos[1]-7.745966692414834*outrPos[0]); 
  outr[7] += 0.25*(7.745966692414834*outrPos[7]-7.745966692414834*outrPos[5]-3.872983346207417*outrPos[4]+3.872983346207417*outrPos[3]+7.745966692414834*outrPos[2]-7.745966692414834*outrPos[0]); 

  outl[0] += 0.5*(outlPos[7]+outlPos[6]+outlPos[5]+outlPos[4]+outlPos[3]+outlPos[2]+outlPos[1]+outlPos[0]); 
  outl[1] += 0.5*(1.732050807568877*outlPos[7]-1.732050807568877*outlPos[5]+1.732050807568877*outlPos[4]-1.732050807568877*outlPos[3]+1.732050807568877*outlPos[2]-1.732050807568877*outlPos[0]); 
  outl[2] += 0.5*(1.732050807568877*(outlPos[7]+outlPos[6]+outlPos[5])-1.732050807568877*(outlPos[2]+outlPos[1]+outlPos[0])); 
  outl[3] += 0.5*(3.0*outlPos[7]-3.0*(outlPos[5]+outlPos[2])+3.0*outlPos[0]); 
  outl[4] += 0.25*(4.47213595499958*outlPos[7]-2.23606797749979*outlPos[6]+4.47213595499958*(outlPos[5]+outlPos[4]+outlPos[3]+outlPos[2])-2.23606797749979*outlPos[1]+4.47213595499958*outlPos[0]); 
  outl[5] += 0.25*(4.47213595499958*(outlPos[7]+outlPos[6]+outlPos[5])-2.23606797749979*(outlPos[4]+outlPos[3])+4.47213595499958*(outlPos[2]+outlPos[1]+outlPos[0])); 
  outl[6] += 0.25*(7.745966692414834*outlPos[7]-3.872983346207417*outlPos[6]+7.745966692414834*outlPos[5]-7.745966692414834*outlPos[2]+3.872983346207417*outlPos[1]-7.745966692414834*outlPos[0]); 
  outl[7] += 0.25*(7.745966692414834*outlPos[7]-7.745966692414834*outlPos[5]-3.872983346207417*outlPos[4]+3.872983346207417*outlPos[3]+7.745966692414834*outlPos[2]-7.745966692414834*outlPos[0]); 
  return std::abs(alpha0); 
} 
